Compile Time: 0.256s
begin
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "program"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "external_declaration"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "external_declaration"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "function_declaration"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "declaration"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "struct_specifier"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "function_declaration"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "type_specifier"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "direct_declarator"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "compound_statement"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "type_specifier"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "direct_declarator"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "extend_part"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "extend_part"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'['"
                term -> part
                  part -> alternative_part
                    alternative_part -> "["
                    alternative_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> right_non_terminal_symbol
                              right_non_terminal_symbol -> non_terminal_symbol
                                non_terminal_symbol -> "constant_expression"
                    alternative_part -> "]"
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "']'"
            repeat_part -> "}"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'('"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "parameter_list"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "')'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "constant_expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "relat_expression"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "parameter_list"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "parameter_declaration"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "parameter_declaration"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "parameter_declaration"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "declaration_specifier"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "declaration_specifier"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "type_specifier"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "compound_statement"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'{'"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "declaration"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "statement"
            repeat_part -> "}"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'}'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "declaration"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "type_specifier"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "init_declarator"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "';'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "init_declarator"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "direct_declarator"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'='"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "initializer"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "initializer"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "assignment_expression"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'{'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "initializer_list"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'}'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "initializer_list"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "initializer"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "initializer"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "statement"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "compound_statement"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "expression_statement"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "selection_statement"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "iteration_statement"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "return_statement"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "expression_statement"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "';'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "expression"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "';'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "selection_statement"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'if'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'('"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "expression"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "')'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "statement"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'else'"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "statement"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "iteration_statement"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'for'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'('"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> alternative_part
                    alternative_part -> "["
                    alternative_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> right_non_terminal_symbol
                              right_non_terminal_symbol -> non_terminal_symbol
                                non_terminal_symbol -> "type_specifier"
                    alternative_part -> "]"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "init_declarator"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "';'"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "expression"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "';'"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "expression"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "')'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "statement"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "return_statement"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'return'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "expression_statement"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "assignment_expression"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "assignment_expression"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "assignment_expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "equality_expression"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "assign_op"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "assignment_expression"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "assign_op"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'+='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'-='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'*='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'/='"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "equality_expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "relat_expression"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "equal_op"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "equality_expression"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "equal_op"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'=='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'!='"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "relat_expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "additive_expression"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "relat_op"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "relat_expression"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "relat_op"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'>'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'<'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'>='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'<='"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "additive_expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "multiplicative_expression"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "add_op"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "additive_expression"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "add_op"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'+'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'-'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "multiplicative_expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "unary_expression"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "mul_op"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "multiplicative_expression"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "mul_op"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'*'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'/'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "unary_expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "sadd_op"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "unary_expression"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "postfix_expression"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "sadd_op"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'++'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'--'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'-'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "postfix_expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "primary_expression"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "postfix_extend_part"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "postfix_extend_part"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'['"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "expression"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "']'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'('"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "assignment_expression"
                term -> part
                  part -> repeat_part
                    repeat_part -> "{"
                    repeat_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "','"
                        term -> part
                          part -> simple_part
                            simple_part -> right_non_terminal_symbol
                              right_non_terminal_symbol -> non_terminal_symbol
                                non_terminal_symbol -> "assignment_expression"
                    repeat_part -> "}"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "')'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'.'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "post_op"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "post_op"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'++'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'--'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "primary_expression"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "NUMBER"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'('"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "expression"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "')'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "struct_specifier"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'struct'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'{'"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "declaration"
            repeat_part -> "}"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'}'"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ID"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "';'"
    statement -> end_op
      end_op -> ";"



#########
show list
#########



######################
show origin terms info
######################
program ::= program_0_rep_1 
program_0_rep_1 ::= NULL 
program_0_rep_1 ::= external_declaration program_0_rep_1 
external_declaration ::= struct_specifier 
external_declaration ::= declaration 
external_declaration ::= function_declaration 
function_declaration ::= type_specifier direct_declarator compound_statement 
type_specifier ::= ID 
direct_declarator ::= ID extend_part 
extend_part ::= '(' extend_part_1_opt_2 ')' 
extend_part ::= extend_part_0_rep_1 
extend_part_1_opt_2 ::= NULL 
extend_part_1_opt_2 ::= parameter_list 
extend_part_0_rep_1 ::= NULL 
extend_part_0_rep_1 ::= '[' extend_part_0_rep_1_0_opt_2 ']' extend_part_0_rep_1 
extend_part_0_rep_1_0_opt_2 ::= NULL 
extend_part_0_rep_1_0_opt_2 ::= constant_expression 
constant_expression ::= relat_expression 
parameter_list ::= parameter_declaration parameter_list_0_rep_2 
parameter_list_0_rep_2 ::= NULL 
parameter_list_0_rep_2 ::= ',' parameter_declaration parameter_list_0_rep_2 
parameter_declaration ::= declaration_specifier ID 
declaration_specifier ::= type_specifier 
compound_statement ::= '{' compound_statement_0_rep_2 '}' 
compound_statement_0_rep_2 ::= NULL 
compound_statement_0_rep_2 ::= statement compound_statement_0_rep_2 
compound_statement_0_rep_2 ::= declaration compound_statement_0_rep_2 
declaration ::= type_specifier init_declarator ';' 
init_declarator ::= direct_declarator init_declarator_0_opt_2 
init_declarator_0_opt_2 ::= NULL 
init_declarator_0_opt_2 ::= '=' initializer 
initializer ::= '{' initializer_list initializer_1_opt_3 '}' 
initializer ::= assignment_expression 
initializer_1_opt_3 ::= NULL 
initializer_1_opt_3 ::= ',' 
initializer_list ::= initializer initializer_list_0_rep_2 
initializer_list_0_rep_2 ::= NULL 
initializer_list_0_rep_2 ::= ',' initializer initializer_list_0_rep_2 
statement ::= return_statement 
statement ::= iteration_statement 
statement ::= selection_statement 
statement ::= expression_statement 
statement ::= compound_statement 
expression_statement ::= expression ';' 
expression_statement ::= ';' 
selection_statement ::= 'if' '(' expression ')' statement selection_statement_0_opt_6 
selection_statement_0_opt_6 ::= NULL 
selection_statement_0_opt_6 ::= 'else' statement 
iteration_statement ::= 'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement 
iteration_statement_0_opt_7 ::= NULL 
iteration_statement_0_opt_7 ::= expression 
iteration_statement_0_opt_5 ::= NULL 
iteration_statement_0_opt_5 ::= expression 
iteration_statement_0_opt_3 ::= NULL 
iteration_statement_0_opt_3 ::= iteration_statement_0_opt_3_0_opt_1 init_declarator 
iteration_statement_0_opt_3_0_opt_1 ::= NULL 
iteration_statement_0_opt_3_0_opt_1 ::= type_specifier 
return_statement ::= 'return' expression_statement 
expression ::= assignment_expression expression_0_rep_2 
expression_0_rep_2 ::= NULL 
expression_0_rep_2 ::= ',' assignment_expression expression_0_rep_2 
assignment_expression ::= equality_expression assignment_expression_0_opt_2 
assignment_expression_0_opt_2 ::= NULL 
assignment_expression_0_opt_2 ::= assign_op assignment_expression 
assign_op ::= '/=' 
assign_op ::= '*=' 
assign_op ::= '-=' 
assign_op ::= '+=' 
assign_op ::= '=' 
equality_expression ::= relat_expression equality_expression_0_opt_2 
equality_expression_0_opt_2 ::= NULL 
equality_expression_0_opt_2 ::= equal_op equality_expression 
equal_op ::= '!=' 
equal_op ::= '==' 
relat_expression ::= additive_expression relat_expression_0_opt_2 
relat_expression_0_opt_2 ::= NULL 
relat_expression_0_opt_2 ::= relat_op relat_expression 
relat_op ::= '<=' 
relat_op ::= '>=' 
relat_op ::= '<' 
relat_op ::= '>' 
additive_expression ::= multiplicative_expression additive_expression_0_opt_2 
additive_expression_0_opt_2 ::= NULL 
additive_expression_0_opt_2 ::= add_op additive_expression 
add_op ::= '-' 
add_op ::= '+' 
multiplicative_expression ::= unary_expression multiplicative_expression_0_opt_2 
multiplicative_expression_0_opt_2 ::= NULL 
multiplicative_expression_0_opt_2 ::= mul_op multiplicative_expression 
mul_op ::= '/' 
mul_op ::= '*' 
unary_expression ::= postfix_expression 
unary_expression ::= sadd_op unary_expression 
sadd_op ::= '-' 
sadd_op ::= '--' 
sadd_op ::= '++' 
postfix_expression ::= primary_expression postfix_expression_0_rep_2 
postfix_expression_0_rep_2 ::= NULL 
postfix_expression_0_rep_2 ::= postfix_extend_part postfix_expression_0_rep_2 
postfix_extend_part ::= post_op 
postfix_extend_part ::= '.' ID 
postfix_extend_part ::= '(' postfix_extend_part_1_opt_2 ')' 
postfix_extend_part ::= '[' expression ']' 
postfix_extend_part_1_opt_2 ::= NULL 
postfix_extend_part_1_opt_2 ::= assignment_expression postfix_extend_part_1_opt_2_0_rep_2 
postfix_extend_part_1_opt_2_0_rep_2 ::= NULL 
postfix_extend_part_1_opt_2_0_rep_2 ::= ',' assignment_expression postfix_extend_part_1_opt_2_0_rep_2 
post_op ::= '--' 
post_op ::= '++' 
primary_expression ::= '(' expression ')' 
primary_expression ::= NUMBER 
primary_expression ::= ID 
struct_specifier ::= 'struct' ID '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';' 
struct_specifier_0_opt_6 ::= NULL 
struct_specifier_0_opt_6 ::= ID 
struct_specifier_0_rep_4 ::= NULL 
struct_specifier_0_rep_4 ::= declaration struct_specifier_0_rep_4 



##############################
show info after add start node
##############################
%start% ::= program ;
program ::= program_0_rep_1 ;
program_0_rep_1 ::= NULL ;
program_0_rep_1 ::= external_declaration program_0_rep_1 ;
external_declaration ::= struct_specifier ;
external_declaration ::= declaration ;
external_declaration ::= function_declaration ;
function_declaration ::= type_specifier direct_declarator compound_statement ;
type_specifier ::= ID ;
direct_declarator ::= ID extend_part ;
extend_part ::= '(' extend_part_1_opt_2 ')' ;
extend_part ::= extend_part_0_rep_1 ;
extend_part_1_opt_2 ::= NULL ;
extend_part_1_opt_2 ::= parameter_list ;
extend_part_0_rep_1 ::= NULL ;
extend_part_0_rep_1 ::= '[' extend_part_0_rep_1_0_opt_2 ']' extend_part_0_rep_1 ;
extend_part_0_rep_1_0_opt_2 ::= NULL ;
extend_part_0_rep_1_0_opt_2 ::= constant_expression ;
constant_expression ::= relat_expression ;
parameter_list ::= parameter_declaration parameter_list_0_rep_2 ;
parameter_list_0_rep_2 ::= NULL ;
parameter_list_0_rep_2 ::= ',' parameter_declaration parameter_list_0_rep_2 ;
parameter_declaration ::= declaration_specifier ID ;
declaration_specifier ::= type_specifier ;
compound_statement ::= '{' compound_statement_0_rep_2 '}' ;
compound_statement_0_rep_2 ::= NULL ;
compound_statement_0_rep_2 ::= statement compound_statement_0_rep_2 ;
compound_statement_0_rep_2 ::= declaration compound_statement_0_rep_2 ;
declaration ::= type_specifier init_declarator ';' ;
init_declarator ::= direct_declarator init_declarator_0_opt_2 ;
init_declarator_0_opt_2 ::= NULL ;
init_declarator_0_opt_2 ::= '=' initializer ;
initializer ::= '{' initializer_list initializer_1_opt_3 '}' ;
initializer ::= assignment_expression ;
initializer_1_opt_3 ::= NULL ;
initializer_1_opt_3 ::= ',' ;
initializer_list ::= initializer initializer_list_0_rep_2 ;
initializer_list_0_rep_2 ::= NULL ;
initializer_list_0_rep_2 ::= ',' initializer initializer_list_0_rep_2 ;
statement ::= return_statement ;
statement ::= iteration_statement ;
statement ::= selection_statement ;
statement ::= expression_statement ;
statement ::= compound_statement ;
expression_statement ::= expression ';' ;
expression_statement ::= ';' ;
selection_statement ::= 'if' '(' expression ')' statement selection_statement_0_opt_6 ;
selection_statement_0_opt_6 ::= NULL ;
selection_statement_0_opt_6 ::= 'else' statement ;
iteration_statement ::= 'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement ;
iteration_statement_0_opt_7 ::= NULL ;
iteration_statement_0_opt_7 ::= expression ;
iteration_statement_0_opt_5 ::= NULL ;
iteration_statement_0_opt_5 ::= expression ;
iteration_statement_0_opt_3 ::= NULL ;
iteration_statement_0_opt_3 ::= iteration_statement_0_opt_3_0_opt_1 init_declarator ;
iteration_statement_0_opt_3_0_opt_1 ::= NULL ;
iteration_statement_0_opt_3_0_opt_1 ::= type_specifier ;
return_statement ::= 'return' expression_statement ;
expression ::= assignment_expression expression_0_rep_2 ;
expression_0_rep_2 ::= NULL ;
expression_0_rep_2 ::= ',' assignment_expression expression_0_rep_2 ;
assignment_expression ::= equality_expression assignment_expression_0_opt_2 ;
assignment_expression_0_opt_2 ::= NULL ;
assignment_expression_0_opt_2 ::= assign_op assignment_expression ;
assign_op ::= '/=' ;
assign_op ::= '*=' ;
assign_op ::= '-=' ;
assign_op ::= '+=' ;
assign_op ::= '=' ;
equality_expression ::= relat_expression equality_expression_0_opt_2 ;
equality_expression_0_opt_2 ::= NULL ;
equality_expression_0_opt_2 ::= equal_op equality_expression ;
equal_op ::= '!=' ;
equal_op ::= '==' ;
relat_expression ::= additive_expression relat_expression_0_opt_2 ;
relat_expression_0_opt_2 ::= NULL ;
relat_expression_0_opt_2 ::= relat_op relat_expression ;
relat_op ::= '<=' ;
relat_op ::= '>=' ;
relat_op ::= '<' ;
relat_op ::= '>' ;
additive_expression ::= multiplicative_expression additive_expression_0_opt_2 ;
additive_expression_0_opt_2 ::= NULL ;
additive_expression_0_opt_2 ::= add_op additive_expression ;
add_op ::= '-' ;
add_op ::= '+' ;
multiplicative_expression ::= unary_expression multiplicative_expression_0_opt_2 ;
multiplicative_expression_0_opt_2 ::= NULL ;
multiplicative_expression_0_opt_2 ::= mul_op multiplicative_expression ;
mul_op ::= '/' ;
mul_op ::= '*' ;
unary_expression ::= postfix_expression ;
unary_expression ::= sadd_op unary_expression ;
sadd_op ::= '-' ;
sadd_op ::= '--' ;
sadd_op ::= '++' ;
postfix_expression ::= primary_expression postfix_expression_0_rep_2 ;
postfix_expression_0_rep_2 ::= NULL ;
postfix_expression_0_rep_2 ::= postfix_extend_part postfix_expression_0_rep_2 ;
postfix_extend_part ::= post_op ;
postfix_extend_part ::= '.' ID ;
postfix_extend_part ::= '(' postfix_extend_part_1_opt_2 ')' ;
postfix_extend_part ::= '[' expression ']' ;
postfix_extend_part_1_opt_2 ::= NULL ;
postfix_extend_part_1_opt_2 ::= assignment_expression postfix_extend_part_1_opt_2_0_rep_2 ;
postfix_extend_part_1_opt_2_0_rep_2 ::= NULL ;
postfix_extend_part_1_opt_2_0_rep_2 ::= ',' assignment_expression postfix_extend_part_1_opt_2_0_rep_2 ;
post_op ::= '--' ;
post_op ::= '++' ;
primary_expression ::= '(' expression ')' ;
primary_expression ::= NUMBER ;
primary_expression ::= ID ;
struct_specifier ::= 'struct' ID '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';' ;
struct_specifier_0_opt_6 ::= NULL ;
struct_specifier_0_opt_6 ::= ID ;
struct_specifier_0_rep_4 ::= NULL ;
struct_specifier_0_rep_4 ::= declaration struct_specifier_0_rep_4 ;



##############
show FIRST SET
##############
TERM  declaration : ID  

TERM  mul_op : '/'  '*'  

TERM  %start% : NULL  ID  'struct'  

TERM  extend_part : NULL  '('  '['  

TERM  program_0_rep_1 : ID  'struct'  NULL  

TERM  additive_expression : '('  NUMBER  '--'  '-'  '++'  ID  

TERM  multiplicative_expression : '('  NUMBER  '-'  '--'  ID  '++'  

TERM  assignment_expression : '('  NUMBER  '-'  '--'  ID  '++'  

TERM  parameter_declaration : ID  

TERM  statement : '('  NUMBER  '--'  'return'  '{'  ID  'for'  ';'  '-'  '++'  'if'  

TERM  postfix_extend_part_1_opt_2 : '('  NUMBER  '--'  '-'  '++'  ID  NULL  

TERM  direct_declarator : ID  

TERM  sadd_op : '++'  '--'  '-'  

TERM  compound_statement_0_rep_2 : '('  NUMBER  '--'  'return'  ID  '{'  NULL  'for'  ';'  '-'  '++'  'if'  

TERM  expression_statement : '('  ';'  NUMBER  '-'  '--'  ID  '++'  

TERM  struct_specifier_0_opt_6 : ID  NULL  

TERM  extend_part_1_opt_2 : ID  NULL  

TERM  init_declarator : ID  

TERM  relat_expression_0_opt_2 : '<'  NULL  '<='  '>='  '>'  

TERM  return_statement : 'return'  

TERM  add_op : '+'  '-'  

TERM  multiplicative_expression_0_opt_2 : '/'  '*'  NULL  

TERM  relat_expression : '('  NUMBER  '-'  '--'  ID  '++'  

TERM  expression : '('  NUMBER  '--'  '-'  '++'  ID  

TERM  iteration_statement_0_opt_7 : '('  NUMBER  '-'  '--'  ID  '++'  NULL  

TERM  equality_expression_0_opt_2 : NULL  '=='  '!='  

TERM  type_specifier : ID  

TERM  postfix_extend_part : '('  '.'  '['  '--'  '++'  

TERM  postfix_expression_0_rep_2 : '('  NULL  '--'  '['  '++'  '.'  

TERM  selection_statement_0_opt_6 : 'else'  NULL  

TERM  assign_op : '+='  '*='  '='  '-='  '/='  

TERM  external_declaration : ID  'struct'  

TERM  declaration_specifier : ID  

TERM  parameter_list : ID  

TERM  additive_expression_0_opt_2 : '+'  NULL  '-'  

TERM  struct_specifier : 'struct'  

TERM  compound_statement : '{'  

TERM  parameter_list_0_rep_2 : NULL  ','  

TERM  post_op : '++'  '--'  

TERM  postfix_extend_part_1_opt_2_0_rep_2 : NULL  ','  

TERM  extend_part_0_rep_1_0_opt_2 : '('  NUMBER  '-'  '--'  ID  '++'  NULL  

TERM  iteration_statement : 'for'  

TERM  assignment_expression_0_opt_2 : '+='  NULL  '*='  '-='  '/='  '='  

TERM  initializer_list_0_rep_2 : NULL  ','  

TERM  extend_part_0_rep_1 : NULL  '['  

TERM  init_declarator_0_opt_2 : '='  NULL  

TERM  expression_0_rep_2 : NULL  ','  

TERM  primary_expression : ID  '('  NUMBER  

TERM  program : NULL  ID  'struct'  

TERM  unary_expression : '('  NUMBER  '--'  '-'  '++'  ID  

TERM  postfix_expression : '('  NUMBER  ID  

TERM  struct_specifier_0_rep_4 : ID  NULL  

TERM  equality_expression : '('  NUMBER  '--'  '-'  '++'  ID  

TERM  function_declaration : ID  

TERM  initializer_list : '('  NUMBER  '-'  '--'  '{'  ID  '++'  

TERM  iteration_statement_0_opt_3_0_opt_1 : ID  NULL  

TERM  selection_statement : 'if'  

TERM  relat_op : '<'  '>='  '<='  '>'  

TERM  initializer_1_opt_3 : NULL  ','  

TERM  iteration_statement_0_opt_3 : ID  NULL  

TERM  initializer : '('  NUMBER  '--'  '-'  '++'  ID  '{'  

TERM  equal_op : '=='  '!='  

TERM  iteration_statement_0_opt_5 : '('  NUMBER  '-'  '--'  ID  '++'  NULL  

TERM  constant_expression : '('  NUMBER  '--'  '-'  '++'  ID  




###############
show FOLLOW SET
###############
TERM  %start% : %END%  

TERM  declaration : '('  NUMBER  '--'  '}'  ID  'return'  '{'  'struct'  'for'  ';'  '-'  %END%  '++'  'if'  

TERM  mul_op : '('  NUMBER  '--'  '-'  '++'  ID  

TERM  extend_part : '='  ';'  '{'  

TERM  program_0_rep_1 : %END%  

TERM  additive_expression : '<'  '='  '<='  '>='  ']'  '+='  ')'  '!='  ';'  '*='  '/='  '>'  '}'  '-='  ','  '=='  

TERM  multiplicative_expression : '<'  '<='  '='  '>='  '+='  ']'  ';'  '!='  '+'  ')'  '/='  '>'  '*='  '}'  '-='  '-'  ','  '=='  

TERM  assignment_expression : ']'  ')'  ';'  '}'  ','  

TERM  parameter_declaration : ')'  ','  

TERM  statement : '('  NUMBER  '--'  '}'  'return'  '{'  ID  'else'  'for'  ';'  '-'  '++'  'if'  

TERM  postfix_extend_part_1_opt_2 : ')'  

TERM  direct_declarator : '='  ';'  '{'  

TERM  sadd_op : '('  NUMBER  '-'  '--'  ID  '++'  

TERM  compound_statement_0_rep_2 : '}'  

TERM  expression_statement : '('  NUMBER  '--'  '}'  'return'  '{'  ID  'else'  'for'  ';'  '-'  '++'  'if'  

TERM  struct_specifier_0_opt_6 : ';'  

TERM  extend_part_1_opt_2 : ')'  

TERM  init_declarator : ';'  

TERM  relat_expression_0_opt_2 : '=='  '}'  '-='  '='  ']'  '+='  ')'  '!='  ';'  '*='  ','  '/='  

TERM  relat_expression : '=='  '}'  '='  '-='  '+='  ']'  ';'  ')'  '*='  '!='  ','  '/='  

TERM  return_statement : '('  NUMBER  '--'  'else'  'return'  ID  '{'  '}'  'for'  ';'  '-'  '++'  'if'  

TERM  add_op : '('  NUMBER  '-'  '--'  ID  '++'  

TERM  expression : ']'  ')'  ';'  

TERM  multiplicative_expression_0_opt_2 : '<'  '='  '<='  '>='  ']'  '+='  ')'  '!='  '+'  ';'  '/='  '>'  '*='  '}'  '-='  '-'  ','  '=='  

TERM  iteration_statement_0_opt_7 : ')'  

TERM  equality_expression_0_opt_2 : '}'  '-='  '='  '+='  ']'  ';'  ')'  '*='  '/='  ','  

TERM  type_specifier : ID  

TERM  postfix_extend_part : '/'  '<'  '('  '.'  '>='  '<='  '='  '*'  '+='  ']'  ';'  ')'  '!='  '+'  '/='  '*='  '>'  '['  '--'  '}'  '-='  '++'  '-'  ','  '=='  

TERM  postfix_expression_0_rep_2 : '/'  '<'  '>='  '='  '*'  '+='  '<='  ']'  ';'  ')'  '!='  '+'  '>'  '/='  '*='  '}'  '-='  '-'  ','  '=='  

TERM  selection_statement_0_opt_6 : '('  NUMBER  '--'  '}'  'return'  '{'  ID  'else'  'for'  ';'  '-'  '++'  'if'  

TERM  assign_op : '('  NUMBER  '--'  '-'  '++'  ID  

TERM  external_declaration : ID  %END%  'struct'  

TERM  parameter_list : ')'  

TERM  declaration_specifier : ID  

TERM  additive_expression_0_opt_2 : '<'  '<='  '='  '>='  '+='  ']'  ';'  ')'  '*='  '!='  '/='  '>'  '}'  '-='  ','  '=='  

TERM  struct_specifier : ID  'struct'  %END%  

TERM  compound_statement : '('  '--'  'return'  'for'  ';'  %END%  '++'  NUMBER  'struct'  'else'  '}'  ID  '{'  '-'  'if'  

TERM  parameter_list_0_rep_2 : ')'  

TERM  post_op : '('  '<'  '--'  '['  '.'  '/'  '='  '*'  '<='  ']'  '+='  ')'  '++'  '!='  '*='  '+'  ';'  '>'  '/='  '>='  '}'  '-='  '-'  ','  '=='  

TERM  postfix_extend_part_1_opt_2_0_rep_2 : ')'  

TERM  extend_part_0_rep_1_0_opt_2 : ']'  

TERM  iteration_statement : '('  NUMBER  '--'  'else'  'return'  ID  '{'  '}'  'for'  ';'  '-'  '++'  'if'  

TERM  assignment_expression_0_opt_2 : ']'  ')'  ';'  '}'  ','  

TERM  initializer_list_0_rep_2 : '}'  ','  

TERM  extend_part_0_rep_1 : '='  ';'  '{'  

TERM  init_declarator_0_opt_2 : ';'  

TERM  program : %END%  

TERM  expression_0_rep_2 : ']'  ';'  ')'  

TERM  unary_expression : '/'  '<'  '<='  '>='  '='  '*'  '+='  ')'  ';'  ']'  '*='  '!='  '/='  '>'  '+'  '}'  '-='  '-'  ','  '=='  

TERM  postfix_expression : '/'  '<'  '>='  '*'  '='  '+='  ']'  ';'  ')'  '*='  '!='  '+'  '/='  '>'  '<='  '}'  '-='  '-'  ','  '=='  

TERM  primary_expression : '<'  '/'  '('  '.'  '<='  '='  '>='  '*'  ']'  '+='  ')'  '!='  '+'  ';'  '/='  '>'  '*='  '['  '--'  '}'  '-='  '++'  '-'  ','  '=='  

TERM  equality_expression : '}'  '='  '-='  ']'  '+='  ')'  ';'  '*='  ','  '/='  

TERM  struct_specifier_0_rep_4 : '}'  

TERM  function_declaration : ID  'struct'  %END%  

TERM  initializer_list : '}'  ','  

TERM  iteration_statement_0_opt_3_0_opt_1 : ID  

TERM  relat_op : '('  NUMBER  '--'  '-'  '++'  ID  

TERM  selection_statement : '('  NUMBER  '--'  'else'  'return'  ID  '{'  '}'  'for'  ';'  '-'  '++'  'if'  

TERM  initializer_1_opt_3 : '}'  

TERM  iteration_statement_0_opt_3 : ';'  

TERM  initializer : '}'  ','  ';'  

TERM  equal_op : '('  NUMBER  '-'  '--'  ID  '++'  

TERM  constant_expression : ']'  

TERM  iteration_statement_0_opt_5 : ';'  

##############
show_mark_info
##############
%start% =  %MARK% program
%start% =  program %MARK%
program =  %MARK% program_0_rep_1
program =  program_0_rep_1 %MARK%
program_0_rep_1 =  %MARK%
program_0_rep_1 =  %MARK% external_declaration program_0_rep_1
program_0_rep_1 =  external_declaration %MARK% program_0_rep_1
program_0_rep_1 =  external_declaration program_0_rep_1 %MARK%
external_declaration =  %MARK% struct_specifier
external_declaration =  struct_specifier %MARK%
external_declaration =  %MARK% declaration
external_declaration =  declaration %MARK%
external_declaration =  %MARK% function_declaration
external_declaration =  function_declaration %MARK%
function_declaration =  %MARK% type_specifier direct_declarator compound_statement
function_declaration =  type_specifier %MARK% direct_declarator compound_statement
function_declaration =  type_specifier direct_declarator %MARK% compound_statement
function_declaration =  type_specifier direct_declarator compound_statement %MARK%
type_specifier =  %MARK% ID
type_specifier =  ID %MARK%
direct_declarator =  %MARK% ID extend_part
direct_declarator =  ID %MARK% extend_part
direct_declarator =  ID extend_part %MARK%
extend_part =  %MARK% '(' extend_part_1_opt_2 ')'
extend_part =  '(' %MARK% extend_part_1_opt_2 ')'
extend_part =  '(' extend_part_1_opt_2 %MARK% ')'
extend_part =  '(' extend_part_1_opt_2 ')' %MARK%
extend_part =  %MARK% extend_part_0_rep_1
extend_part =  extend_part_0_rep_1 %MARK%
extend_part_1_opt_2 =  %MARK%
extend_part_1_opt_2 =  %MARK% parameter_list
extend_part_1_opt_2 =  parameter_list %MARK%
extend_part_0_rep_1 =  %MARK%
extend_part_0_rep_1 =  %MARK% '[' extend_part_0_rep_1_0_opt_2 ']' extend_part_0_rep_1
extend_part_0_rep_1 =  '[' %MARK% extend_part_0_rep_1_0_opt_2 ']' extend_part_0_rep_1
extend_part_0_rep_1 =  '[' extend_part_0_rep_1_0_opt_2 %MARK% ']' extend_part_0_rep_1
extend_part_0_rep_1 =  '[' extend_part_0_rep_1_0_opt_2 ']' %MARK% extend_part_0_rep_1
extend_part_0_rep_1 =  '[' extend_part_0_rep_1_0_opt_2 ']' extend_part_0_rep_1 %MARK%
extend_part_0_rep_1_0_opt_2 =  %MARK%
extend_part_0_rep_1_0_opt_2 =  %MARK% constant_expression
extend_part_0_rep_1_0_opt_2 =  constant_expression %MARK%
constant_expression =  %MARK% relat_expression
constant_expression =  relat_expression %MARK%
parameter_list =  %MARK% parameter_declaration parameter_list_0_rep_2
parameter_list =  parameter_declaration %MARK% parameter_list_0_rep_2
parameter_list =  parameter_declaration parameter_list_0_rep_2 %MARK%
parameter_list_0_rep_2 =  %MARK%
parameter_list_0_rep_2 =  %MARK% ',' parameter_declaration parameter_list_0_rep_2
parameter_list_0_rep_2 =  ',' %MARK% parameter_declaration parameter_list_0_rep_2
parameter_list_0_rep_2 =  ',' parameter_declaration %MARK% parameter_list_0_rep_2
parameter_list_0_rep_2 =  ',' parameter_declaration parameter_list_0_rep_2 %MARK%
parameter_declaration =  %MARK% declaration_specifier ID
parameter_declaration =  declaration_specifier %MARK% ID
parameter_declaration =  declaration_specifier ID %MARK%
declaration_specifier =  %MARK% type_specifier
declaration_specifier =  type_specifier %MARK%
compound_statement =  %MARK% '{' compound_statement_0_rep_2 '}'
compound_statement =  '{' %MARK% compound_statement_0_rep_2 '}'
compound_statement =  '{' compound_statement_0_rep_2 %MARK% '}'
compound_statement =  '{' compound_statement_0_rep_2 '}' %MARK%
compound_statement_0_rep_2 =  %MARK%
compound_statement_0_rep_2 =  %MARK% statement compound_statement_0_rep_2
compound_statement_0_rep_2 =  statement %MARK% compound_statement_0_rep_2
compound_statement_0_rep_2 =  statement compound_statement_0_rep_2 %MARK%
compound_statement_0_rep_2 =  %MARK% declaration compound_statement_0_rep_2
compound_statement_0_rep_2 =  declaration %MARK% compound_statement_0_rep_2
compound_statement_0_rep_2 =  declaration compound_statement_0_rep_2 %MARK%
declaration =  %MARK% type_specifier init_declarator ';'
declaration =  type_specifier %MARK% init_declarator ';'
declaration =  type_specifier init_declarator %MARK% ';'
declaration =  type_specifier init_declarator ';' %MARK%
init_declarator =  %MARK% direct_declarator init_declarator_0_opt_2
init_declarator =  direct_declarator %MARK% init_declarator_0_opt_2
init_declarator =  direct_declarator init_declarator_0_opt_2 %MARK%
init_declarator_0_opt_2 =  %MARK%
init_declarator_0_opt_2 =  %MARK% '=' initializer
init_declarator_0_opt_2 =  '=' %MARK% initializer
init_declarator_0_opt_2 =  '=' initializer %MARK%
initializer =  %MARK% '{' initializer_list initializer_1_opt_3 '}'
initializer =  '{' %MARK% initializer_list initializer_1_opt_3 '}'
initializer =  '{' initializer_list %MARK% initializer_1_opt_3 '}'
initializer =  '{' initializer_list initializer_1_opt_3 %MARK% '}'
initializer =  '{' initializer_list initializer_1_opt_3 '}' %MARK%
initializer =  %MARK% assignment_expression
initializer =  assignment_expression %MARK%
initializer_1_opt_3 =  %MARK%
initializer_1_opt_3 =  %MARK% ','
initializer_1_opt_3 =  ',' %MARK%
initializer_list =  %MARK% initializer initializer_list_0_rep_2
initializer_list =  initializer %MARK% initializer_list_0_rep_2
initializer_list =  initializer initializer_list_0_rep_2 %MARK%
initializer_list_0_rep_2 =  %MARK%
initializer_list_0_rep_2 =  %MARK% ',' initializer initializer_list_0_rep_2
initializer_list_0_rep_2 =  ',' %MARK% initializer initializer_list_0_rep_2
initializer_list_0_rep_2 =  ',' initializer %MARK% initializer_list_0_rep_2
initializer_list_0_rep_2 =  ',' initializer initializer_list_0_rep_2 %MARK%
statement =  %MARK% return_statement
statement =  return_statement %MARK%
statement =  %MARK% iteration_statement
statement =  iteration_statement %MARK%
statement =  %MARK% selection_statement
statement =  selection_statement %MARK%
statement =  %MARK% expression_statement
statement =  expression_statement %MARK%
statement =  %MARK% compound_statement
statement =  compound_statement %MARK%
expression_statement =  %MARK% expression ';'
expression_statement =  expression %MARK% ';'
expression_statement =  expression ';' %MARK%
expression_statement =  %MARK% ';'
expression_statement =  ';' %MARK%
selection_statement =  %MARK% 'if' '(' expression ')' statement selection_statement_0_opt_6
selection_statement =  'if' %MARK% '(' expression ')' statement selection_statement_0_opt_6
selection_statement =  'if' '(' %MARK% expression ')' statement selection_statement_0_opt_6
selection_statement =  'if' '(' expression %MARK% ')' statement selection_statement_0_opt_6
selection_statement =  'if' '(' expression ')' %MARK% statement selection_statement_0_opt_6
selection_statement =  'if' '(' expression ')' statement %MARK% selection_statement_0_opt_6
selection_statement =  'if' '(' expression ')' statement selection_statement_0_opt_6 %MARK%
selection_statement_0_opt_6 =  %MARK%
selection_statement_0_opt_6 =  %MARK% 'else' statement
selection_statement_0_opt_6 =  'else' %MARK% statement
selection_statement_0_opt_6 =  'else' statement %MARK%
iteration_statement =  %MARK% 'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement
iteration_statement =  'for' %MARK% '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement
iteration_statement =  'for' '(' %MARK% iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement
iteration_statement =  'for' '(' iteration_statement_0_opt_3 %MARK% ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement
iteration_statement =  'for' '(' iteration_statement_0_opt_3 ';' %MARK% iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement
iteration_statement =  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 %MARK% ';' iteration_statement_0_opt_7 ')' statement
iteration_statement =  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' %MARK% iteration_statement_0_opt_7 ')' statement
iteration_statement =  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 %MARK% ')' statement
iteration_statement =  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' %MARK% statement
iteration_statement =  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement %MARK%
iteration_statement_0_opt_7 =  %MARK%
iteration_statement_0_opt_7 =  %MARK% expression
iteration_statement_0_opt_7 =  expression %MARK%
iteration_statement_0_opt_5 =  %MARK%
iteration_statement_0_opt_5 =  %MARK% expression
iteration_statement_0_opt_5 =  expression %MARK%
iteration_statement_0_opt_3 =  %MARK%
iteration_statement_0_opt_3 =  %MARK% iteration_statement_0_opt_3_0_opt_1 init_declarator
iteration_statement_0_opt_3 =  iteration_statement_0_opt_3_0_opt_1 %MARK% init_declarator
iteration_statement_0_opt_3 =  iteration_statement_0_opt_3_0_opt_1 init_declarator %MARK%
iteration_statement_0_opt_3_0_opt_1 =  %MARK%
iteration_statement_0_opt_3_0_opt_1 =  %MARK% type_specifier
iteration_statement_0_opt_3_0_opt_1 =  type_specifier %MARK%
return_statement =  %MARK% 'return' expression_statement
return_statement =  'return' %MARK% expression_statement
return_statement =  'return' expression_statement %MARK%
expression =  %MARK% assignment_expression expression_0_rep_2
expression =  assignment_expression %MARK% expression_0_rep_2
expression =  assignment_expression expression_0_rep_2 %MARK%
expression_0_rep_2 =  %MARK%
expression_0_rep_2 =  %MARK% ',' assignment_expression expression_0_rep_2
expression_0_rep_2 =  ',' %MARK% assignment_expression expression_0_rep_2
expression_0_rep_2 =  ',' assignment_expression %MARK% expression_0_rep_2
expression_0_rep_2 =  ',' assignment_expression expression_0_rep_2 %MARK%
assignment_expression =  %MARK% equality_expression assignment_expression_0_opt_2
assignment_expression =  equality_expression %MARK% assignment_expression_0_opt_2
assignment_expression =  equality_expression assignment_expression_0_opt_2 %MARK%
assignment_expression_0_opt_2 =  %MARK%
assignment_expression_0_opt_2 =  %MARK% assign_op assignment_expression
assignment_expression_0_opt_2 =  assign_op %MARK% assignment_expression
assignment_expression_0_opt_2 =  assign_op assignment_expression %MARK%
assign_op =  %MARK% '/='
assign_op =  '/=' %MARK%
assign_op =  %MARK% '*='
assign_op =  '*=' %MARK%
assign_op =  %MARK% '-='
assign_op =  '-=' %MARK%
assign_op =  %MARK% '+='
assign_op =  '+=' %MARK%
assign_op =  %MARK% '='
assign_op =  '=' %MARK%
equality_expression =  %MARK% relat_expression equality_expression_0_opt_2
equality_expression =  relat_expression %MARK% equality_expression_0_opt_2
equality_expression =  relat_expression equality_expression_0_opt_2 %MARK%
equality_expression_0_opt_2 =  %MARK%
equality_expression_0_opt_2 =  %MARK% equal_op equality_expression
equality_expression_0_opt_2 =  equal_op %MARK% equality_expression
equality_expression_0_opt_2 =  equal_op equality_expression %MARK%
equal_op =  %MARK% '!='
equal_op =  '!=' %MARK%
equal_op =  %MARK% '=='
equal_op =  '==' %MARK%
relat_expression =  %MARK% additive_expression relat_expression_0_opt_2
relat_expression =  additive_expression %MARK% relat_expression_0_opt_2
relat_expression =  additive_expression relat_expression_0_opt_2 %MARK%
relat_expression_0_opt_2 =  %MARK%
relat_expression_0_opt_2 =  %MARK% relat_op relat_expression
relat_expression_0_opt_2 =  relat_op %MARK% relat_expression
relat_expression_0_opt_2 =  relat_op relat_expression %MARK%
relat_op =  %MARK% '<='
relat_op =  '<=' %MARK%
relat_op =  %MARK% '>='
relat_op =  '>=' %MARK%
relat_op =  %MARK% '<'
relat_op =  '<' %MARK%
relat_op =  %MARK% '>'
relat_op =  '>' %MARK%
additive_expression =  %MARK% multiplicative_expression additive_expression_0_opt_2
additive_expression =  multiplicative_expression %MARK% additive_expression_0_opt_2
additive_expression =  multiplicative_expression additive_expression_0_opt_2 %MARK%
additive_expression_0_opt_2 =  %MARK%
additive_expression_0_opt_2 =  %MARK% add_op additive_expression
additive_expression_0_opt_2 =  add_op %MARK% additive_expression
additive_expression_0_opt_2 =  add_op additive_expression %MARK%
add_op =  %MARK% '-'
add_op =  '-' %MARK%
add_op =  %MARK% '+'
add_op =  '+' %MARK%
multiplicative_expression =  %MARK% unary_expression multiplicative_expression_0_opt_2
multiplicative_expression =  unary_expression %MARK% multiplicative_expression_0_opt_2
multiplicative_expression =  unary_expression multiplicative_expression_0_opt_2 %MARK%
multiplicative_expression_0_opt_2 =  %MARK%
multiplicative_expression_0_opt_2 =  %MARK% mul_op multiplicative_expression
multiplicative_expression_0_opt_2 =  mul_op %MARK% multiplicative_expression
multiplicative_expression_0_opt_2 =  mul_op multiplicative_expression %MARK%
mul_op =  %MARK% '/'
mul_op =  '/' %MARK%
mul_op =  %MARK% '*'
mul_op =  '*' %MARK%
unary_expression =  %MARK% postfix_expression
unary_expression =  postfix_expression %MARK%
unary_expression =  %MARK% sadd_op unary_expression
unary_expression =  sadd_op %MARK% unary_expression
unary_expression =  sadd_op unary_expression %MARK%
sadd_op =  %MARK% '-'
sadd_op =  '-' %MARK%
sadd_op =  %MARK% '--'
sadd_op =  '--' %MARK%
sadd_op =  %MARK% '++'
sadd_op =  '++' %MARK%
postfix_expression =  %MARK% primary_expression postfix_expression_0_rep_2
postfix_expression =  primary_expression %MARK% postfix_expression_0_rep_2
postfix_expression =  primary_expression postfix_expression_0_rep_2 %MARK%
postfix_expression_0_rep_2 =  %MARK%
postfix_expression_0_rep_2 =  %MARK% postfix_extend_part postfix_expression_0_rep_2
postfix_expression_0_rep_2 =  postfix_extend_part %MARK% postfix_expression_0_rep_2
postfix_expression_0_rep_2 =  postfix_extend_part postfix_expression_0_rep_2 %MARK%
postfix_extend_part =  %MARK% post_op
postfix_extend_part =  post_op %MARK%
postfix_extend_part =  %MARK% '.' ID
postfix_extend_part =  '.' %MARK% ID
postfix_extend_part =  '.' ID %MARK%
postfix_extend_part =  %MARK% '(' postfix_extend_part_1_opt_2 ')'
postfix_extend_part =  '(' %MARK% postfix_extend_part_1_opt_2 ')'
postfix_extend_part =  '(' postfix_extend_part_1_opt_2 %MARK% ')'
postfix_extend_part =  '(' postfix_extend_part_1_opt_2 ')' %MARK%
postfix_extend_part =  %MARK% '[' expression ']'
postfix_extend_part =  '[' %MARK% expression ']'
postfix_extend_part =  '[' expression %MARK% ']'
postfix_extend_part =  '[' expression ']' %MARK%
postfix_extend_part_1_opt_2 =  %MARK%
postfix_extend_part_1_opt_2 =  %MARK% assignment_expression postfix_extend_part_1_opt_2_0_rep_2
postfix_extend_part_1_opt_2 =  assignment_expression %MARK% postfix_extend_part_1_opt_2_0_rep_2
postfix_extend_part_1_opt_2 =  assignment_expression postfix_extend_part_1_opt_2_0_rep_2 %MARK%
postfix_extend_part_1_opt_2_0_rep_2 =  %MARK%
postfix_extend_part_1_opt_2_0_rep_2 =  %MARK% ',' assignment_expression postfix_extend_part_1_opt_2_0_rep_2
postfix_extend_part_1_opt_2_0_rep_2 =  ',' %MARK% assignment_expression postfix_extend_part_1_opt_2_0_rep_2
postfix_extend_part_1_opt_2_0_rep_2 =  ',' assignment_expression %MARK% postfix_extend_part_1_opt_2_0_rep_2
postfix_extend_part_1_opt_2_0_rep_2 =  ',' assignment_expression postfix_extend_part_1_opt_2_0_rep_2 %MARK%
post_op =  %MARK% '--'
post_op =  '--' %MARK%
post_op =  %MARK% '++'
post_op =  '++' %MARK%
primary_expression =  %MARK% '(' expression ')'
primary_expression =  '(' %MARK% expression ')'
primary_expression =  '(' expression %MARK% ')'
primary_expression =  '(' expression ')' %MARK%
primary_expression =  %MARK% NUMBER
primary_expression =  NUMBER %MARK%
primary_expression =  %MARK% ID
primary_expression =  ID %MARK%
struct_specifier =  %MARK% 'struct' ID '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';'
struct_specifier =  'struct' %MARK% ID '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';'
struct_specifier =  'struct' ID %MARK% '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';'
struct_specifier =  'struct' ID '{' %MARK% struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';'
struct_specifier =  'struct' ID '{' struct_specifier_0_rep_4 %MARK% '}' struct_specifier_0_opt_6 ';'
struct_specifier =  'struct' ID '{' struct_specifier_0_rep_4 '}' %MARK% struct_specifier_0_opt_6 ';'
struct_specifier =  'struct' ID '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 %MARK% ';'
struct_specifier =  'struct' ID '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';' %MARK%
struct_specifier_0_opt_6 =  %MARK%
struct_specifier_0_opt_6 =  %MARK% ID
struct_specifier_0_opt_6 =  ID %MARK%
struct_specifier_0_rep_4 =  %MARK%
struct_specifier_0_rep_4 =  %MARK% declaration struct_specifier_0_rep_4
struct_specifier_0_rep_4 =  declaration %MARK% struct_specifier_0_rep_4
struct_specifier_0_rep_4 =  declaration struct_specifier_0_rep_4 %MARK%



########
DNF TERM
########
%start%  :  %MARK%  program  
 index is: 0, source_index: 0, before: %NULL%, after: program
%start%  :  program  %MARK%  
 index is: 1, source_index: 0, before: program, after: %NULL%
program  :  %MARK%  program_0_rep_1  
 index is: 2, source_index: 1, before: %NULL%, after: program_0_rep_1
program  :  program_0_rep_1  %MARK%  
 index is: 3, source_index: 1, before: program_0_rep_1, after: %NULL%
program_0_rep_1  :  %MARK%  
 index is: 4, source_index: 2, before: %NULL%, after: %NULL%
program_0_rep_1  :  %MARK%  external_declaration  program_0_rep_1  
 index is: 5, source_index: 3, before: %NULL%, after: external_declaration
program_0_rep_1  :  external_declaration  %MARK%  program_0_rep_1  
 index is: 6, source_index: 3, before: external_declaration, after: program_0_rep_1
program_0_rep_1  :  external_declaration  program_0_rep_1  %MARK%  
 index is: 7, source_index: 3, before: program_0_rep_1, after: %NULL%
external_declaration  :  %MARK%  struct_specifier  
 index is: 8, source_index: 4, before: %NULL%, after: struct_specifier
external_declaration  :  struct_specifier  %MARK%  
 index is: 9, source_index: 4, before: struct_specifier, after: %NULL%
external_declaration  :  %MARK%  declaration  
 index is: 10, source_index: 5, before: %NULL%, after: declaration
external_declaration  :  declaration  %MARK%  
 index is: 11, source_index: 5, before: declaration, after: %NULL%
external_declaration  :  %MARK%  function_declaration  
 index is: 12, source_index: 6, before: %NULL%, after: function_declaration
external_declaration  :  function_declaration  %MARK%  
 index is: 13, source_index: 6, before: function_declaration, after: %NULL%
function_declaration  :  %MARK%  type_specifier  direct_declarator  compound_statement  
 index is: 14, source_index: 7, before: %NULL%, after: type_specifier
function_declaration  :  type_specifier  %MARK%  direct_declarator  compound_statement  
 index is: 15, source_index: 7, before: type_specifier, after: direct_declarator
function_declaration  :  type_specifier  direct_declarator  %MARK%  compound_statement  
 index is: 16, source_index: 7, before: direct_declarator, after: compound_statement
function_declaration  :  type_specifier  direct_declarator  compound_statement  %MARK%  
 index is: 17, source_index: 7, before: compound_statement, after: %NULL%
type_specifier  :  %MARK%  ID  
 index is: 18, source_index: 8, before: %NULL%, after: ID
type_specifier  :  ID  %MARK%  
 index is: 19, source_index: 8, before: ID, after: %NULL%
direct_declarator  :  %MARK%  ID  extend_part  
 index is: 20, source_index: 9, before: %NULL%, after: ID
direct_declarator  :  ID  %MARK%  extend_part  
 index is: 21, source_index: 9, before: ID, after: extend_part
direct_declarator  :  ID  extend_part  %MARK%  
 index is: 22, source_index: 9, before: extend_part, after: %NULL%
extend_part  :  %MARK%  '('  extend_part_1_opt_2  ')'  
 index is: 23, source_index: 10, before: %NULL%, after: '('
extend_part  :  '('  %MARK%  extend_part_1_opt_2  ')'  
 index is: 24, source_index: 10, before: '(', after: extend_part_1_opt_2
extend_part  :  '('  extend_part_1_opt_2  %MARK%  ')'  
 index is: 25, source_index: 10, before: extend_part_1_opt_2, after: ')'
extend_part  :  '('  extend_part_1_opt_2  ')'  %MARK%  
 index is: 26, source_index: 10, before: ')', after: %NULL%
extend_part  :  %MARK%  extend_part_0_rep_1  
 index is: 27, source_index: 11, before: %NULL%, after: extend_part_0_rep_1
extend_part  :  extend_part_0_rep_1  %MARK%  
 index is: 28, source_index: 11, before: extend_part_0_rep_1, after: %NULL%
extend_part_1_opt_2  :  %MARK%  
 index is: 29, source_index: 12, before: %NULL%, after: %NULL%
extend_part_1_opt_2  :  %MARK%  parameter_list  
 index is: 30, source_index: 13, before: %NULL%, after: parameter_list
extend_part_1_opt_2  :  parameter_list  %MARK%  
 index is: 31, source_index: 13, before: parameter_list, after: %NULL%
extend_part_0_rep_1  :  %MARK%  
 index is: 32, source_index: 14, before: %NULL%, after: %NULL%
extend_part_0_rep_1  :  %MARK%  '['  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  
 index is: 33, source_index: 15, before: %NULL%, after: '['
extend_part_0_rep_1  :  '['  %MARK%  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  
 index is: 34, source_index: 15, before: '[', after: extend_part_0_rep_1_0_opt_2
extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  %MARK%  ']'  extend_part_0_rep_1  
 index is: 35, source_index: 15, before: extend_part_0_rep_1_0_opt_2, after: ']'
extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  ']'  %MARK%  extend_part_0_rep_1  
 index is: 36, source_index: 15, before: ']', after: extend_part_0_rep_1
extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  %MARK%  
 index is: 37, source_index: 15, before: extend_part_0_rep_1, after: %NULL%
extend_part_0_rep_1_0_opt_2  :  %MARK%  
 index is: 38, source_index: 16, before: %NULL%, after: %NULL%
extend_part_0_rep_1_0_opt_2  :  %MARK%  constant_expression  
 index is: 39, source_index: 17, before: %NULL%, after: constant_expression
extend_part_0_rep_1_0_opt_2  :  constant_expression  %MARK%  
 index is: 40, source_index: 17, before: constant_expression, after: %NULL%
constant_expression  :  %MARK%  relat_expression  
 index is: 41, source_index: 18, before: %NULL%, after: relat_expression
constant_expression  :  relat_expression  %MARK%  
 index is: 42, source_index: 18, before: relat_expression, after: %NULL%
parameter_list  :  %MARK%  parameter_declaration  parameter_list_0_rep_2  
 index is: 43, source_index: 19, before: %NULL%, after: parameter_declaration
parameter_list  :  parameter_declaration  %MARK%  parameter_list_0_rep_2  
 index is: 44, source_index: 19, before: parameter_declaration, after: parameter_list_0_rep_2
parameter_list  :  parameter_declaration  parameter_list_0_rep_2  %MARK%  
 index is: 45, source_index: 19, before: parameter_list_0_rep_2, after: %NULL%
parameter_list_0_rep_2  :  %MARK%  
 index is: 46, source_index: 20, before: %NULL%, after: %NULL%
parameter_list_0_rep_2  :  %MARK%  ','  parameter_declaration  parameter_list_0_rep_2  
 index is: 47, source_index: 21, before: %NULL%, after: ','
parameter_list_0_rep_2  :  ','  %MARK%  parameter_declaration  parameter_list_0_rep_2  
 index is: 48, source_index: 21, before: ',', after: parameter_declaration
parameter_list_0_rep_2  :  ','  parameter_declaration  %MARK%  parameter_list_0_rep_2  
 index is: 49, source_index: 21, before: parameter_declaration, after: parameter_list_0_rep_2
parameter_list_0_rep_2  :  ','  parameter_declaration  parameter_list_0_rep_2  %MARK%  
 index is: 50, source_index: 21, before: parameter_list_0_rep_2, after: %NULL%
parameter_declaration  :  %MARK%  declaration_specifier  ID  
 index is: 51, source_index: 22, before: %NULL%, after: declaration_specifier
parameter_declaration  :  declaration_specifier  %MARK%  ID  
 index is: 52, source_index: 22, before: declaration_specifier, after: ID
parameter_declaration  :  declaration_specifier  ID  %MARK%  
 index is: 53, source_index: 22, before: ID, after: %NULL%
declaration_specifier  :  %MARK%  type_specifier  
 index is: 54, source_index: 23, before: %NULL%, after: type_specifier
declaration_specifier  :  type_specifier  %MARK%  
 index is: 55, source_index: 23, before: type_specifier, after: %NULL%
compound_statement  :  %MARK%  '{'  compound_statement_0_rep_2  '}'  
 index is: 56, source_index: 24, before: %NULL%, after: '{'
compound_statement  :  '{'  %MARK%  compound_statement_0_rep_2  '}'  
 index is: 57, source_index: 24, before: '{', after: compound_statement_0_rep_2
compound_statement  :  '{'  compound_statement_0_rep_2  %MARK%  '}'  
 index is: 58, source_index: 24, before: compound_statement_0_rep_2, after: '}'
compound_statement  :  '{'  compound_statement_0_rep_2  '}'  %MARK%  
 index is: 59, source_index: 24, before: '}', after: %NULL%
compound_statement_0_rep_2  :  %MARK%  
 index is: 60, source_index: 25, before: %NULL%, after: %NULL%
compound_statement_0_rep_2  :  %MARK%  statement  compound_statement_0_rep_2  
 index is: 61, source_index: 26, before: %NULL%, after: statement
compound_statement_0_rep_2  :  statement  %MARK%  compound_statement_0_rep_2  
 index is: 62, source_index: 26, before: statement, after: compound_statement_0_rep_2
compound_statement_0_rep_2  :  statement  compound_statement_0_rep_2  %MARK%  
 index is: 63, source_index: 26, before: compound_statement_0_rep_2, after: %NULL%
compound_statement_0_rep_2  :  %MARK%  declaration  compound_statement_0_rep_2  
 index is: 64, source_index: 27, before: %NULL%, after: declaration
compound_statement_0_rep_2  :  declaration  %MARK%  compound_statement_0_rep_2  
 index is: 65, source_index: 27, before: declaration, after: compound_statement_0_rep_2
compound_statement_0_rep_2  :  declaration  compound_statement_0_rep_2  %MARK%  
 index is: 66, source_index: 27, before: compound_statement_0_rep_2, after: %NULL%
declaration  :  %MARK%  type_specifier  init_declarator  ';'  
 index is: 67, source_index: 28, before: %NULL%, after: type_specifier
declaration  :  type_specifier  %MARK%  init_declarator  ';'  
 index is: 68, source_index: 28, before: type_specifier, after: init_declarator
declaration  :  type_specifier  init_declarator  %MARK%  ';'  
 index is: 69, source_index: 28, before: init_declarator, after: ';'
declaration  :  type_specifier  init_declarator  ';'  %MARK%  
 index is: 70, source_index: 28, before: ';', after: %NULL%
init_declarator  :  %MARK%  direct_declarator  init_declarator_0_opt_2  
 index is: 71, source_index: 29, before: %NULL%, after: direct_declarator
init_declarator  :  direct_declarator  %MARK%  init_declarator_0_opt_2  
 index is: 72, source_index: 29, before: direct_declarator, after: init_declarator_0_opt_2
init_declarator  :  direct_declarator  init_declarator_0_opt_2  %MARK%  
 index is: 73, source_index: 29, before: init_declarator_0_opt_2, after: %NULL%
init_declarator_0_opt_2  :  %MARK%  
 index is: 74, source_index: 30, before: %NULL%, after: %NULL%
init_declarator_0_opt_2  :  %MARK%  '='  initializer  
 index is: 75, source_index: 31, before: %NULL%, after: '='
init_declarator_0_opt_2  :  '='  %MARK%  initializer  
 index is: 76, source_index: 31, before: '=', after: initializer
init_declarator_0_opt_2  :  '='  initializer  %MARK%  
 index is: 77, source_index: 31, before: initializer, after: %NULL%
initializer  :  %MARK%  '{'  initializer_list  initializer_1_opt_3  '}'  
 index is: 78, source_index: 32, before: %NULL%, after: '{'
initializer  :  '{'  %MARK%  initializer_list  initializer_1_opt_3  '}'  
 index is: 79, source_index: 32, before: '{', after: initializer_list
initializer  :  '{'  initializer_list  %MARK%  initializer_1_opt_3  '}'  
 index is: 80, source_index: 32, before: initializer_list, after: initializer_1_opt_3
initializer  :  '{'  initializer_list  initializer_1_opt_3  %MARK%  '}'  
 index is: 81, source_index: 32, before: initializer_1_opt_3, after: '}'
initializer  :  '{'  initializer_list  initializer_1_opt_3  '}'  %MARK%  
 index is: 82, source_index: 32, before: '}', after: %NULL%
initializer  :  %MARK%  assignment_expression  
 index is: 83, source_index: 33, before: %NULL%, after: assignment_expression
initializer  :  assignment_expression  %MARK%  
 index is: 84, source_index: 33, before: assignment_expression, after: %NULL%
initializer_1_opt_3  :  %MARK%  
 index is: 85, source_index: 34, before: %NULL%, after: %NULL%
initializer_1_opt_3  :  %MARK%  ','  
 index is: 86, source_index: 35, before: %NULL%, after: ','
initializer_1_opt_3  :  ','  %MARK%  
 index is: 87, source_index: 35, before: ',', after: %NULL%
initializer_list  :  %MARK%  initializer  initializer_list_0_rep_2  
 index is: 88, source_index: 36, before: %NULL%, after: initializer
initializer_list  :  initializer  %MARK%  initializer_list_0_rep_2  
 index is: 89, source_index: 36, before: initializer, after: initializer_list_0_rep_2
initializer_list  :  initializer  initializer_list_0_rep_2  %MARK%  
 index is: 90, source_index: 36, before: initializer_list_0_rep_2, after: %NULL%
initializer_list_0_rep_2  :  %MARK%  
 index is: 91, source_index: 37, before: %NULL%, after: %NULL%
initializer_list_0_rep_2  :  %MARK%  ','  initializer  initializer_list_0_rep_2  
 index is: 92, source_index: 38, before: %NULL%, after: ','
initializer_list_0_rep_2  :  ','  %MARK%  initializer  initializer_list_0_rep_2  
 index is: 93, source_index: 38, before: ',', after: initializer
initializer_list_0_rep_2  :  ','  initializer  %MARK%  initializer_list_0_rep_2  
 index is: 94, source_index: 38, before: initializer, after: initializer_list_0_rep_2
initializer_list_0_rep_2  :  ','  initializer  initializer_list_0_rep_2  %MARK%  
 index is: 95, source_index: 38, before: initializer_list_0_rep_2, after: %NULL%
statement  :  %MARK%  return_statement  
 index is: 96, source_index: 39, before: %NULL%, after: return_statement
statement  :  return_statement  %MARK%  
 index is: 97, source_index: 39, before: return_statement, after: %NULL%
statement  :  %MARK%  iteration_statement  
 index is: 98, source_index: 40, before: %NULL%, after: iteration_statement
statement  :  iteration_statement  %MARK%  
 index is: 99, source_index: 40, before: iteration_statement, after: %NULL%
statement  :  %MARK%  selection_statement  
 index is: 100, source_index: 41, before: %NULL%, after: selection_statement
statement  :  selection_statement  %MARK%  
 index is: 101, source_index: 41, before: selection_statement, after: %NULL%
statement  :  %MARK%  expression_statement  
 index is: 102, source_index: 42, before: %NULL%, after: expression_statement
statement  :  expression_statement  %MARK%  
 index is: 103, source_index: 42, before: expression_statement, after: %NULL%
statement  :  %MARK%  compound_statement  
 index is: 104, source_index: 43, before: %NULL%, after: compound_statement
statement  :  compound_statement  %MARK%  
 index is: 105, source_index: 43, before: compound_statement, after: %NULL%
expression_statement  :  %MARK%  expression  ';'  
 index is: 106, source_index: 44, before: %NULL%, after: expression
expression_statement  :  expression  %MARK%  ';'  
 index is: 107, source_index: 44, before: expression, after: ';'
expression_statement  :  expression  ';'  %MARK%  
 index is: 108, source_index: 44, before: ';', after: %NULL%
expression_statement  :  %MARK%  ';'  
 index is: 109, source_index: 45, before: %NULL%, after: ';'
expression_statement  :  ';'  %MARK%  
 index is: 110, source_index: 45, before: ';', after: %NULL%
selection_statement  :  %MARK%  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 111, source_index: 46, before: %NULL%, after: 'if'
selection_statement  :  'if'  %MARK%  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 112, source_index: 46, before: 'if', after: '('
selection_statement  :  'if'  '('  %MARK%  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 113, source_index: 46, before: '(', after: expression
selection_statement  :  'if'  '('  expression  %MARK%  ')'  statement  selection_statement_0_opt_6  
 index is: 114, source_index: 46, before: expression, after: ')'
selection_statement  :  'if'  '('  expression  ')'  %MARK%  statement  selection_statement_0_opt_6  
 index is: 115, source_index: 46, before: ')', after: statement
selection_statement  :  'if'  '('  expression  ')'  statement  %MARK%  selection_statement_0_opt_6  
 index is: 116, source_index: 46, before: statement, after: selection_statement_0_opt_6
selection_statement  :  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  %MARK%  
 index is: 117, source_index: 46, before: selection_statement_0_opt_6, after: %NULL%
selection_statement_0_opt_6  :  %MARK%  
 index is: 118, source_index: 47, before: %NULL%, after: %NULL%
selection_statement_0_opt_6  :  %MARK%  'else'  statement  
 index is: 119, source_index: 48, before: %NULL%, after: 'else'
selection_statement_0_opt_6  :  'else'  %MARK%  statement  
 index is: 120, source_index: 48, before: 'else', after: statement
selection_statement_0_opt_6  :  'else'  statement  %MARK%  
 index is: 121, source_index: 48, before: statement, after: %NULL%
iteration_statement  :  %MARK%  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 122, source_index: 49, before: %NULL%, after: 'for'
iteration_statement  :  'for'  %MARK%  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 123, source_index: 49, before: 'for', after: '('
iteration_statement  :  'for'  '('  %MARK%  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 124, source_index: 49, before: '(', after: iteration_statement_0_opt_3
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  %MARK%  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 125, source_index: 49, before: iteration_statement_0_opt_3, after: ';'
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  %MARK%  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 126, source_index: 49, before: ';', after: iteration_statement_0_opt_5
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  %MARK%  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 127, source_index: 49, before: iteration_statement_0_opt_5, after: ';'
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  %MARK%  iteration_statement_0_opt_7  ')'  statement  
 index is: 128, source_index: 49, before: ';', after: iteration_statement_0_opt_7
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  %MARK%  ')'  statement  
 index is: 129, source_index: 49, before: iteration_statement_0_opt_7, after: ')'
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  %MARK%  statement  
 index is: 130, source_index: 49, before: ')', after: statement
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  %MARK%  
 index is: 131, source_index: 49, before: statement, after: %NULL%
iteration_statement_0_opt_7  :  %MARK%  
 index is: 132, source_index: 50, before: %NULL%, after: %NULL%
iteration_statement_0_opt_7  :  %MARK%  expression  
 index is: 133, source_index: 51, before: %NULL%, after: expression
iteration_statement_0_opt_7  :  expression  %MARK%  
 index is: 134, source_index: 51, before: expression, after: %NULL%
iteration_statement_0_opt_5  :  %MARK%  
 index is: 135, source_index: 52, before: %NULL%, after: %NULL%
iteration_statement_0_opt_5  :  %MARK%  expression  
 index is: 136, source_index: 53, before: %NULL%, after: expression
iteration_statement_0_opt_5  :  expression  %MARK%  
 index is: 137, source_index: 53, before: expression, after: %NULL%
iteration_statement_0_opt_3  :  %MARK%  
 index is: 138, source_index: 54, before: %NULL%, after: %NULL%
iteration_statement_0_opt_3  :  %MARK%  iteration_statement_0_opt_3_0_opt_1  init_declarator  
 index is: 139, source_index: 55, before: %NULL%, after: iteration_statement_0_opt_3_0_opt_1
iteration_statement_0_opt_3  :  iteration_statement_0_opt_3_0_opt_1  %MARK%  init_declarator  
 index is: 140, source_index: 55, before: iteration_statement_0_opt_3_0_opt_1, after: init_declarator
iteration_statement_0_opt_3  :  iteration_statement_0_opt_3_0_opt_1  init_declarator  %MARK%  
 index is: 141, source_index: 55, before: init_declarator, after: %NULL%
iteration_statement_0_opt_3_0_opt_1  :  %MARK%  
 index is: 142, source_index: 56, before: %NULL%, after: %NULL%
iteration_statement_0_opt_3_0_opt_1  :  %MARK%  type_specifier  
 index is: 143, source_index: 57, before: %NULL%, after: type_specifier
iteration_statement_0_opt_3_0_opt_1  :  type_specifier  %MARK%  
 index is: 144, source_index: 57, before: type_specifier, after: %NULL%
return_statement  :  %MARK%  'return'  expression_statement  
 index is: 145, source_index: 58, before: %NULL%, after: 'return'
return_statement  :  'return'  %MARK%  expression_statement  
 index is: 146, source_index: 58, before: 'return', after: expression_statement
return_statement  :  'return'  expression_statement  %MARK%  
 index is: 147, source_index: 58, before: expression_statement, after: %NULL%
expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, source_index: 59, before: %NULL%, after: assignment_expression
expression  :  assignment_expression  %MARK%  expression_0_rep_2  
 index is: 149, source_index: 59, before: assignment_expression, after: expression_0_rep_2
expression  :  assignment_expression  expression_0_rep_2  %MARK%  
 index is: 150, source_index: 59, before: expression_0_rep_2, after: %NULL%
expression_0_rep_2  :  %MARK%  
 index is: 151, source_index: 60, before: %NULL%, after: %NULL%
expression_0_rep_2  :  %MARK%  ','  assignment_expression  expression_0_rep_2  
 index is: 152, source_index: 61, before: %NULL%, after: ','
expression_0_rep_2  :  ','  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 153, source_index: 61, before: ',', after: assignment_expression
expression_0_rep_2  :  ','  assignment_expression  %MARK%  expression_0_rep_2  
 index is: 154, source_index: 61, before: assignment_expression, after: expression_0_rep_2
expression_0_rep_2  :  ','  assignment_expression  expression_0_rep_2  %MARK%  
 index is: 155, source_index: 61, before: expression_0_rep_2, after: %NULL%
assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, source_index: 62, before: %NULL%, after: equality_expression
assignment_expression  :  equality_expression  %MARK%  assignment_expression_0_opt_2  
 index is: 157, source_index: 62, before: equality_expression, after: assignment_expression_0_opt_2
assignment_expression  :  equality_expression  assignment_expression_0_opt_2  %MARK%  
 index is: 158, source_index: 62, before: assignment_expression_0_opt_2, after: %NULL%
assignment_expression_0_opt_2  :  %MARK%  
 index is: 159, source_index: 63, before: %NULL%, after: %NULL%
assignment_expression_0_opt_2  :  %MARK%  assign_op  assignment_expression  
 index is: 160, source_index: 64, before: %NULL%, after: assign_op
assignment_expression_0_opt_2  :  assign_op  %MARK%  assignment_expression  
 index is: 161, source_index: 64, before: assign_op, after: assignment_expression
assignment_expression_0_opt_2  :  assign_op  assignment_expression  %MARK%  
 index is: 162, source_index: 64, before: assignment_expression, after: %NULL%
assign_op  :  %MARK%  '/='  
 index is: 163, source_index: 65, before: %NULL%, after: '/='
assign_op  :  '/='  %MARK%  
 index is: 164, source_index: 65, before: '/=', after: %NULL%
assign_op  :  %MARK%  '*='  
 index is: 165, source_index: 66, before: %NULL%, after: '*='
assign_op  :  '*='  %MARK%  
 index is: 166, source_index: 66, before: '*=', after: %NULL%
assign_op  :  %MARK%  '-='  
 index is: 167, source_index: 67, before: %NULL%, after: '-='
assign_op  :  '-='  %MARK%  
 index is: 168, source_index: 67, before: '-=', after: %NULL%
assign_op  :  %MARK%  '+='  
 index is: 169, source_index: 68, before: %NULL%, after: '+='
assign_op  :  '+='  %MARK%  
 index is: 170, source_index: 68, before: '+=', after: %NULL%
assign_op  :  %MARK%  '='  
 index is: 171, source_index: 69, before: %NULL%, after: '='
assign_op  :  '='  %MARK%  
 index is: 172, source_index: 69, before: '=', after: %NULL%
equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, source_index: 70, before: %NULL%, after: relat_expression
equality_expression  :  relat_expression  %MARK%  equality_expression_0_opt_2  
 index is: 174, source_index: 70, before: relat_expression, after: equality_expression_0_opt_2
equality_expression  :  relat_expression  equality_expression_0_opt_2  %MARK%  
 index is: 175, source_index: 70, before: equality_expression_0_opt_2, after: %NULL%
equality_expression_0_opt_2  :  %MARK%  
 index is: 176, source_index: 71, before: %NULL%, after: %NULL%
equality_expression_0_opt_2  :  %MARK%  equal_op  equality_expression  
 index is: 177, source_index: 72, before: %NULL%, after: equal_op
equality_expression_0_opt_2  :  equal_op  %MARK%  equality_expression  
 index is: 178, source_index: 72, before: equal_op, after: equality_expression
equality_expression_0_opt_2  :  equal_op  equality_expression  %MARK%  
 index is: 179, source_index: 72, before: equality_expression, after: %NULL%
equal_op  :  %MARK%  '!='  
 index is: 180, source_index: 73, before: %NULL%, after: '!='
equal_op  :  '!='  %MARK%  
 index is: 181, source_index: 73, before: '!=', after: %NULL%
equal_op  :  %MARK%  '=='  
 index is: 182, source_index: 74, before: %NULL%, after: '=='
equal_op  :  '=='  %MARK%  
 index is: 183, source_index: 74, before: '==', after: %NULL%
relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, source_index: 75, before: %NULL%, after: additive_expression
relat_expression  :  additive_expression  %MARK%  relat_expression_0_opt_2  
 index is: 185, source_index: 75, before: additive_expression, after: relat_expression_0_opt_2
relat_expression  :  additive_expression  relat_expression_0_opt_2  %MARK%  
 index is: 186, source_index: 75, before: relat_expression_0_opt_2, after: %NULL%
relat_expression_0_opt_2  :  %MARK%  
 index is: 187, source_index: 76, before: %NULL%, after: %NULL%
relat_expression_0_opt_2  :  %MARK%  relat_op  relat_expression  
 index is: 188, source_index: 77, before: %NULL%, after: relat_op
relat_expression_0_opt_2  :  relat_op  %MARK%  relat_expression  
 index is: 189, source_index: 77, before: relat_op, after: relat_expression
relat_expression_0_opt_2  :  relat_op  relat_expression  %MARK%  
 index is: 190, source_index: 77, before: relat_expression, after: %NULL%
relat_op  :  %MARK%  '<='  
 index is: 191, source_index: 78, before: %NULL%, after: '<='
relat_op  :  '<='  %MARK%  
 index is: 192, source_index: 78, before: '<=', after: %NULL%
relat_op  :  %MARK%  '>='  
 index is: 193, source_index: 79, before: %NULL%, after: '>='
relat_op  :  '>='  %MARK%  
 index is: 194, source_index: 79, before: '>=', after: %NULL%
relat_op  :  %MARK%  '<'  
 index is: 195, source_index: 80, before: %NULL%, after: '<'
relat_op  :  '<'  %MARK%  
 index is: 196, source_index: 80, before: '<', after: %NULL%
relat_op  :  %MARK%  '>'  
 index is: 197, source_index: 81, before: %NULL%, after: '>'
relat_op  :  '>'  %MARK%  
 index is: 198, source_index: 81, before: '>', after: %NULL%
additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, source_index: 82, before: %NULL%, after: multiplicative_expression
additive_expression  :  multiplicative_expression  %MARK%  additive_expression_0_opt_2  
 index is: 200, source_index: 82, before: multiplicative_expression, after: additive_expression_0_opt_2
additive_expression  :  multiplicative_expression  additive_expression_0_opt_2  %MARK%  
 index is: 201, source_index: 82, before: additive_expression_0_opt_2, after: %NULL%
additive_expression_0_opt_2  :  %MARK%  
 index is: 202, source_index: 83, before: %NULL%, after: %NULL%
additive_expression_0_opt_2  :  %MARK%  add_op  additive_expression  
 index is: 203, source_index: 84, before: %NULL%, after: add_op
additive_expression_0_opt_2  :  add_op  %MARK%  additive_expression  
 index is: 204, source_index: 84, before: add_op, after: additive_expression
additive_expression_0_opt_2  :  add_op  additive_expression  %MARK%  
 index is: 205, source_index: 84, before: additive_expression, after: %NULL%
add_op  :  %MARK%  '-'  
 index is: 206, source_index: 85, before: %NULL%, after: '-'
add_op  :  '-'  %MARK%  
 index is: 207, source_index: 85, before: '-', after: %NULL%
add_op  :  %MARK%  '+'  
 index is: 208, source_index: 86, before: %NULL%, after: '+'
add_op  :  '+'  %MARK%  
 index is: 209, source_index: 86, before: '+', after: %NULL%
multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, source_index: 87, before: %NULL%, after: unary_expression
multiplicative_expression  :  unary_expression  %MARK%  multiplicative_expression_0_opt_2  
 index is: 211, source_index: 87, before: unary_expression, after: multiplicative_expression_0_opt_2
multiplicative_expression  :  unary_expression  multiplicative_expression_0_opt_2  %MARK%  
 index is: 212, source_index: 87, before: multiplicative_expression_0_opt_2, after: %NULL%
multiplicative_expression_0_opt_2  :  %MARK%  
 index is: 213, source_index: 88, before: %NULL%, after: %NULL%
multiplicative_expression_0_opt_2  :  %MARK%  mul_op  multiplicative_expression  
 index is: 214, source_index: 89, before: %NULL%, after: mul_op
multiplicative_expression_0_opt_2  :  mul_op  %MARK%  multiplicative_expression  
 index is: 215, source_index: 89, before: mul_op, after: multiplicative_expression
multiplicative_expression_0_opt_2  :  mul_op  multiplicative_expression  %MARK%  
 index is: 216, source_index: 89, before: multiplicative_expression, after: %NULL%
mul_op  :  %MARK%  '/'  
 index is: 217, source_index: 90, before: %NULL%, after: '/'
mul_op  :  '/'  %MARK%  
 index is: 218, source_index: 90, before: '/', after: %NULL%
mul_op  :  %MARK%  '*'  
 index is: 219, source_index: 91, before: %NULL%, after: '*'
mul_op  :  '*'  %MARK%  
 index is: 220, source_index: 91, before: '*', after: %NULL%
unary_expression  :  %MARK%  postfix_expression  
 index is: 221, source_index: 92, before: %NULL%, after: postfix_expression
unary_expression  :  postfix_expression  %MARK%  
 index is: 222, source_index: 92, before: postfix_expression, after: %NULL%
unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, source_index: 93, before: %NULL%, after: sadd_op
unary_expression  :  sadd_op  %MARK%  unary_expression  
 index is: 224, source_index: 93, before: sadd_op, after: unary_expression
unary_expression  :  sadd_op  unary_expression  %MARK%  
 index is: 225, source_index: 93, before: unary_expression, after: %NULL%
sadd_op  :  %MARK%  '-'  
 index is: 226, source_index: 94, before: %NULL%, after: '-'
sadd_op  :  '-'  %MARK%  
 index is: 227, source_index: 94, before: '-', after: %NULL%
sadd_op  :  %MARK%  '--'  
 index is: 228, source_index: 95, before: %NULL%, after: '--'
sadd_op  :  '--'  %MARK%  
 index is: 229, source_index: 95, before: '--', after: %NULL%
sadd_op  :  %MARK%  '++'  
 index is: 230, source_index: 96, before: %NULL%, after: '++'
sadd_op  :  '++'  %MARK%  
 index is: 231, source_index: 96, before: '++', after: %NULL%
postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, source_index: 97, before: %NULL%, after: primary_expression
postfix_expression  :  primary_expression  %MARK%  postfix_expression_0_rep_2  
 index is: 233, source_index: 97, before: primary_expression, after: postfix_expression_0_rep_2
postfix_expression  :  primary_expression  postfix_expression_0_rep_2  %MARK%  
 index is: 234, source_index: 97, before: postfix_expression_0_rep_2, after: %NULL%
postfix_expression_0_rep_2  :  %MARK%  
 index is: 235, source_index: 98, before: %NULL%, after: %NULL%
postfix_expression_0_rep_2  :  %MARK%  postfix_extend_part  postfix_expression_0_rep_2  
 index is: 236, source_index: 99, before: %NULL%, after: postfix_extend_part
postfix_expression_0_rep_2  :  postfix_extend_part  %MARK%  postfix_expression_0_rep_2  
 index is: 237, source_index: 99, before: postfix_extend_part, after: postfix_expression_0_rep_2
postfix_expression_0_rep_2  :  postfix_extend_part  postfix_expression_0_rep_2  %MARK%  
 index is: 238, source_index: 99, before: postfix_expression_0_rep_2, after: %NULL%
postfix_extend_part  :  %MARK%  post_op  
 index is: 239, source_index: 100, before: %NULL%, after: post_op
postfix_extend_part  :  post_op  %MARK%  
 index is: 240, source_index: 100, before: post_op, after: %NULL%
postfix_extend_part  :  %MARK%  '.'  ID  
 index is: 241, source_index: 101, before: %NULL%, after: '.'
postfix_extend_part  :  '.'  %MARK%  ID  
 index is: 242, source_index: 101, before: '.', after: ID
postfix_extend_part  :  '.'  ID  %MARK%  
 index is: 243, source_index: 101, before: ID, after: %NULL%
postfix_extend_part  :  %MARK%  '('  postfix_extend_part_1_opt_2  ')'  
 index is: 244, source_index: 102, before: %NULL%, after: '('
postfix_extend_part  :  '('  %MARK%  postfix_extend_part_1_opt_2  ')'  
 index is: 245, source_index: 102, before: '(', after: postfix_extend_part_1_opt_2
postfix_extend_part  :  '('  postfix_extend_part_1_opt_2  %MARK%  ')'  
 index is: 246, source_index: 102, before: postfix_extend_part_1_opt_2, after: ')'
postfix_extend_part  :  '('  postfix_extend_part_1_opt_2  ')'  %MARK%  
 index is: 247, source_index: 102, before: ')', after: %NULL%
postfix_extend_part  :  %MARK%  '['  expression  ']'  
 index is: 248, source_index: 103, before: %NULL%, after: '['
postfix_extend_part  :  '['  %MARK%  expression  ']'  
 index is: 249, source_index: 103, before: '[', after: expression
postfix_extend_part  :  '['  expression  %MARK%  ']'  
 index is: 250, source_index: 103, before: expression, after: ']'
postfix_extend_part  :  '['  expression  ']'  %MARK%  
 index is: 251, source_index: 103, before: ']', after: %NULL%
postfix_extend_part_1_opt_2  :  %MARK%  
 index is: 252, source_index: 104, before: %NULL%, after: %NULL%
postfix_extend_part_1_opt_2  :  %MARK%  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 253, source_index: 105, before: %NULL%, after: assignment_expression
postfix_extend_part_1_opt_2  :  assignment_expression  %MARK%  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 254, source_index: 105, before: assignment_expression, after: postfix_extend_part_1_opt_2_0_rep_2
postfix_extend_part_1_opt_2  :  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  %MARK%  
 index is: 255, source_index: 105, before: postfix_extend_part_1_opt_2_0_rep_2, after: %NULL%
postfix_extend_part_1_opt_2_0_rep_2  :  %MARK%  
 index is: 256, source_index: 106, before: %NULL%, after: %NULL%
postfix_extend_part_1_opt_2_0_rep_2  :  %MARK%  ','  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 257, source_index: 107, before: %NULL%, after: ','
postfix_extend_part_1_opt_2_0_rep_2  :  ','  %MARK%  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 258, source_index: 107, before: ',', after: assignment_expression
postfix_extend_part_1_opt_2_0_rep_2  :  ','  assignment_expression  %MARK%  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 259, source_index: 107, before: assignment_expression, after: postfix_extend_part_1_opt_2_0_rep_2
postfix_extend_part_1_opt_2_0_rep_2  :  ','  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  %MARK%  
 index is: 260, source_index: 107, before: postfix_extend_part_1_opt_2_0_rep_2, after: %NULL%
post_op  :  %MARK%  '--'  
 index is: 261, source_index: 108, before: %NULL%, after: '--'
post_op  :  '--'  %MARK%  
 index is: 262, source_index: 108, before: '--', after: %NULL%
post_op  :  %MARK%  '++'  
 index is: 263, source_index: 109, before: %NULL%, after: '++'
post_op  :  '++'  %MARK%  
 index is: 264, source_index: 109, before: '++', after: %NULL%
primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, source_index: 110, before: %NULL%, after: '('
primary_expression  :  '('  %MARK%  expression  ')'  
 index is: 266, source_index: 110, before: '(', after: expression
primary_expression  :  '('  expression  %MARK%  ')'  
 index is: 267, source_index: 110, before: expression, after: ')'
primary_expression  :  '('  expression  ')'  %MARK%  
 index is: 268, source_index: 110, before: ')', after: %NULL%
primary_expression  :  %MARK%  NUMBER  
 index is: 269, source_index: 111, before: %NULL%, after: NUMBER
primary_expression  :  NUMBER  %MARK%  
 index is: 270, source_index: 111, before: NUMBER, after: %NULL%
primary_expression  :  %MARK%  ID  
 index is: 271, source_index: 112, before: %NULL%, after: ID
primary_expression  :  ID  %MARK%  
 index is: 272, source_index: 112, before: ID, after: %NULL%
struct_specifier  :  %MARK%  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 273, source_index: 113, before: %NULL%, after: 'struct'
struct_specifier  :  'struct'  %MARK%  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 274, source_index: 113, before: 'struct', after: ID
struct_specifier  :  'struct'  ID  %MARK%  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 275, source_index: 113, before: ID, after: '{'
struct_specifier  :  'struct'  ID  '{'  %MARK%  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 276, source_index: 113, before: '{', after: struct_specifier_0_rep_4
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  %MARK%  '}'  struct_specifier_0_opt_6  ';'  
 index is: 277, source_index: 113, before: struct_specifier_0_rep_4, after: '}'
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  %MARK%  struct_specifier_0_opt_6  ';'  
 index is: 278, source_index: 113, before: '}', after: struct_specifier_0_opt_6
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  %MARK%  ';'  
 index is: 279, source_index: 113, before: struct_specifier_0_opt_6, after: ';'
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  %MARK%  
 index is: 280, source_index: 113, before: ';', after: %NULL%
struct_specifier_0_opt_6  :  %MARK%  
 index is: 281, source_index: 114, before: %NULL%, after: %NULL%
struct_specifier_0_opt_6  :  %MARK%  ID  
 index is: 282, source_index: 115, before: %NULL%, after: ID
struct_specifier_0_opt_6  :  ID  %MARK%  
 index is: 283, source_index: 115, before: ID, after: %NULL%
struct_specifier_0_rep_4  :  %MARK%  
 index is: 284, source_index: 116, before: %NULL%, after: %NULL%
struct_specifier_0_rep_4  :  %MARK%  declaration  struct_specifier_0_rep_4  
 index is: 285, source_index: 117, before: %NULL%, after: declaration
struct_specifier_0_rep_4  :  declaration  %MARK%  struct_specifier_0_rep_4  
 index is: 286, source_index: 117, before: declaration, after: struct_specifier_0_rep_4
struct_specifier_0_rep_4  :  declaration  struct_specifier_0_rep_4  %MARK%  
 index is: 287, source_index: 117, before: struct_specifier_0_rep_4, after: %NULL%



###########
ADD TARGETS
###########
%start%  :  %MARK%  program  
 index is: 0, term type: to_deduce, before: %NULL%, after: program
TARGET LIST: 
target index: 1  , change_value: program
target index: 2  , change_value: %NULL%

%start%  :  program  %MARK%  
 index is: 1, term type: accept, before: program, after: %NULL%
TARGET LIST: 

program  :  %MARK%  program_0_rep_1  
 index is: 2, term type: to_deduce, before: %NULL%, after: program_0_rep_1
TARGET LIST: 
target index: 3  , change_value: program_0_rep_1
target index: 4  , change_value: %NULL%
target index: 5  , change_value: %NULL%

program  :  program_0_rep_1  %MARK%  
 index is: 3, term type: deduce, before: program_0_rep_1, after: %NULL%
TARGET LIST: 

program_0_rep_1  :  %MARK%  
 index is: 4, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

program_0_rep_1  :  %MARK%  external_declaration  program_0_rep_1  
 index is: 5, term type: to_deduce, before: %NULL%, after: external_declaration
TARGET LIST: 
target index: 6  , change_value: external_declaration
target index: 8  , change_value: %NULL%
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%

program_0_rep_1  :  external_declaration  %MARK%  program_0_rep_1  
 index is: 6, term type: to_deduce, before: external_declaration, after: program_0_rep_1
TARGET LIST: 
target index: 4  , change_value: %NULL%
target index: 5  , change_value: %NULL%
target index: 7  , change_value: program_0_rep_1

program_0_rep_1  :  external_declaration  program_0_rep_1  %MARK%  
 index is: 7, term type: deduce, before: program_0_rep_1, after: %NULL%
TARGET LIST: 

external_declaration  :  %MARK%  struct_specifier  
 index is: 8, term type: to_deduce, before: %NULL%, after: struct_specifier
TARGET LIST: 
target index: 9  , change_value: struct_specifier
target index: 273  , change_value: %NULL%

external_declaration  :  struct_specifier  %MARK%  
 index is: 9, term type: deduce, before: struct_specifier, after: %NULL%
TARGET LIST: 

external_declaration  :  %MARK%  declaration  
 index is: 10, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 11  , change_value: declaration
target index: 67  , change_value: %NULL%

external_declaration  :  declaration  %MARK%  
 index is: 11, term type: deduce, before: declaration, after: %NULL%
TARGET LIST: 

external_declaration  :  %MARK%  function_declaration  
 index is: 12, term type: to_deduce, before: %NULL%, after: function_declaration
TARGET LIST: 
target index: 13  , change_value: function_declaration
target index: 14  , change_value: %NULL%

external_declaration  :  function_declaration  %MARK%  
 index is: 13, term type: deduce, before: function_declaration, after: %NULL%
TARGET LIST: 

function_declaration  :  %MARK%  type_specifier  direct_declarator  compound_statement  
 index is: 14, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 15  , change_value: type_specifier
target index: 18  , change_value: %NULL%

function_declaration  :  type_specifier  %MARK%  direct_declarator  compound_statement  
 index is: 15, term type: to_deduce, before: type_specifier, after: direct_declarator
TARGET LIST: 
target index: 16  , change_value: direct_declarator
target index: 20  , change_value: %NULL%

function_declaration  :  type_specifier  direct_declarator  %MARK%  compound_statement  
 index is: 16, term type: to_deduce, before: direct_declarator, after: compound_statement
TARGET LIST: 
target index: 17  , change_value: compound_statement
target index: 56  , change_value: %NULL%

function_declaration  :  type_specifier  direct_declarator  compound_statement  %MARK%  
 index is: 17, term type: deduce, before: compound_statement, after: %NULL%
TARGET LIST: 

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

type_specifier  :  ID  %MARK%  
 index is: 19, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

direct_declarator  :  %MARK%  ID  extend_part  
 index is: 20, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 21  , change_value: ID

direct_declarator  :  ID  %MARK%  extend_part  
 index is: 21, term type: to_deduce, before: ID, after: extend_part
TARGET LIST: 
target index: 22  , change_value: extend_part
target index: 23  , change_value: %NULL%
target index: 27  , change_value: %NULL%

direct_declarator  :  ID  extend_part  %MARK%  
 index is: 22, term type: deduce, before: extend_part, after: %NULL%
TARGET LIST: 

extend_part  :  %MARK%  '('  extend_part_1_opt_2  ')'  
 index is: 23, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 24  , change_value: '('

extend_part  :  '('  %MARK%  extend_part_1_opt_2  ')'  
 index is: 24, term type: to_deduce, before: '(', after: extend_part_1_opt_2
TARGET LIST: 
target index: 25  , change_value: extend_part_1_opt_2
target index: 29  , change_value: %NULL%
target index: 30  , change_value: %NULL%

extend_part  :  '('  extend_part_1_opt_2  %MARK%  ')'  
 index is: 25, term type: shift, before: extend_part_1_opt_2, after: ')'
TARGET LIST: 
target index: 26  , change_value: ')'

extend_part  :  '('  extend_part_1_opt_2  ')'  %MARK%  
 index is: 26, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

extend_part  :  %MARK%  extend_part_0_rep_1  
 index is: 27, term type: to_deduce, before: %NULL%, after: extend_part_0_rep_1
TARGET LIST: 
target index: 28  , change_value: extend_part_0_rep_1
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%

extend_part  :  extend_part_0_rep_1  %MARK%  
 index is: 28, term type: deduce, before: extend_part_0_rep_1, after: %NULL%
TARGET LIST: 

extend_part_1_opt_2  :  %MARK%  
 index is: 29, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

extend_part_1_opt_2  :  %MARK%  parameter_list  
 index is: 30, term type: to_deduce, before: %NULL%, after: parameter_list
TARGET LIST: 
target index: 31  , change_value: parameter_list
target index: 43  , change_value: %NULL%

extend_part_1_opt_2  :  parameter_list  %MARK%  
 index is: 31, term type: deduce, before: parameter_list, after: %NULL%
TARGET LIST: 

extend_part_0_rep_1  :  %MARK%  
 index is: 32, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

extend_part_0_rep_1  :  %MARK%  '['  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  
 index is: 33, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 34  , change_value: '['

extend_part_0_rep_1  :  '['  %MARK%  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  
 index is: 34, term type: to_deduce, before: '[', after: extend_part_0_rep_1_0_opt_2
TARGET LIST: 
target index: 35  , change_value: extend_part_0_rep_1_0_opt_2
target index: 38  , change_value: %NULL%
target index: 39  , change_value: %NULL%

extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  %MARK%  ']'  extend_part_0_rep_1  
 index is: 35, term type: shift, before: extend_part_0_rep_1_0_opt_2, after: ']'
TARGET LIST: 
target index: 36  , change_value: ']'

extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  ']'  %MARK%  extend_part_0_rep_1  
 index is: 36, term type: to_deduce, before: ']', after: extend_part_0_rep_1
TARGET LIST: 
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%
target index: 37  , change_value: extend_part_0_rep_1

extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  %MARK%  
 index is: 37, term type: deduce, before: extend_part_0_rep_1, after: %NULL%
TARGET LIST: 

extend_part_0_rep_1_0_opt_2  :  %MARK%  
 index is: 38, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

extend_part_0_rep_1_0_opt_2  :  %MARK%  constant_expression  
 index is: 39, term type: to_deduce, before: %NULL%, after: constant_expression
TARGET LIST: 
target index: 40  , change_value: constant_expression
target index: 41  , change_value: %NULL%

extend_part_0_rep_1_0_opt_2  :  constant_expression  %MARK%  
 index is: 40, term type: deduce, before: constant_expression, after: %NULL%
TARGET LIST: 

constant_expression  :  %MARK%  relat_expression  
 index is: 41, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 42  , change_value: relat_expression
target index: 184  , change_value: %NULL%

constant_expression  :  relat_expression  %MARK%  
 index is: 42, term type: deduce, before: relat_expression, after: %NULL%
TARGET LIST: 

parameter_list  :  %MARK%  parameter_declaration  parameter_list_0_rep_2  
 index is: 43, term type: to_deduce, before: %NULL%, after: parameter_declaration
TARGET LIST: 
target index: 44  , change_value: parameter_declaration
target index: 51  , change_value: %NULL%

parameter_list  :  parameter_declaration  %MARK%  parameter_list_0_rep_2  
 index is: 44, term type: to_deduce, before: parameter_declaration, after: parameter_list_0_rep_2
TARGET LIST: 
target index: 45  , change_value: parameter_list_0_rep_2
target index: 46  , change_value: %NULL%
target index: 47  , change_value: %NULL%

parameter_list  :  parameter_declaration  parameter_list_0_rep_2  %MARK%  
 index is: 45, term type: deduce, before: parameter_list_0_rep_2, after: %NULL%
TARGET LIST: 

parameter_list_0_rep_2  :  %MARK%  
 index is: 46, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

parameter_list_0_rep_2  :  %MARK%  ','  parameter_declaration  parameter_list_0_rep_2  
 index is: 47, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 48  , change_value: ','

parameter_list_0_rep_2  :  ','  %MARK%  parameter_declaration  parameter_list_0_rep_2  
 index is: 48, term type: to_deduce, before: ',', after: parameter_declaration
TARGET LIST: 
target index: 49  , change_value: parameter_declaration
target index: 51  , change_value: %NULL%

parameter_list_0_rep_2  :  ','  parameter_declaration  %MARK%  parameter_list_0_rep_2  
 index is: 49, term type: to_deduce, before: parameter_declaration, after: parameter_list_0_rep_2
TARGET LIST: 
target index: 46  , change_value: %NULL%
target index: 47  , change_value: %NULL%
target index: 50  , change_value: parameter_list_0_rep_2

parameter_list_0_rep_2  :  ','  parameter_declaration  parameter_list_0_rep_2  %MARK%  
 index is: 50, term type: deduce, before: parameter_list_0_rep_2, after: %NULL%
TARGET LIST: 

parameter_declaration  :  %MARK%  declaration_specifier  ID  
 index is: 51, term type: to_deduce, before: %NULL%, after: declaration_specifier
TARGET LIST: 
target index: 52  , change_value: declaration_specifier
target index: 54  , change_value: %NULL%

parameter_declaration  :  declaration_specifier  %MARK%  ID  
 index is: 52, term type: shift, before: declaration_specifier, after: ID
TARGET LIST: 
target index: 53  , change_value: ID

parameter_declaration  :  declaration_specifier  ID  %MARK%  
 index is: 53, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

declaration_specifier  :  %MARK%  type_specifier  
 index is: 54, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 55  , change_value: type_specifier

declaration_specifier  :  type_specifier  %MARK%  
 index is: 55, term type: deduce, before: type_specifier, after: %NULL%
TARGET LIST: 

compound_statement  :  %MARK%  '{'  compound_statement_0_rep_2  '}'  
 index is: 56, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 57  , change_value: '{'

compound_statement  :  '{'  %MARK%  compound_statement_0_rep_2  '}'  
 index is: 57, term type: to_deduce, before: '{', after: compound_statement_0_rep_2
TARGET LIST: 
target index: 58  , change_value: compound_statement_0_rep_2
target index: 60  , change_value: %NULL%
target index: 61  , change_value: %NULL%
target index: 64  , change_value: %NULL%

compound_statement  :  '{'  compound_statement_0_rep_2  %MARK%  '}'  
 index is: 58, term type: shift, before: compound_statement_0_rep_2, after: '}'
TARGET LIST: 
target index: 59  , change_value: '}'

compound_statement  :  '{'  compound_statement_0_rep_2  '}'  %MARK%  
 index is: 59, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

compound_statement_0_rep_2  :  %MARK%  
 index is: 60, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

compound_statement_0_rep_2  :  %MARK%  statement  compound_statement_0_rep_2  
 index is: 61, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 62  , change_value: statement
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%

compound_statement_0_rep_2  :  statement  %MARK%  compound_statement_0_rep_2  
 index is: 62, term type: to_deduce, before: statement, after: compound_statement_0_rep_2
TARGET LIST: 
target index: 60  , change_value: %NULL%
target index: 61  , change_value: %NULL%
target index: 63  , change_value: compound_statement_0_rep_2
target index: 64  , change_value: %NULL%

compound_statement_0_rep_2  :  statement  compound_statement_0_rep_2  %MARK%  
 index is: 63, term type: deduce, before: compound_statement_0_rep_2, after: %NULL%
TARGET LIST: 

compound_statement_0_rep_2  :  %MARK%  declaration  compound_statement_0_rep_2  
 index is: 64, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 65  , change_value: declaration
target index: 67  , change_value: %NULL%

compound_statement_0_rep_2  :  declaration  %MARK%  compound_statement_0_rep_2  
 index is: 65, term type: to_deduce, before: declaration, after: compound_statement_0_rep_2
TARGET LIST: 
target index: 60  , change_value: %NULL%
target index: 61  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: compound_statement_0_rep_2

compound_statement_0_rep_2  :  declaration  compound_statement_0_rep_2  %MARK%  
 index is: 66, term type: deduce, before: compound_statement_0_rep_2, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  type_specifier  init_declarator  ';'  
 index is: 67, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 68  , change_value: type_specifier

declaration  :  type_specifier  %MARK%  init_declarator  ';'  
 index is: 68, term type: to_deduce, before: type_specifier, after: init_declarator
TARGET LIST: 
target index: 69  , change_value: init_declarator
target index: 71  , change_value: %NULL%

declaration  :  type_specifier  init_declarator  %MARK%  ';'  
 index is: 69, term type: shift, before: init_declarator, after: ';'
TARGET LIST: 
target index: 70  , change_value: ';'

declaration  :  type_specifier  init_declarator  ';'  %MARK%  
 index is: 70, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

init_declarator  :  %MARK%  direct_declarator  init_declarator_0_opt_2  
 index is: 71, term type: to_deduce, before: %NULL%, after: direct_declarator
TARGET LIST: 
target index: 20  , change_value: %NULL%
target index: 72  , change_value: direct_declarator

init_declarator  :  direct_declarator  %MARK%  init_declarator_0_opt_2  
 index is: 72, term type: to_deduce, before: direct_declarator, after: init_declarator_0_opt_2
TARGET LIST: 
target index: 73  , change_value: init_declarator_0_opt_2
target index: 74  , change_value: %NULL%
target index: 75  , change_value: %NULL%

init_declarator  :  direct_declarator  init_declarator_0_opt_2  %MARK%  
 index is: 73, term type: deduce, before: init_declarator_0_opt_2, after: %NULL%
TARGET LIST: 

init_declarator_0_opt_2  :  %MARK%  
 index is: 74, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

init_declarator_0_opt_2  :  %MARK%  '='  initializer  
 index is: 75, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 76  , change_value: '='

init_declarator_0_opt_2  :  '='  %MARK%  initializer  
 index is: 76, term type: to_deduce, before: '=', after: initializer
TARGET LIST: 
target index: 77  , change_value: initializer
target index: 78  , change_value: %NULL%
target index: 83  , change_value: %NULL%

init_declarator_0_opt_2  :  '='  initializer  %MARK%  
 index is: 77, term type: deduce, before: initializer, after: %NULL%
TARGET LIST: 

initializer  :  %MARK%  '{'  initializer_list  initializer_1_opt_3  '}'  
 index is: 78, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 79  , change_value: '{'

initializer  :  '{'  %MARK%  initializer_list  initializer_1_opt_3  '}'  
 index is: 79, term type: to_deduce, before: '{', after: initializer_list
TARGET LIST: 
target index: 80  , change_value: initializer_list
target index: 88  , change_value: %NULL%

initializer  :  '{'  initializer_list  %MARK%  initializer_1_opt_3  '}'  
 index is: 80, term type: to_deduce, before: initializer_list, after: initializer_1_opt_3
TARGET LIST: 
target index: 81  , change_value: initializer_1_opt_3
target index: 85  , change_value: %NULL%
target index: 86  , change_value: %NULL%

initializer  :  '{'  initializer_list  initializer_1_opt_3  %MARK%  '}'  
 index is: 81, term type: shift, before: initializer_1_opt_3, after: '}'
TARGET LIST: 
target index: 82  , change_value: '}'

initializer  :  '{'  initializer_list  initializer_1_opt_3  '}'  %MARK%  
 index is: 82, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

initializer  :  %MARK%  assignment_expression  
 index is: 83, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 84  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

initializer  :  assignment_expression  %MARK%  
 index is: 84, term type: deduce, before: assignment_expression, after: %NULL%
TARGET LIST: 

initializer_1_opt_3  :  %MARK%  
 index is: 85, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

initializer_1_opt_3  :  %MARK%  ','  
 index is: 86, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 87  , change_value: ','

initializer_1_opt_3  :  ','  %MARK%  
 index is: 87, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

initializer_list  :  %MARK%  initializer  initializer_list_0_rep_2  
 index is: 88, term type: to_deduce, before: %NULL%, after: initializer
TARGET LIST: 
target index: 78  , change_value: %NULL%
target index: 83  , change_value: %NULL%
target index: 89  , change_value: initializer

initializer_list  :  initializer  %MARK%  initializer_list_0_rep_2  
 index is: 89, term type: to_deduce, before: initializer, after: initializer_list_0_rep_2
TARGET LIST: 
target index: 90  , change_value: initializer_list_0_rep_2
target index: 91  , change_value: %NULL%
target index: 92  , change_value: %NULL%

initializer_list  :  initializer  initializer_list_0_rep_2  %MARK%  
 index is: 90, term type: deduce, before: initializer_list_0_rep_2, after: %NULL%
TARGET LIST: 

initializer_list_0_rep_2  :  %MARK%  
 index is: 91, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

initializer_list_0_rep_2  :  %MARK%  ','  initializer  initializer_list_0_rep_2  
 index is: 92, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 93  , change_value: ','

initializer_list_0_rep_2  :  ','  %MARK%  initializer  initializer_list_0_rep_2  
 index is: 93, term type: to_deduce, before: ',', after: initializer
TARGET LIST: 
target index: 78  , change_value: %NULL%
target index: 83  , change_value: %NULL%
target index: 94  , change_value: initializer

initializer_list_0_rep_2  :  ','  initializer  %MARK%  initializer_list_0_rep_2  
 index is: 94, term type: to_deduce, before: initializer, after: initializer_list_0_rep_2
TARGET LIST: 
target index: 91  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 95  , change_value: initializer_list_0_rep_2

initializer_list_0_rep_2  :  ','  initializer  initializer_list_0_rep_2  %MARK%  
 index is: 95, term type: deduce, before: initializer_list_0_rep_2, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  return_statement  
 index is: 96, term type: to_deduce, before: %NULL%, after: return_statement
TARGET LIST: 
target index: 97  , change_value: return_statement
target index: 145  , change_value: %NULL%

statement  :  return_statement  %MARK%  
 index is: 97, term type: deduce, before: return_statement, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  iteration_statement  
 index is: 98, term type: to_deduce, before: %NULL%, after: iteration_statement
TARGET LIST: 
target index: 99  , change_value: iteration_statement
target index: 122  , change_value: %NULL%

statement  :  iteration_statement  %MARK%  
 index is: 99, term type: deduce, before: iteration_statement, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  selection_statement  
 index is: 100, term type: to_deduce, before: %NULL%, after: selection_statement
TARGET LIST: 
target index: 101  , change_value: selection_statement
target index: 111  , change_value: %NULL%

statement  :  selection_statement  %MARK%  
 index is: 101, term type: deduce, before: selection_statement, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  expression_statement  
 index is: 102, term type: to_deduce, before: %NULL%, after: expression_statement
TARGET LIST: 
target index: 103  , change_value: expression_statement
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%

statement  :  expression_statement  %MARK%  
 index is: 103, term type: deduce, before: expression_statement, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  compound_statement  
 index is: 104, term type: to_deduce, before: %NULL%, after: compound_statement
TARGET LIST: 
target index: 56  , change_value: %NULL%
target index: 105  , change_value: compound_statement

statement  :  compound_statement  %MARK%  
 index is: 105, term type: deduce, before: compound_statement, after: %NULL%
TARGET LIST: 

expression_statement  :  %MARK%  expression  ';'  
 index is: 106, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 107  , change_value: expression
target index: 148  , change_value: %NULL%

expression_statement  :  expression  %MARK%  ';'  
 index is: 107, term type: shift, before: expression, after: ';'
TARGET LIST: 
target index: 108  , change_value: ';'

expression_statement  :  expression  ';'  %MARK%  
 index is: 108, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

expression_statement  :  %MARK%  ';'  
 index is: 109, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 110  , change_value: ';'

expression_statement  :  ';'  %MARK%  
 index is: 110, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

selection_statement  :  %MARK%  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 111, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 112  , change_value: 'if'

selection_statement  :  'if'  %MARK%  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 112, term type: shift, before: 'if', after: '('
TARGET LIST: 
target index: 113  , change_value: '('

selection_statement  :  'if'  '('  %MARK%  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 113, term type: to_deduce, before: '(', after: expression
TARGET LIST: 
target index: 114  , change_value: expression
target index: 148  , change_value: %NULL%

selection_statement  :  'if'  '('  expression  %MARK%  ')'  statement  selection_statement_0_opt_6  
 index is: 114, term type: shift, before: expression, after: ')'
TARGET LIST: 
target index: 115  , change_value: ')'

selection_statement  :  'if'  '('  expression  ')'  %MARK%  statement  selection_statement_0_opt_6  
 index is: 115, term type: to_deduce, before: ')', after: statement
TARGET LIST: 
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%
target index: 116  , change_value: statement

selection_statement  :  'if'  '('  expression  ')'  statement  %MARK%  selection_statement_0_opt_6  
 index is: 116, term type: to_deduce, before: statement, after: selection_statement_0_opt_6
TARGET LIST: 
target index: 117  , change_value: selection_statement_0_opt_6
target index: 118  , change_value: %NULL%
target index: 119  , change_value: %NULL%

selection_statement  :  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  %MARK%  
 index is: 117, term type: deduce, before: selection_statement_0_opt_6, after: %NULL%
TARGET LIST: 

selection_statement_0_opt_6  :  %MARK%  
 index is: 118, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

selection_statement_0_opt_6  :  %MARK%  'else'  statement  
 index is: 119, term type: shift, before: %NULL%, after: 'else'
TARGET LIST: 
target index: 120  , change_value: 'else'

selection_statement_0_opt_6  :  'else'  %MARK%  statement  
 index is: 120, term type: to_deduce, before: 'else', after: statement
TARGET LIST: 
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%
target index: 121  , change_value: statement

selection_statement_0_opt_6  :  'else'  statement  %MARK%  
 index is: 121, term type: deduce, before: statement, after: %NULL%
TARGET LIST: 

iteration_statement  :  %MARK%  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 122, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 123  , change_value: 'for'

iteration_statement  :  'for'  %MARK%  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 123, term type: shift, before: 'for', after: '('
TARGET LIST: 
target index: 124  , change_value: '('

iteration_statement  :  'for'  '('  %MARK%  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 124, term type: to_deduce, before: '(', after: iteration_statement_0_opt_3
TARGET LIST: 
target index: 125  , change_value: iteration_statement_0_opt_3
target index: 138  , change_value: %NULL%
target index: 139  , change_value: %NULL%

iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  %MARK%  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 125, term type: shift, before: iteration_statement_0_opt_3, after: ';'
TARGET LIST: 
target index: 126  , change_value: ';'

iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  %MARK%  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 126, term type: to_deduce, before: ';', after: iteration_statement_0_opt_5
TARGET LIST: 
target index: 127  , change_value: iteration_statement_0_opt_5
target index: 135  , change_value: %NULL%
target index: 136  , change_value: %NULL%

iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  %MARK%  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 127, term type: shift, before: iteration_statement_0_opt_5, after: ';'
TARGET LIST: 
target index: 128  , change_value: ';'

iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  %MARK%  iteration_statement_0_opt_7  ')'  statement  
 index is: 128, term type: to_deduce, before: ';', after: iteration_statement_0_opt_7
TARGET LIST: 
target index: 129  , change_value: iteration_statement_0_opt_7
target index: 132  , change_value: %NULL%
target index: 133  , change_value: %NULL%

iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  %MARK%  ')'  statement  
 index is: 129, term type: shift, before: iteration_statement_0_opt_7, after: ')'
TARGET LIST: 
target index: 130  , change_value: ')'

iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  %MARK%  statement  
 index is: 130, term type: to_deduce, before: ')', after: statement
TARGET LIST: 
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%
target index: 131  , change_value: statement

iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  %MARK%  
 index is: 131, term type: deduce, before: statement, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_7  :  %MARK%  
 index is: 132, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_7  :  %MARK%  expression  
 index is: 133, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 134  , change_value: expression
target index: 148  , change_value: %NULL%

iteration_statement_0_opt_7  :  expression  %MARK%  
 index is: 134, term type: deduce, before: expression, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_5  :  %MARK%  
 index is: 135, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_5  :  %MARK%  expression  
 index is: 136, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 137  , change_value: expression
target index: 148  , change_value: %NULL%

iteration_statement_0_opt_5  :  expression  %MARK%  
 index is: 137, term type: deduce, before: expression, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_3  :  %MARK%  
 index is: 138, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_3  :  %MARK%  iteration_statement_0_opt_3_0_opt_1  init_declarator  
 index is: 139, term type: to_deduce, before: %NULL%, after: iteration_statement_0_opt_3_0_opt_1
TARGET LIST: 
target index: 140  , change_value: iteration_statement_0_opt_3_0_opt_1
target index: 142  , change_value: %NULL%
target index: 143  , change_value: %NULL%

iteration_statement_0_opt_3  :  iteration_statement_0_opt_3_0_opt_1  %MARK%  init_declarator  
 index is: 140, term type: to_deduce, before: iteration_statement_0_opt_3_0_opt_1, after: init_declarator
TARGET LIST: 
target index: 71  , change_value: %NULL%
target index: 141  , change_value: init_declarator

iteration_statement_0_opt_3  :  iteration_statement_0_opt_3_0_opt_1  init_declarator  %MARK%  
 index is: 141, term type: deduce, before: init_declarator, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_3_0_opt_1  :  %MARK%  
 index is: 142, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_3_0_opt_1  :  %MARK%  type_specifier  
 index is: 143, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 144  , change_value: type_specifier

iteration_statement_0_opt_3_0_opt_1  :  type_specifier  %MARK%  
 index is: 144, term type: deduce, before: type_specifier, after: %NULL%
TARGET LIST: 

return_statement  :  %MARK%  'return'  expression_statement  
 index is: 145, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 146  , change_value: 'return'

return_statement  :  'return'  %MARK%  expression_statement  
 index is: 146, term type: to_deduce, before: 'return', after: expression_statement
TARGET LIST: 
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%
target index: 147  , change_value: expression_statement

return_statement  :  'return'  expression_statement  %MARK%  
 index is: 147, term type: deduce, before: expression_statement, after: %NULL%
TARGET LIST: 

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

expression  :  assignment_expression  %MARK%  expression_0_rep_2  
 index is: 149, term type: to_deduce, before: assignment_expression, after: expression_0_rep_2
TARGET LIST: 
target index: 150  , change_value: expression_0_rep_2
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%

expression  :  assignment_expression  expression_0_rep_2  %MARK%  
 index is: 150, term type: deduce, before: expression_0_rep_2, after: %NULL%
TARGET LIST: 

expression_0_rep_2  :  %MARK%  
 index is: 151, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

expression_0_rep_2  :  %MARK%  ','  assignment_expression  expression_0_rep_2  
 index is: 152, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 153  , change_value: ','

expression_0_rep_2  :  ','  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 153, term type: to_deduce, before: ',', after: assignment_expression
TARGET LIST: 
target index: 154  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

expression_0_rep_2  :  ','  assignment_expression  %MARK%  expression_0_rep_2  
 index is: 154, term type: to_deduce, before: assignment_expression, after: expression_0_rep_2
TARGET LIST: 
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%
target index: 155  , change_value: expression_0_rep_2

expression_0_rep_2  :  ','  assignment_expression  expression_0_rep_2  %MARK%  
 index is: 155, term type: deduce, before: expression_0_rep_2, after: %NULL%
TARGET LIST: 

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

assignment_expression  :  equality_expression  %MARK%  assignment_expression_0_opt_2  
 index is: 157, term type: to_deduce, before: equality_expression, after: assignment_expression_0_opt_2
TARGET LIST: 
target index: 158  , change_value: assignment_expression_0_opt_2
target index: 159  , change_value: %NULL%
target index: 160  , change_value: %NULL%

assignment_expression  :  equality_expression  assignment_expression_0_opt_2  %MARK%  
 index is: 158, term type: deduce, before: assignment_expression_0_opt_2, after: %NULL%
TARGET LIST: 

assignment_expression_0_opt_2  :  %MARK%  
 index is: 159, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

assignment_expression_0_opt_2  :  %MARK%  assign_op  assignment_expression  
 index is: 160, term type: to_deduce, before: %NULL%, after: assign_op
TARGET LIST: 
target index: 161  , change_value: assign_op
target index: 163  , change_value: %NULL%
target index: 165  , change_value: %NULL%
target index: 167  , change_value: %NULL%
target index: 169  , change_value: %NULL%
target index: 171  , change_value: %NULL%

assignment_expression_0_opt_2  :  assign_op  %MARK%  assignment_expression  
 index is: 161, term type: to_deduce, before: assign_op, after: assignment_expression
TARGET LIST: 
target index: 156  , change_value: %NULL%
target index: 162  , change_value: assignment_expression

assignment_expression_0_opt_2  :  assign_op  assignment_expression  %MARK%  
 index is: 162, term type: deduce, before: assignment_expression, after: %NULL%
TARGET LIST: 

assign_op  :  %MARK%  '/='  
 index is: 163, term type: shift, before: %NULL%, after: '/='
TARGET LIST: 
target index: 164  , change_value: '/='

assign_op  :  '/='  %MARK%  
 index is: 164, term type: deduce, before: '/=', after: %NULL%
TARGET LIST: 

assign_op  :  %MARK%  '*='  
 index is: 165, term type: shift, before: %NULL%, after: '*='
TARGET LIST: 
target index: 166  , change_value: '*='

assign_op  :  '*='  %MARK%  
 index is: 166, term type: deduce, before: '*=', after: %NULL%
TARGET LIST: 

assign_op  :  %MARK%  '-='  
 index is: 167, term type: shift, before: %NULL%, after: '-='
TARGET LIST: 
target index: 168  , change_value: '-='

assign_op  :  '-='  %MARK%  
 index is: 168, term type: deduce, before: '-=', after: %NULL%
TARGET LIST: 

assign_op  :  %MARK%  '+='  
 index is: 169, term type: shift, before: %NULL%, after: '+='
TARGET LIST: 
target index: 170  , change_value: '+='

assign_op  :  '+='  %MARK%  
 index is: 170, term type: deduce, before: '+=', after: %NULL%
TARGET LIST: 

assign_op  :  %MARK%  '='  
 index is: 171, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 172  , change_value: '='

assign_op  :  '='  %MARK%  
 index is: 172, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

equality_expression  :  relat_expression  %MARK%  equality_expression_0_opt_2  
 index is: 174, term type: to_deduce, before: relat_expression, after: equality_expression_0_opt_2
TARGET LIST: 
target index: 175  , change_value: equality_expression_0_opt_2
target index: 176  , change_value: %NULL%
target index: 177  , change_value: %NULL%

equality_expression  :  relat_expression  equality_expression_0_opt_2  %MARK%  
 index is: 175, term type: deduce, before: equality_expression_0_opt_2, after: %NULL%
TARGET LIST: 

equality_expression_0_opt_2  :  %MARK%  
 index is: 176, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

equality_expression_0_opt_2  :  %MARK%  equal_op  equality_expression  
 index is: 177, term type: to_deduce, before: %NULL%, after: equal_op
TARGET LIST: 
target index: 178  , change_value: equal_op
target index: 180  , change_value: %NULL%
target index: 182  , change_value: %NULL%

equality_expression_0_opt_2  :  equal_op  %MARK%  equality_expression  
 index is: 178, term type: to_deduce, before: equal_op, after: equality_expression
TARGET LIST: 
target index: 173  , change_value: %NULL%
target index: 179  , change_value: equality_expression

equality_expression_0_opt_2  :  equal_op  equality_expression  %MARK%  
 index is: 179, term type: deduce, before: equality_expression, after: %NULL%
TARGET LIST: 

equal_op  :  %MARK%  '!='  
 index is: 180, term type: shift, before: %NULL%, after: '!='
TARGET LIST: 
target index: 181  , change_value: '!='

equal_op  :  '!='  %MARK%  
 index is: 181, term type: deduce, before: '!=', after: %NULL%
TARGET LIST: 

equal_op  :  %MARK%  '=='  
 index is: 182, term type: shift, before: %NULL%, after: '=='
TARGET LIST: 
target index: 183  , change_value: '=='

equal_op  :  '=='  %MARK%  
 index is: 183, term type: deduce, before: '==', after: %NULL%
TARGET LIST: 

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

relat_expression  :  additive_expression  %MARK%  relat_expression_0_opt_2  
 index is: 185, term type: to_deduce, before: additive_expression, after: relat_expression_0_opt_2
TARGET LIST: 
target index: 186  , change_value: relat_expression_0_opt_2
target index: 187  , change_value: %NULL%
target index: 188  , change_value: %NULL%

relat_expression  :  additive_expression  relat_expression_0_opt_2  %MARK%  
 index is: 186, term type: deduce, before: relat_expression_0_opt_2, after: %NULL%
TARGET LIST: 

relat_expression_0_opt_2  :  %MARK%  
 index is: 187, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

relat_expression_0_opt_2  :  %MARK%  relat_op  relat_expression  
 index is: 188, term type: to_deduce, before: %NULL%, after: relat_op
TARGET LIST: 
target index: 189  , change_value: relat_op
target index: 191  , change_value: %NULL%
target index: 193  , change_value: %NULL%
target index: 195  , change_value: %NULL%
target index: 197  , change_value: %NULL%

relat_expression_0_opt_2  :  relat_op  %MARK%  relat_expression  
 index is: 189, term type: to_deduce, before: relat_op, after: relat_expression
TARGET LIST: 
target index: 184  , change_value: %NULL%
target index: 190  , change_value: relat_expression

relat_expression_0_opt_2  :  relat_op  relat_expression  %MARK%  
 index is: 190, term type: deduce, before: relat_expression, after: %NULL%
TARGET LIST: 

relat_op  :  %MARK%  '<='  
 index is: 191, term type: shift, before: %NULL%, after: '<='
TARGET LIST: 
target index: 192  , change_value: '<='

relat_op  :  '<='  %MARK%  
 index is: 192, term type: deduce, before: '<=', after: %NULL%
TARGET LIST: 

relat_op  :  %MARK%  '>='  
 index is: 193, term type: shift, before: %NULL%, after: '>='
TARGET LIST: 
target index: 194  , change_value: '>='

relat_op  :  '>='  %MARK%  
 index is: 194, term type: deduce, before: '>=', after: %NULL%
TARGET LIST: 

relat_op  :  %MARK%  '<'  
 index is: 195, term type: shift, before: %NULL%, after: '<'
TARGET LIST: 
target index: 196  , change_value: '<'

relat_op  :  '<'  %MARK%  
 index is: 196, term type: deduce, before: '<', after: %NULL%
TARGET LIST: 

relat_op  :  %MARK%  '>'  
 index is: 197, term type: shift, before: %NULL%, after: '>'
TARGET LIST: 
target index: 198  , change_value: '>'

relat_op  :  '>'  %MARK%  
 index is: 198, term type: deduce, before: '>', after: %NULL%
TARGET LIST: 

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

additive_expression  :  multiplicative_expression  %MARK%  additive_expression_0_opt_2  
 index is: 200, term type: to_deduce, before: multiplicative_expression, after: additive_expression_0_opt_2
TARGET LIST: 
target index: 201  , change_value: additive_expression_0_opt_2
target index: 202  , change_value: %NULL%
target index: 203  , change_value: %NULL%

additive_expression  :  multiplicative_expression  additive_expression_0_opt_2  %MARK%  
 index is: 201, term type: deduce, before: additive_expression_0_opt_2, after: %NULL%
TARGET LIST: 

additive_expression_0_opt_2  :  %MARK%  
 index is: 202, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

additive_expression_0_opt_2  :  %MARK%  add_op  additive_expression  
 index is: 203, term type: to_deduce, before: %NULL%, after: add_op
TARGET LIST: 
target index: 204  , change_value: add_op
target index: 206  , change_value: %NULL%
target index: 208  , change_value: %NULL%

additive_expression_0_opt_2  :  add_op  %MARK%  additive_expression  
 index is: 204, term type: to_deduce, before: add_op, after: additive_expression
TARGET LIST: 
target index: 199  , change_value: %NULL%
target index: 205  , change_value: additive_expression

additive_expression_0_opt_2  :  add_op  additive_expression  %MARK%  
 index is: 205, term type: deduce, before: additive_expression, after: %NULL%
TARGET LIST: 

add_op  :  %MARK%  '-'  
 index is: 206, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 207  , change_value: '-'

add_op  :  '-'  %MARK%  
 index is: 207, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

add_op  :  %MARK%  '+'  
 index is: 208, term type: shift, before: %NULL%, after: '+'
TARGET LIST: 
target index: 209  , change_value: '+'

add_op  :  '+'  %MARK%  
 index is: 209, term type: deduce, before: '+', after: %NULL%
TARGET LIST: 

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

multiplicative_expression  :  unary_expression  %MARK%  multiplicative_expression_0_opt_2  
 index is: 211, term type: to_deduce, before: unary_expression, after: multiplicative_expression_0_opt_2
TARGET LIST: 
target index: 212  , change_value: multiplicative_expression_0_opt_2
target index: 213  , change_value: %NULL%
target index: 214  , change_value: %NULL%

multiplicative_expression  :  unary_expression  multiplicative_expression_0_opt_2  %MARK%  
 index is: 212, term type: deduce, before: multiplicative_expression_0_opt_2, after: %NULL%
TARGET LIST: 

multiplicative_expression_0_opt_2  :  %MARK%  
 index is: 213, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

multiplicative_expression_0_opt_2  :  %MARK%  mul_op  multiplicative_expression  
 index is: 214, term type: to_deduce, before: %NULL%, after: mul_op
TARGET LIST: 
target index: 215  , change_value: mul_op
target index: 217  , change_value: %NULL%
target index: 219  , change_value: %NULL%

multiplicative_expression_0_opt_2  :  mul_op  %MARK%  multiplicative_expression  
 index is: 215, term type: to_deduce, before: mul_op, after: multiplicative_expression
TARGET LIST: 
target index: 210  , change_value: %NULL%
target index: 216  , change_value: multiplicative_expression

multiplicative_expression_0_opt_2  :  mul_op  multiplicative_expression  %MARK%  
 index is: 216, term type: deduce, before: multiplicative_expression, after: %NULL%
TARGET LIST: 

mul_op  :  %MARK%  '/'  
 index is: 217, term type: shift, before: %NULL%, after: '/'
TARGET LIST: 
target index: 218  , change_value: '/'

mul_op  :  '/'  %MARK%  
 index is: 218, term type: deduce, before: '/', after: %NULL%
TARGET LIST: 

mul_op  :  %MARK%  '*'  
 index is: 219, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 220  , change_value: '*'

mul_op  :  '*'  %MARK%  
 index is: 220, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  postfix_expression  %MARK%  
 index is: 222, term type: deduce, before: postfix_expression, after: %NULL%
TARGET LIST: 

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

unary_expression  :  sadd_op  %MARK%  unary_expression  
 index is: 224, term type: to_deduce, before: sadd_op, after: unary_expression
TARGET LIST: 
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%
target index: 225  , change_value: unary_expression

unary_expression  :  sadd_op  unary_expression  %MARK%  
 index is: 225, term type: deduce, before: unary_expression, after: %NULL%
TARGET LIST: 

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  '-'  %MARK%  
 index is: 227, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  '--'  %MARK%  
 index is: 229, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

sadd_op  :  '++'  %MARK%  
 index is: 231, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

postfix_expression  :  primary_expression  %MARK%  postfix_expression_0_rep_2  
 index is: 233, term type: to_deduce, before: primary_expression, after: postfix_expression_0_rep_2
TARGET LIST: 
target index: 234  , change_value: postfix_expression_0_rep_2
target index: 235  , change_value: %NULL%
target index: 236  , change_value: %NULL%

postfix_expression  :  primary_expression  postfix_expression_0_rep_2  %MARK%  
 index is: 234, term type: deduce, before: postfix_expression_0_rep_2, after: %NULL%
TARGET LIST: 

postfix_expression_0_rep_2  :  %MARK%  
 index is: 235, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_expression_0_rep_2  :  %MARK%  postfix_extend_part  postfix_expression_0_rep_2  
 index is: 236, term type: to_deduce, before: %NULL%, after: postfix_extend_part
TARGET LIST: 
target index: 237  , change_value: postfix_extend_part
target index: 239  , change_value: %NULL%
target index: 241  , change_value: %NULL%
target index: 244  , change_value: %NULL%
target index: 248  , change_value: %NULL%

postfix_expression_0_rep_2  :  postfix_extend_part  %MARK%  postfix_expression_0_rep_2  
 index is: 237, term type: to_deduce, before: postfix_extend_part, after: postfix_expression_0_rep_2
TARGET LIST: 
target index: 235  , change_value: %NULL%
target index: 236  , change_value: %NULL%
target index: 238  , change_value: postfix_expression_0_rep_2

postfix_expression_0_rep_2  :  postfix_extend_part  postfix_expression_0_rep_2  %MARK%  
 index is: 238, term type: deduce, before: postfix_expression_0_rep_2, after: %NULL%
TARGET LIST: 

postfix_extend_part  :  %MARK%  post_op  
 index is: 239, term type: to_deduce, before: %NULL%, after: post_op
TARGET LIST: 
target index: 240  , change_value: post_op
target index: 261  , change_value: %NULL%
target index: 263  , change_value: %NULL%

postfix_extend_part  :  post_op  %MARK%  
 index is: 240, term type: deduce, before: post_op, after: %NULL%
TARGET LIST: 

postfix_extend_part  :  %MARK%  '.'  ID  
 index is: 241, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 242  , change_value: '.'

postfix_extend_part  :  '.'  %MARK%  ID  
 index is: 242, term type: shift, before: '.', after: ID
TARGET LIST: 
target index: 243  , change_value: ID

postfix_extend_part  :  '.'  ID  %MARK%  
 index is: 243, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

postfix_extend_part  :  %MARK%  '('  postfix_extend_part_1_opt_2  ')'  
 index is: 244, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 245  , change_value: '('

postfix_extend_part  :  '('  %MARK%  postfix_extend_part_1_opt_2  ')'  
 index is: 245, term type: to_deduce, before: '(', after: postfix_extend_part_1_opt_2
TARGET LIST: 
target index: 246  , change_value: postfix_extend_part_1_opt_2
target index: 252  , change_value: %NULL%
target index: 253  , change_value: %NULL%

postfix_extend_part  :  '('  postfix_extend_part_1_opt_2  %MARK%  ')'  
 index is: 246, term type: shift, before: postfix_extend_part_1_opt_2, after: ')'
TARGET LIST: 
target index: 247  , change_value: ')'

postfix_extend_part  :  '('  postfix_extend_part_1_opt_2  ')'  %MARK%  
 index is: 247, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

postfix_extend_part  :  %MARK%  '['  expression  ']'  
 index is: 248, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 249  , change_value: '['

postfix_extend_part  :  '['  %MARK%  expression  ']'  
 index is: 249, term type: to_deduce, before: '[', after: expression
TARGET LIST: 
target index: 148  , change_value: %NULL%
target index: 250  , change_value: expression

postfix_extend_part  :  '['  expression  %MARK%  ']'  
 index is: 250, term type: shift, before: expression, after: ']'
TARGET LIST: 
target index: 251  , change_value: ']'

postfix_extend_part  :  '['  expression  ']'  %MARK%  
 index is: 251, term type: deduce, before: ']', after: %NULL%
TARGET LIST: 

postfix_extend_part_1_opt_2  :  %MARK%  
 index is: 252, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_extend_part_1_opt_2  :  %MARK%  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 253, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 156  , change_value: %NULL%
target index: 254  , change_value: assignment_expression

postfix_extend_part_1_opt_2  :  assignment_expression  %MARK%  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 254, term type: to_deduce, before: assignment_expression, after: postfix_extend_part_1_opt_2_0_rep_2
TARGET LIST: 
target index: 255  , change_value: postfix_extend_part_1_opt_2_0_rep_2
target index: 256  , change_value: %NULL%
target index: 257  , change_value: %NULL%

postfix_extend_part_1_opt_2  :  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  %MARK%  
 index is: 255, term type: deduce, before: postfix_extend_part_1_opt_2_0_rep_2, after: %NULL%
TARGET LIST: 

postfix_extend_part_1_opt_2_0_rep_2  :  %MARK%  
 index is: 256, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_extend_part_1_opt_2_0_rep_2  :  %MARK%  ','  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 257, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 258  , change_value: ','

postfix_extend_part_1_opt_2_0_rep_2  :  ','  %MARK%  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 258, term type: to_deduce, before: ',', after: assignment_expression
TARGET LIST: 
target index: 156  , change_value: %NULL%
target index: 259  , change_value: assignment_expression

postfix_extend_part_1_opt_2_0_rep_2  :  ','  assignment_expression  %MARK%  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 259, term type: to_deduce, before: assignment_expression, after: postfix_extend_part_1_opt_2_0_rep_2
TARGET LIST: 
target index: 256  , change_value: %NULL%
target index: 257  , change_value: %NULL%
target index: 260  , change_value: postfix_extend_part_1_opt_2_0_rep_2

postfix_extend_part_1_opt_2_0_rep_2  :  ','  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  %MARK%  
 index is: 260, term type: deduce, before: postfix_extend_part_1_opt_2_0_rep_2, after: %NULL%
TARGET LIST: 

post_op  :  %MARK%  '--'  
 index is: 261, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 262  , change_value: '--'

post_op  :  '--'  %MARK%  
 index is: 262, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

post_op  :  %MARK%  '++'  
 index is: 263, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 264  , change_value: '++'

post_op  :  '++'  %MARK%  
 index is: 264, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  '('  %MARK%  expression  ')'  
 index is: 266, term type: to_deduce, before: '(', after: expression
TARGET LIST: 
target index: 148  , change_value: %NULL%
target index: 267  , change_value: expression

primary_expression  :  '('  expression  %MARK%  ')'  
 index is: 267, term type: shift, before: expression, after: ')'
TARGET LIST: 
target index: 268  , change_value: ')'

primary_expression  :  '('  expression  ')'  %MARK%  
 index is: 268, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  NUMBER  %MARK%  
 index is: 270, term type: deduce, before: NUMBER, after: %NULL%
TARGET LIST: 

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

primary_expression  :  ID  %MARK%  
 index is: 272, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

struct_specifier  :  %MARK%  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 273, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 274  , change_value: 'struct'

struct_specifier  :  'struct'  %MARK%  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 274, term type: shift, before: 'struct', after: ID
TARGET LIST: 
target index: 275  , change_value: ID

struct_specifier  :  'struct'  ID  %MARK%  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 275, term type: shift, before: ID, after: '{'
TARGET LIST: 
target index: 276  , change_value: '{'

struct_specifier  :  'struct'  ID  '{'  %MARK%  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 276, term type: to_deduce, before: '{', after: struct_specifier_0_rep_4
TARGET LIST: 
target index: 277  , change_value: struct_specifier_0_rep_4
target index: 284  , change_value: %NULL%
target index: 285  , change_value: %NULL%

struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  %MARK%  '}'  struct_specifier_0_opt_6  ';'  
 index is: 277, term type: shift, before: struct_specifier_0_rep_4, after: '}'
TARGET LIST: 
target index: 278  , change_value: '}'

struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  %MARK%  struct_specifier_0_opt_6  ';'  
 index is: 278, term type: to_deduce, before: '}', after: struct_specifier_0_opt_6
TARGET LIST: 
target index: 279  , change_value: struct_specifier_0_opt_6
target index: 281  , change_value: %NULL%
target index: 282  , change_value: %NULL%

struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  %MARK%  ';'  
 index is: 279, term type: shift, before: struct_specifier_0_opt_6, after: ';'
TARGET LIST: 
target index: 280  , change_value: ';'

struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  %MARK%  
 index is: 280, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

struct_specifier_0_opt_6  :  %MARK%  
 index is: 281, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

struct_specifier_0_opt_6  :  %MARK%  ID  
 index is: 282, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 283  , change_value: ID

struct_specifier_0_opt_6  :  ID  %MARK%  
 index is: 283, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

struct_specifier_0_rep_4  :  %MARK%  
 index is: 284, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

struct_specifier_0_rep_4  :  %MARK%  declaration  struct_specifier_0_rep_4  
 index is: 285, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 67  , change_value: %NULL%
target index: 286  , change_value: declaration

struct_specifier_0_rep_4  :  declaration  %MARK%  struct_specifier_0_rep_4  
 index is: 286, term type: to_deduce, before: declaration, after: struct_specifier_0_rep_4
TARGET LIST: 
target index: 284  , change_value: %NULL%
target index: 285  , change_value: %NULL%
target index: 287  , change_value: struct_specifier_0_rep_4

struct_specifier_0_rep_4  :  declaration  struct_specifier_0_rep_4  %MARK%  
 index is: 287, term type: deduce, before: struct_specifier_0_rep_4, after: %NULL%
TARGET LIST: 

#####
#DFA#
#####
#########
#0  TERM#
#########


##########
#FROM SET#
##########
%start%  :  %MARK%  program  
 index is: 0, term type: to_deduce, before: %NULL%, after: program
TARGET LIST: 
target index: 1  , change_value: program
target index: 2  , change_value: %NULL%

########
#SUBSET#
########
%start%  :  %MARK%  program  
 index is: 0, term type: to_deduce, before: %NULL%, after: program
TARGET LIST: 
target index: 1  , change_value: program
target index: 2  , change_value: %NULL%

program  :  %MARK%  program_0_rep_1  
 index is: 2, term type: to_deduce, before: %NULL%, after: program_0_rep_1
TARGET LIST: 
target index: 3  , change_value: program_0_rep_1
target index: 4  , change_value: %NULL%
target index: 5  , change_value: %NULL%

program_0_rep_1  :  %MARK%  
 index is: 4, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

program_0_rep_1  :  %MARK%  external_declaration  program_0_rep_1  
 index is: 5, term type: to_deduce, before: %NULL%, after: external_declaration
TARGET LIST: 
target index: 6  , change_value: external_declaration
target index: 8  , change_value: %NULL%
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%

external_declaration  :  %MARK%  struct_specifier  
 index is: 8, term type: to_deduce, before: %NULL%, after: struct_specifier
TARGET LIST: 
target index: 9  , change_value: struct_specifier
target index: 273  , change_value: %NULL%

external_declaration  :  %MARK%  declaration  
 index is: 10, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 11  , change_value: declaration
target index: 67  , change_value: %NULL%

external_declaration  :  %MARK%  function_declaration  
 index is: 12, term type: to_deduce, before: %NULL%, after: function_declaration
TARGET LIST: 
target index: 13  , change_value: function_declaration
target index: 14  , change_value: %NULL%

struct_specifier  :  %MARK%  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 273, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 274  , change_value: 'struct'

declaration  :  %MARK%  type_specifier  init_declarator  ';'  
 index is: 67, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 68  , change_value: type_specifier

function_declaration  :  %MARK%  type_specifier  direct_declarator  compound_statement  
 index is: 14, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 15  , change_value: type_specifier
target index: 18  , change_value: %NULL%

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

########
#TO SET#
########
index: 1, target_source: program

index: 2, target_source: program_0_rep_1

index: 3, target_source: external_declaration

index: 5, target_source: struct_specifier

index: 6, target_source: declaration

index: 7, target_source: function_declaration

index: 8, target_source: 'struct'

index: 129, target_source: type_specifier

index: 121, target_source: ID



#########
#1  TERM#
#########


##########
#FROM SET#
##########
%start%  :  program  %MARK%  
 index is: 1, term type: accept, before: program, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
%start%  :  program  %MARK%  
 index is: 1, term type: accept, before: program, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#2  TERM#
#########


##########
#FROM SET#
##########
program  :  program_0_rep_1  %MARK%  
 index is: 3, term type: deduce, before: program_0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
program  :  program_0_rep_1  %MARK%  
 index is: 3, term type: deduce, before: program_0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#3  TERM#
#########


##########
#FROM SET#
##########
program_0_rep_1  :  external_declaration  %MARK%  program_0_rep_1  
 index is: 6, term type: to_deduce, before: external_declaration, after: program_0_rep_1
TARGET LIST: 
target index: 4  , change_value: %NULL%
target index: 5  , change_value: %NULL%
target index: 7  , change_value: program_0_rep_1

########
#SUBSET#
########
program_0_rep_1  :  external_declaration  %MARK%  program_0_rep_1  
 index is: 6, term type: to_deduce, before: external_declaration, after: program_0_rep_1
TARGET LIST: 
target index: 4  , change_value: %NULL%
target index: 5  , change_value: %NULL%
target index: 7  , change_value: program_0_rep_1

program_0_rep_1  :  %MARK%  
 index is: 4, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

program_0_rep_1  :  %MARK%  external_declaration  program_0_rep_1  
 index is: 5, term type: to_deduce, before: %NULL%, after: external_declaration
TARGET LIST: 
target index: 6  , change_value: external_declaration
target index: 8  , change_value: %NULL%
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%

external_declaration  :  %MARK%  struct_specifier  
 index is: 8, term type: to_deduce, before: %NULL%, after: struct_specifier
TARGET LIST: 
target index: 9  , change_value: struct_specifier
target index: 273  , change_value: %NULL%

external_declaration  :  %MARK%  declaration  
 index is: 10, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 11  , change_value: declaration
target index: 67  , change_value: %NULL%

external_declaration  :  %MARK%  function_declaration  
 index is: 12, term type: to_deduce, before: %NULL%, after: function_declaration
TARGET LIST: 
target index: 13  , change_value: function_declaration
target index: 14  , change_value: %NULL%

struct_specifier  :  %MARK%  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 273, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 274  , change_value: 'struct'

declaration  :  %MARK%  type_specifier  init_declarator  ';'  
 index is: 67, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 68  , change_value: type_specifier

function_declaration  :  %MARK%  type_specifier  direct_declarator  compound_statement  
 index is: 14, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 15  , change_value: type_specifier
target index: 18  , change_value: %NULL%

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

########
#TO SET#
########
index: 4, target_source: program_0_rep_1

index: 3, target_source: external_declaration

index: 5, target_source: struct_specifier

index: 6, target_source: declaration

index: 7, target_source: function_declaration

index: 8, target_source: 'struct'

index: 129, target_source: type_specifier

index: 121, target_source: ID



#########
#4  TERM#
#########


##########
#FROM SET#
##########
program_0_rep_1  :  external_declaration  program_0_rep_1  %MARK%  
 index is: 7, term type: deduce, before: program_0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
program_0_rep_1  :  external_declaration  program_0_rep_1  %MARK%  
 index is: 7, term type: deduce, before: program_0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#5  TERM#
#########


##########
#FROM SET#
##########
external_declaration  :  struct_specifier  %MARK%  
 index is: 9, term type: deduce, before: struct_specifier, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
external_declaration  :  struct_specifier  %MARK%  
 index is: 9, term type: deduce, before: struct_specifier, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#6  TERM#
#########


##########
#FROM SET#
##########
external_declaration  :  declaration  %MARK%  
 index is: 11, term type: deduce, before: declaration, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
external_declaration  :  declaration  %MARK%  
 index is: 11, term type: deduce, before: declaration, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#7  TERM#
#########


##########
#FROM SET#
##########
external_declaration  :  function_declaration  %MARK%  
 index is: 13, term type: deduce, before: function_declaration, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
external_declaration  :  function_declaration  %MARK%  
 index is: 13, term type: deduce, before: function_declaration, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#8  TERM#
#########


##########
#FROM SET#
##########
struct_specifier  :  'struct'  %MARK%  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 274, term type: shift, before: 'struct', after: ID
TARGET LIST: 
target index: 275  , change_value: ID

########
#SUBSET#
########
struct_specifier  :  'struct'  %MARK%  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 274, term type: shift, before: 'struct', after: ID
TARGET LIST: 
target index: 275  , change_value: ID

########
#TO SET#
########
index: 9, target_source: ID



#########
#9  TERM#
#########


##########
#FROM SET#
##########
struct_specifier  :  'struct'  ID  %MARK%  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 275, term type: shift, before: ID, after: '{'
TARGET LIST: 
target index: 276  , change_value: '{'

########
#SUBSET#
########
struct_specifier  :  'struct'  ID  %MARK%  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 275, term type: shift, before: ID, after: '{'
TARGET LIST: 
target index: 276  , change_value: '{'

########
#TO SET#
########
index: 10, target_source: '{'



##########
#10  TERM#
##########


##########
#FROM SET#
##########
struct_specifier  :  'struct'  ID  '{'  %MARK%  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 276, term type: to_deduce, before: '{', after: struct_specifier_0_rep_4
TARGET LIST: 
target index: 277  , change_value: struct_specifier_0_rep_4
target index: 284  , change_value: %NULL%
target index: 285  , change_value: %NULL%

########
#SUBSET#
########
struct_specifier  :  'struct'  ID  '{'  %MARK%  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  
 index is: 276, term type: to_deduce, before: '{', after: struct_specifier_0_rep_4
TARGET LIST: 
target index: 277  , change_value: struct_specifier_0_rep_4
target index: 284  , change_value: %NULL%
target index: 285  , change_value: %NULL%

struct_specifier_0_rep_4  :  %MARK%  
 index is: 284, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

struct_specifier_0_rep_4  :  %MARK%  declaration  struct_specifier_0_rep_4  
 index is: 285, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 67  , change_value: %NULL%
target index: 286  , change_value: declaration

declaration  :  %MARK%  type_specifier  init_declarator  ';'  
 index is: 67, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 68  , change_value: type_specifier

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

########
#TO SET#
########
index: 11, target_source: struct_specifier_0_rep_4

index: 16, target_source: declaration

index: 18, target_source: type_specifier

index: 121, target_source: ID



##########
#11  TERM#
##########


##########
#FROM SET#
##########
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  %MARK%  '}'  struct_specifier_0_opt_6  ';'  
 index is: 277, term type: shift, before: struct_specifier_0_rep_4, after: '}'
TARGET LIST: 
target index: 278  , change_value: '}'

########
#SUBSET#
########
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  %MARK%  '}'  struct_specifier_0_opt_6  ';'  
 index is: 277, term type: shift, before: struct_specifier_0_rep_4, after: '}'
TARGET LIST: 
target index: 278  , change_value: '}'

########
#TO SET#
########
index: 12, target_source: '}'



##########
#12  TERM#
##########


##########
#FROM SET#
##########
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  %MARK%  struct_specifier_0_opt_6  ';'  
 index is: 278, term type: to_deduce, before: '}', after: struct_specifier_0_opt_6
TARGET LIST: 
target index: 279  , change_value: struct_specifier_0_opt_6
target index: 281  , change_value: %NULL%
target index: 282  , change_value: %NULL%

########
#SUBSET#
########
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  %MARK%  struct_specifier_0_opt_6  ';'  
 index is: 278, term type: to_deduce, before: '}', after: struct_specifier_0_opt_6
TARGET LIST: 
target index: 279  , change_value: struct_specifier_0_opt_6
target index: 281  , change_value: %NULL%
target index: 282  , change_value: %NULL%

struct_specifier_0_opt_6  :  %MARK%  
 index is: 281, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

struct_specifier_0_opt_6  :  %MARK%  ID  
 index is: 282, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 283  , change_value: ID

########
#TO SET#
########
index: 13, target_source: struct_specifier_0_opt_6

index: 15, target_source: ID



##########
#13  TERM#
##########


##########
#FROM SET#
##########
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  %MARK%  ';'  
 index is: 279, term type: shift, before: struct_specifier_0_opt_6, after: ';'
TARGET LIST: 
target index: 280  , change_value: ';'

########
#SUBSET#
########
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  %MARK%  ';'  
 index is: 279, term type: shift, before: struct_specifier_0_opt_6, after: ';'
TARGET LIST: 
target index: 280  , change_value: ';'

########
#TO SET#
########
index: 14, target_source: ';'



##########
#14  TERM#
##########


##########
#FROM SET#
##########
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  %MARK%  
 index is: 280, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
struct_specifier  :  'struct'  ID  '{'  struct_specifier_0_rep_4  '}'  struct_specifier_0_opt_6  ';'  %MARK%  
 index is: 280, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#15  TERM#
##########


##########
#FROM SET#
##########
struct_specifier_0_opt_6  :  ID  %MARK%  
 index is: 283, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
struct_specifier_0_opt_6  :  ID  %MARK%  
 index is: 283, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#16  TERM#
##########


##########
#FROM SET#
##########
struct_specifier_0_rep_4  :  declaration  %MARK%  struct_specifier_0_rep_4  
 index is: 286, term type: to_deduce, before: declaration, after: struct_specifier_0_rep_4
TARGET LIST: 
target index: 284  , change_value: %NULL%
target index: 285  , change_value: %NULL%
target index: 287  , change_value: struct_specifier_0_rep_4

########
#SUBSET#
########
struct_specifier_0_rep_4  :  declaration  %MARK%  struct_specifier_0_rep_4  
 index is: 286, term type: to_deduce, before: declaration, after: struct_specifier_0_rep_4
TARGET LIST: 
target index: 284  , change_value: %NULL%
target index: 285  , change_value: %NULL%
target index: 287  , change_value: struct_specifier_0_rep_4

struct_specifier_0_rep_4  :  %MARK%  
 index is: 284, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

struct_specifier_0_rep_4  :  %MARK%  declaration  struct_specifier_0_rep_4  
 index is: 285, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 67  , change_value: %NULL%
target index: 286  , change_value: declaration

declaration  :  %MARK%  type_specifier  init_declarator  ';'  
 index is: 67, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 68  , change_value: type_specifier

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

########
#TO SET#
########
index: 17, target_source: struct_specifier_0_rep_4

index: 16, target_source: declaration

index: 18, target_source: type_specifier

index: 121, target_source: ID



##########
#17  TERM#
##########


##########
#FROM SET#
##########
struct_specifier_0_rep_4  :  declaration  struct_specifier_0_rep_4  %MARK%  
 index is: 287, term type: deduce, before: struct_specifier_0_rep_4, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
struct_specifier_0_rep_4  :  declaration  struct_specifier_0_rep_4  %MARK%  
 index is: 287, term type: deduce, before: struct_specifier_0_rep_4, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#18  TERM#
##########


##########
#FROM SET#
##########
declaration  :  type_specifier  %MARK%  init_declarator  ';'  
 index is: 68, term type: to_deduce, before: type_specifier, after: init_declarator
TARGET LIST: 
target index: 69  , change_value: init_declarator
target index: 71  , change_value: %NULL%

########
#SUBSET#
########
declaration  :  type_specifier  %MARK%  init_declarator  ';'  
 index is: 68, term type: to_deduce, before: type_specifier, after: init_declarator
TARGET LIST: 
target index: 69  , change_value: init_declarator
target index: 71  , change_value: %NULL%

init_declarator  :  %MARK%  direct_declarator  init_declarator_0_opt_2  
 index is: 71, term type: to_deduce, before: %NULL%, after: direct_declarator
TARGET LIST: 
target index: 20  , change_value: %NULL%
target index: 72  , change_value: direct_declarator

direct_declarator  :  %MARK%  ID  extend_part  
 index is: 20, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 21  , change_value: ID

########
#TO SET#
########
index: 19, target_source: init_declarator

index: 21, target_source: direct_declarator

index: 107, target_source: ID



##########
#19  TERM#
##########


##########
#FROM SET#
##########
declaration  :  type_specifier  init_declarator  %MARK%  ';'  
 index is: 69, term type: shift, before: init_declarator, after: ';'
TARGET LIST: 
target index: 70  , change_value: ';'

########
#SUBSET#
########
declaration  :  type_specifier  init_declarator  %MARK%  ';'  
 index is: 69, term type: shift, before: init_declarator, after: ';'
TARGET LIST: 
target index: 70  , change_value: ';'

########
#TO SET#
########
index: 20, target_source: ';'



##########
#20  TERM#
##########


##########
#FROM SET#
##########
declaration  :  type_specifier  init_declarator  ';'  %MARK%  
 index is: 70, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  type_specifier  init_declarator  ';'  %MARK%  
 index is: 70, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#21  TERM#
##########


##########
#FROM SET#
##########
init_declarator  :  direct_declarator  %MARK%  init_declarator_0_opt_2  
 index is: 72, term type: to_deduce, before: direct_declarator, after: init_declarator_0_opt_2
TARGET LIST: 
target index: 73  , change_value: init_declarator_0_opt_2
target index: 74  , change_value: %NULL%
target index: 75  , change_value: %NULL%

########
#SUBSET#
########
init_declarator  :  direct_declarator  %MARK%  init_declarator_0_opt_2  
 index is: 72, term type: to_deduce, before: direct_declarator, after: init_declarator_0_opt_2
TARGET LIST: 
target index: 73  , change_value: init_declarator_0_opt_2
target index: 74  , change_value: %NULL%
target index: 75  , change_value: %NULL%

init_declarator_0_opt_2  :  %MARK%  
 index is: 74, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

init_declarator_0_opt_2  :  %MARK%  '='  initializer  
 index is: 75, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 76  , change_value: '='

########
#TO SET#
########
index: 22, target_source: init_declarator_0_opt_2

index: 23, target_source: '='



##########
#22  TERM#
##########


##########
#FROM SET#
##########
init_declarator  :  direct_declarator  init_declarator_0_opt_2  %MARK%  
 index is: 73, term type: deduce, before: init_declarator_0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
init_declarator  :  direct_declarator  init_declarator_0_opt_2  %MARK%  
 index is: 73, term type: deduce, before: init_declarator_0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#23  TERM#
##########


##########
#FROM SET#
##########
init_declarator_0_opt_2  :  '='  %MARK%  initializer  
 index is: 76, term type: to_deduce, before: '=', after: initializer
TARGET LIST: 
target index: 77  , change_value: initializer
target index: 78  , change_value: %NULL%
target index: 83  , change_value: %NULL%

########
#SUBSET#
########
init_declarator_0_opt_2  :  '='  %MARK%  initializer  
 index is: 76, term type: to_deduce, before: '=', after: initializer
TARGET LIST: 
target index: 77  , change_value: initializer
target index: 78  , change_value: %NULL%
target index: 83  , change_value: %NULL%

initializer  :  %MARK%  '{'  initializer_list  initializer_1_opt_3  '}'  
 index is: 78, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 79  , change_value: '{'

initializer  :  %MARK%  assignment_expression  
 index is: 83, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 84  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 24, target_source: initializer

index: 25, target_source: '{'

index: 35, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#24  TERM#
##########


##########
#FROM SET#
##########
init_declarator_0_opt_2  :  '='  initializer  %MARK%  
 index is: 77, term type: deduce, before: initializer, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
init_declarator_0_opt_2  :  '='  initializer  %MARK%  
 index is: 77, term type: deduce, before: initializer, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#25  TERM#
##########


##########
#FROM SET#
##########
initializer  :  '{'  %MARK%  initializer_list  initializer_1_opt_3  '}'  
 index is: 79, term type: to_deduce, before: '{', after: initializer_list
TARGET LIST: 
target index: 80  , change_value: initializer_list
target index: 88  , change_value: %NULL%

########
#SUBSET#
########
initializer  :  '{'  %MARK%  initializer_list  initializer_1_opt_3  '}'  
 index is: 79, term type: to_deduce, before: '{', after: initializer_list
TARGET LIST: 
target index: 80  , change_value: initializer_list
target index: 88  , change_value: %NULL%

initializer_list  :  %MARK%  initializer  initializer_list_0_rep_2  
 index is: 88, term type: to_deduce, before: %NULL%, after: initializer
TARGET LIST: 
target index: 78  , change_value: %NULL%
target index: 83  , change_value: %NULL%
target index: 89  , change_value: initializer

initializer  :  %MARK%  '{'  initializer_list  initializer_1_opt_3  '}'  
 index is: 78, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 79  , change_value: '{'

initializer  :  %MARK%  assignment_expression  
 index is: 83, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 84  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 26, target_source: initializer_list

index: 30, target_source: initializer

index: 25, target_source: '{'

index: 35, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#26  TERM#
##########


##########
#FROM SET#
##########
initializer  :  '{'  initializer_list  %MARK%  initializer_1_opt_3  '}'  
 index is: 80, term type: to_deduce, before: initializer_list, after: initializer_1_opt_3
TARGET LIST: 
target index: 81  , change_value: initializer_1_opt_3
target index: 85  , change_value: %NULL%
target index: 86  , change_value: %NULL%

########
#SUBSET#
########
initializer  :  '{'  initializer_list  %MARK%  initializer_1_opt_3  '}'  
 index is: 80, term type: to_deduce, before: initializer_list, after: initializer_1_opt_3
TARGET LIST: 
target index: 81  , change_value: initializer_1_opt_3
target index: 85  , change_value: %NULL%
target index: 86  , change_value: %NULL%

initializer_1_opt_3  :  %MARK%  
 index is: 85, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

initializer_1_opt_3  :  %MARK%  ','  
 index is: 86, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 87  , change_value: ','

########
#TO SET#
########
index: 27, target_source: initializer_1_opt_3

index: 29, target_source: ','



##########
#27  TERM#
##########


##########
#FROM SET#
##########
initializer  :  '{'  initializer_list  initializer_1_opt_3  %MARK%  '}'  
 index is: 81, term type: shift, before: initializer_1_opt_3, after: '}'
TARGET LIST: 
target index: 82  , change_value: '}'

########
#SUBSET#
########
initializer  :  '{'  initializer_list  initializer_1_opt_3  %MARK%  '}'  
 index is: 81, term type: shift, before: initializer_1_opt_3, after: '}'
TARGET LIST: 
target index: 82  , change_value: '}'

########
#TO SET#
########
index: 28, target_source: '}'



##########
#28  TERM#
##########


##########
#FROM SET#
##########
initializer  :  '{'  initializer_list  initializer_1_opt_3  '}'  %MARK%  
 index is: 82, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
initializer  :  '{'  initializer_list  initializer_1_opt_3  '}'  %MARK%  
 index is: 82, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#29  TERM#
##########


##########
#FROM SET#
##########
initializer_1_opt_3  :  ','  %MARK%  
 index is: 87, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
initializer_1_opt_3  :  ','  %MARK%  
 index is: 87, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#30  TERM#
##########


##########
#FROM SET#
##########
initializer_list  :  initializer  %MARK%  initializer_list_0_rep_2  
 index is: 89, term type: to_deduce, before: initializer, after: initializer_list_0_rep_2
TARGET LIST: 
target index: 90  , change_value: initializer_list_0_rep_2
target index: 91  , change_value: %NULL%
target index: 92  , change_value: %NULL%

########
#SUBSET#
########
initializer_list  :  initializer  %MARK%  initializer_list_0_rep_2  
 index is: 89, term type: to_deduce, before: initializer, after: initializer_list_0_rep_2
TARGET LIST: 
target index: 90  , change_value: initializer_list_0_rep_2
target index: 91  , change_value: %NULL%
target index: 92  , change_value: %NULL%

initializer_list_0_rep_2  :  %MARK%  
 index is: 91, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

initializer_list_0_rep_2  :  %MARK%  ','  initializer  initializer_list_0_rep_2  
 index is: 92, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 93  , change_value: ','

########
#TO SET#
########
index: 31, target_source: initializer_list_0_rep_2

index: 32, target_source: ','



##########
#31  TERM#
##########


##########
#FROM SET#
##########
initializer_list  :  initializer  initializer_list_0_rep_2  %MARK%  
 index is: 90, term type: deduce, before: initializer_list_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
initializer_list  :  initializer  initializer_list_0_rep_2  %MARK%  
 index is: 90, term type: deduce, before: initializer_list_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#32  TERM#
##########


##########
#FROM SET#
##########
initializer_list_0_rep_2  :  ','  %MARK%  initializer  initializer_list_0_rep_2  
 index is: 93, term type: to_deduce, before: ',', after: initializer
TARGET LIST: 
target index: 78  , change_value: %NULL%
target index: 83  , change_value: %NULL%
target index: 94  , change_value: initializer

########
#SUBSET#
########
initializer_list_0_rep_2  :  ','  %MARK%  initializer  initializer_list_0_rep_2  
 index is: 93, term type: to_deduce, before: ',', after: initializer
TARGET LIST: 
target index: 78  , change_value: %NULL%
target index: 83  , change_value: %NULL%
target index: 94  , change_value: initializer

initializer  :  %MARK%  '{'  initializer_list  initializer_1_opt_3  '}'  
 index is: 78, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 79  , change_value: '{'

initializer  :  %MARK%  assignment_expression  
 index is: 83, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 84  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 33, target_source: initializer

index: 25, target_source: '{'

index: 35, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#33  TERM#
##########


##########
#FROM SET#
##########
initializer_list_0_rep_2  :  ','  initializer  %MARK%  initializer_list_0_rep_2  
 index is: 94, term type: to_deduce, before: initializer, after: initializer_list_0_rep_2
TARGET LIST: 
target index: 91  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 95  , change_value: initializer_list_0_rep_2

########
#SUBSET#
########
initializer_list_0_rep_2  :  ','  initializer  %MARK%  initializer_list_0_rep_2  
 index is: 94, term type: to_deduce, before: initializer, after: initializer_list_0_rep_2
TARGET LIST: 
target index: 91  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 95  , change_value: initializer_list_0_rep_2

initializer_list_0_rep_2  :  %MARK%  
 index is: 91, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

initializer_list_0_rep_2  :  %MARK%  ','  initializer  initializer_list_0_rep_2  
 index is: 92, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 93  , change_value: ','

########
#TO SET#
########
index: 34, target_source: initializer_list_0_rep_2

index: 32, target_source: ','



##########
#34  TERM#
##########


##########
#FROM SET#
##########
initializer_list_0_rep_2  :  ','  initializer  initializer_list_0_rep_2  %MARK%  
 index is: 95, term type: deduce, before: initializer_list_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
initializer_list_0_rep_2  :  ','  initializer  initializer_list_0_rep_2  %MARK%  
 index is: 95, term type: deduce, before: initializer_list_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#35  TERM#
##########


##########
#FROM SET#
##########
initializer  :  assignment_expression  %MARK%  
 index is: 84, term type: deduce, before: assignment_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
initializer  :  assignment_expression  %MARK%  
 index is: 84, term type: deduce, before: assignment_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#36  TERM#
##########


##########
#FROM SET#
##########
assignment_expression  :  equality_expression  %MARK%  assignment_expression_0_opt_2  
 index is: 157, term type: to_deduce, before: equality_expression, after: assignment_expression_0_opt_2
TARGET LIST: 
target index: 158  , change_value: assignment_expression_0_opt_2
target index: 159  , change_value: %NULL%
target index: 160  , change_value: %NULL%

########
#SUBSET#
########
assignment_expression  :  equality_expression  %MARK%  assignment_expression_0_opt_2  
 index is: 157, term type: to_deduce, before: equality_expression, after: assignment_expression_0_opt_2
TARGET LIST: 
target index: 158  , change_value: assignment_expression_0_opt_2
target index: 159  , change_value: %NULL%
target index: 160  , change_value: %NULL%

assignment_expression_0_opt_2  :  %MARK%  
 index is: 159, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

assignment_expression_0_opt_2  :  %MARK%  assign_op  assignment_expression  
 index is: 160, term type: to_deduce, before: %NULL%, after: assign_op
TARGET LIST: 
target index: 161  , change_value: assign_op
target index: 163  , change_value: %NULL%
target index: 165  , change_value: %NULL%
target index: 167  , change_value: %NULL%
target index: 169  , change_value: %NULL%
target index: 171  , change_value: %NULL%

assign_op  :  %MARK%  '/='  
 index is: 163, term type: shift, before: %NULL%, after: '/='
TARGET LIST: 
target index: 164  , change_value: '/='

assign_op  :  %MARK%  '*='  
 index is: 165, term type: shift, before: %NULL%, after: '*='
TARGET LIST: 
target index: 166  , change_value: '*='

assign_op  :  %MARK%  '-='  
 index is: 167, term type: shift, before: %NULL%, after: '-='
TARGET LIST: 
target index: 168  , change_value: '-='

assign_op  :  %MARK%  '+='  
 index is: 169, term type: shift, before: %NULL%, after: '+='
TARGET LIST: 
target index: 170  , change_value: '+='

assign_op  :  %MARK%  '='  
 index is: 171, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 172  , change_value: '='

########
#TO SET#
########
index: 37, target_source: assignment_expression_0_opt_2

index: 38, target_source: assign_op

index: 102, target_source: '/='

index: 103, target_source: '*='

index: 104, target_source: '-='

index: 105, target_source: '+='

index: 106, target_source: '='



##########
#37  TERM#
##########


##########
#FROM SET#
##########
assignment_expression  :  equality_expression  assignment_expression_0_opt_2  %MARK%  
 index is: 158, term type: deduce, before: assignment_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
assignment_expression  :  equality_expression  assignment_expression_0_opt_2  %MARK%  
 index is: 158, term type: deduce, before: assignment_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#38  TERM#
##########


##########
#FROM SET#
##########
assignment_expression_0_opt_2  :  assign_op  %MARK%  assignment_expression  
 index is: 161, term type: to_deduce, before: assign_op, after: assignment_expression
TARGET LIST: 
target index: 156  , change_value: %NULL%
target index: 162  , change_value: assignment_expression

########
#SUBSET#
########
assignment_expression_0_opt_2  :  assign_op  %MARK%  assignment_expression  
 index is: 161, term type: to_deduce, before: assign_op, after: assignment_expression
TARGET LIST: 
target index: 156  , change_value: %NULL%
target index: 162  , change_value: assignment_expression

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 39, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#39  TERM#
##########


##########
#FROM SET#
##########
assignment_expression_0_opt_2  :  assign_op  assignment_expression  %MARK%  
 index is: 162, term type: deduce, before: assignment_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
assignment_expression_0_opt_2  :  assign_op  assignment_expression  %MARK%  
 index is: 162, term type: deduce, before: assignment_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#40  TERM#
##########


##########
#FROM SET#
##########
equality_expression  :  relat_expression  %MARK%  equality_expression_0_opt_2  
 index is: 174, term type: to_deduce, before: relat_expression, after: equality_expression_0_opt_2
TARGET LIST: 
target index: 175  , change_value: equality_expression_0_opt_2
target index: 176  , change_value: %NULL%
target index: 177  , change_value: %NULL%

########
#SUBSET#
########
equality_expression  :  relat_expression  %MARK%  equality_expression_0_opt_2  
 index is: 174, term type: to_deduce, before: relat_expression, after: equality_expression_0_opt_2
TARGET LIST: 
target index: 175  , change_value: equality_expression_0_opt_2
target index: 176  , change_value: %NULL%
target index: 177  , change_value: %NULL%

equality_expression_0_opt_2  :  %MARK%  
 index is: 176, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

equality_expression_0_opt_2  :  %MARK%  equal_op  equality_expression  
 index is: 177, term type: to_deduce, before: %NULL%, after: equal_op
TARGET LIST: 
target index: 178  , change_value: equal_op
target index: 180  , change_value: %NULL%
target index: 182  , change_value: %NULL%

equal_op  :  %MARK%  '!='  
 index is: 180, term type: shift, before: %NULL%, after: '!='
TARGET LIST: 
target index: 181  , change_value: '!='

equal_op  :  %MARK%  '=='  
 index is: 182, term type: shift, before: %NULL%, after: '=='
TARGET LIST: 
target index: 183  , change_value: '=='

########
#TO SET#
########
index: 41, target_source: equality_expression_0_opt_2

index: 42, target_source: equal_op

index: 100, target_source: '!='

index: 101, target_source: '=='



##########
#41  TERM#
##########


##########
#FROM SET#
##########
equality_expression  :  relat_expression  equality_expression_0_opt_2  %MARK%  
 index is: 175, term type: deduce, before: equality_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equality_expression  :  relat_expression  equality_expression_0_opt_2  %MARK%  
 index is: 175, term type: deduce, before: equality_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#42  TERM#
##########


##########
#FROM SET#
##########
equality_expression_0_opt_2  :  equal_op  %MARK%  equality_expression  
 index is: 178, term type: to_deduce, before: equal_op, after: equality_expression
TARGET LIST: 
target index: 173  , change_value: %NULL%
target index: 179  , change_value: equality_expression

########
#SUBSET#
########
equality_expression_0_opt_2  :  equal_op  %MARK%  equality_expression  
 index is: 178, term type: to_deduce, before: equal_op, after: equality_expression
TARGET LIST: 
target index: 173  , change_value: %NULL%
target index: 179  , change_value: equality_expression

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 43, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#43  TERM#
##########


##########
#FROM SET#
##########
equality_expression_0_opt_2  :  equal_op  equality_expression  %MARK%  
 index is: 179, term type: deduce, before: equality_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equality_expression_0_opt_2  :  equal_op  equality_expression  %MARK%  
 index is: 179, term type: deduce, before: equality_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#44  TERM#
##########


##########
#FROM SET#
##########
relat_expression  :  additive_expression  %MARK%  relat_expression_0_opt_2  
 index is: 185, term type: to_deduce, before: additive_expression, after: relat_expression_0_opt_2
TARGET LIST: 
target index: 186  , change_value: relat_expression_0_opt_2
target index: 187  , change_value: %NULL%
target index: 188  , change_value: %NULL%

########
#SUBSET#
########
relat_expression  :  additive_expression  %MARK%  relat_expression_0_opt_2  
 index is: 185, term type: to_deduce, before: additive_expression, after: relat_expression_0_opt_2
TARGET LIST: 
target index: 186  , change_value: relat_expression_0_opt_2
target index: 187  , change_value: %NULL%
target index: 188  , change_value: %NULL%

relat_expression_0_opt_2  :  %MARK%  
 index is: 187, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

relat_expression_0_opt_2  :  %MARK%  relat_op  relat_expression  
 index is: 188, term type: to_deduce, before: %NULL%, after: relat_op
TARGET LIST: 
target index: 189  , change_value: relat_op
target index: 191  , change_value: %NULL%
target index: 193  , change_value: %NULL%
target index: 195  , change_value: %NULL%
target index: 197  , change_value: %NULL%

relat_op  :  %MARK%  '<='  
 index is: 191, term type: shift, before: %NULL%, after: '<='
TARGET LIST: 
target index: 192  , change_value: '<='

relat_op  :  %MARK%  '>='  
 index is: 193, term type: shift, before: %NULL%, after: '>='
TARGET LIST: 
target index: 194  , change_value: '>='

relat_op  :  %MARK%  '<'  
 index is: 195, term type: shift, before: %NULL%, after: '<'
TARGET LIST: 
target index: 196  , change_value: '<'

relat_op  :  %MARK%  '>'  
 index is: 197, term type: shift, before: %NULL%, after: '>'
TARGET LIST: 
target index: 198  , change_value: '>'

########
#TO SET#
########
index: 45, target_source: relat_expression_0_opt_2

index: 46, target_source: relat_op

index: 96, target_source: '<='

index: 97, target_source: '>='

index: 98, target_source: '<'

index: 99, target_source: '>'



##########
#45  TERM#
##########


##########
#FROM SET#
##########
relat_expression  :  additive_expression  relat_expression_0_opt_2  %MARK%  
 index is: 186, term type: deduce, before: relat_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_expression  :  additive_expression  relat_expression_0_opt_2  %MARK%  
 index is: 186, term type: deduce, before: relat_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#46  TERM#
##########


##########
#FROM SET#
##########
relat_expression_0_opt_2  :  relat_op  %MARK%  relat_expression  
 index is: 189, term type: to_deduce, before: relat_op, after: relat_expression
TARGET LIST: 
target index: 184  , change_value: %NULL%
target index: 190  , change_value: relat_expression

########
#SUBSET#
########
relat_expression_0_opt_2  :  relat_op  %MARK%  relat_expression  
 index is: 189, term type: to_deduce, before: relat_op, after: relat_expression
TARGET LIST: 
target index: 184  , change_value: %NULL%
target index: 190  , change_value: relat_expression

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 47, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#47  TERM#
##########


##########
#FROM SET#
##########
relat_expression_0_opt_2  :  relat_op  relat_expression  %MARK%  
 index is: 190, term type: deduce, before: relat_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_expression_0_opt_2  :  relat_op  relat_expression  %MARK%  
 index is: 190, term type: deduce, before: relat_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#48  TERM#
##########


##########
#FROM SET#
##########
additive_expression  :  multiplicative_expression  %MARK%  additive_expression_0_opt_2  
 index is: 200, term type: to_deduce, before: multiplicative_expression, after: additive_expression_0_opt_2
TARGET LIST: 
target index: 201  , change_value: additive_expression_0_opt_2
target index: 202  , change_value: %NULL%
target index: 203  , change_value: %NULL%

########
#SUBSET#
########
additive_expression  :  multiplicative_expression  %MARK%  additive_expression_0_opt_2  
 index is: 200, term type: to_deduce, before: multiplicative_expression, after: additive_expression_0_opt_2
TARGET LIST: 
target index: 201  , change_value: additive_expression_0_opt_2
target index: 202  , change_value: %NULL%
target index: 203  , change_value: %NULL%

additive_expression_0_opt_2  :  %MARK%  
 index is: 202, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

additive_expression_0_opt_2  :  %MARK%  add_op  additive_expression  
 index is: 203, term type: to_deduce, before: %NULL%, after: add_op
TARGET LIST: 
target index: 204  , change_value: add_op
target index: 206  , change_value: %NULL%
target index: 208  , change_value: %NULL%

add_op  :  %MARK%  '-'  
 index is: 206, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 207  , change_value: '-'

add_op  :  %MARK%  '+'  
 index is: 208, term type: shift, before: %NULL%, after: '+'
TARGET LIST: 
target index: 209  , change_value: '+'

########
#TO SET#
########
index: 49, target_source: additive_expression_0_opt_2

index: 50, target_source: add_op

index: 94, target_source: '-'

index: 95, target_source: '+'



##########
#49  TERM#
##########


##########
#FROM SET#
##########
additive_expression  :  multiplicative_expression  additive_expression_0_opt_2  %MARK%  
 index is: 201, term type: deduce, before: additive_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
additive_expression  :  multiplicative_expression  additive_expression_0_opt_2  %MARK%  
 index is: 201, term type: deduce, before: additive_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#50  TERM#
##########


##########
#FROM SET#
##########
additive_expression_0_opt_2  :  add_op  %MARK%  additive_expression  
 index is: 204, term type: to_deduce, before: add_op, after: additive_expression
TARGET LIST: 
target index: 199  , change_value: %NULL%
target index: 205  , change_value: additive_expression

########
#SUBSET#
########
additive_expression_0_opt_2  :  add_op  %MARK%  additive_expression  
 index is: 204, term type: to_deduce, before: add_op, after: additive_expression
TARGET LIST: 
target index: 199  , change_value: %NULL%
target index: 205  , change_value: additive_expression

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 51, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#51  TERM#
##########


##########
#FROM SET#
##########
additive_expression_0_opt_2  :  add_op  additive_expression  %MARK%  
 index is: 205, term type: deduce, before: additive_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
additive_expression_0_opt_2  :  add_op  additive_expression  %MARK%  
 index is: 205, term type: deduce, before: additive_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#52  TERM#
##########


##########
#FROM SET#
##########
multiplicative_expression  :  unary_expression  %MARK%  multiplicative_expression_0_opt_2  
 index is: 211, term type: to_deduce, before: unary_expression, after: multiplicative_expression_0_opt_2
TARGET LIST: 
target index: 212  , change_value: multiplicative_expression_0_opt_2
target index: 213  , change_value: %NULL%
target index: 214  , change_value: %NULL%

########
#SUBSET#
########
multiplicative_expression  :  unary_expression  %MARK%  multiplicative_expression_0_opt_2  
 index is: 211, term type: to_deduce, before: unary_expression, after: multiplicative_expression_0_opt_2
TARGET LIST: 
target index: 212  , change_value: multiplicative_expression_0_opt_2
target index: 213  , change_value: %NULL%
target index: 214  , change_value: %NULL%

multiplicative_expression_0_opt_2  :  %MARK%  
 index is: 213, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

multiplicative_expression_0_opt_2  :  %MARK%  mul_op  multiplicative_expression  
 index is: 214, term type: to_deduce, before: %NULL%, after: mul_op
TARGET LIST: 
target index: 215  , change_value: mul_op
target index: 217  , change_value: %NULL%
target index: 219  , change_value: %NULL%

mul_op  :  %MARK%  '/'  
 index is: 217, term type: shift, before: %NULL%, after: '/'
TARGET LIST: 
target index: 218  , change_value: '/'

mul_op  :  %MARK%  '*'  
 index is: 219, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 220  , change_value: '*'

########
#TO SET#
########
index: 53, target_source: multiplicative_expression_0_opt_2

index: 54, target_source: mul_op

index: 92, target_source: '/'

index: 93, target_source: '*'



##########
#53  TERM#
##########


##########
#FROM SET#
##########
multiplicative_expression  :  unary_expression  multiplicative_expression_0_opt_2  %MARK%  
 index is: 212, term type: deduce, before: multiplicative_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
multiplicative_expression  :  unary_expression  multiplicative_expression_0_opt_2  %MARK%  
 index is: 212, term type: deduce, before: multiplicative_expression_0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#54  TERM#
##########


##########
#FROM SET#
##########
multiplicative_expression_0_opt_2  :  mul_op  %MARK%  multiplicative_expression  
 index is: 215, term type: to_deduce, before: mul_op, after: multiplicative_expression
TARGET LIST: 
target index: 210  , change_value: %NULL%
target index: 216  , change_value: multiplicative_expression

########
#SUBSET#
########
multiplicative_expression_0_opt_2  :  mul_op  %MARK%  multiplicative_expression  
 index is: 215, term type: to_deduce, before: mul_op, after: multiplicative_expression
TARGET LIST: 
target index: 210  , change_value: %NULL%
target index: 216  , change_value: multiplicative_expression

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 55, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#55  TERM#
##########


##########
#FROM SET#
##########
multiplicative_expression_0_opt_2  :  mul_op  multiplicative_expression  %MARK%  
 index is: 216, term type: deduce, before: multiplicative_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
multiplicative_expression_0_opt_2  :  mul_op  multiplicative_expression  %MARK%  
 index is: 216, term type: deduce, before: multiplicative_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#56  TERM#
##########


##########
#FROM SET#
##########
unary_expression  :  postfix_expression  %MARK%  
 index is: 222, term type: deduce, before: postfix_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_expression  :  postfix_expression  %MARK%  
 index is: 222, term type: deduce, before: postfix_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#57  TERM#
##########


##########
#FROM SET#
##########
unary_expression  :  sadd_op  %MARK%  unary_expression  
 index is: 224, term type: to_deduce, before: sadd_op, after: unary_expression
TARGET LIST: 
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%
target index: 225  , change_value: unary_expression

########
#SUBSET#
########
unary_expression  :  sadd_op  %MARK%  unary_expression  
 index is: 224, term type: to_deduce, before: sadd_op, after: unary_expression
TARGET LIST: 
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%
target index: 225  , change_value: unary_expression

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 58, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#58  TERM#
##########


##########
#FROM SET#
##########
unary_expression  :  sadd_op  unary_expression  %MARK%  
 index is: 225, term type: deduce, before: unary_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_expression  :  sadd_op  unary_expression  %MARK%  
 index is: 225, term type: deduce, before: unary_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#59  TERM#
##########


##########
#FROM SET#
##########
postfix_expression  :  primary_expression  %MARK%  postfix_expression_0_rep_2  
 index is: 233, term type: to_deduce, before: primary_expression, after: postfix_expression_0_rep_2
TARGET LIST: 
target index: 234  , change_value: postfix_expression_0_rep_2
target index: 235  , change_value: %NULL%
target index: 236  , change_value: %NULL%

########
#SUBSET#
########
postfix_expression  :  primary_expression  %MARK%  postfix_expression_0_rep_2  
 index is: 233, term type: to_deduce, before: primary_expression, after: postfix_expression_0_rep_2
TARGET LIST: 
target index: 234  , change_value: postfix_expression_0_rep_2
target index: 235  , change_value: %NULL%
target index: 236  , change_value: %NULL%

postfix_expression_0_rep_2  :  %MARK%  
 index is: 235, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_expression_0_rep_2  :  %MARK%  postfix_extend_part  postfix_expression_0_rep_2  
 index is: 236, term type: to_deduce, before: %NULL%, after: postfix_extend_part
TARGET LIST: 
target index: 237  , change_value: postfix_extend_part
target index: 239  , change_value: %NULL%
target index: 241  , change_value: %NULL%
target index: 244  , change_value: %NULL%
target index: 248  , change_value: %NULL%

postfix_extend_part  :  %MARK%  post_op  
 index is: 239, term type: to_deduce, before: %NULL%, after: post_op
TARGET LIST: 
target index: 240  , change_value: post_op
target index: 261  , change_value: %NULL%
target index: 263  , change_value: %NULL%

postfix_extend_part  :  %MARK%  '.'  ID  
 index is: 241, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 242  , change_value: '.'

postfix_extend_part  :  %MARK%  '('  postfix_extend_part_1_opt_2  ')'  
 index is: 244, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 245  , change_value: '('

postfix_extend_part  :  %MARK%  '['  expression  ']'  
 index is: 248, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 249  , change_value: '['

post_op  :  %MARK%  '--'  
 index is: 261, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 262  , change_value: '--'

post_op  :  %MARK%  '++'  
 index is: 263, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 264  , change_value: '++'

########
#TO SET#
########
index: 60, target_source: postfix_expression_0_rep_2

index: 61, target_source: postfix_extend_part

index: 63, target_source: post_op

index: 64, target_source: '.'

index: 66, target_source: '('

index: 87, target_source: '['

index: 90, target_source: '--'

index: 91, target_source: '++'



##########
#60  TERM#
##########


##########
#FROM SET#
##########
postfix_expression  :  primary_expression  postfix_expression_0_rep_2  %MARK%  
 index is: 234, term type: deduce, before: postfix_expression_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_expression  :  primary_expression  postfix_expression_0_rep_2  %MARK%  
 index is: 234, term type: deduce, before: postfix_expression_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#61  TERM#
##########


##########
#FROM SET#
##########
postfix_expression_0_rep_2  :  postfix_extend_part  %MARK%  postfix_expression_0_rep_2  
 index is: 237, term type: to_deduce, before: postfix_extend_part, after: postfix_expression_0_rep_2
TARGET LIST: 
target index: 235  , change_value: %NULL%
target index: 236  , change_value: %NULL%
target index: 238  , change_value: postfix_expression_0_rep_2

########
#SUBSET#
########
postfix_expression_0_rep_2  :  postfix_extend_part  %MARK%  postfix_expression_0_rep_2  
 index is: 237, term type: to_deduce, before: postfix_extend_part, after: postfix_expression_0_rep_2
TARGET LIST: 
target index: 235  , change_value: %NULL%
target index: 236  , change_value: %NULL%
target index: 238  , change_value: postfix_expression_0_rep_2

postfix_expression_0_rep_2  :  %MARK%  
 index is: 235, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_expression_0_rep_2  :  %MARK%  postfix_extend_part  postfix_expression_0_rep_2  
 index is: 236, term type: to_deduce, before: %NULL%, after: postfix_extend_part
TARGET LIST: 
target index: 237  , change_value: postfix_extend_part
target index: 239  , change_value: %NULL%
target index: 241  , change_value: %NULL%
target index: 244  , change_value: %NULL%
target index: 248  , change_value: %NULL%

postfix_extend_part  :  %MARK%  post_op  
 index is: 239, term type: to_deduce, before: %NULL%, after: post_op
TARGET LIST: 
target index: 240  , change_value: post_op
target index: 261  , change_value: %NULL%
target index: 263  , change_value: %NULL%

postfix_extend_part  :  %MARK%  '.'  ID  
 index is: 241, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 242  , change_value: '.'

postfix_extend_part  :  %MARK%  '('  postfix_extend_part_1_opt_2  ')'  
 index is: 244, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 245  , change_value: '('

postfix_extend_part  :  %MARK%  '['  expression  ']'  
 index is: 248, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 249  , change_value: '['

post_op  :  %MARK%  '--'  
 index is: 261, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 262  , change_value: '--'

post_op  :  %MARK%  '++'  
 index is: 263, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 264  , change_value: '++'

########
#TO SET#
########
index: 62, target_source: postfix_expression_0_rep_2

index: 61, target_source: postfix_extend_part

index: 63, target_source: post_op

index: 64, target_source: '.'

index: 66, target_source: '('

index: 87, target_source: '['

index: 90, target_source: '--'

index: 91, target_source: '++'



##########
#62  TERM#
##########


##########
#FROM SET#
##########
postfix_expression_0_rep_2  :  postfix_extend_part  postfix_expression_0_rep_2  %MARK%  
 index is: 238, term type: deduce, before: postfix_expression_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_expression_0_rep_2  :  postfix_extend_part  postfix_expression_0_rep_2  %MARK%  
 index is: 238, term type: deduce, before: postfix_expression_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#63  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part  :  post_op  %MARK%  
 index is: 240, term type: deduce, before: post_op, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_extend_part  :  post_op  %MARK%  
 index is: 240, term type: deduce, before: post_op, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#64  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part  :  '.'  %MARK%  ID  
 index is: 242, term type: shift, before: '.', after: ID
TARGET LIST: 
target index: 243  , change_value: ID

########
#SUBSET#
########
postfix_extend_part  :  '.'  %MARK%  ID  
 index is: 242, term type: shift, before: '.', after: ID
TARGET LIST: 
target index: 243  , change_value: ID

########
#TO SET#
########
index: 65, target_source: ID



##########
#65  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part  :  '.'  ID  %MARK%  
 index is: 243, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_extend_part  :  '.'  ID  %MARK%  
 index is: 243, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#66  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part  :  '('  %MARK%  postfix_extend_part_1_opt_2  ')'  
 index is: 245, term type: to_deduce, before: '(', after: postfix_extend_part_1_opt_2
TARGET LIST: 
target index: 246  , change_value: postfix_extend_part_1_opt_2
target index: 252  , change_value: %NULL%
target index: 253  , change_value: %NULL%

########
#SUBSET#
########
postfix_extend_part  :  '('  %MARK%  postfix_extend_part_1_opt_2  ')'  
 index is: 245, term type: to_deduce, before: '(', after: postfix_extend_part_1_opt_2
TARGET LIST: 
target index: 246  , change_value: postfix_extend_part_1_opt_2
target index: 252  , change_value: %NULL%
target index: 253  , change_value: %NULL%

postfix_extend_part_1_opt_2  :  %MARK%  
 index is: 252, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_extend_part_1_opt_2  :  %MARK%  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 253, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 156  , change_value: %NULL%
target index: 254  , change_value: assignment_expression

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 67, target_source: postfix_extend_part_1_opt_2

index: 69, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#67  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part  :  '('  postfix_extend_part_1_opt_2  %MARK%  ')'  
 index is: 246, term type: shift, before: postfix_extend_part_1_opt_2, after: ')'
TARGET LIST: 
target index: 247  , change_value: ')'

########
#SUBSET#
########
postfix_extend_part  :  '('  postfix_extend_part_1_opt_2  %MARK%  ')'  
 index is: 246, term type: shift, before: postfix_extend_part_1_opt_2, after: ')'
TARGET LIST: 
target index: 247  , change_value: ')'

########
#TO SET#
########
index: 68, target_source: ')'



##########
#68  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part  :  '('  postfix_extend_part_1_opt_2  ')'  %MARK%  
 index is: 247, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_extend_part  :  '('  postfix_extend_part_1_opt_2  ')'  %MARK%  
 index is: 247, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#69  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part_1_opt_2  :  assignment_expression  %MARK%  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 254, term type: to_deduce, before: assignment_expression, after: postfix_extend_part_1_opt_2_0_rep_2
TARGET LIST: 
target index: 255  , change_value: postfix_extend_part_1_opt_2_0_rep_2
target index: 256  , change_value: %NULL%
target index: 257  , change_value: %NULL%

########
#SUBSET#
########
postfix_extend_part_1_opt_2  :  assignment_expression  %MARK%  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 254, term type: to_deduce, before: assignment_expression, after: postfix_extend_part_1_opt_2_0_rep_2
TARGET LIST: 
target index: 255  , change_value: postfix_extend_part_1_opt_2_0_rep_2
target index: 256  , change_value: %NULL%
target index: 257  , change_value: %NULL%

postfix_extend_part_1_opt_2_0_rep_2  :  %MARK%  
 index is: 256, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_extend_part_1_opt_2_0_rep_2  :  %MARK%  ','  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 257, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 258  , change_value: ','

########
#TO SET#
########
index: 70, target_source: postfix_extend_part_1_opt_2_0_rep_2

index: 71, target_source: ','



##########
#70  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part_1_opt_2  :  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  %MARK%  
 index is: 255, term type: deduce, before: postfix_extend_part_1_opt_2_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_extend_part_1_opt_2  :  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  %MARK%  
 index is: 255, term type: deduce, before: postfix_extend_part_1_opt_2_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#71  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part_1_opt_2_0_rep_2  :  ','  %MARK%  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 258, term type: to_deduce, before: ',', after: assignment_expression
TARGET LIST: 
target index: 156  , change_value: %NULL%
target index: 259  , change_value: assignment_expression

########
#SUBSET#
########
postfix_extend_part_1_opt_2_0_rep_2  :  ','  %MARK%  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 258, term type: to_deduce, before: ',', after: assignment_expression
TARGET LIST: 
target index: 156  , change_value: %NULL%
target index: 259  , change_value: assignment_expression

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 72, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#72  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part_1_opt_2_0_rep_2  :  ','  assignment_expression  %MARK%  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 259, term type: to_deduce, before: assignment_expression, after: postfix_extend_part_1_opt_2_0_rep_2
TARGET LIST: 
target index: 256  , change_value: %NULL%
target index: 257  , change_value: %NULL%
target index: 260  , change_value: postfix_extend_part_1_opt_2_0_rep_2

########
#SUBSET#
########
postfix_extend_part_1_opt_2_0_rep_2  :  ','  assignment_expression  %MARK%  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 259, term type: to_deduce, before: assignment_expression, after: postfix_extend_part_1_opt_2_0_rep_2
TARGET LIST: 
target index: 256  , change_value: %NULL%
target index: 257  , change_value: %NULL%
target index: 260  , change_value: postfix_extend_part_1_opt_2_0_rep_2

postfix_extend_part_1_opt_2_0_rep_2  :  %MARK%  
 index is: 256, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_extend_part_1_opt_2_0_rep_2  :  %MARK%  ','  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  
 index is: 257, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 258  , change_value: ','

########
#TO SET#
########
index: 73, target_source: postfix_extend_part_1_opt_2_0_rep_2

index: 71, target_source: ','



##########
#73  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part_1_opt_2_0_rep_2  :  ','  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  %MARK%  
 index is: 260, term type: deduce, before: postfix_extend_part_1_opt_2_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_extend_part_1_opt_2_0_rep_2  :  ','  assignment_expression  postfix_extend_part_1_opt_2_0_rep_2  %MARK%  
 index is: 260, term type: deduce, before: postfix_extend_part_1_opt_2_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#74  TERM#
##########


##########
#FROM SET#
##########
sadd_op  :  '-'  %MARK%  
 index is: 227, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
sadd_op  :  '-'  %MARK%  
 index is: 227, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#75  TERM#
##########


##########
#FROM SET#
##########
sadd_op  :  '--'  %MARK%  
 index is: 229, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
sadd_op  :  '--'  %MARK%  
 index is: 229, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#76  TERM#
##########


##########
#FROM SET#
##########
sadd_op  :  '++'  %MARK%  
 index is: 231, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
sadd_op  :  '++'  %MARK%  
 index is: 231, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#77  TERM#
##########


##########
#FROM SET#
##########
primary_expression  :  '('  %MARK%  expression  ')'  
 index is: 266, term type: to_deduce, before: '(', after: expression
TARGET LIST: 
target index: 148  , change_value: %NULL%
target index: 267  , change_value: expression

########
#SUBSET#
########
primary_expression  :  '('  %MARK%  expression  ')'  
 index is: 266, term type: to_deduce, before: '(', after: expression
TARGET LIST: 
target index: 148  , change_value: %NULL%
target index: 267  , change_value: expression

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 78, target_source: expression

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#78  TERM#
##########


##########
#FROM SET#
##########
primary_expression  :  '('  expression  %MARK%  ')'  
 index is: 267, term type: shift, before: expression, after: ')'
TARGET LIST: 
target index: 268  , change_value: ')'

########
#SUBSET#
########
primary_expression  :  '('  expression  %MARK%  ')'  
 index is: 267, term type: shift, before: expression, after: ')'
TARGET LIST: 
target index: 268  , change_value: ')'

########
#TO SET#
########
index: 79, target_source: ')'



##########
#79  TERM#
##########


##########
#FROM SET#
##########
primary_expression  :  '('  expression  ')'  %MARK%  
 index is: 268, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
primary_expression  :  '('  expression  ')'  %MARK%  
 index is: 268, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#80  TERM#
##########


##########
#FROM SET#
##########
expression  :  assignment_expression  %MARK%  expression_0_rep_2  
 index is: 149, term type: to_deduce, before: assignment_expression, after: expression_0_rep_2
TARGET LIST: 
target index: 150  , change_value: expression_0_rep_2
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%

########
#SUBSET#
########
expression  :  assignment_expression  %MARK%  expression_0_rep_2  
 index is: 149, term type: to_deduce, before: assignment_expression, after: expression_0_rep_2
TARGET LIST: 
target index: 150  , change_value: expression_0_rep_2
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%

expression_0_rep_2  :  %MARK%  
 index is: 151, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

expression_0_rep_2  :  %MARK%  ','  assignment_expression  expression_0_rep_2  
 index is: 152, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 153  , change_value: ','

########
#TO SET#
########
index: 81, target_source: expression_0_rep_2

index: 82, target_source: ','



##########
#81  TERM#
##########


##########
#FROM SET#
##########
expression  :  assignment_expression  expression_0_rep_2  %MARK%  
 index is: 150, term type: deduce, before: expression_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expression  :  assignment_expression  expression_0_rep_2  %MARK%  
 index is: 150, term type: deduce, before: expression_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#82  TERM#
##########


##########
#FROM SET#
##########
expression_0_rep_2  :  ','  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 153, term type: to_deduce, before: ',', after: assignment_expression
TARGET LIST: 
target index: 154  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

########
#SUBSET#
########
expression_0_rep_2  :  ','  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 153, term type: to_deduce, before: ',', after: assignment_expression
TARGET LIST: 
target index: 154  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 83, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#83  TERM#
##########


##########
#FROM SET#
##########
expression_0_rep_2  :  ','  assignment_expression  %MARK%  expression_0_rep_2  
 index is: 154, term type: to_deduce, before: assignment_expression, after: expression_0_rep_2
TARGET LIST: 
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%
target index: 155  , change_value: expression_0_rep_2

########
#SUBSET#
########
expression_0_rep_2  :  ','  assignment_expression  %MARK%  expression_0_rep_2  
 index is: 154, term type: to_deduce, before: assignment_expression, after: expression_0_rep_2
TARGET LIST: 
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%
target index: 155  , change_value: expression_0_rep_2

expression_0_rep_2  :  %MARK%  
 index is: 151, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

expression_0_rep_2  :  %MARK%  ','  assignment_expression  expression_0_rep_2  
 index is: 152, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 153  , change_value: ','

########
#TO SET#
########
index: 84, target_source: expression_0_rep_2

index: 82, target_source: ','



##########
#84  TERM#
##########


##########
#FROM SET#
##########
expression_0_rep_2  :  ','  assignment_expression  expression_0_rep_2  %MARK%  
 index is: 155, term type: deduce, before: expression_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expression_0_rep_2  :  ','  assignment_expression  expression_0_rep_2  %MARK%  
 index is: 155, term type: deduce, before: expression_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#85  TERM#
##########


##########
#FROM SET#
##########
primary_expression  :  NUMBER  %MARK%  
 index is: 270, term type: deduce, before: NUMBER, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
primary_expression  :  NUMBER  %MARK%  
 index is: 270, term type: deduce, before: NUMBER, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#86  TERM#
##########


##########
#FROM SET#
##########
primary_expression  :  ID  %MARK%  
 index is: 272, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
primary_expression  :  ID  %MARK%  
 index is: 272, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#87  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part  :  '['  %MARK%  expression  ']'  
 index is: 249, term type: to_deduce, before: '[', after: expression
TARGET LIST: 
target index: 148  , change_value: %NULL%
target index: 250  , change_value: expression

########
#SUBSET#
########
postfix_extend_part  :  '['  %MARK%  expression  ']'  
 index is: 249, term type: to_deduce, before: '[', after: expression
TARGET LIST: 
target index: 148  , change_value: %NULL%
target index: 250  , change_value: expression

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 88, target_source: expression

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



##########
#88  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part  :  '['  expression  %MARK%  ']'  
 index is: 250, term type: shift, before: expression, after: ']'
TARGET LIST: 
target index: 251  , change_value: ']'

########
#SUBSET#
########
postfix_extend_part  :  '['  expression  %MARK%  ']'  
 index is: 250, term type: shift, before: expression, after: ']'
TARGET LIST: 
target index: 251  , change_value: ']'

########
#TO SET#
########
index: 89, target_source: ']'



##########
#89  TERM#
##########


##########
#FROM SET#
##########
postfix_extend_part  :  '['  expression  ']'  %MARK%  
 index is: 251, term type: deduce, before: ']', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_extend_part  :  '['  expression  ']'  %MARK%  
 index is: 251, term type: deduce, before: ']', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#90  TERM#
##########


##########
#FROM SET#
##########
post_op  :  '--'  %MARK%  
 index is: 262, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
post_op  :  '--'  %MARK%  
 index is: 262, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#91  TERM#
##########


##########
#FROM SET#
##########
post_op  :  '++'  %MARK%  
 index is: 264, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
post_op  :  '++'  %MARK%  
 index is: 264, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#92  TERM#
##########


##########
#FROM SET#
##########
mul_op  :  '/'  %MARK%  
 index is: 218, term type: deduce, before: '/', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul_op  :  '/'  %MARK%  
 index is: 218, term type: deduce, before: '/', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#93  TERM#
##########


##########
#FROM SET#
##########
mul_op  :  '*'  %MARK%  
 index is: 220, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul_op  :  '*'  %MARK%  
 index is: 220, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#94  TERM#
##########


##########
#FROM SET#
##########
add_op  :  '-'  %MARK%  
 index is: 207, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add_op  :  '-'  %MARK%  
 index is: 207, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#95  TERM#
##########


##########
#FROM SET#
##########
add_op  :  '+'  %MARK%  
 index is: 209, term type: deduce, before: '+', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add_op  :  '+'  %MARK%  
 index is: 209, term type: deduce, before: '+', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#96  TERM#
##########


##########
#FROM SET#
##########
relat_op  :  '<='  %MARK%  
 index is: 192, term type: deduce, before: '<=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_op  :  '<='  %MARK%  
 index is: 192, term type: deduce, before: '<=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#97  TERM#
##########


##########
#FROM SET#
##########
relat_op  :  '>='  %MARK%  
 index is: 194, term type: deduce, before: '>=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_op  :  '>='  %MARK%  
 index is: 194, term type: deduce, before: '>=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#98  TERM#
##########


##########
#FROM SET#
##########
relat_op  :  '<'  %MARK%  
 index is: 196, term type: deduce, before: '<', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_op  :  '<'  %MARK%  
 index is: 196, term type: deduce, before: '<', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#99  TERM#
##########


##########
#FROM SET#
##########
relat_op  :  '>'  %MARK%  
 index is: 198, term type: deduce, before: '>', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_op  :  '>'  %MARK%  
 index is: 198, term type: deduce, before: '>', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#100  TERM#
###########


##########
#FROM SET#
##########
equal_op  :  '!='  %MARK%  
 index is: 181, term type: deduce, before: '!=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal_op  :  '!='  %MARK%  
 index is: 181, term type: deduce, before: '!=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#101  TERM#
###########


##########
#FROM SET#
##########
equal_op  :  '=='  %MARK%  
 index is: 183, term type: deduce, before: '==', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal_op  :  '=='  %MARK%  
 index is: 183, term type: deduce, before: '==', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#102  TERM#
###########


##########
#FROM SET#
##########
assign_op  :  '/='  %MARK%  
 index is: 164, term type: deduce, before: '/=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
assign_op  :  '/='  %MARK%  
 index is: 164, term type: deduce, before: '/=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#103  TERM#
###########


##########
#FROM SET#
##########
assign_op  :  '*='  %MARK%  
 index is: 166, term type: deduce, before: '*=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
assign_op  :  '*='  %MARK%  
 index is: 166, term type: deduce, before: '*=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#104  TERM#
###########


##########
#FROM SET#
##########
assign_op  :  '-='  %MARK%  
 index is: 168, term type: deduce, before: '-=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
assign_op  :  '-='  %MARK%  
 index is: 168, term type: deduce, before: '-=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#105  TERM#
###########


##########
#FROM SET#
##########
assign_op  :  '+='  %MARK%  
 index is: 170, term type: deduce, before: '+=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
assign_op  :  '+='  %MARK%  
 index is: 170, term type: deduce, before: '+=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#106  TERM#
###########


##########
#FROM SET#
##########
assign_op  :  '='  %MARK%  
 index is: 172, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
assign_op  :  '='  %MARK%  
 index is: 172, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#107  TERM#
###########


##########
#FROM SET#
##########
direct_declarator  :  ID  %MARK%  extend_part  
 index is: 21, term type: to_deduce, before: ID, after: extend_part
TARGET LIST: 
target index: 22  , change_value: extend_part
target index: 23  , change_value: %NULL%
target index: 27  , change_value: %NULL%

########
#SUBSET#
########
direct_declarator  :  ID  %MARK%  extend_part  
 index is: 21, term type: to_deduce, before: ID, after: extend_part
TARGET LIST: 
target index: 22  , change_value: extend_part
target index: 23  , change_value: %NULL%
target index: 27  , change_value: %NULL%

extend_part  :  %MARK%  '('  extend_part_1_opt_2  ')'  
 index is: 23, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 24  , change_value: '('

extend_part  :  %MARK%  extend_part_0_rep_1  
 index is: 27, term type: to_deduce, before: %NULL%, after: extend_part_0_rep_1
TARGET LIST: 
target index: 28  , change_value: extend_part_0_rep_1
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%

extend_part_0_rep_1  :  %MARK%  
 index is: 32, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

extend_part_0_rep_1  :  %MARK%  '['  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  
 index is: 33, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 34  , change_value: '['

########
#TO SET#
########
index: 108, target_source: extend_part

index: 109, target_source: '('

index: 122, target_source: extend_part_0_rep_1

index: 123, target_source: '['



###########
#108  TERM#
###########


##########
#FROM SET#
##########
direct_declarator  :  ID  extend_part  %MARK%  
 index is: 22, term type: deduce, before: extend_part, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
direct_declarator  :  ID  extend_part  %MARK%  
 index is: 22, term type: deduce, before: extend_part, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#109  TERM#
###########


##########
#FROM SET#
##########
extend_part  :  '('  %MARK%  extend_part_1_opt_2  ')'  
 index is: 24, term type: to_deduce, before: '(', after: extend_part_1_opt_2
TARGET LIST: 
target index: 25  , change_value: extend_part_1_opt_2
target index: 29  , change_value: %NULL%
target index: 30  , change_value: %NULL%

########
#SUBSET#
########
extend_part  :  '('  %MARK%  extend_part_1_opt_2  ')'  
 index is: 24, term type: to_deduce, before: '(', after: extend_part_1_opt_2
TARGET LIST: 
target index: 25  , change_value: extend_part_1_opt_2
target index: 29  , change_value: %NULL%
target index: 30  , change_value: %NULL%

extend_part_1_opt_2  :  %MARK%  
 index is: 29, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

extend_part_1_opt_2  :  %MARK%  parameter_list  
 index is: 30, term type: to_deduce, before: %NULL%, after: parameter_list
TARGET LIST: 
target index: 31  , change_value: parameter_list
target index: 43  , change_value: %NULL%

parameter_list  :  %MARK%  parameter_declaration  parameter_list_0_rep_2  
 index is: 43, term type: to_deduce, before: %NULL%, after: parameter_declaration
TARGET LIST: 
target index: 44  , change_value: parameter_declaration
target index: 51  , change_value: %NULL%

parameter_declaration  :  %MARK%  declaration_specifier  ID  
 index is: 51, term type: to_deduce, before: %NULL%, after: declaration_specifier
TARGET LIST: 
target index: 52  , change_value: declaration_specifier
target index: 54  , change_value: %NULL%

declaration_specifier  :  %MARK%  type_specifier  
 index is: 54, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 55  , change_value: type_specifier

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

########
#TO SET#
########
index: 110, target_source: extend_part_1_opt_2

index: 112, target_source: parameter_list

index: 113, target_source: parameter_declaration

index: 118, target_source: declaration_specifier

index: 120, target_source: type_specifier

index: 121, target_source: ID



###########
#110  TERM#
###########


##########
#FROM SET#
##########
extend_part  :  '('  extend_part_1_opt_2  %MARK%  ')'  
 index is: 25, term type: shift, before: extend_part_1_opt_2, after: ')'
TARGET LIST: 
target index: 26  , change_value: ')'

########
#SUBSET#
########
extend_part  :  '('  extend_part_1_opt_2  %MARK%  ')'  
 index is: 25, term type: shift, before: extend_part_1_opt_2, after: ')'
TARGET LIST: 
target index: 26  , change_value: ')'

########
#TO SET#
########
index: 111, target_source: ')'



###########
#111  TERM#
###########


##########
#FROM SET#
##########
extend_part  :  '('  extend_part_1_opt_2  ')'  %MARK%  
 index is: 26, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
extend_part  :  '('  extend_part_1_opt_2  ')'  %MARK%  
 index is: 26, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#112  TERM#
###########


##########
#FROM SET#
##########
extend_part_1_opt_2  :  parameter_list  %MARK%  
 index is: 31, term type: deduce, before: parameter_list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
extend_part_1_opt_2  :  parameter_list  %MARK%  
 index is: 31, term type: deduce, before: parameter_list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#113  TERM#
###########


##########
#FROM SET#
##########
parameter_list  :  parameter_declaration  %MARK%  parameter_list_0_rep_2  
 index is: 44, term type: to_deduce, before: parameter_declaration, after: parameter_list_0_rep_2
TARGET LIST: 
target index: 45  , change_value: parameter_list_0_rep_2
target index: 46  , change_value: %NULL%
target index: 47  , change_value: %NULL%

########
#SUBSET#
########
parameter_list  :  parameter_declaration  %MARK%  parameter_list_0_rep_2  
 index is: 44, term type: to_deduce, before: parameter_declaration, after: parameter_list_0_rep_2
TARGET LIST: 
target index: 45  , change_value: parameter_list_0_rep_2
target index: 46  , change_value: %NULL%
target index: 47  , change_value: %NULL%

parameter_list_0_rep_2  :  %MARK%  
 index is: 46, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

parameter_list_0_rep_2  :  %MARK%  ','  parameter_declaration  parameter_list_0_rep_2  
 index is: 47, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 48  , change_value: ','

########
#TO SET#
########
index: 114, target_source: parameter_list_0_rep_2

index: 115, target_source: ','



###########
#114  TERM#
###########


##########
#FROM SET#
##########
parameter_list  :  parameter_declaration  parameter_list_0_rep_2  %MARK%  
 index is: 45, term type: deduce, before: parameter_list_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
parameter_list  :  parameter_declaration  parameter_list_0_rep_2  %MARK%  
 index is: 45, term type: deduce, before: parameter_list_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#115  TERM#
###########


##########
#FROM SET#
##########
parameter_list_0_rep_2  :  ','  %MARK%  parameter_declaration  parameter_list_0_rep_2  
 index is: 48, term type: to_deduce, before: ',', after: parameter_declaration
TARGET LIST: 
target index: 49  , change_value: parameter_declaration
target index: 51  , change_value: %NULL%

########
#SUBSET#
########
parameter_list_0_rep_2  :  ','  %MARK%  parameter_declaration  parameter_list_0_rep_2  
 index is: 48, term type: to_deduce, before: ',', after: parameter_declaration
TARGET LIST: 
target index: 49  , change_value: parameter_declaration
target index: 51  , change_value: %NULL%

parameter_declaration  :  %MARK%  declaration_specifier  ID  
 index is: 51, term type: to_deduce, before: %NULL%, after: declaration_specifier
TARGET LIST: 
target index: 52  , change_value: declaration_specifier
target index: 54  , change_value: %NULL%

declaration_specifier  :  %MARK%  type_specifier  
 index is: 54, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 55  , change_value: type_specifier

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

########
#TO SET#
########
index: 116, target_source: parameter_declaration

index: 118, target_source: declaration_specifier

index: 120, target_source: type_specifier

index: 121, target_source: ID



###########
#116  TERM#
###########


##########
#FROM SET#
##########
parameter_list_0_rep_2  :  ','  parameter_declaration  %MARK%  parameter_list_0_rep_2  
 index is: 49, term type: to_deduce, before: parameter_declaration, after: parameter_list_0_rep_2
TARGET LIST: 
target index: 46  , change_value: %NULL%
target index: 47  , change_value: %NULL%
target index: 50  , change_value: parameter_list_0_rep_2

########
#SUBSET#
########
parameter_list_0_rep_2  :  ','  parameter_declaration  %MARK%  parameter_list_0_rep_2  
 index is: 49, term type: to_deduce, before: parameter_declaration, after: parameter_list_0_rep_2
TARGET LIST: 
target index: 46  , change_value: %NULL%
target index: 47  , change_value: %NULL%
target index: 50  , change_value: parameter_list_0_rep_2

parameter_list_0_rep_2  :  %MARK%  
 index is: 46, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

parameter_list_0_rep_2  :  %MARK%  ','  parameter_declaration  parameter_list_0_rep_2  
 index is: 47, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 48  , change_value: ','

########
#TO SET#
########
index: 117, target_source: parameter_list_0_rep_2

index: 115, target_source: ','



###########
#117  TERM#
###########


##########
#FROM SET#
##########
parameter_list_0_rep_2  :  ','  parameter_declaration  parameter_list_0_rep_2  %MARK%  
 index is: 50, term type: deduce, before: parameter_list_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
parameter_list_0_rep_2  :  ','  parameter_declaration  parameter_list_0_rep_2  %MARK%  
 index is: 50, term type: deduce, before: parameter_list_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#118  TERM#
###########


##########
#FROM SET#
##########
parameter_declaration  :  declaration_specifier  %MARK%  ID  
 index is: 52, term type: shift, before: declaration_specifier, after: ID
TARGET LIST: 
target index: 53  , change_value: ID

########
#SUBSET#
########
parameter_declaration  :  declaration_specifier  %MARK%  ID  
 index is: 52, term type: shift, before: declaration_specifier, after: ID
TARGET LIST: 
target index: 53  , change_value: ID

########
#TO SET#
########
index: 119, target_source: ID



###########
#119  TERM#
###########


##########
#FROM SET#
##########
parameter_declaration  :  declaration_specifier  ID  %MARK%  
 index is: 53, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
parameter_declaration  :  declaration_specifier  ID  %MARK%  
 index is: 53, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#120  TERM#
###########


##########
#FROM SET#
##########
declaration_specifier  :  type_specifier  %MARK%  
 index is: 55, term type: deduce, before: type_specifier, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration_specifier  :  type_specifier  %MARK%  
 index is: 55, term type: deduce, before: type_specifier, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#121  TERM#
###########


##########
#FROM SET#
##########
type_specifier  :  ID  %MARK%  
 index is: 19, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
type_specifier  :  ID  %MARK%  
 index is: 19, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#122  TERM#
###########


##########
#FROM SET#
##########
extend_part  :  extend_part_0_rep_1  %MARK%  
 index is: 28, term type: deduce, before: extend_part_0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
extend_part  :  extend_part_0_rep_1  %MARK%  
 index is: 28, term type: deduce, before: extend_part_0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#123  TERM#
###########


##########
#FROM SET#
##########
extend_part_0_rep_1  :  '['  %MARK%  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  
 index is: 34, term type: to_deduce, before: '[', after: extend_part_0_rep_1_0_opt_2
TARGET LIST: 
target index: 35  , change_value: extend_part_0_rep_1_0_opt_2
target index: 38  , change_value: %NULL%
target index: 39  , change_value: %NULL%

########
#SUBSET#
########
extend_part_0_rep_1  :  '['  %MARK%  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  
 index is: 34, term type: to_deduce, before: '[', after: extend_part_0_rep_1_0_opt_2
TARGET LIST: 
target index: 35  , change_value: extend_part_0_rep_1_0_opt_2
target index: 38  , change_value: %NULL%
target index: 39  , change_value: %NULL%

extend_part_0_rep_1_0_opt_2  :  %MARK%  
 index is: 38, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

extend_part_0_rep_1_0_opt_2  :  %MARK%  constant_expression  
 index is: 39, term type: to_deduce, before: %NULL%, after: constant_expression
TARGET LIST: 
target index: 40  , change_value: constant_expression
target index: 41  , change_value: %NULL%

constant_expression  :  %MARK%  relat_expression  
 index is: 41, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 42  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 124, target_source: extend_part_0_rep_1_0_opt_2

index: 127, target_source: constant_expression

index: 128, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



###########
#124  TERM#
###########


##########
#FROM SET#
##########
extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  %MARK%  ']'  extend_part_0_rep_1  
 index is: 35, term type: shift, before: extend_part_0_rep_1_0_opt_2, after: ']'
TARGET LIST: 
target index: 36  , change_value: ']'

########
#SUBSET#
########
extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  %MARK%  ']'  extend_part_0_rep_1  
 index is: 35, term type: shift, before: extend_part_0_rep_1_0_opt_2, after: ']'
TARGET LIST: 
target index: 36  , change_value: ']'

########
#TO SET#
########
index: 125, target_source: ']'



###########
#125  TERM#
###########


##########
#FROM SET#
##########
extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  ']'  %MARK%  extend_part_0_rep_1  
 index is: 36, term type: to_deduce, before: ']', after: extend_part_0_rep_1
TARGET LIST: 
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%
target index: 37  , change_value: extend_part_0_rep_1

########
#SUBSET#
########
extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  ']'  %MARK%  extend_part_0_rep_1  
 index is: 36, term type: to_deduce, before: ']', after: extend_part_0_rep_1
TARGET LIST: 
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%
target index: 37  , change_value: extend_part_0_rep_1

extend_part_0_rep_1  :  %MARK%  
 index is: 32, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

extend_part_0_rep_1  :  %MARK%  '['  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  
 index is: 33, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 34  , change_value: '['

########
#TO SET#
########
index: 126, target_source: extend_part_0_rep_1

index: 123, target_source: '['



###########
#126  TERM#
###########


##########
#FROM SET#
##########
extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  %MARK%  
 index is: 37, term type: deduce, before: extend_part_0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
extend_part_0_rep_1  :  '['  extend_part_0_rep_1_0_opt_2  ']'  extend_part_0_rep_1  %MARK%  
 index is: 37, term type: deduce, before: extend_part_0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#127  TERM#
###########


##########
#FROM SET#
##########
extend_part_0_rep_1_0_opt_2  :  constant_expression  %MARK%  
 index is: 40, term type: deduce, before: constant_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
extend_part_0_rep_1_0_opt_2  :  constant_expression  %MARK%  
 index is: 40, term type: deduce, before: constant_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#128  TERM#
###########


##########
#FROM SET#
##########
constant_expression  :  relat_expression  %MARK%  
 index is: 42, term type: deduce, before: relat_expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
constant_expression  :  relat_expression  %MARK%  
 index is: 42, term type: deduce, before: relat_expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#129  TERM#
###########


##########
#FROM SET#
##########
declaration  :  type_specifier  %MARK%  init_declarator  ';'  
 index is: 68, term type: to_deduce, before: type_specifier, after: init_declarator
TARGET LIST: 
target index: 69  , change_value: init_declarator
target index: 71  , change_value: %NULL%

function_declaration  :  type_specifier  %MARK%  direct_declarator  compound_statement  
 index is: 15, term type: to_deduce, before: type_specifier, after: direct_declarator
TARGET LIST: 
target index: 16  , change_value: direct_declarator
target index: 20  , change_value: %NULL%

########
#SUBSET#
########
declaration  :  type_specifier  %MARK%  init_declarator  ';'  
 index is: 68, term type: to_deduce, before: type_specifier, after: init_declarator
TARGET LIST: 
target index: 69  , change_value: init_declarator
target index: 71  , change_value: %NULL%

function_declaration  :  type_specifier  %MARK%  direct_declarator  compound_statement  
 index is: 15, term type: to_deduce, before: type_specifier, after: direct_declarator
TARGET LIST: 
target index: 16  , change_value: direct_declarator
target index: 20  , change_value: %NULL%

init_declarator  :  %MARK%  direct_declarator  init_declarator_0_opt_2  
 index is: 71, term type: to_deduce, before: %NULL%, after: direct_declarator
TARGET LIST: 
target index: 20  , change_value: %NULL%
target index: 72  , change_value: direct_declarator

direct_declarator  :  %MARK%  ID  extend_part  
 index is: 20, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 21  , change_value: ID

########
#TO SET#
########
index: 19, target_source: init_declarator

index: 130, target_source: direct_declarator

index: 107, target_source: ID



###########
#130  TERM#
###########


##########
#FROM SET#
##########
function_declaration  :  type_specifier  direct_declarator  %MARK%  compound_statement  
 index is: 16, term type: to_deduce, before: direct_declarator, after: compound_statement
TARGET LIST: 
target index: 17  , change_value: compound_statement
target index: 56  , change_value: %NULL%

init_declarator  :  direct_declarator  %MARK%  init_declarator_0_opt_2  
 index is: 72, term type: to_deduce, before: direct_declarator, after: init_declarator_0_opt_2
TARGET LIST: 
target index: 73  , change_value: init_declarator_0_opt_2
target index: 74  , change_value: %NULL%
target index: 75  , change_value: %NULL%

########
#SUBSET#
########
function_declaration  :  type_specifier  direct_declarator  %MARK%  compound_statement  
 index is: 16, term type: to_deduce, before: direct_declarator, after: compound_statement
TARGET LIST: 
target index: 17  , change_value: compound_statement
target index: 56  , change_value: %NULL%

init_declarator  :  direct_declarator  %MARK%  init_declarator_0_opt_2  
 index is: 72, term type: to_deduce, before: direct_declarator, after: init_declarator_0_opt_2
TARGET LIST: 
target index: 73  , change_value: init_declarator_0_opt_2
target index: 74  , change_value: %NULL%
target index: 75  , change_value: %NULL%

compound_statement  :  %MARK%  '{'  compound_statement_0_rep_2  '}'  
 index is: 56, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 57  , change_value: '{'

init_declarator_0_opt_2  :  %MARK%  
 index is: 74, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

init_declarator_0_opt_2  :  %MARK%  '='  initializer  
 index is: 75, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 76  , change_value: '='

########
#TO SET#
########
index: 131, target_source: compound_statement

index: 22, target_source: init_declarator_0_opt_2

index: 132, target_source: '{'

index: 23, target_source: '='



###########
#131  TERM#
###########


##########
#FROM SET#
##########
function_declaration  :  type_specifier  direct_declarator  compound_statement  %MARK%  
 index is: 17, term type: deduce, before: compound_statement, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function_declaration  :  type_specifier  direct_declarator  compound_statement  %MARK%  
 index is: 17, term type: deduce, before: compound_statement, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#132  TERM#
###########


##########
#FROM SET#
##########
compound_statement  :  '{'  %MARK%  compound_statement_0_rep_2  '}'  
 index is: 57, term type: to_deduce, before: '{', after: compound_statement_0_rep_2
TARGET LIST: 
target index: 58  , change_value: compound_statement_0_rep_2
target index: 60  , change_value: %NULL%
target index: 61  , change_value: %NULL%
target index: 64  , change_value: %NULL%

########
#SUBSET#
########
compound_statement  :  '{'  %MARK%  compound_statement_0_rep_2  '}'  
 index is: 57, term type: to_deduce, before: '{', after: compound_statement_0_rep_2
TARGET LIST: 
target index: 58  , change_value: compound_statement_0_rep_2
target index: 60  , change_value: %NULL%
target index: 61  , change_value: %NULL%
target index: 64  , change_value: %NULL%

compound_statement_0_rep_2  :  %MARK%  
 index is: 60, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

compound_statement_0_rep_2  :  %MARK%  statement  compound_statement_0_rep_2  
 index is: 61, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 62  , change_value: statement
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%

compound_statement_0_rep_2  :  %MARK%  declaration  compound_statement_0_rep_2  
 index is: 64, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 65  , change_value: declaration
target index: 67  , change_value: %NULL%

statement  :  %MARK%  return_statement  
 index is: 96, term type: to_deduce, before: %NULL%, after: return_statement
TARGET LIST: 
target index: 97  , change_value: return_statement
target index: 145  , change_value: %NULL%

statement  :  %MARK%  iteration_statement  
 index is: 98, term type: to_deduce, before: %NULL%, after: iteration_statement
TARGET LIST: 
target index: 99  , change_value: iteration_statement
target index: 122  , change_value: %NULL%

statement  :  %MARK%  selection_statement  
 index is: 100, term type: to_deduce, before: %NULL%, after: selection_statement
TARGET LIST: 
target index: 101  , change_value: selection_statement
target index: 111  , change_value: %NULL%

statement  :  %MARK%  expression_statement  
 index is: 102, term type: to_deduce, before: %NULL%, after: expression_statement
TARGET LIST: 
target index: 103  , change_value: expression_statement
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%

statement  :  %MARK%  compound_statement  
 index is: 104, term type: to_deduce, before: %NULL%, after: compound_statement
TARGET LIST: 
target index: 56  , change_value: %NULL%
target index: 105  , change_value: compound_statement

declaration  :  %MARK%  type_specifier  init_declarator  ';'  
 index is: 67, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 68  , change_value: type_specifier

return_statement  :  %MARK%  'return'  expression_statement  
 index is: 145, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 146  , change_value: 'return'

iteration_statement  :  %MARK%  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 122, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 123  , change_value: 'for'

selection_statement  :  %MARK%  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 111, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 112  , change_value: 'if'

expression_statement  :  %MARK%  expression  ';'  
 index is: 106, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 107  , change_value: expression
target index: 148  , change_value: %NULL%

expression_statement  :  %MARK%  ';'  
 index is: 109, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 110  , change_value: ';'

compound_statement  :  %MARK%  '{'  compound_statement_0_rep_2  '}'  
 index is: 56, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 57  , change_value: '{'

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 133, target_source: compound_statement_0_rep_2

index: 135, target_source: statement

index: 137, target_source: declaration

index: 139, target_source: return_statement

index: 140, target_source: iteration_statement

index: 141, target_source: selection_statement

index: 142, target_source: expression_statement

index: 143, target_source: compound_statement

index: 18, target_source: type_specifier

index: 144, target_source: 'return'

index: 149, target_source: 'for'

index: 158, target_source: 'if'

index: 146, target_source: expression

index: 148, target_source: ';'

index: 132, target_source: '{'

index: 171, target_source: ID

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER



###########
#133  TERM#
###########


##########
#FROM SET#
##########
compound_statement  :  '{'  compound_statement_0_rep_2  %MARK%  '}'  
 index is: 58, term type: shift, before: compound_statement_0_rep_2, after: '}'
TARGET LIST: 
target index: 59  , change_value: '}'

########
#SUBSET#
########
compound_statement  :  '{'  compound_statement_0_rep_2  %MARK%  '}'  
 index is: 58, term type: shift, before: compound_statement_0_rep_2, after: '}'
TARGET LIST: 
target index: 59  , change_value: '}'

########
#TO SET#
########
index: 134, target_source: '}'



###########
#134  TERM#
###########


##########
#FROM SET#
##########
compound_statement  :  '{'  compound_statement_0_rep_2  '}'  %MARK%  
 index is: 59, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
compound_statement  :  '{'  compound_statement_0_rep_2  '}'  %MARK%  
 index is: 59, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#135  TERM#
###########


##########
#FROM SET#
##########
compound_statement_0_rep_2  :  statement  %MARK%  compound_statement_0_rep_2  
 index is: 62, term type: to_deduce, before: statement, after: compound_statement_0_rep_2
TARGET LIST: 
target index: 60  , change_value: %NULL%
target index: 61  , change_value: %NULL%
target index: 63  , change_value: compound_statement_0_rep_2
target index: 64  , change_value: %NULL%

########
#SUBSET#
########
compound_statement_0_rep_2  :  statement  %MARK%  compound_statement_0_rep_2  
 index is: 62, term type: to_deduce, before: statement, after: compound_statement_0_rep_2
TARGET LIST: 
target index: 60  , change_value: %NULL%
target index: 61  , change_value: %NULL%
target index: 63  , change_value: compound_statement_0_rep_2
target index: 64  , change_value: %NULL%

compound_statement_0_rep_2  :  %MARK%  
 index is: 60, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

compound_statement_0_rep_2  :  %MARK%  statement  compound_statement_0_rep_2  
 index is: 61, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 62  , change_value: statement
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%

compound_statement_0_rep_2  :  %MARK%  declaration  compound_statement_0_rep_2  
 index is: 64, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 65  , change_value: declaration
target index: 67  , change_value: %NULL%

statement  :  %MARK%  return_statement  
 index is: 96, term type: to_deduce, before: %NULL%, after: return_statement
TARGET LIST: 
target index: 97  , change_value: return_statement
target index: 145  , change_value: %NULL%

statement  :  %MARK%  iteration_statement  
 index is: 98, term type: to_deduce, before: %NULL%, after: iteration_statement
TARGET LIST: 
target index: 99  , change_value: iteration_statement
target index: 122  , change_value: %NULL%

statement  :  %MARK%  selection_statement  
 index is: 100, term type: to_deduce, before: %NULL%, after: selection_statement
TARGET LIST: 
target index: 101  , change_value: selection_statement
target index: 111  , change_value: %NULL%

statement  :  %MARK%  expression_statement  
 index is: 102, term type: to_deduce, before: %NULL%, after: expression_statement
TARGET LIST: 
target index: 103  , change_value: expression_statement
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%

statement  :  %MARK%  compound_statement  
 index is: 104, term type: to_deduce, before: %NULL%, after: compound_statement
TARGET LIST: 
target index: 56  , change_value: %NULL%
target index: 105  , change_value: compound_statement

declaration  :  %MARK%  type_specifier  init_declarator  ';'  
 index is: 67, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 68  , change_value: type_specifier

return_statement  :  %MARK%  'return'  expression_statement  
 index is: 145, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 146  , change_value: 'return'

iteration_statement  :  %MARK%  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 122, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 123  , change_value: 'for'

selection_statement  :  %MARK%  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 111, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 112  , change_value: 'if'

expression_statement  :  %MARK%  expression  ';'  
 index is: 106, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 107  , change_value: expression
target index: 148  , change_value: %NULL%

expression_statement  :  %MARK%  ';'  
 index is: 109, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 110  , change_value: ';'

compound_statement  :  %MARK%  '{'  compound_statement_0_rep_2  '}'  
 index is: 56, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 57  , change_value: '{'

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 136, target_source: compound_statement_0_rep_2

index: 135, target_source: statement

index: 137, target_source: declaration

index: 139, target_source: return_statement

index: 140, target_source: iteration_statement

index: 141, target_source: selection_statement

index: 142, target_source: expression_statement

index: 143, target_source: compound_statement

index: 18, target_source: type_specifier

index: 144, target_source: 'return'

index: 149, target_source: 'for'

index: 158, target_source: 'if'

index: 146, target_source: expression

index: 148, target_source: ';'

index: 132, target_source: '{'

index: 171, target_source: ID

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER



###########
#136  TERM#
###########


##########
#FROM SET#
##########
compound_statement_0_rep_2  :  statement  compound_statement_0_rep_2  %MARK%  
 index is: 63, term type: deduce, before: compound_statement_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
compound_statement_0_rep_2  :  statement  compound_statement_0_rep_2  %MARK%  
 index is: 63, term type: deduce, before: compound_statement_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#137  TERM#
###########


##########
#FROM SET#
##########
compound_statement_0_rep_2  :  declaration  %MARK%  compound_statement_0_rep_2  
 index is: 65, term type: to_deduce, before: declaration, after: compound_statement_0_rep_2
TARGET LIST: 
target index: 60  , change_value: %NULL%
target index: 61  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: compound_statement_0_rep_2

########
#SUBSET#
########
compound_statement_0_rep_2  :  declaration  %MARK%  compound_statement_0_rep_2  
 index is: 65, term type: to_deduce, before: declaration, after: compound_statement_0_rep_2
TARGET LIST: 
target index: 60  , change_value: %NULL%
target index: 61  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: compound_statement_0_rep_2

compound_statement_0_rep_2  :  %MARK%  
 index is: 60, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

compound_statement_0_rep_2  :  %MARK%  statement  compound_statement_0_rep_2  
 index is: 61, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 62  , change_value: statement
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%

compound_statement_0_rep_2  :  %MARK%  declaration  compound_statement_0_rep_2  
 index is: 64, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 65  , change_value: declaration
target index: 67  , change_value: %NULL%

statement  :  %MARK%  return_statement  
 index is: 96, term type: to_deduce, before: %NULL%, after: return_statement
TARGET LIST: 
target index: 97  , change_value: return_statement
target index: 145  , change_value: %NULL%

statement  :  %MARK%  iteration_statement  
 index is: 98, term type: to_deduce, before: %NULL%, after: iteration_statement
TARGET LIST: 
target index: 99  , change_value: iteration_statement
target index: 122  , change_value: %NULL%

statement  :  %MARK%  selection_statement  
 index is: 100, term type: to_deduce, before: %NULL%, after: selection_statement
TARGET LIST: 
target index: 101  , change_value: selection_statement
target index: 111  , change_value: %NULL%

statement  :  %MARK%  expression_statement  
 index is: 102, term type: to_deduce, before: %NULL%, after: expression_statement
TARGET LIST: 
target index: 103  , change_value: expression_statement
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%

statement  :  %MARK%  compound_statement  
 index is: 104, term type: to_deduce, before: %NULL%, after: compound_statement
TARGET LIST: 
target index: 56  , change_value: %NULL%
target index: 105  , change_value: compound_statement

declaration  :  %MARK%  type_specifier  init_declarator  ';'  
 index is: 67, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 68  , change_value: type_specifier

return_statement  :  %MARK%  'return'  expression_statement  
 index is: 145, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 146  , change_value: 'return'

iteration_statement  :  %MARK%  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 122, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 123  , change_value: 'for'

selection_statement  :  %MARK%  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 111, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 112  , change_value: 'if'

expression_statement  :  %MARK%  expression  ';'  
 index is: 106, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 107  , change_value: expression
target index: 148  , change_value: %NULL%

expression_statement  :  %MARK%  ';'  
 index is: 109, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 110  , change_value: ';'

compound_statement  :  %MARK%  '{'  compound_statement_0_rep_2  '}'  
 index is: 56, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 57  , change_value: '{'

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 138, target_source: compound_statement_0_rep_2

index: 135, target_source: statement

index: 137, target_source: declaration

index: 139, target_source: return_statement

index: 140, target_source: iteration_statement

index: 141, target_source: selection_statement

index: 142, target_source: expression_statement

index: 143, target_source: compound_statement

index: 18, target_source: type_specifier

index: 144, target_source: 'return'

index: 149, target_source: 'for'

index: 158, target_source: 'if'

index: 146, target_source: expression

index: 148, target_source: ';'

index: 132, target_source: '{'

index: 171, target_source: ID

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER



###########
#138  TERM#
###########


##########
#FROM SET#
##########
compound_statement_0_rep_2  :  declaration  compound_statement_0_rep_2  %MARK%  
 index is: 66, term type: deduce, before: compound_statement_0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
compound_statement_0_rep_2  :  declaration  compound_statement_0_rep_2  %MARK%  
 index is: 66, term type: deduce, before: compound_statement_0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#139  TERM#
###########


##########
#FROM SET#
##########
statement  :  return_statement  %MARK%  
 index is: 97, term type: deduce, before: return_statement, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  return_statement  %MARK%  
 index is: 97, term type: deduce, before: return_statement, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#140  TERM#
###########


##########
#FROM SET#
##########
statement  :  iteration_statement  %MARK%  
 index is: 99, term type: deduce, before: iteration_statement, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  iteration_statement  %MARK%  
 index is: 99, term type: deduce, before: iteration_statement, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#141  TERM#
###########


##########
#FROM SET#
##########
statement  :  selection_statement  %MARK%  
 index is: 101, term type: deduce, before: selection_statement, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  selection_statement  %MARK%  
 index is: 101, term type: deduce, before: selection_statement, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#142  TERM#
###########


##########
#FROM SET#
##########
statement  :  expression_statement  %MARK%  
 index is: 103, term type: deduce, before: expression_statement, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  expression_statement  %MARK%  
 index is: 103, term type: deduce, before: expression_statement, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#143  TERM#
###########


##########
#FROM SET#
##########
statement  :  compound_statement  %MARK%  
 index is: 105, term type: deduce, before: compound_statement, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  compound_statement  %MARK%  
 index is: 105, term type: deduce, before: compound_statement, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#144  TERM#
###########


##########
#FROM SET#
##########
return_statement  :  'return'  %MARK%  expression_statement  
 index is: 146, term type: to_deduce, before: 'return', after: expression_statement
TARGET LIST: 
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%
target index: 147  , change_value: expression_statement

########
#SUBSET#
########
return_statement  :  'return'  %MARK%  expression_statement  
 index is: 146, term type: to_deduce, before: 'return', after: expression_statement
TARGET LIST: 
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%
target index: 147  , change_value: expression_statement

expression_statement  :  %MARK%  expression  ';'  
 index is: 106, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 107  , change_value: expression
target index: 148  , change_value: %NULL%

expression_statement  :  %MARK%  ';'  
 index is: 109, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 110  , change_value: ';'

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 145, target_source: expression_statement

index: 146, target_source: expression

index: 148, target_source: ';'

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



###########
#145  TERM#
###########


##########
#FROM SET#
##########
return_statement  :  'return'  expression_statement  %MARK%  
 index is: 147, term type: deduce, before: expression_statement, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
return_statement  :  'return'  expression_statement  %MARK%  
 index is: 147, term type: deduce, before: expression_statement, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#146  TERM#
###########


##########
#FROM SET#
##########
expression_statement  :  expression  %MARK%  ';'  
 index is: 107, term type: shift, before: expression, after: ';'
TARGET LIST: 
target index: 108  , change_value: ';'

########
#SUBSET#
########
expression_statement  :  expression  %MARK%  ';'  
 index is: 107, term type: shift, before: expression, after: ';'
TARGET LIST: 
target index: 108  , change_value: ';'

########
#TO SET#
########
index: 147, target_source: ';'



###########
#147  TERM#
###########


##########
#FROM SET#
##########
expression_statement  :  expression  ';'  %MARK%  
 index is: 108, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expression_statement  :  expression  ';'  %MARK%  
 index is: 108, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#148  TERM#
###########


##########
#FROM SET#
##########
expression_statement  :  ';'  %MARK%  
 index is: 110, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expression_statement  :  ';'  %MARK%  
 index is: 110, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#149  TERM#
###########


##########
#FROM SET#
##########
iteration_statement  :  'for'  %MARK%  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 123, term type: shift, before: 'for', after: '('
TARGET LIST: 
target index: 124  , change_value: '('

########
#SUBSET#
########
iteration_statement  :  'for'  %MARK%  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 123, term type: shift, before: 'for', after: '('
TARGET LIST: 
target index: 124  , change_value: '('

########
#TO SET#
########
index: 150, target_source: '('



###########
#150  TERM#
###########


##########
#FROM SET#
##########
iteration_statement  :  'for'  '('  %MARK%  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 124, term type: to_deduce, before: '(', after: iteration_statement_0_opt_3
TARGET LIST: 
target index: 125  , change_value: iteration_statement_0_opt_3
target index: 138  , change_value: %NULL%
target index: 139  , change_value: %NULL%

########
#SUBSET#
########
iteration_statement  :  'for'  '('  %MARK%  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 124, term type: to_deduce, before: '(', after: iteration_statement_0_opt_3
TARGET LIST: 
target index: 125  , change_value: iteration_statement_0_opt_3
target index: 138  , change_value: %NULL%
target index: 139  , change_value: %NULL%

iteration_statement_0_opt_3  :  %MARK%  
 index is: 138, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_3  :  %MARK%  iteration_statement_0_opt_3_0_opt_1  init_declarator  
 index is: 139, term type: to_deduce, before: %NULL%, after: iteration_statement_0_opt_3_0_opt_1
TARGET LIST: 
target index: 140  , change_value: iteration_statement_0_opt_3_0_opt_1
target index: 142  , change_value: %NULL%
target index: 143  , change_value: %NULL%

iteration_statement_0_opt_3_0_opt_1  :  %MARK%  
 index is: 142, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_3_0_opt_1  :  %MARK%  type_specifier  
 index is: 143, term type: to_deduce, before: %NULL%, after: type_specifier
TARGET LIST: 
target index: 18  , change_value: %NULL%
target index: 144  , change_value: type_specifier

type_specifier  :  %MARK%  ID  
 index is: 18, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 19  , change_value: ID

########
#TO SET#
########
index: 151, target_source: iteration_statement_0_opt_3

index: 168, target_source: iteration_statement_0_opt_3_0_opt_1

index: 170, target_source: type_specifier

index: 121, target_source: ID



###########
#151  TERM#
###########


##########
#FROM SET#
##########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  %MARK%  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 125, term type: shift, before: iteration_statement_0_opt_3, after: ';'
TARGET LIST: 
target index: 126  , change_value: ';'

########
#SUBSET#
########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  %MARK%  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 125, term type: shift, before: iteration_statement_0_opt_3, after: ';'
TARGET LIST: 
target index: 126  , change_value: ';'

########
#TO SET#
########
index: 152, target_source: ';'



###########
#152  TERM#
###########


##########
#FROM SET#
##########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  %MARK%  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 126, term type: to_deduce, before: ';', after: iteration_statement_0_opt_5
TARGET LIST: 
target index: 127  , change_value: iteration_statement_0_opt_5
target index: 135  , change_value: %NULL%
target index: 136  , change_value: %NULL%

########
#SUBSET#
########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  %MARK%  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 126, term type: to_deduce, before: ';', after: iteration_statement_0_opt_5
TARGET LIST: 
target index: 127  , change_value: iteration_statement_0_opt_5
target index: 135  , change_value: %NULL%
target index: 136  , change_value: %NULL%

iteration_statement_0_opt_5  :  %MARK%  
 index is: 135, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_5  :  %MARK%  expression  
 index is: 136, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 137  , change_value: expression
target index: 148  , change_value: %NULL%

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 153, target_source: iteration_statement_0_opt_5

index: 167, target_source: expression

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



###########
#153  TERM#
###########


##########
#FROM SET#
##########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  %MARK%  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 127, term type: shift, before: iteration_statement_0_opt_5, after: ';'
TARGET LIST: 
target index: 128  , change_value: ';'

########
#SUBSET#
########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  %MARK%  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 127, term type: shift, before: iteration_statement_0_opt_5, after: ';'
TARGET LIST: 
target index: 128  , change_value: ';'

########
#TO SET#
########
index: 154, target_source: ';'



###########
#154  TERM#
###########


##########
#FROM SET#
##########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  %MARK%  iteration_statement_0_opt_7  ')'  statement  
 index is: 128, term type: to_deduce, before: ';', after: iteration_statement_0_opt_7
TARGET LIST: 
target index: 129  , change_value: iteration_statement_0_opt_7
target index: 132  , change_value: %NULL%
target index: 133  , change_value: %NULL%

########
#SUBSET#
########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  %MARK%  iteration_statement_0_opt_7  ')'  statement  
 index is: 128, term type: to_deduce, before: ';', after: iteration_statement_0_opt_7
TARGET LIST: 
target index: 129  , change_value: iteration_statement_0_opt_7
target index: 132  , change_value: %NULL%
target index: 133  , change_value: %NULL%

iteration_statement_0_opt_7  :  %MARK%  
 index is: 132, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

iteration_statement_0_opt_7  :  %MARK%  expression  
 index is: 133, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 134  , change_value: expression
target index: 148  , change_value: %NULL%

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 155, target_source: iteration_statement_0_opt_7

index: 166, target_source: expression

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



###########
#155  TERM#
###########


##########
#FROM SET#
##########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  %MARK%  ')'  statement  
 index is: 129, term type: shift, before: iteration_statement_0_opt_7, after: ')'
TARGET LIST: 
target index: 130  , change_value: ')'

########
#SUBSET#
########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  %MARK%  ')'  statement  
 index is: 129, term type: shift, before: iteration_statement_0_opt_7, after: ')'
TARGET LIST: 
target index: 130  , change_value: ')'

########
#TO SET#
########
index: 156, target_source: ')'



###########
#156  TERM#
###########


##########
#FROM SET#
##########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  %MARK%  statement  
 index is: 130, term type: to_deduce, before: ')', after: statement
TARGET LIST: 
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%
target index: 131  , change_value: statement

########
#SUBSET#
########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  %MARK%  statement  
 index is: 130, term type: to_deduce, before: ')', after: statement
TARGET LIST: 
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%
target index: 131  , change_value: statement

statement  :  %MARK%  return_statement  
 index is: 96, term type: to_deduce, before: %NULL%, after: return_statement
TARGET LIST: 
target index: 97  , change_value: return_statement
target index: 145  , change_value: %NULL%

statement  :  %MARK%  iteration_statement  
 index is: 98, term type: to_deduce, before: %NULL%, after: iteration_statement
TARGET LIST: 
target index: 99  , change_value: iteration_statement
target index: 122  , change_value: %NULL%

statement  :  %MARK%  selection_statement  
 index is: 100, term type: to_deduce, before: %NULL%, after: selection_statement
TARGET LIST: 
target index: 101  , change_value: selection_statement
target index: 111  , change_value: %NULL%

statement  :  %MARK%  expression_statement  
 index is: 102, term type: to_deduce, before: %NULL%, after: expression_statement
TARGET LIST: 
target index: 103  , change_value: expression_statement
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%

statement  :  %MARK%  compound_statement  
 index is: 104, term type: to_deduce, before: %NULL%, after: compound_statement
TARGET LIST: 
target index: 56  , change_value: %NULL%
target index: 105  , change_value: compound_statement

return_statement  :  %MARK%  'return'  expression_statement  
 index is: 145, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 146  , change_value: 'return'

iteration_statement  :  %MARK%  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 122, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 123  , change_value: 'for'

selection_statement  :  %MARK%  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 111, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 112  , change_value: 'if'

expression_statement  :  %MARK%  expression  ';'  
 index is: 106, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 107  , change_value: expression
target index: 148  , change_value: %NULL%

expression_statement  :  %MARK%  ';'  
 index is: 109, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 110  , change_value: ';'

compound_statement  :  %MARK%  '{'  compound_statement_0_rep_2  '}'  
 index is: 56, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 57  , change_value: '{'

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 157, target_source: statement

index: 139, target_source: return_statement

index: 140, target_source: iteration_statement

index: 141, target_source: selection_statement

index: 142, target_source: expression_statement

index: 143, target_source: compound_statement

index: 144, target_source: 'return'

index: 149, target_source: 'for'

index: 158, target_source: 'if'

index: 146, target_source: expression

index: 148, target_source: ';'

index: 132, target_source: '{'

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



###########
#157  TERM#
###########


##########
#FROM SET#
##########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  %MARK%  
 index is: 131, term type: deduce, before: statement, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
iteration_statement  :  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  %MARK%  
 index is: 131, term type: deduce, before: statement, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#158  TERM#
###########


##########
#FROM SET#
##########
selection_statement  :  'if'  %MARK%  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 112, term type: shift, before: 'if', after: '('
TARGET LIST: 
target index: 113  , change_value: '('

########
#SUBSET#
########
selection_statement  :  'if'  %MARK%  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 112, term type: shift, before: 'if', after: '('
TARGET LIST: 
target index: 113  , change_value: '('

########
#TO SET#
########
index: 159, target_source: '('



###########
#159  TERM#
###########


##########
#FROM SET#
##########
selection_statement  :  'if'  '('  %MARK%  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 113, term type: to_deduce, before: '(', after: expression
TARGET LIST: 
target index: 114  , change_value: expression
target index: 148  , change_value: %NULL%

########
#SUBSET#
########
selection_statement  :  'if'  '('  %MARK%  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 113, term type: to_deduce, before: '(', after: expression
TARGET LIST: 
target index: 114  , change_value: expression
target index: 148  , change_value: %NULL%

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 160, target_source: expression

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



###########
#160  TERM#
###########


##########
#FROM SET#
##########
selection_statement  :  'if'  '('  expression  %MARK%  ')'  statement  selection_statement_0_opt_6  
 index is: 114, term type: shift, before: expression, after: ')'
TARGET LIST: 
target index: 115  , change_value: ')'

########
#SUBSET#
########
selection_statement  :  'if'  '('  expression  %MARK%  ')'  statement  selection_statement_0_opt_6  
 index is: 114, term type: shift, before: expression, after: ')'
TARGET LIST: 
target index: 115  , change_value: ')'

########
#TO SET#
########
index: 161, target_source: ')'



###########
#161  TERM#
###########


##########
#FROM SET#
##########
selection_statement  :  'if'  '('  expression  ')'  %MARK%  statement  selection_statement_0_opt_6  
 index is: 115, term type: to_deduce, before: ')', after: statement
TARGET LIST: 
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%
target index: 116  , change_value: statement

########
#SUBSET#
########
selection_statement  :  'if'  '('  expression  ')'  %MARK%  statement  selection_statement_0_opt_6  
 index is: 115, term type: to_deduce, before: ')', after: statement
TARGET LIST: 
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%
target index: 116  , change_value: statement

statement  :  %MARK%  return_statement  
 index is: 96, term type: to_deduce, before: %NULL%, after: return_statement
TARGET LIST: 
target index: 97  , change_value: return_statement
target index: 145  , change_value: %NULL%

statement  :  %MARK%  iteration_statement  
 index is: 98, term type: to_deduce, before: %NULL%, after: iteration_statement
TARGET LIST: 
target index: 99  , change_value: iteration_statement
target index: 122  , change_value: %NULL%

statement  :  %MARK%  selection_statement  
 index is: 100, term type: to_deduce, before: %NULL%, after: selection_statement
TARGET LIST: 
target index: 101  , change_value: selection_statement
target index: 111  , change_value: %NULL%

statement  :  %MARK%  expression_statement  
 index is: 102, term type: to_deduce, before: %NULL%, after: expression_statement
TARGET LIST: 
target index: 103  , change_value: expression_statement
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%

statement  :  %MARK%  compound_statement  
 index is: 104, term type: to_deduce, before: %NULL%, after: compound_statement
TARGET LIST: 
target index: 56  , change_value: %NULL%
target index: 105  , change_value: compound_statement

return_statement  :  %MARK%  'return'  expression_statement  
 index is: 145, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 146  , change_value: 'return'

iteration_statement  :  %MARK%  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 122, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 123  , change_value: 'for'

selection_statement  :  %MARK%  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 111, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 112  , change_value: 'if'

expression_statement  :  %MARK%  expression  ';'  
 index is: 106, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 107  , change_value: expression
target index: 148  , change_value: %NULL%

expression_statement  :  %MARK%  ';'  
 index is: 109, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 110  , change_value: ';'

compound_statement  :  %MARK%  '{'  compound_statement_0_rep_2  '}'  
 index is: 56, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 57  , change_value: '{'

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 162, target_source: statement

index: 139, target_source: return_statement

index: 140, target_source: iteration_statement

index: 141, target_source: selection_statement

index: 142, target_source: expression_statement

index: 143, target_source: compound_statement

index: 144, target_source: 'return'

index: 149, target_source: 'for'

index: 158, target_source: 'if'

index: 146, target_source: expression

index: 148, target_source: ';'

index: 132, target_source: '{'

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



###########
#162  TERM#
###########


##########
#FROM SET#
##########
selection_statement  :  'if'  '('  expression  ')'  statement  %MARK%  selection_statement_0_opt_6  
 index is: 116, term type: to_deduce, before: statement, after: selection_statement_0_opt_6
TARGET LIST: 
target index: 117  , change_value: selection_statement_0_opt_6
target index: 118  , change_value: %NULL%
target index: 119  , change_value: %NULL%

########
#SUBSET#
########
selection_statement  :  'if'  '('  expression  ')'  statement  %MARK%  selection_statement_0_opt_6  
 index is: 116, term type: to_deduce, before: statement, after: selection_statement_0_opt_6
TARGET LIST: 
target index: 117  , change_value: selection_statement_0_opt_6
target index: 118  , change_value: %NULL%
target index: 119  , change_value: %NULL%

selection_statement_0_opt_6  :  %MARK%  
 index is: 118, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

selection_statement_0_opt_6  :  %MARK%  'else'  statement  
 index is: 119, term type: shift, before: %NULL%, after: 'else'
TARGET LIST: 
target index: 120  , change_value: 'else'

########
#TO SET#
########
index: 163, target_source: selection_statement_0_opt_6

index: 164, target_source: 'else'



###########
#163  TERM#
###########


##########
#FROM SET#
##########
selection_statement  :  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  %MARK%  
 index is: 117, term type: deduce, before: selection_statement_0_opt_6, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
selection_statement  :  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  %MARK%  
 index is: 117, term type: deduce, before: selection_statement_0_opt_6, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#164  TERM#
###########


##########
#FROM SET#
##########
selection_statement_0_opt_6  :  'else'  %MARK%  statement  
 index is: 120, term type: to_deduce, before: 'else', after: statement
TARGET LIST: 
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%
target index: 121  , change_value: statement

########
#SUBSET#
########
selection_statement_0_opt_6  :  'else'  %MARK%  statement  
 index is: 120, term type: to_deduce, before: 'else', after: statement
TARGET LIST: 
target index: 96  , change_value: %NULL%
target index: 98  , change_value: %NULL%
target index: 100  , change_value: %NULL%
target index: 102  , change_value: %NULL%
target index: 104  , change_value: %NULL%
target index: 121  , change_value: statement

statement  :  %MARK%  return_statement  
 index is: 96, term type: to_deduce, before: %NULL%, after: return_statement
TARGET LIST: 
target index: 97  , change_value: return_statement
target index: 145  , change_value: %NULL%

statement  :  %MARK%  iteration_statement  
 index is: 98, term type: to_deduce, before: %NULL%, after: iteration_statement
TARGET LIST: 
target index: 99  , change_value: iteration_statement
target index: 122  , change_value: %NULL%

statement  :  %MARK%  selection_statement  
 index is: 100, term type: to_deduce, before: %NULL%, after: selection_statement
TARGET LIST: 
target index: 101  , change_value: selection_statement
target index: 111  , change_value: %NULL%

statement  :  %MARK%  expression_statement  
 index is: 102, term type: to_deduce, before: %NULL%, after: expression_statement
TARGET LIST: 
target index: 103  , change_value: expression_statement
target index: 106  , change_value: %NULL%
target index: 109  , change_value: %NULL%

statement  :  %MARK%  compound_statement  
 index is: 104, term type: to_deduce, before: %NULL%, after: compound_statement
TARGET LIST: 
target index: 56  , change_value: %NULL%
target index: 105  , change_value: compound_statement

return_statement  :  %MARK%  'return'  expression_statement  
 index is: 145, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 146  , change_value: 'return'

iteration_statement  :  %MARK%  'for'  '('  iteration_statement_0_opt_3  ';'  iteration_statement_0_opt_5  ';'  iteration_statement_0_opt_7  ')'  statement  
 index is: 122, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 123  , change_value: 'for'

selection_statement  :  %MARK%  'if'  '('  expression  ')'  statement  selection_statement_0_opt_6  
 index is: 111, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 112  , change_value: 'if'

expression_statement  :  %MARK%  expression  ';'  
 index is: 106, term type: to_deduce, before: %NULL%, after: expression
TARGET LIST: 
target index: 107  , change_value: expression
target index: 148  , change_value: %NULL%

expression_statement  :  %MARK%  ';'  
 index is: 109, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 110  , change_value: ';'

compound_statement  :  %MARK%  '{'  compound_statement_0_rep_2  '}'  
 index is: 56, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 57  , change_value: '{'

expression  :  %MARK%  assignment_expression  expression_0_rep_2  
 index is: 148, term type: to_deduce, before: %NULL%, after: assignment_expression
TARGET LIST: 
target index: 149  , change_value: assignment_expression
target index: 156  , change_value: %NULL%

assignment_expression  :  %MARK%  equality_expression  assignment_expression_0_opt_2  
 index is: 156, term type: to_deduce, before: %NULL%, after: equality_expression
TARGET LIST: 
target index: 157  , change_value: equality_expression
target index: 173  , change_value: %NULL%

equality_expression  :  %MARK%  relat_expression  equality_expression_0_opt_2  
 index is: 173, term type: to_deduce, before: %NULL%, after: relat_expression
TARGET LIST: 
target index: 174  , change_value: relat_expression
target index: 184  , change_value: %NULL%

relat_expression  :  %MARK%  additive_expression  relat_expression_0_opt_2  
 index is: 184, term type: to_deduce, before: %NULL%, after: additive_expression
TARGET LIST: 
target index: 185  , change_value: additive_expression
target index: 199  , change_value: %NULL%

additive_expression  :  %MARK%  multiplicative_expression  additive_expression_0_opt_2  
 index is: 199, term type: to_deduce, before: %NULL%, after: multiplicative_expression
TARGET LIST: 
target index: 200  , change_value: multiplicative_expression
target index: 210  , change_value: %NULL%

multiplicative_expression  :  %MARK%  unary_expression  multiplicative_expression_0_opt_2  
 index is: 210, term type: to_deduce, before: %NULL%, after: unary_expression
TARGET LIST: 
target index: 211  , change_value: unary_expression
target index: 221  , change_value: %NULL%
target index: 223  , change_value: %NULL%

unary_expression  :  %MARK%  postfix_expression  
 index is: 221, term type: to_deduce, before: %NULL%, after: postfix_expression
TARGET LIST: 
target index: 222  , change_value: postfix_expression
target index: 232  , change_value: %NULL%

unary_expression  :  %MARK%  sadd_op  unary_expression  
 index is: 223, term type: to_deduce, before: %NULL%, after: sadd_op
TARGET LIST: 
target index: 224  , change_value: sadd_op
target index: 226  , change_value: %NULL%
target index: 228  , change_value: %NULL%
target index: 230  , change_value: %NULL%

postfix_expression  :  %MARK%  primary_expression  postfix_expression_0_rep_2  
 index is: 232, term type: to_deduce, before: %NULL%, after: primary_expression
TARGET LIST: 
target index: 233  , change_value: primary_expression
target index: 265  , change_value: %NULL%
target index: 269  , change_value: %NULL%
target index: 271  , change_value: %NULL%

sadd_op  :  %MARK%  '-'  
 index is: 226, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 227  , change_value: '-'

sadd_op  :  %MARK%  '--'  
 index is: 228, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 229  , change_value: '--'

sadd_op  :  %MARK%  '++'  
 index is: 230, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 231  , change_value: '++'

primary_expression  :  %MARK%  '('  expression  ')'  
 index is: 265, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 266  , change_value: '('

primary_expression  :  %MARK%  NUMBER  
 index is: 269, term type: shift, before: %NULL%, after: NUMBER
TARGET LIST: 
target index: 270  , change_value: NUMBER

primary_expression  :  %MARK%  ID  
 index is: 271, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 272  , change_value: ID

########
#TO SET#
########
index: 165, target_source: statement

index: 139, target_source: return_statement

index: 140, target_source: iteration_statement

index: 141, target_source: selection_statement

index: 142, target_source: expression_statement

index: 143, target_source: compound_statement

index: 144, target_source: 'return'

index: 149, target_source: 'for'

index: 158, target_source: 'if'

index: 146, target_source: expression

index: 148, target_source: ';'

index: 132, target_source: '{'

index: 80, target_source: assignment_expression

index: 36, target_source: equality_expression

index: 40, target_source: relat_expression

index: 44, target_source: additive_expression

index: 48, target_source: multiplicative_expression

index: 52, target_source: unary_expression

index: 56, target_source: postfix_expression

index: 57, target_source: sadd_op

index: 59, target_source: primary_expression

index: 74, target_source: '-'

index: 75, target_source: '--'

index: 76, target_source: '++'

index: 77, target_source: '('

index: 85, target_source: NUMBER

index: 86, target_source: ID



###########
#165  TERM#
###########


##########
#FROM SET#
##########
selection_statement_0_opt_6  :  'else'  statement  %MARK%  
 index is: 121, term type: deduce, before: statement, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
selection_statement_0_opt_6  :  'else'  statement  %MARK%  
 index is: 121, term type: deduce, before: statement, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#166  TERM#
###########


##########
#FROM SET#
##########
iteration_statement_0_opt_7  :  expression  %MARK%  
 index is: 134, term type: deduce, before: expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
iteration_statement_0_opt_7  :  expression  %MARK%  
 index is: 134, term type: deduce, before: expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#167  TERM#
###########


##########
#FROM SET#
##########
iteration_statement_0_opt_5  :  expression  %MARK%  
 index is: 137, term type: deduce, before: expression, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
iteration_statement_0_opt_5  :  expression  %MARK%  
 index is: 137, term type: deduce, before: expression, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#168  TERM#
###########


##########
#FROM SET#
##########
iteration_statement_0_opt_3  :  iteration_statement_0_opt_3_0_opt_1  %MARK%  init_declarator  
 index is: 140, term type: to_deduce, before: iteration_statement_0_opt_3_0_opt_1, after: init_declarator
TARGET LIST: 
target index: 71  , change_value: %NULL%
target index: 141  , change_value: init_declarator

########
#SUBSET#
########
iteration_statement_0_opt_3  :  iteration_statement_0_opt_3_0_opt_1  %MARK%  init_declarator  
 index is: 140, term type: to_deduce, before: iteration_statement_0_opt_3_0_opt_1, after: init_declarator
TARGET LIST: 
target index: 71  , change_value: %NULL%
target index: 141  , change_value: init_declarator

init_declarator  :  %MARK%  direct_declarator  init_declarator_0_opt_2  
 index is: 71, term type: to_deduce, before: %NULL%, after: direct_declarator
TARGET LIST: 
target index: 20  , change_value: %NULL%
target index: 72  , change_value: direct_declarator

direct_declarator  :  %MARK%  ID  extend_part  
 index is: 20, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 21  , change_value: ID

########
#TO SET#
########
index: 169, target_source: init_declarator

index: 21, target_source: direct_declarator

index: 107, target_source: ID



###########
#169  TERM#
###########


##########
#FROM SET#
##########
iteration_statement_0_opt_3  :  iteration_statement_0_opt_3_0_opt_1  init_declarator  %MARK%  
 index is: 141, term type: deduce, before: init_declarator, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
iteration_statement_0_opt_3  :  iteration_statement_0_opt_3_0_opt_1  init_declarator  %MARK%  
 index is: 141, term type: deduce, before: init_declarator, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#170  TERM#
###########


##########
#FROM SET#
##########
iteration_statement_0_opt_3_0_opt_1  :  type_specifier  %MARK%  
 index is: 144, term type: deduce, before: type_specifier, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
iteration_statement_0_opt_3_0_opt_1  :  type_specifier  %MARK%  
 index is: 144, term type: deduce, before: type_specifier, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#171  TERM#
###########


##########
#FROM SET#
##########
type_specifier  :  ID  %MARK%  
 index is: 19, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

primary_expression  :  ID  %MARK%  
 index is: 272, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
type_specifier  :  ID  %MARK%  
 index is: 19, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

primary_expression  :  ID  %MARK%  
 index is: 272, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########





########
LOG INFO
########
0  has shift-deduce conflict(MAY HAVE CONFILICT)
struct_specifier   program_0_rep_1 shift-deduce(NOT CONFLICT)
type_specifier   program_0_rep_1 shift-deduce(NOT CONFLICT)
3  has shift-deduce conflict(MAY HAVE CONFILICT)
struct_specifier   program_0_rep_1 shift-deduce(NOT CONFLICT)
type_specifier   program_0_rep_1 shift-deduce(NOT CONFLICT)
10  has shift-deduce conflict(MAY HAVE CONFILICT)
type_specifier   struct_specifier_0_rep_4 shift-deduce(NOT CONFLICT)
12  has shift-deduce conflict(MAY HAVE CONFILICT)
struct_specifier_0_opt_6   struct_specifier_0_opt_6 shift-deduce(NOT CONFLICT)
16  has shift-deduce conflict(MAY HAVE CONFILICT)
type_specifier   struct_specifier_0_rep_4 shift-deduce(NOT CONFLICT)
21  has shift-deduce conflict(MAY HAVE CONFILICT)
init_declarator_0_opt_2   init_declarator_0_opt_2 shift-deduce(NOT CONFLICT)
26  has shift-deduce conflict(MAY HAVE CONFILICT)
initializer_1_opt_3   initializer_1_opt_3 shift-deduce(NOT CONFLICT)
30  has shift-deduce conflict(MAY HAVE CONFILICT)
initializer_list_0_rep_2   initializer_list_0_rep_2 shift-deduce conflict
33  has shift-deduce conflict(MAY HAVE CONFILICT)
initializer_list_0_rep_2   initializer_list_0_rep_2 shift-deduce conflict
36  has shift-deduce conflict(MAY HAVE CONFILICT)
assign_op   assignment_expression_0_opt_2 shift-deduce(NOT CONFLICT)
assign_op   assignment_expression_0_opt_2 shift-deduce(NOT CONFLICT)
assign_op   assignment_expression_0_opt_2 shift-deduce(NOT CONFLICT)
assign_op   assignment_expression_0_opt_2 shift-deduce(NOT CONFLICT)
assign_op   assignment_expression_0_opt_2 shift-deduce(NOT CONFLICT)
40  has shift-deduce conflict(MAY HAVE CONFILICT)
equal_op   equality_expression_0_opt_2 shift-deduce(NOT CONFLICT)
equal_op   equality_expression_0_opt_2 shift-deduce(NOT CONFLICT)
44  has shift-deduce conflict(MAY HAVE CONFILICT)
relat_op   relat_expression_0_opt_2 shift-deduce(NOT CONFLICT)
relat_op   relat_expression_0_opt_2 shift-deduce(NOT CONFLICT)
relat_op   relat_expression_0_opt_2 shift-deduce(NOT CONFLICT)
relat_op   relat_expression_0_opt_2 shift-deduce(NOT CONFLICT)
48  has shift-deduce conflict(MAY HAVE CONFILICT)
add_op   additive_expression_0_opt_2 shift-deduce(NOT CONFLICT)
add_op   additive_expression_0_opt_2 shift-deduce(NOT CONFLICT)
52  has shift-deduce conflict(MAY HAVE CONFILICT)
mul_op   multiplicative_expression_0_opt_2 shift-deduce(NOT CONFLICT)
mul_op   multiplicative_expression_0_opt_2 shift-deduce(NOT CONFLICT)
59  has shift-deduce conflict(MAY HAVE CONFILICT)
postfix_extend_part   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
postfix_extend_part   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
postfix_extend_part   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
post_op   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
post_op   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
61  has shift-deduce conflict(MAY HAVE CONFILICT)
postfix_extend_part   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
postfix_extend_part   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
postfix_extend_part   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
post_op   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
post_op   postfix_expression_0_rep_2 shift-deduce(NOT CONFLICT)
66  has shift-deduce conflict(MAY HAVE CONFILICT)
sadd_op   postfix_extend_part_1_opt_2 shift-deduce(NOT CONFLICT)
sadd_op   postfix_extend_part_1_opt_2 shift-deduce(NOT CONFLICT)
sadd_op   postfix_extend_part_1_opt_2 shift-deduce(NOT CONFLICT)
primary_expression   postfix_extend_part_1_opt_2 shift-deduce(NOT CONFLICT)
primary_expression   postfix_extend_part_1_opt_2 shift-deduce(NOT CONFLICT)
primary_expression   postfix_extend_part_1_opt_2 shift-deduce(NOT CONFLICT)
69  has shift-deduce conflict(MAY HAVE CONFILICT)
postfix_extend_part_1_opt_2_0_rep_2   postfix_extend_part_1_opt_2_0_rep_2 shift-deduce(NOT CONFLICT)
72  has shift-deduce conflict(MAY HAVE CONFILICT)
postfix_extend_part_1_opt_2_0_rep_2   postfix_extend_part_1_opt_2_0_rep_2 shift-deduce(NOT CONFLICT)
80  has shift-deduce conflict(MAY HAVE CONFILICT)
expression_0_rep_2   expression_0_rep_2 shift-deduce(NOT CONFLICT)
83  has shift-deduce conflict(MAY HAVE CONFILICT)
expression_0_rep_2   expression_0_rep_2 shift-deduce(NOT CONFLICT)
107  has shift-deduce conflict(MAY HAVE CONFILICT)
extend_part   extend_part_0_rep_1 shift-deduce(NOT CONFLICT)
extend_part_0_rep_1   extend_part_0_rep_1 shift-deduce(NOT CONFLICT)
109  has shift-deduce conflict(MAY HAVE CONFILICT)
type_specifier   extend_part_1_opt_2 shift-deduce(NOT CONFLICT)
113  has shift-deduce conflict(MAY HAVE CONFILICT)
parameter_list_0_rep_2   parameter_list_0_rep_2 shift-deduce(NOT CONFLICT)
116  has shift-deduce conflict(MAY HAVE CONFILICT)
parameter_list_0_rep_2   parameter_list_0_rep_2 shift-deduce(NOT CONFLICT)
123  has shift-deduce conflict(MAY HAVE CONFILICT)
sadd_op   extend_part_0_rep_1_0_opt_2 shift-deduce(NOT CONFLICT)
sadd_op   extend_part_0_rep_1_0_opt_2 shift-deduce(NOT CONFLICT)
sadd_op   extend_part_0_rep_1_0_opt_2 shift-deduce(NOT CONFLICT)
primary_expression   extend_part_0_rep_1_0_opt_2 shift-deduce(NOT CONFLICT)
primary_expression   extend_part_0_rep_1_0_opt_2 shift-deduce(NOT CONFLICT)
primary_expression   extend_part_0_rep_1_0_opt_2 shift-deduce(NOT CONFLICT)
125  has shift-deduce conflict(MAY HAVE CONFILICT)
extend_part_0_rep_1   extend_part_0_rep_1 shift-deduce(NOT CONFLICT)
130  has shift-deduce conflict(MAY HAVE CONFILICT)
compound_statement   init_declarator_0_opt_2 shift-deduce(NOT CONFLICT)
init_declarator_0_opt_2   init_declarator_0_opt_2 shift-deduce(NOT CONFLICT)
132  has shift-deduce conflict(MAY HAVE CONFILICT)
return_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
iteration_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
selection_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
expression_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
compound_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
type_specifier   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
sadd_op   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
sadd_op   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
sadd_op   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
primary_expression   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
primary_expression   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
primary_expression   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
135  has shift-deduce conflict(MAY HAVE CONFILICT)
return_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
iteration_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
selection_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
expression_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
compound_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
type_specifier   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
sadd_op   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
sadd_op   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
sadd_op   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
primary_expression   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
primary_expression   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
primary_expression   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
137  has shift-deduce conflict(MAY HAVE CONFILICT)
return_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
iteration_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
selection_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
expression_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
compound_statement   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
type_specifier   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
sadd_op   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
sadd_op   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
sadd_op   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
primary_expression   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
primary_expression   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
primary_expression   compound_statement_0_rep_2 shift-deduce(NOT CONFLICT)
150  has deduce-deduce conflict(MAY HAVE CONFILICT)
	iteration_statement_0_opt_3   iteration_statement_0_opt_3_0_opt_1 deduce-deduce (NOT CONFLICT)
150  has shift-deduce conflict(MAY HAVE CONFILICT)
type_specifier   iteration_statement_0_opt_3 shift-deduce(NOT CONFLICT)
type_specifier   iteration_statement_0_opt_3_0_opt_1 shift-deduce conflict
152  has shift-deduce conflict(MAY HAVE CONFILICT)
sadd_op   iteration_statement_0_opt_5 shift-deduce(NOT CONFLICT)
sadd_op   iteration_statement_0_opt_5 shift-deduce(NOT CONFLICT)
sadd_op   iteration_statement_0_opt_5 shift-deduce(NOT CONFLICT)
primary_expression   iteration_statement_0_opt_5 shift-deduce(NOT CONFLICT)
primary_expression   iteration_statement_0_opt_5 shift-deduce(NOT CONFLICT)
primary_expression   iteration_statement_0_opt_5 shift-deduce(NOT CONFLICT)
154  has shift-deduce conflict(MAY HAVE CONFILICT)
sadd_op   iteration_statement_0_opt_7 shift-deduce(NOT CONFLICT)
sadd_op   iteration_statement_0_opt_7 shift-deduce(NOT CONFLICT)
sadd_op   iteration_statement_0_opt_7 shift-deduce(NOT CONFLICT)
primary_expression   iteration_statement_0_opt_7 shift-deduce(NOT CONFLICT)
primary_expression   iteration_statement_0_opt_7 shift-deduce(NOT CONFLICT)
primary_expression   iteration_statement_0_opt_7 shift-deduce(NOT CONFLICT)
162  has shift-deduce conflict(MAY HAVE CONFILICT)
selection_statement_0_opt_6   selection_statement_0_opt_6 shift-deduce conflict
171  has deduce-deduce conflict(MAY HAVE CONFILICT)
	type_specifier   primary_expression deduce-deduce (NOT CONFLICT)



##########
ERROR INFO
##########
initializer_list_0_rep_2   initializer_list_0_rep_2 shift-deduce conflict
initializer_list_0_rep_2   initializer_list_0_rep_2 shift-deduce conflict
type_specifier   iteration_statement_0_opt_3_0_opt_1 shift-deduce conflict
selection_statement_0_opt_6   selection_statement_0_opt_6 shift-deduce conflict



####################
CREATE PREDICT TABLE
####################



##################
SHOW PREDICT TABLE
##################
State 0 : 
	declaration :  6;
	external_declaration :  3;
	function_declaration :  7;
	'struct' :  8;
	program_0_rep_1 :  2;
	struct_specifier :  5;
	ID :  121;
	%END% : program_0_rep_1 ::=  NULL;
	type_specifier :  129;
	program :  1;

State 1 : 
	%END% :  -1;

State 2 : 
	%END% : program ::=  program_0_rep_1;

State 3 : 
	declaration :  6;
	external_declaration :  3;
	function_declaration :  7;
	'struct' :  8;
	program_0_rep_1 :  4;
	struct_specifier :  5;
	ID :  121;
	%END% : program_0_rep_1 ::=  NULL;
	type_specifier :  129;

State 4 : 
	%END% : program_0_rep_1 ::=  external_declaration program_0_rep_1;

State 5 : 
	ID : external_declaration ::=  struct_specifier;
	%END% : external_declaration ::=  struct_specifier;
	'struct' : external_declaration ::=  struct_specifier;

State 6 : 
	ID : external_declaration ::=  declaration;
	%END% : external_declaration ::=  declaration;
	'struct' : external_declaration ::=  declaration;

State 7 : 
	ID : external_declaration ::=  function_declaration;
	%END% : external_declaration ::=  function_declaration;
	'struct' : external_declaration ::=  function_declaration;

State 8 : 
	ID :  9;

State 9 : 
	'{' :  10;

State 10 : 
	declaration :  16;
	type_specifier :  18;
	'}' : struct_specifier_0_rep_4 ::=  NULL;
	ID :  121;
	struct_specifier_0_rep_4 :  11;

State 11 : 
	'}' :  12;

State 12 : 
	struct_specifier_0_opt_6 :  13;
	';' : struct_specifier_0_opt_6 ::=  NULL;
	ID :  15;

State 13 : 
	';' :  14;

State 14 : 
	ID : struct_specifier ::=  'struct' ID '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';';
	'struct' : struct_specifier ::=  'struct' ID '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';';
	%END% : struct_specifier ::=  'struct' ID '{' struct_specifier_0_rep_4 '}' struct_specifier_0_opt_6 ';';

State 15 : 
	';' : struct_specifier_0_opt_6 ::=  ID;

State 16 : 
	declaration :  16;
	type_specifier :  18;
	'}' : struct_specifier_0_rep_4 ::=  NULL;
	ID :  121;
	struct_specifier_0_rep_4 :  17;

State 17 : 
	'}' : struct_specifier_0_rep_4 ::=  declaration struct_specifier_0_rep_4;

State 18 : 
	direct_declarator :  21;
	init_declarator :  19;
	ID :  107;

State 19 : 
	';' :  20;

State 20 : 
	'(' : declaration ::=  type_specifier init_declarator ';';
	NUMBER : declaration ::=  type_specifier init_declarator ';';
	'--' : declaration ::=  type_specifier init_declarator ';';
	'}' : declaration ::=  type_specifier init_declarator ';';
	ID : declaration ::=  type_specifier init_declarator ';';
	'return' : declaration ::=  type_specifier init_declarator ';';
	'{' : declaration ::=  type_specifier init_declarator ';';
	'struct' : declaration ::=  type_specifier init_declarator ';';
	'for' : declaration ::=  type_specifier init_declarator ';';
	';' : declaration ::=  type_specifier init_declarator ';';
	'-' : declaration ::=  type_specifier init_declarator ';';
	%END% : declaration ::=  type_specifier init_declarator ';';
	'++' : declaration ::=  type_specifier init_declarator ';';
	'if' : declaration ::=  type_specifier init_declarator ';';

State 21 : 
	'=' :  23;
	';' : init_declarator_0_opt_2 ::=  NULL;
	init_declarator_0_opt_2 :  22;

State 22 : 
	';' : init_declarator ::=  direct_declarator init_declarator_0_opt_2;

State 23 : 
	relat_expression :  40;
	'(' :  77;
	'--' :  75;
	additive_expression :  44;
	multiplicative_expression :  48;
	assignment_expression :  35;
	equality_expression :  36;
	'++' :  76;
	NUMBER :  85;
	'{' :  25;
	sadd_op :  57;
	ID :  86;
	initializer :  24;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 24 : 
	';' : init_declarator_0_opt_2 ::=  '=' initializer;

State 25 : 
	relat_expression :  40;
	'(' :  77;
	'--' :  75;
	additive_expression :  44;
	equality_expression :  36;
	assignment_expression :  35;
	multiplicative_expression :  48;
	'++' :  76;
	initializer_list :  26;
	NUMBER :  85;
	'{' :  25;
	sadd_op :  57;
	ID :  86;
	initializer :  30;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 26 : 
	'}' : initializer_1_opt_3 ::=  NULL;
	initializer_1_opt_3 :  27;
	',' :  29;

State 27 : 
	'}' :  28;

State 28 : 
	'}' : initializer ::=  '{' initializer_list initializer_1_opt_3 '}';
	',' : initializer ::=  '{' initializer_list initializer_1_opt_3 '}';
	';' : initializer ::=  '{' initializer_list initializer_1_opt_3 '}';

State 29 : 
	'}' : initializer_1_opt_3 ::=  ',';

State 30 : 
	'}' : initializer_list_0_rep_2 ::=  NULL;
	',' :  32;
	initializer_list_0_rep_2 :  31;

State 31 : 
	'}' : initializer_list ::=  initializer initializer_list_0_rep_2;
	',' : initializer_list ::=  initializer initializer_list_0_rep_2;

State 32 : 
	relat_expression :  40;
	'(' :  77;
	'--' :  75;
	additive_expression :  44;
	multiplicative_expression :  48;
	assignment_expression :  35;
	equality_expression :  36;
	'++' :  76;
	NUMBER :  85;
	'{' :  25;
	sadd_op :  57;
	ID :  86;
	initializer :  33;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 33 : 
	'}' : initializer_list_0_rep_2 ::=  NULL;
	',' :  32;
	initializer_list_0_rep_2 :  34;

State 34 : 
	'}' : initializer_list_0_rep_2 ::=  ',' initializer initializer_list_0_rep_2;
	',' : initializer_list_0_rep_2 ::=  ',' initializer initializer_list_0_rep_2;

State 35 : 
	'}' : initializer ::=  assignment_expression;
	',' : initializer ::=  assignment_expression;
	';' : initializer ::=  assignment_expression;

State 36 : 
	assignment_expression_0_opt_2 :  37;
	assign_op :  38;
	'}' : assignment_expression_0_opt_2 ::=  NULL;
	'-=' :  104;
	'=' :  106;
	']' : assignment_expression_0_opt_2 ::=  NULL;
	'+=' :  105;
	')' : assignment_expression_0_opt_2 ::=  NULL;
	';' : assignment_expression_0_opt_2 ::=  NULL;
	'*=' :  103;
	',' : assignment_expression_0_opt_2 ::=  NULL;
	'/=' :  102;

State 37 : 
	']' : assignment_expression ::=  equality_expression assignment_expression_0_opt_2;
	')' : assignment_expression ::=  equality_expression assignment_expression_0_opt_2;
	';' : assignment_expression ::=  equality_expression assignment_expression_0_opt_2;
	'}' : assignment_expression ::=  equality_expression assignment_expression_0_opt_2;
	',' : assignment_expression ::=  equality_expression assignment_expression_0_opt_2;

State 38 : 
	relat_expression :  40;
	'(' :  77;
	'--' :  75;
	additive_expression :  44;
	multiplicative_expression :  48;
	assignment_expression :  39;
	equality_expression :  36;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 39 : 
	']' : assignment_expression_0_opt_2 ::=  assign_op assignment_expression;
	')' : assignment_expression_0_opt_2 ::=  assign_op assignment_expression;
	';' : assignment_expression_0_opt_2 ::=  assign_op assignment_expression;
	'}' : assignment_expression_0_opt_2 ::=  assign_op assignment_expression;
	',' : assignment_expression_0_opt_2 ::=  assign_op assignment_expression;

State 40 : 
	'/=' : equality_expression_0_opt_2 ::=  NULL;
	',' : equality_expression_0_opt_2 ::=  NULL;
	'}' : equality_expression_0_opt_2 ::=  NULL;
	'-=' : equality_expression_0_opt_2 ::=  NULL;
	'=' : equality_expression_0_opt_2 ::=  NULL;
	equality_expression_0_opt_2 :  41;
	'+=' : equality_expression_0_opt_2 ::=  NULL;
	']' : equality_expression_0_opt_2 ::=  NULL;
	';' : equality_expression_0_opt_2 ::=  NULL;
	'!=' :  100;
	')' : equality_expression_0_opt_2 ::=  NULL;
	'*=' : equality_expression_0_opt_2 ::=  NULL;
	equal_op :  42;
	'==' :  101;

State 41 : 
	'}' : equality_expression ::=  relat_expression equality_expression_0_opt_2;
	'=' : equality_expression ::=  relat_expression equality_expression_0_opt_2;
	'-=' : equality_expression ::=  relat_expression equality_expression_0_opt_2;
	']' : equality_expression ::=  relat_expression equality_expression_0_opt_2;
	'+=' : equality_expression ::=  relat_expression equality_expression_0_opt_2;
	')' : equality_expression ::=  relat_expression equality_expression_0_opt_2;
	';' : equality_expression ::=  relat_expression equality_expression_0_opt_2;
	'*=' : equality_expression ::=  relat_expression equality_expression_0_opt_2;
	',' : equality_expression ::=  relat_expression equality_expression_0_opt_2;
	'/=' : equality_expression ::=  relat_expression equality_expression_0_opt_2;

State 42 : 
	relat_expression :  40;
	'(' :  77;
	'--' :  75;
	NUMBER :  85;
	sadd_op :  57;
	additive_expression :  44;
	multiplicative_expression :  48;
	equality_expression :  43;
	ID :  86;
	postfix_expression :  56;
	'-' :  74;
	'++' :  76;
	unary_expression :  52;
	primary_expression :  59;

State 43 : 
	'}' : equality_expression_0_opt_2 ::=  equal_op equality_expression;
	'-=' : equality_expression_0_opt_2 ::=  equal_op equality_expression;
	'=' : equality_expression_0_opt_2 ::=  equal_op equality_expression;
	'+=' : equality_expression_0_opt_2 ::=  equal_op equality_expression;
	']' : equality_expression_0_opt_2 ::=  equal_op equality_expression;
	';' : equality_expression_0_opt_2 ::=  equal_op equality_expression;
	')' : equality_expression_0_opt_2 ::=  equal_op equality_expression;
	'*=' : equality_expression_0_opt_2 ::=  equal_op equality_expression;
	'/=' : equality_expression_0_opt_2 ::=  equal_op equality_expression;
	',' : equality_expression_0_opt_2 ::=  equal_op equality_expression;

State 44 : 
	'<' :  98;
	'==' : relat_expression_0_opt_2 ::=  NULL;
	'=' : relat_expression_0_opt_2 ::=  NULL;
	'<=' :  96;
	'>=' :  97;
	']' : relat_expression_0_opt_2 ::=  NULL;
	'+=' : relat_expression_0_opt_2 ::=  NULL;
	')' : relat_expression_0_opt_2 ::=  NULL;
	'!=' : relat_expression_0_opt_2 ::=  NULL;
	';' : relat_expression_0_opt_2 ::=  NULL;
	'*=' : relat_expression_0_opt_2 ::=  NULL;
	'/=' : relat_expression_0_opt_2 ::=  NULL;
	'>' :  99;
	relat_op :  46;
	'}' : relat_expression_0_opt_2 ::=  NULL;
	'-=' : relat_expression_0_opt_2 ::=  NULL;
	',' : relat_expression_0_opt_2 ::=  NULL;
	relat_expression_0_opt_2 :  45;

State 45 : 
	',' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	'}' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	'=' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	'-=' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	'+=' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	']' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	';' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	')' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	'*=' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	'!=' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	'/=' : relat_expression ::=  additive_expression relat_expression_0_opt_2;
	'==' : relat_expression ::=  additive_expression relat_expression_0_opt_2;

State 46 : 
	relat_expression :  47;
	'(' :  77;
	'--' :  75;
	NUMBER :  85;
	sadd_op :  57;
	additive_expression :  44;
	multiplicative_expression :  48;
	ID :  86;
	postfix_expression :  56;
	'-' :  74;
	'++' :  76;
	unary_expression :  52;
	primary_expression :  59;

State 47 : 
	',' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	'}' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	'-=' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	'=' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	']' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	'+=' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	')' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	'!=' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	';' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	'*=' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	'/=' : relat_expression_0_opt_2 ::=  relat_op relat_expression;
	'==' : relat_expression_0_opt_2 ::=  relat_op relat_expression;

State 48 : 
	'<' : additive_expression_0_opt_2 ::=  NULL;
	add_op :  50;
	'<=' : additive_expression_0_opt_2 ::=  NULL;
	'=' : additive_expression_0_opt_2 ::=  NULL;
	'>=' : additive_expression_0_opt_2 ::=  NULL;
	'+=' : additive_expression_0_opt_2 ::=  NULL;
	']' : additive_expression_0_opt_2 ::=  NULL;
	';' : additive_expression_0_opt_2 ::=  NULL;
	')' : additive_expression_0_opt_2 ::=  NULL;
	'*=' : additive_expression_0_opt_2 ::=  NULL;
	'!=' : additive_expression_0_opt_2 ::=  NULL;
	'/=' : additive_expression_0_opt_2 ::=  NULL;
	'>' : additive_expression_0_opt_2 ::=  NULL;
	'+' :  95;
	'}' : additive_expression_0_opt_2 ::=  NULL;
	'-=' : additive_expression_0_opt_2 ::=  NULL;
	additive_expression_0_opt_2 :  49;
	'-' :  94;
	',' : additive_expression_0_opt_2 ::=  NULL;
	'==' : additive_expression_0_opt_2 ::=  NULL;

State 49 : 
	'<' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'=' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'<=' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'>=' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	']' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'+=' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	')' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'!=' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	';' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'*=' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'/=' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'>' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'}' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'-=' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	',' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;
	'==' : additive_expression ::=  multiplicative_expression additive_expression_0_opt_2;

State 50 : 
	'(' :  77;
	NUMBER :  85;
	'--' :  75;
	postfix_expression :  56;
	sadd_op :  57;
	additive_expression :  51;
	multiplicative_expression :  48;
	ID :  86;
	'-' :  74;
	'++' :  76;
	unary_expression :  52;
	primary_expression :  59;

State 51 : 
	'<' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'<=' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'=' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'>=' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'+=' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	']' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	';' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	')' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'*=' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'!=' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'/=' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'>' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'}' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'-=' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	',' : additive_expression_0_opt_2 ::=  add_op additive_expression;
	'==' : additive_expression_0_opt_2 ::=  add_op additive_expression;

State 52 : 
	'<' : multiplicative_expression_0_opt_2 ::=  NULL;
	mul_op :  54;
	'/' :  92;
	'=' : multiplicative_expression_0_opt_2 ::=  NULL;
	'<=' : multiplicative_expression_0_opt_2 ::=  NULL;
	'>=' : multiplicative_expression_0_opt_2 ::=  NULL;
	']' : multiplicative_expression_0_opt_2 ::=  NULL;
	'+=' : multiplicative_expression_0_opt_2 ::=  NULL;
	')' : multiplicative_expression_0_opt_2 ::=  NULL;
	'!=' : multiplicative_expression_0_opt_2 ::=  NULL;
	'*=' : multiplicative_expression_0_opt_2 ::=  NULL;
	'+' : multiplicative_expression_0_opt_2 ::=  NULL;
	';' : multiplicative_expression_0_opt_2 ::=  NULL;
	'/=' : multiplicative_expression_0_opt_2 ::=  NULL;
	'>' : multiplicative_expression_0_opt_2 ::=  NULL;
	'*' :  93;
	'}' : multiplicative_expression_0_opt_2 ::=  NULL;
	'-=' : multiplicative_expression_0_opt_2 ::=  NULL;
	'-' : multiplicative_expression_0_opt_2 ::=  NULL;
	multiplicative_expression_0_opt_2 :  53;
	',' : multiplicative_expression_0_opt_2 ::=  NULL;
	'==' : multiplicative_expression_0_opt_2 ::=  NULL;

State 53 : 
	'<' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'<=' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'=' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'>=' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'+=' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	']' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	';' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'!=' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'*=' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'+' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	')' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'/=' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'>' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'}' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'-=' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'-' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	',' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;
	'==' : multiplicative_expression ::=  unary_expression multiplicative_expression_0_opt_2;

State 54 : 
	'(' :  77;
	NUMBER :  85;
	'--' :  75;
	postfix_expression :  56;
	sadd_op :  57;
	ID :  86;
	multiplicative_expression :  55;
	'-' :  74;
	'++' :  76;
	unary_expression :  52;
	primary_expression :  59;

State 55 : 
	'<' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'=' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'<=' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'>=' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	']' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'+=' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	')' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'!=' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'*=' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'+' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	';' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'/=' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'>' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'}' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'-=' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'-' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	',' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;
	'==' : multiplicative_expression_0_opt_2 ::=  mul_op multiplicative_expression;

State 56 : 
	'/' : unary_expression ::=  postfix_expression;
	'<' : unary_expression ::=  postfix_expression;
	'<=' : unary_expression ::=  postfix_expression;
	'*' : unary_expression ::=  postfix_expression;
	'>=' : unary_expression ::=  postfix_expression;
	'+=' : unary_expression ::=  postfix_expression;
	'=' : unary_expression ::=  postfix_expression;
	')' : unary_expression ::=  postfix_expression;
	';' : unary_expression ::=  postfix_expression;
	']' : unary_expression ::=  postfix_expression;
	'*=' : unary_expression ::=  postfix_expression;
	'!=' : unary_expression ::=  postfix_expression;
	'>' : unary_expression ::=  postfix_expression;
	'/=' : unary_expression ::=  postfix_expression;
	'+' : unary_expression ::=  postfix_expression;
	'}' : unary_expression ::=  postfix_expression;
	'-=' : unary_expression ::=  postfix_expression;
	'-' : unary_expression ::=  postfix_expression;
	',' : unary_expression ::=  postfix_expression;
	'==' : unary_expression ::=  postfix_expression;

State 57 : 
	'(' :  77;
	NUMBER :  85;
	'--' :  75;
	unary_expression :  58;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	'++' :  76;
	primary_expression :  59;
	postfix_expression :  56;

State 58 : 
	'/' : unary_expression ::=  sadd_op unary_expression;
	'<' : unary_expression ::=  sadd_op unary_expression;
	'<=' : unary_expression ::=  sadd_op unary_expression;
	'*' : unary_expression ::=  sadd_op unary_expression;
	'>=' : unary_expression ::=  sadd_op unary_expression;
	'+=' : unary_expression ::=  sadd_op unary_expression;
	'=' : unary_expression ::=  sadd_op unary_expression;
	')' : unary_expression ::=  sadd_op unary_expression;
	';' : unary_expression ::=  sadd_op unary_expression;
	']' : unary_expression ::=  sadd_op unary_expression;
	'*=' : unary_expression ::=  sadd_op unary_expression;
	'!=' : unary_expression ::=  sadd_op unary_expression;
	'>' : unary_expression ::=  sadd_op unary_expression;
	'/=' : unary_expression ::=  sadd_op unary_expression;
	'+' : unary_expression ::=  sadd_op unary_expression;
	'}' : unary_expression ::=  sadd_op unary_expression;
	'-=' : unary_expression ::=  sadd_op unary_expression;
	'-' : unary_expression ::=  sadd_op unary_expression;
	',' : unary_expression ::=  sadd_op unary_expression;
	'==' : unary_expression ::=  sadd_op unary_expression;

State 59 : 
	'/' : postfix_expression_0_rep_2 ::=  NULL;
	'<' : postfix_expression_0_rep_2 ::=  NULL;
	'.' :  64;
	post_op :  63;
	'<=' : postfix_expression_0_rep_2 ::=  NULL;
	'>=' : postfix_expression_0_rep_2 ::=  NULL;
	'=' : postfix_expression_0_rep_2 ::=  NULL;
	'+=' : postfix_expression_0_rep_2 ::=  NULL;
	'*' : postfix_expression_0_rep_2 ::=  NULL;
	']' : postfix_expression_0_rep_2 ::=  NULL;
	';' : postfix_expression_0_rep_2 ::=  NULL;
	')' : postfix_expression_0_rep_2 ::=  NULL;
	'!=' : postfix_expression_0_rep_2 ::=  NULL;
	'/=' : postfix_expression_0_rep_2 ::=  NULL;
	'+' : postfix_expression_0_rep_2 ::=  NULL;
	'>' : postfix_expression_0_rep_2 ::=  NULL;
	'*=' : postfix_expression_0_rep_2 ::=  NULL;
	postfix_expression_0_rep_2 :  60;
	postfix_extend_part :  61;
	'}' : postfix_expression_0_rep_2 ::=  NULL;
	'-=' : postfix_expression_0_rep_2 ::=  NULL;
	'(' :  66;
	'[' :  87;
	'--' :  90;
	'++' :  91;
	'-' : postfix_expression_0_rep_2 ::=  NULL;
	',' : postfix_expression_0_rep_2 ::=  NULL;
	'==' : postfix_expression_0_rep_2 ::=  NULL;

State 60 : 
	'/' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'<' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'>=' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'*' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'=' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'+=' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	']' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	';' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	')' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'*=' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'!=' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'+' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'>' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'/=' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'<=' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'}' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'-=' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'-' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	',' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;
	'==' : postfix_expression ::=  primary_expression postfix_expression_0_rep_2;

State 61 : 
	'/' : postfix_expression_0_rep_2 ::=  NULL;
	'<' : postfix_expression_0_rep_2 ::=  NULL;
	'.' :  64;
	post_op :  63;
	'<=' : postfix_expression_0_rep_2 ::=  NULL;
	'>=' : postfix_expression_0_rep_2 ::=  NULL;
	'=' : postfix_expression_0_rep_2 ::=  NULL;
	'+=' : postfix_expression_0_rep_2 ::=  NULL;
	'*' : postfix_expression_0_rep_2 ::=  NULL;
	']' : postfix_expression_0_rep_2 ::=  NULL;
	';' : postfix_expression_0_rep_2 ::=  NULL;
	')' : postfix_expression_0_rep_2 ::=  NULL;
	'!=' : postfix_expression_0_rep_2 ::=  NULL;
	'/=' : postfix_expression_0_rep_2 ::=  NULL;
	'+' : postfix_expression_0_rep_2 ::=  NULL;
	'>' : postfix_expression_0_rep_2 ::=  NULL;
	'*=' : postfix_expression_0_rep_2 ::=  NULL;
	postfix_expression_0_rep_2 :  62;
	postfix_extend_part :  61;
	'}' : postfix_expression_0_rep_2 ::=  NULL;
	'-=' : postfix_expression_0_rep_2 ::=  NULL;
	'(' :  66;
	'[' :  87;
	'--' :  90;
	'++' :  91;
	'-' : postfix_expression_0_rep_2 ::=  NULL;
	',' : postfix_expression_0_rep_2 ::=  NULL;
	'==' : postfix_expression_0_rep_2 ::=  NULL;

State 62 : 
	'/' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'<' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'<=' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'>=' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'=' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'+=' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'*' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	']' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	';' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	')' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'!=' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'/=' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'+' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'>' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'*=' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'}' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'-=' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'-' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	',' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;
	'==' : postfix_expression_0_rep_2 ::=  postfix_extend_part postfix_expression_0_rep_2;

State 63 : 
	'/' : postfix_extend_part ::=  post_op;
	'<' : postfix_extend_part ::=  post_op;
	'(' : postfix_extend_part ::=  post_op;
	'.' : postfix_extend_part ::=  post_op;
	'>=' : postfix_extend_part ::=  post_op;
	'<=' : postfix_extend_part ::=  post_op;
	'=' : postfix_extend_part ::=  post_op;
	'*' : postfix_extend_part ::=  post_op;
	'+=' : postfix_extend_part ::=  post_op;
	']' : postfix_extend_part ::=  post_op;
	';' : postfix_extend_part ::=  post_op;
	')' : postfix_extend_part ::=  post_op;
	'!=' : postfix_extend_part ::=  post_op;
	'+' : postfix_extend_part ::=  post_op;
	'/=' : postfix_extend_part ::=  post_op;
	'*=' : postfix_extend_part ::=  post_op;
	'>' : postfix_extend_part ::=  post_op;
	'[' : postfix_extend_part ::=  post_op;
	'--' : postfix_extend_part ::=  post_op;
	'}' : postfix_extend_part ::=  post_op;
	'-=' : postfix_extend_part ::=  post_op;
	'++' : postfix_extend_part ::=  post_op;
	'-' : postfix_extend_part ::=  post_op;
	',' : postfix_extend_part ::=  post_op;
	'==' : postfix_extend_part ::=  post_op;

State 64 : 
	ID :  65;

State 65 : 
	'/' : postfix_extend_part ::=  '.' ID;
	'<' : postfix_extend_part ::=  '.' ID;
	'(' : postfix_extend_part ::=  '.' ID;
	'.' : postfix_extend_part ::=  '.' ID;
	'>=' : postfix_extend_part ::=  '.' ID;
	'<=' : postfix_extend_part ::=  '.' ID;
	'=' : postfix_extend_part ::=  '.' ID;
	'*' : postfix_extend_part ::=  '.' ID;
	'+=' : postfix_extend_part ::=  '.' ID;
	']' : postfix_extend_part ::=  '.' ID;
	';' : postfix_extend_part ::=  '.' ID;
	')' : postfix_extend_part ::=  '.' ID;
	'!=' : postfix_extend_part ::=  '.' ID;
	'+' : postfix_extend_part ::=  '.' ID;
	'/=' : postfix_extend_part ::=  '.' ID;
	'*=' : postfix_extend_part ::=  '.' ID;
	'>' : postfix_extend_part ::=  '.' ID;
	'[' : postfix_extend_part ::=  '.' ID;
	'--' : postfix_extend_part ::=  '.' ID;
	'}' : postfix_extend_part ::=  '.' ID;
	'-=' : postfix_extend_part ::=  '.' ID;
	'++' : postfix_extend_part ::=  '.' ID;
	'-' : postfix_extend_part ::=  '.' ID;
	',' : postfix_extend_part ::=  '.' ID;
	'==' : postfix_extend_part ::=  '.' ID;

State 66 : 
	relat_expression :  40;
	'(' :  77;
	'--' :  75;
	additive_expression :  44;
	equality_expression :  36;
	assignment_expression :  69;
	multiplicative_expression :  48;
	')' : postfix_extend_part_1_opt_2 ::=  NULL;
	'++' :  76;
	postfix_extend_part_1_opt_2 :  67;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 67 : 
	')' :  68;

State 68 : 
	'/' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'<' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'(' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'.' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'>=' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'<=' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'=' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'*' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'+=' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	']' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	';' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	')' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'!=' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'+' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'/=' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'*=' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'>' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'[' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'--' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'}' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'-=' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'++' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'-' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	',' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';
	'==' : postfix_extend_part ::=  '(' postfix_extend_part_1_opt_2 ')';

State 69 : 
	postfix_extend_part_1_opt_2_0_rep_2 :  70;
	')' : postfix_extend_part_1_opt_2_0_rep_2 ::=  NULL;
	',' :  71;

State 70 : 
	')' : postfix_extend_part_1_opt_2 ::=  assignment_expression postfix_extend_part_1_opt_2_0_rep_2;

State 71 : 
	relat_expression :  40;
	'(' :  77;
	'--' :  75;
	additive_expression :  44;
	multiplicative_expression :  48;
	assignment_expression :  72;
	equality_expression :  36;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 72 : 
	postfix_extend_part_1_opt_2_0_rep_2 :  73;
	')' : postfix_extend_part_1_opt_2_0_rep_2 ::=  NULL;
	',' :  71;

State 73 : 
	')' : postfix_extend_part_1_opt_2_0_rep_2 ::=  ',' assignment_expression postfix_extend_part_1_opt_2_0_rep_2;

State 74 : 
	'(' : sadd_op ::=  '-';
	NUMBER : sadd_op ::=  '-';
	'-' : sadd_op ::=  '-';
	'--' : sadd_op ::=  '-';
	ID : sadd_op ::=  '-';
	'++' : sadd_op ::=  '-';

State 75 : 
	'(' : sadd_op ::=  '--';
	NUMBER : sadd_op ::=  '--';
	'-' : sadd_op ::=  '--';
	'--' : sadd_op ::=  '--';
	ID : sadd_op ::=  '--';
	'++' : sadd_op ::=  '--';

State 76 : 
	'(' : sadd_op ::=  '++';
	NUMBER : sadd_op ::=  '++';
	'-' : sadd_op ::=  '++';
	'--' : sadd_op ::=  '++';
	ID : sadd_op ::=  '++';
	'++' : sadd_op ::=  '++';

State 77 : 
	relat_expression :  40;
	'(' :  77;
	expression :  78;
	'--' :  75;
	additive_expression :  44;
	multiplicative_expression :  48;
	assignment_expression :  80;
	equality_expression :  36;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 78 : 
	')' :  79;

State 79 : 
	'<' : primary_expression ::=  '(' expression ')';
	'/' : primary_expression ::=  '(' expression ')';
	'(' : primary_expression ::=  '(' expression ')';
	'.' : primary_expression ::=  '(' expression ')';
	'<=' : primary_expression ::=  '(' expression ')';
	'=' : primary_expression ::=  '(' expression ')';
	'>=' : primary_expression ::=  '(' expression ')';
	'*' : primary_expression ::=  '(' expression ')';
	']' : primary_expression ::=  '(' expression ')';
	'+=' : primary_expression ::=  '(' expression ')';
	')' : primary_expression ::=  '(' expression ')';
	'!=' : primary_expression ::=  '(' expression ')';
	'+' : primary_expression ::=  '(' expression ')';
	';' : primary_expression ::=  '(' expression ')';
	'/=' : primary_expression ::=  '(' expression ')';
	'>' : primary_expression ::=  '(' expression ')';
	'*=' : primary_expression ::=  '(' expression ')';
	'[' : primary_expression ::=  '(' expression ')';
	'--' : primary_expression ::=  '(' expression ')';
	'}' : primary_expression ::=  '(' expression ')';
	'-=' : primary_expression ::=  '(' expression ')';
	'++' : primary_expression ::=  '(' expression ')';
	'-' : primary_expression ::=  '(' expression ')';
	',' : primary_expression ::=  '(' expression ')';
	'==' : primary_expression ::=  '(' expression ')';

State 80 : 
	']' : expression_0_rep_2 ::=  NULL;
	';' : expression_0_rep_2 ::=  NULL;
	')' : expression_0_rep_2 ::=  NULL;
	expression_0_rep_2 :  81;
	',' :  82;

State 81 : 
	']' : expression ::=  assignment_expression expression_0_rep_2;
	')' : expression ::=  assignment_expression expression_0_rep_2;
	';' : expression ::=  assignment_expression expression_0_rep_2;

State 82 : 
	relat_expression :  40;
	'(' :  77;
	'--' :  75;
	additive_expression :  44;
	multiplicative_expression :  48;
	assignment_expression :  83;
	equality_expression :  36;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 83 : 
	']' : expression_0_rep_2 ::=  NULL;
	';' : expression_0_rep_2 ::=  NULL;
	')' : expression_0_rep_2 ::=  NULL;
	expression_0_rep_2 :  84;
	',' :  82;

State 84 : 
	']' : expression_0_rep_2 ::=  ',' assignment_expression expression_0_rep_2;
	';' : expression_0_rep_2 ::=  ',' assignment_expression expression_0_rep_2;
	')' : expression_0_rep_2 ::=  ',' assignment_expression expression_0_rep_2;

State 85 : 
	'<' : primary_expression ::=  NUMBER;
	'/' : primary_expression ::=  NUMBER;
	'(' : primary_expression ::=  NUMBER;
	'.' : primary_expression ::=  NUMBER;
	'<=' : primary_expression ::=  NUMBER;
	'=' : primary_expression ::=  NUMBER;
	'>=' : primary_expression ::=  NUMBER;
	'*' : primary_expression ::=  NUMBER;
	']' : primary_expression ::=  NUMBER;
	'+=' : primary_expression ::=  NUMBER;
	')' : primary_expression ::=  NUMBER;
	'!=' : primary_expression ::=  NUMBER;
	'+' : primary_expression ::=  NUMBER;
	';' : primary_expression ::=  NUMBER;
	'/=' : primary_expression ::=  NUMBER;
	'>' : primary_expression ::=  NUMBER;
	'*=' : primary_expression ::=  NUMBER;
	'[' : primary_expression ::=  NUMBER;
	'--' : primary_expression ::=  NUMBER;
	'}' : primary_expression ::=  NUMBER;
	'-=' : primary_expression ::=  NUMBER;
	'++' : primary_expression ::=  NUMBER;
	'-' : primary_expression ::=  NUMBER;
	',' : primary_expression ::=  NUMBER;
	'==' : primary_expression ::=  NUMBER;

State 86 : 
	'<' : primary_expression ::=  ID;
	'/' : primary_expression ::=  ID;
	'(' : primary_expression ::=  ID;
	'.' : primary_expression ::=  ID;
	'<=' : primary_expression ::=  ID;
	'=' : primary_expression ::=  ID;
	'>=' : primary_expression ::=  ID;
	'*' : primary_expression ::=  ID;
	']' : primary_expression ::=  ID;
	'+=' : primary_expression ::=  ID;
	')' : primary_expression ::=  ID;
	'!=' : primary_expression ::=  ID;
	'+' : primary_expression ::=  ID;
	';' : primary_expression ::=  ID;
	'/=' : primary_expression ::=  ID;
	'>' : primary_expression ::=  ID;
	'*=' : primary_expression ::=  ID;
	'[' : primary_expression ::=  ID;
	'--' : primary_expression ::=  ID;
	'}' : primary_expression ::=  ID;
	'-=' : primary_expression ::=  ID;
	'++' : primary_expression ::=  ID;
	'-' : primary_expression ::=  ID;
	',' : primary_expression ::=  ID;
	'==' : primary_expression ::=  ID;

State 87 : 
	relat_expression :  40;
	'(' :  77;
	expression :  88;
	'--' :  75;
	additive_expression :  44;
	multiplicative_expression :  48;
	assignment_expression :  80;
	equality_expression :  36;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 88 : 
	']' :  89;

State 89 : 
	'/' : postfix_extend_part ::=  '[' expression ']';
	'<' : postfix_extend_part ::=  '[' expression ']';
	'(' : postfix_extend_part ::=  '[' expression ']';
	'.' : postfix_extend_part ::=  '[' expression ']';
	'>=' : postfix_extend_part ::=  '[' expression ']';
	'<=' : postfix_extend_part ::=  '[' expression ']';
	'=' : postfix_extend_part ::=  '[' expression ']';
	'*' : postfix_extend_part ::=  '[' expression ']';
	'+=' : postfix_extend_part ::=  '[' expression ']';
	']' : postfix_extend_part ::=  '[' expression ']';
	';' : postfix_extend_part ::=  '[' expression ']';
	')' : postfix_extend_part ::=  '[' expression ']';
	'!=' : postfix_extend_part ::=  '[' expression ']';
	'+' : postfix_extend_part ::=  '[' expression ']';
	'/=' : postfix_extend_part ::=  '[' expression ']';
	'*=' : postfix_extend_part ::=  '[' expression ']';
	'>' : postfix_extend_part ::=  '[' expression ']';
	'[' : postfix_extend_part ::=  '[' expression ']';
	'--' : postfix_extend_part ::=  '[' expression ']';
	'}' : postfix_extend_part ::=  '[' expression ']';
	'-=' : postfix_extend_part ::=  '[' expression ']';
	'++' : postfix_extend_part ::=  '[' expression ']';
	'-' : postfix_extend_part ::=  '[' expression ']';
	',' : postfix_extend_part ::=  '[' expression ']';
	'==' : postfix_extend_part ::=  '[' expression ']';

State 90 : 
	'(' : post_op ::=  '--';
	'<' : post_op ::=  '--';
	'--' : post_op ::=  '--';
	'[' : post_op ::=  '--';
	'.' : post_op ::=  '--';
	'/' : post_op ::=  '--';
	'=' : post_op ::=  '--';
	'*' : post_op ::=  '--';
	'<=' : post_op ::=  '--';
	']' : post_op ::=  '--';
	'+=' : post_op ::=  '--';
	')' : post_op ::=  '--';
	'++' : post_op ::=  '--';
	'!=' : post_op ::=  '--';
	'*=' : post_op ::=  '--';
	'+' : post_op ::=  '--';
	';' : post_op ::=  '--';
	'>' : post_op ::=  '--';
	'/=' : post_op ::=  '--';
	'>=' : post_op ::=  '--';
	'}' : post_op ::=  '--';
	'-=' : post_op ::=  '--';
	'-' : post_op ::=  '--';
	',' : post_op ::=  '--';
	'==' : post_op ::=  '--';

State 91 : 
	'(' : post_op ::=  '++';
	'<' : post_op ::=  '++';
	'--' : post_op ::=  '++';
	'[' : post_op ::=  '++';
	'.' : post_op ::=  '++';
	'/' : post_op ::=  '++';
	'=' : post_op ::=  '++';
	'*' : post_op ::=  '++';
	'<=' : post_op ::=  '++';
	']' : post_op ::=  '++';
	'+=' : post_op ::=  '++';
	')' : post_op ::=  '++';
	'++' : post_op ::=  '++';
	'!=' : post_op ::=  '++';
	'*=' : post_op ::=  '++';
	'+' : post_op ::=  '++';
	';' : post_op ::=  '++';
	'>' : post_op ::=  '++';
	'/=' : post_op ::=  '++';
	'>=' : post_op ::=  '++';
	'}' : post_op ::=  '++';
	'-=' : post_op ::=  '++';
	'-' : post_op ::=  '++';
	',' : post_op ::=  '++';
	'==' : post_op ::=  '++';

State 92 : 
	'(' : mul_op ::=  '/';
	NUMBER : mul_op ::=  '/';
	'--' : mul_op ::=  '/';
	'-' : mul_op ::=  '/';
	'++' : mul_op ::=  '/';
	ID : mul_op ::=  '/';

State 93 : 
	'(' : mul_op ::=  '*';
	NUMBER : mul_op ::=  '*';
	'--' : mul_op ::=  '*';
	'-' : mul_op ::=  '*';
	'++' : mul_op ::=  '*';
	ID : mul_op ::=  '*';

State 94 : 
	'(' : add_op ::=  '-';
	NUMBER : add_op ::=  '-';
	'-' : add_op ::=  '-';
	'--' : add_op ::=  '-';
	ID : add_op ::=  '-';
	'++' : add_op ::=  '-';

State 95 : 
	'(' : add_op ::=  '+';
	NUMBER : add_op ::=  '+';
	'-' : add_op ::=  '+';
	'--' : add_op ::=  '+';
	ID : add_op ::=  '+';
	'++' : add_op ::=  '+';

State 96 : 
	'(' : relat_op ::=  '<=';
	NUMBER : relat_op ::=  '<=';
	'--' : relat_op ::=  '<=';
	'-' : relat_op ::=  '<=';
	'++' : relat_op ::=  '<=';
	ID : relat_op ::=  '<=';

State 97 : 
	'(' : relat_op ::=  '>=';
	NUMBER : relat_op ::=  '>=';
	'--' : relat_op ::=  '>=';
	'-' : relat_op ::=  '>=';
	'++' : relat_op ::=  '>=';
	ID : relat_op ::=  '>=';

State 98 : 
	'(' : relat_op ::=  '<';
	NUMBER : relat_op ::=  '<';
	'--' : relat_op ::=  '<';
	'-' : relat_op ::=  '<';
	'++' : relat_op ::=  '<';
	ID : relat_op ::=  '<';

State 99 : 
	'(' : relat_op ::=  '>';
	NUMBER : relat_op ::=  '>';
	'--' : relat_op ::=  '>';
	'-' : relat_op ::=  '>';
	'++' : relat_op ::=  '>';
	ID : relat_op ::=  '>';

State 100 : 
	'(' : equal_op ::=  '!=';
	NUMBER : equal_op ::=  '!=';
	'-' : equal_op ::=  '!=';
	'--' : equal_op ::=  '!=';
	ID : equal_op ::=  '!=';
	'++' : equal_op ::=  '!=';

State 101 : 
	'(' : equal_op ::=  '==';
	NUMBER : equal_op ::=  '==';
	'-' : equal_op ::=  '==';
	'--' : equal_op ::=  '==';
	ID : equal_op ::=  '==';
	'++' : equal_op ::=  '==';

State 102 : 
	'(' : assign_op ::=  '/=';
	NUMBER : assign_op ::=  '/=';
	'--' : assign_op ::=  '/=';
	'-' : assign_op ::=  '/=';
	'++' : assign_op ::=  '/=';
	ID : assign_op ::=  '/=';

State 103 : 
	'(' : assign_op ::=  '*=';
	NUMBER : assign_op ::=  '*=';
	'--' : assign_op ::=  '*=';
	'-' : assign_op ::=  '*=';
	'++' : assign_op ::=  '*=';
	ID : assign_op ::=  '*=';

State 104 : 
	'(' : assign_op ::=  '-=';
	NUMBER : assign_op ::=  '-=';
	'--' : assign_op ::=  '-=';
	'-' : assign_op ::=  '-=';
	'++' : assign_op ::=  '-=';
	ID : assign_op ::=  '-=';

State 105 : 
	'(' : assign_op ::=  '+=';
	NUMBER : assign_op ::=  '+=';
	'--' : assign_op ::=  '+=';
	'-' : assign_op ::=  '+=';
	'++' : assign_op ::=  '+=';
	ID : assign_op ::=  '+=';

State 106 : 
	'(' : assign_op ::=  '=';
	NUMBER : assign_op ::=  '=';
	'--' : assign_op ::=  '=';
	'-' : assign_op ::=  '=';
	'++' : assign_op ::=  '=';
	ID : assign_op ::=  '=';

State 107 : 
	'(' :  109;
	';' : extend_part_0_rep_1 ::=  NULL;
	'[' :  123;
	extend_part :  108;
	'=' : extend_part_0_rep_1 ::=  NULL;
	'{' : extend_part_0_rep_1 ::=  NULL;
	extend_part_0_rep_1 :  122;

State 108 : 
	'=' : direct_declarator ::=  ID extend_part;
	';' : direct_declarator ::=  ID extend_part;
	'{' : direct_declarator ::=  ID extend_part;

State 109 : 
	parameter_declaration :  113;
	')' : extend_part_1_opt_2 ::=  NULL;
	parameter_list :  112;
	declaration_specifier :  118;
	extend_part_1_opt_2 :  110;
	type_specifier :  120;
	ID :  121;

State 110 : 
	')' :  111;

State 111 : 
	'=' : extend_part ::=  '(' extend_part_1_opt_2 ')';
	';' : extend_part ::=  '(' extend_part_1_opt_2 ')';
	'{' : extend_part ::=  '(' extend_part_1_opt_2 ')';

State 112 : 
	')' : extend_part_1_opt_2 ::=  parameter_list;

State 113 : 
	parameter_list_0_rep_2 :  114;
	')' : parameter_list_0_rep_2 ::=  NULL;
	',' :  115;

State 114 : 
	')' : parameter_list ::=  parameter_declaration parameter_list_0_rep_2;

State 115 : 
	parameter_declaration :  116;
	declaration_specifier :  118;
	type_specifier :  120;
	ID :  121;

State 116 : 
	parameter_list_0_rep_2 :  117;
	')' : parameter_list_0_rep_2 ::=  NULL;
	',' :  115;

State 117 : 
	')' : parameter_list_0_rep_2 ::=  ',' parameter_declaration parameter_list_0_rep_2;

State 118 : 
	ID :  119;

State 119 : 
	')' : parameter_declaration ::=  declaration_specifier ID;
	',' : parameter_declaration ::=  declaration_specifier ID;

State 120 : 
	ID : declaration_specifier ::=  type_specifier;

State 121 : 
	ID : type_specifier ::=  ID;

State 122 : 
	'=' : extend_part ::=  extend_part_0_rep_1;
	';' : extend_part ::=  extend_part_0_rep_1;
	'{' : extend_part ::=  extend_part_0_rep_1;

State 123 : 
	relat_expression :  128;
	'(' :  77;
	'--' :  75;
	extend_part_0_rep_1_0_opt_2 :  124;
	multiplicative_expression :  48;
	']' : extend_part_0_rep_1_0_opt_2 ::=  NULL;
	additive_expression :  44;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	constant_expression :  127;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 124 : 
	']' :  125;

State 125 : 
	';' : extend_part_0_rep_1 ::=  NULL;
	'[' :  123;
	'=' : extend_part_0_rep_1 ::=  NULL;
	'{' : extend_part_0_rep_1 ::=  NULL;
	extend_part_0_rep_1 :  126;

State 126 : 
	'=' : extend_part_0_rep_1 ::=  '[' extend_part_0_rep_1_0_opt_2 ']' extend_part_0_rep_1;
	';' : extend_part_0_rep_1 ::=  '[' extend_part_0_rep_1_0_opt_2 ']' extend_part_0_rep_1;
	'{' : extend_part_0_rep_1 ::=  '[' extend_part_0_rep_1_0_opt_2 ']' extend_part_0_rep_1;

State 127 : 
	']' : extend_part_0_rep_1_0_opt_2 ::=  constant_expression;

State 128 : 
	']' : constant_expression ::=  relat_expression;

State 129 : 
	direct_declarator :  130;
	init_declarator :  19;
	ID :  107;

State 130 : 
	compound_statement :  131;
	';' : init_declarator_0_opt_2 ::=  NULL;
	'=' :  23;
	'{' :  132;
	init_declarator_0_opt_2 :  22;

State 131 : 
	ID : function_declaration ::=  type_specifier direct_declarator compound_statement;
	'struct' : function_declaration ::=  type_specifier direct_declarator compound_statement;
	%END% : function_declaration ::=  type_specifier direct_declarator compound_statement;

State 132 : 
	declaration :  137;
	'(' :  77;
	'return' :  144;
	iteration_statement :  140;
	additive_expression :  44;
	assignment_expression :  80;
	'for' :  149;
	';' :  148;
	statement :  135;
	multiplicative_expression :  48;
	NUMBER :  85;
	'}' : compound_statement_0_rep_2 ::=  NULL;
	'{' :  132;
	compound_statement_0_rep_2 :  133;
	sadd_op :  57;
	expression_statement :  142;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;
	return_statement :  139;
	relat_expression :  40;
	expression :  146;
	'--' :  75;
	equality_expression :  36;
	type_specifier :  18;
	'++' :  76;
	selection_statement :  141;
	ID :  171;
	compound_statement :  143;
	'if' :  158;

State 133 : 
	'}' :  134;

State 134 : 
	'(' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'--' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'return' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'for' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	';' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	%END% : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'++' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	NUMBER : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'struct' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'else' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'}' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	ID : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'{' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'-' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';
	'if' : compound_statement ::=  '{' compound_statement_0_rep_2 '}';

State 135 : 
	declaration :  137;
	'(' :  77;
	'return' :  144;
	iteration_statement :  140;
	additive_expression :  44;
	assignment_expression :  80;
	'for' :  149;
	';' :  148;
	statement :  135;
	multiplicative_expression :  48;
	NUMBER :  85;
	'}' : compound_statement_0_rep_2 ::=  NULL;
	'{' :  132;
	compound_statement_0_rep_2 :  136;
	sadd_op :  57;
	expression_statement :  142;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;
	return_statement :  139;
	relat_expression :  40;
	expression :  146;
	'--' :  75;
	equality_expression :  36;
	type_specifier :  18;
	'++' :  76;
	selection_statement :  141;
	ID :  171;
	compound_statement :  143;
	'if' :  158;

State 136 : 
	'}' : compound_statement_0_rep_2 ::=  statement compound_statement_0_rep_2;

State 137 : 
	declaration :  137;
	'(' :  77;
	'return' :  144;
	iteration_statement :  140;
	additive_expression :  44;
	assignment_expression :  80;
	'for' :  149;
	';' :  148;
	statement :  135;
	multiplicative_expression :  48;
	NUMBER :  85;
	'}' : compound_statement_0_rep_2 ::=  NULL;
	'{' :  132;
	compound_statement_0_rep_2 :  138;
	sadd_op :  57;
	expression_statement :  142;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;
	return_statement :  139;
	relat_expression :  40;
	expression :  146;
	'--' :  75;
	equality_expression :  36;
	type_specifier :  18;
	'++' :  76;
	selection_statement :  141;
	ID :  171;
	compound_statement :  143;
	'if' :  158;

State 138 : 
	'}' : compound_statement_0_rep_2 ::=  declaration compound_statement_0_rep_2;

State 139 : 
	'(' : statement ::=  return_statement;
	NUMBER : statement ::=  return_statement;
	'--' : statement ::=  return_statement;
	'}' : statement ::=  return_statement;
	'return' : statement ::=  return_statement;
	'{' : statement ::=  return_statement;
	ID : statement ::=  return_statement;
	'else' : statement ::=  return_statement;
	'for' : statement ::=  return_statement;
	';' : statement ::=  return_statement;
	'-' : statement ::=  return_statement;
	'++' : statement ::=  return_statement;
	'if' : statement ::=  return_statement;

State 140 : 
	'(' : statement ::=  iteration_statement;
	NUMBER : statement ::=  iteration_statement;
	'--' : statement ::=  iteration_statement;
	'}' : statement ::=  iteration_statement;
	'return' : statement ::=  iteration_statement;
	'{' : statement ::=  iteration_statement;
	ID : statement ::=  iteration_statement;
	'else' : statement ::=  iteration_statement;
	'for' : statement ::=  iteration_statement;
	';' : statement ::=  iteration_statement;
	'-' : statement ::=  iteration_statement;
	'++' : statement ::=  iteration_statement;
	'if' : statement ::=  iteration_statement;

State 141 : 
	'(' : statement ::=  selection_statement;
	NUMBER : statement ::=  selection_statement;
	'--' : statement ::=  selection_statement;
	'}' : statement ::=  selection_statement;
	'return' : statement ::=  selection_statement;
	'{' : statement ::=  selection_statement;
	ID : statement ::=  selection_statement;
	'else' : statement ::=  selection_statement;
	'for' : statement ::=  selection_statement;
	';' : statement ::=  selection_statement;
	'-' : statement ::=  selection_statement;
	'++' : statement ::=  selection_statement;
	'if' : statement ::=  selection_statement;

State 142 : 
	'(' : statement ::=  expression_statement;
	NUMBER : statement ::=  expression_statement;
	'--' : statement ::=  expression_statement;
	'}' : statement ::=  expression_statement;
	'return' : statement ::=  expression_statement;
	'{' : statement ::=  expression_statement;
	ID : statement ::=  expression_statement;
	'else' : statement ::=  expression_statement;
	'for' : statement ::=  expression_statement;
	';' : statement ::=  expression_statement;
	'-' : statement ::=  expression_statement;
	'++' : statement ::=  expression_statement;
	'if' : statement ::=  expression_statement;

State 143 : 
	'(' : statement ::=  compound_statement;
	NUMBER : statement ::=  compound_statement;
	'--' : statement ::=  compound_statement;
	'}' : statement ::=  compound_statement;
	'return' : statement ::=  compound_statement;
	'{' : statement ::=  compound_statement;
	ID : statement ::=  compound_statement;
	'else' : statement ::=  compound_statement;
	'for' : statement ::=  compound_statement;
	';' : statement ::=  compound_statement;
	'-' : statement ::=  compound_statement;
	'++' : statement ::=  compound_statement;
	'if' : statement ::=  compound_statement;

State 144 : 
	relat_expression :  40;
	'(' :  77;
	expression :  146;
	'--' :  75;
	additive_expression :  44;
	equality_expression :  36;
	assignment_expression :  80;
	multiplicative_expression :  48;
	';' :  148;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	expression_statement :  145;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 145 : 
	'(' : return_statement ::=  'return' expression_statement;
	NUMBER : return_statement ::=  'return' expression_statement;
	'--' : return_statement ::=  'return' expression_statement;
	'else' : return_statement ::=  'return' expression_statement;
	'return' : return_statement ::=  'return' expression_statement;
	ID : return_statement ::=  'return' expression_statement;
	'{' : return_statement ::=  'return' expression_statement;
	'}' : return_statement ::=  'return' expression_statement;
	'for' : return_statement ::=  'return' expression_statement;
	';' : return_statement ::=  'return' expression_statement;
	'-' : return_statement ::=  'return' expression_statement;
	'++' : return_statement ::=  'return' expression_statement;
	'if' : return_statement ::=  'return' expression_statement;

State 146 : 
	';' :  147;

State 147 : 
	'(' : expression_statement ::=  expression ';';
	NUMBER : expression_statement ::=  expression ';';
	'--' : expression_statement ::=  expression ';';
	'}' : expression_statement ::=  expression ';';
	'return' : expression_statement ::=  expression ';';
	'{' : expression_statement ::=  expression ';';
	ID : expression_statement ::=  expression ';';
	'else' : expression_statement ::=  expression ';';
	'for' : expression_statement ::=  expression ';';
	';' : expression_statement ::=  expression ';';
	'-' : expression_statement ::=  expression ';';
	'++' : expression_statement ::=  expression ';';
	'if' : expression_statement ::=  expression ';';

State 148 : 
	'(' : expression_statement ::=  ';';
	NUMBER : expression_statement ::=  ';';
	'--' : expression_statement ::=  ';';
	'}' : expression_statement ::=  ';';
	'return' : expression_statement ::=  ';';
	'{' : expression_statement ::=  ';';
	ID : expression_statement ::=  ';';
	'else' : expression_statement ::=  ';';
	'for' : expression_statement ::=  ';';
	';' : expression_statement ::=  ';';
	'-' : expression_statement ::=  ';';
	'++' : expression_statement ::=  ';';
	'if' : expression_statement ::=  ';';

State 149 : 
	'(' :  150;

State 150 : 
	iteration_statement_0_opt_3_0_opt_1 :  168;
	';' : iteration_statement_0_opt_3 ::=  NULL;
	type_specifier :  170;
	ID :  121;
	iteration_statement_0_opt_3 :  151;

State 151 : 
	';' :  152;

State 152 : 
	relat_expression :  40;
	'(' :  77;
	expression :  167;
	'--' :  75;
	additive_expression :  44;
	equality_expression :  36;
	assignment_expression :  80;
	multiplicative_expression :  48;
	';' : iteration_statement_0_opt_5 ::=  NULL;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	iteration_statement_0_opt_5 :  153;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 153 : 
	';' :  154;

State 154 : 
	relat_expression :  40;
	'(' :  77;
	expression :  166;
	'--' :  75;
	additive_expression :  44;
	iteration_statement_0_opt_7 :  155;
	assignment_expression :  80;
	equality_expression :  36;
	')' : iteration_statement_0_opt_7 ::=  NULL;
	multiplicative_expression :  48;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 155 : 
	')' :  156;

State 156 : 
	return_statement :  139;
	relat_expression :  40;
	expression :  146;
	'return' :  144;
	'--' :  75;
	iteration_statement :  140;
	equality_expression :  36;
	assignment_expression :  80;
	'for' :  149;
	';' :  148;
	statement :  157;
	additive_expression :  44;
	multiplicative_expression :  48;
	'++' :  76;
	'(' :  77;
	'if' :  158;
	NUMBER :  85;
	selection_statement :  141;
	'{' :  132;
	sadd_op :  57;
	compound_statement :  143;
	ID :  86;
	expression_statement :  142;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 157 : 
	'(' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	NUMBER : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	'--' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	'else' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	'return' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	ID : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	'{' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	'}' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	'for' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	';' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	'-' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	'++' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;
	'if' : iteration_statement ::=  'for' '(' iteration_statement_0_opt_3 ';' iteration_statement_0_opt_5 ';' iteration_statement_0_opt_7 ')' statement;

State 158 : 
	'(' :  159;

State 159 : 
	relat_expression :  40;
	'(' :  77;
	expression :  160;
	'--' :  75;
	additive_expression :  44;
	multiplicative_expression :  48;
	assignment_expression :  80;
	equality_expression :  36;
	'++' :  76;
	NUMBER :  85;
	sadd_op :  57;
	ID :  86;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 160 : 
	')' :  161;

State 161 : 
	return_statement :  139;
	relat_expression :  40;
	expression :  146;
	'return' :  144;
	'--' :  75;
	iteration_statement :  140;
	equality_expression :  36;
	assignment_expression :  80;
	'for' :  149;
	';' :  148;
	statement :  162;
	additive_expression :  44;
	multiplicative_expression :  48;
	'++' :  76;
	'(' :  77;
	'if' :  158;
	NUMBER :  85;
	selection_statement :  141;
	'{' :  132;
	sadd_op :  57;
	compound_statement :  143;
	ID :  86;
	expression_statement :  142;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 162 : 
	'(' : selection_statement_0_opt_6 ::=  NULL;
	NUMBER : selection_statement_0_opt_6 ::=  NULL;
	'--' : selection_statement_0_opt_6 ::=  NULL;
	'}' : selection_statement_0_opt_6 ::=  NULL;
	'return' : selection_statement_0_opt_6 ::=  NULL;
	'{' : selection_statement_0_opt_6 ::=  NULL;
	ID : selection_statement_0_opt_6 ::=  NULL;
	'else' :  164;
	'for' : selection_statement_0_opt_6 ::=  NULL;
	';' : selection_statement_0_opt_6 ::=  NULL;
	'-' : selection_statement_0_opt_6 ::=  NULL;
	selection_statement_0_opt_6 :  163;
	'++' : selection_statement_0_opt_6 ::=  NULL;
	'if' : selection_statement_0_opt_6 ::=  NULL;

State 163 : 
	'(' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	NUMBER : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	'--' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	'else' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	'return' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	ID : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	'{' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	'}' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	'for' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	';' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	'-' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	'++' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;
	'if' : selection_statement ::=  'if' '(' expression ')' statement selection_statement_0_opt_6;

State 164 : 
	return_statement :  139;
	relat_expression :  40;
	expression :  146;
	'return' :  144;
	'--' :  75;
	iteration_statement :  140;
	equality_expression :  36;
	assignment_expression :  80;
	'for' :  149;
	';' :  148;
	statement :  165;
	additive_expression :  44;
	multiplicative_expression :  48;
	'++' :  76;
	'(' :  77;
	'if' :  158;
	NUMBER :  85;
	selection_statement :  141;
	'{' :  132;
	sadd_op :  57;
	compound_statement :  143;
	ID :  86;
	expression_statement :  142;
	'-' :  74;
	unary_expression :  52;
	primary_expression :  59;
	postfix_expression :  56;

State 165 : 
	'(' : selection_statement_0_opt_6 ::=  'else' statement;
	NUMBER : selection_statement_0_opt_6 ::=  'else' statement;
	'--' : selection_statement_0_opt_6 ::=  'else' statement;
	'}' : selection_statement_0_opt_6 ::=  'else' statement;
	'return' : selection_statement_0_opt_6 ::=  'else' statement;
	'{' : selection_statement_0_opt_6 ::=  'else' statement;
	ID : selection_statement_0_opt_6 ::=  'else' statement;
	'else' : selection_statement_0_opt_6 ::=  'else' statement;
	'for' : selection_statement_0_opt_6 ::=  'else' statement;
	';' : selection_statement_0_opt_6 ::=  'else' statement;
	'-' : selection_statement_0_opt_6 ::=  'else' statement;
	'++' : selection_statement_0_opt_6 ::=  'else' statement;
	'if' : selection_statement_0_opt_6 ::=  'else' statement;

State 166 : 
	')' : iteration_statement_0_opt_7 ::=  expression;

State 167 : 
	';' : iteration_statement_0_opt_5 ::=  expression;

State 168 : 
	direct_declarator :  21;
	init_declarator :  169;
	ID :  107;

State 169 : 
	';' : iteration_statement_0_opt_3 ::=  iteration_statement_0_opt_3_0_opt_1 init_declarator;

State 170 : 
	ID : iteration_statement_0_opt_3_0_opt_1 ::=  type_specifier;

State 171 : 
	'<' : primary_expression ::=  ID;
	'/' : primary_expression ::=  ID;
	'(' : primary_expression ::=  ID;
	'.' : primary_expression ::=  ID;
	'<=' : primary_expression ::=  ID;
	'=' : primary_expression ::=  ID;
	'>=' : primary_expression ::=  ID;
	'*' : primary_expression ::=  ID;
	']' : primary_expression ::=  ID;
	'+=' : primary_expression ::=  ID;
	')' : primary_expression ::=  ID;
	'!=' : primary_expression ::=  ID;
	'+' : primary_expression ::=  ID;
	';' : primary_expression ::=  ID;
	'/=' : primary_expression ::=  ID;
	'>' : primary_expression ::=  ID;
	'*=' : primary_expression ::=  ID;
	'[' : primary_expression ::=  ID;
	'--' : primary_expression ::=  ID;
	'}' : primary_expression ::=  ID;
	ID : type_specifier ::=  ID;
	'-=' : primary_expression ::=  ID;
	'++' : primary_expression ::=  ID;
	'-' : primary_expression ::=  ID;
	',' : primary_expression ::=  ID;
	'==' : primary_expression ::=  ID;




############
PARSING CODE
############
#########################
Begin Lexical Analysis...
#########################
  Type = ID	Data = int	Pos = (0, 0)
  Type = ID	Data = fib	Pos = (3, 0)
  Type = BRAC	Data = (	Pos = (6, 0)
  Type = ID	Data = int	Pos = (7, 0)
  Type = ID	Data = n	Pos = (11, 0)
  Type = BRAC	Data = )	Pos = (12, 0)
  Type = BRAC	Data = {	Pos = (0, 1)
  Type = ID	Data = if	Pos = (4, 2)
  Type = BRAC	Data = (	Pos = (7, 2)
  Type = ID	Data = n	Pos = (8, 2)
  Type = LSIG	Data = >	Pos = (10, 2)
  Type = NUMBER	Data = 1	Pos = (12, 2)
  Type = BRAC	Data = )	Pos = (13, 2)
  Type = ID	Data = return	Pos = (8, 3)
  Type = ID	Data = fib	Pos = (15, 3)
  Type = BRAC	Data = (	Pos = (18, 3)
  Type = ID	Data = n	Pos = (19, 3)
  Type = MSIG	Data = -	Pos = (21, 3)
  Type = NUMBER	Data = 1	Pos = (23, 3)
  Type = BRAC	Data = )	Pos = (24, 3)
  Type = MSIG	Data = +	Pos = (26, 3)
  Type = ID	Data = fib	Pos = (28, 3)
  Type = BRAC	Data = (	Pos = (31, 3)
  Type = ID	Data = n	Pos = (32, 3)
  Type = MSIG	Data = -	Pos = (34, 3)
  Type = NUMBER	Data = 2	Pos = (36, 3)
  Type = BRAC	Data = )	Pos = (37, 3)
  Type = BSIG	Data = ;	Pos = (38, 3)
  Type = ID	Data = else	Pos = (4, 4)
  Type = ID	Data = return	Pos = (8, 5)
  Type = NUMBER	Data = 1	Pos = (15, 5)
  Type = BSIG	Data = ;	Pos = (16, 5)
  Type = BRAC	Data = }	Pos = (0, 6)
  Type = ID	Data = float	Pos = (0, 8)
  Type = ID	Data = pi	Pos = (6, 8)
  Type = BRAC	Data = (	Pos = (8, 8)
  Type = ID	Data = int	Pos = (9, 8)
  Type = ID	Data = n	Pos = (13, 8)
  Type = BRAC	Data = )	Pos = (14, 8)
  Type = BRAC	Data = {	Pos = (0, 9)
  Type = ID	Data = float	Pos = (4, 10)
  Type = ID	Data = sum	Pos = (10, 10)
  Type = LSIG	Data = =	Pos = (14, 10)
  Type = NUMBER	Data = 0	Pos = (16, 10)
  Type = BSIG	Data = ;	Pos = (17, 10)
  Type = ID	Data = float	Pos = (4, 11)
  Type = ID	Data = sig	Pos = (10, 11)
  Type = LSIG	Data = =	Pos = (14, 11)
  Type = NUMBER	Data = 1.0	Pos = (16, 11)
  Type = BSIG	Data = ;	Pos = (19, 11)
  Type = ID	Data = for	Pos = (4, 12)
  Type = BRAC	Data = (	Pos = (8, 12)
  Type = ID	Data = int	Pos = (9, 12)
  Type = ID	Data = i	Pos = (13, 12)
  Type = LSIG	Data = =	Pos = (15, 12)
  Type = NUMBER	Data = 1	Pos = (17, 12)
  Type = BSIG	Data = ;	Pos = (18, 12)
  Type = ID	Data = i	Pos = (20, 12)
  Type = LSIG	Data = <=	Pos = (22, 12)
  Type = ID	Data = n	Pos = (24, 12)
  Type = BSIG	Data = ;	Pos = (25, 12)
  Type = ID	Data = i	Pos = (27, 12)
  Type = MSIG	Data = +=	Pos = (29, 12)
  Type = NUMBER	Data = 2	Pos = (32, 12)
  Type = BRAC	Data = )	Pos = (33, 12)
  Type = BRAC	Data = {	Pos = (4, 13)
  Type = ID	Data = sum	Pos = (8, 14)
  Type = MSIG	Data = +=	Pos = (12, 14)
  Type = ID	Data = sig	Pos = (15, 14)
  Type = BSIG	Data = ;	Pos = (18, 14)
  Type = ID	Data = sig	Pos = (8, 15)
  Type = LSIG	Data = =	Pos = (12, 15)
  Type = NUMBER	Data = 0	Pos = (14, 15)
  Type = MSIG	Data = -	Pos = (15, 15)
  Type = ID	Data = sig	Pos = (16, 15)
  Type = BSIG	Data = ;	Pos = (19, 15)
  Type = BRAC	Data = }	Pos = (4, 16)
  Type = ID	Data = return	Pos = (4, 17)
  Type = ID	Data = sum	Pos = (11, 17)
  Type = BSIG	Data = ;	Pos = (14, 17)
  Type = BRAC	Data = }	Pos = (0, 18)
  Type = ID	Data = struct	Pos = (0, 20)
  Type = ID	Data = data_t	Pos = (7, 20)
  Type = BRAC	Data = {	Pos = (0, 21)
  Type = ID	Data = int	Pos = (4, 22)
  Type = ID	Data = fib_v	Pos = (9, 22)
  Type = BSIG	Data = ;	Pos = (14, 22)
  Type = ID	Data = float	Pos = (4, 23)
  Type = ID	Data = pi_v	Pos = (10, 23)
  Type = BSIG	Data = ;	Pos = (14, 23)
  Type = BRAC	Data = }	Pos = (0, 24)
  Type = BSIG	Data = ;	Pos = (1, 24)
  Type = ID	Data = int	Pos = (0, 26)
  Type = ID	Data = main	Pos = (4, 26)
  Type = BRAC	Data = (	Pos = (8, 26)
  Type = BRAC	Data = )	Pos = (9, 26)
  Type = BRAC	Data = {	Pos = (0, 27)
  Type = ID	Data = int	Pos = (4, 28)
  Type = ID	Data = iarr	Pos = (8, 28)
  Type = BRAC	Data = [	Pos = (12, 28)
  Type = BRAC	Data = ]	Pos = (13, 28)
  Type = LSIG	Data = =	Pos = (15, 28)
  Type = BRAC	Data = {	Pos = (17, 28)
  Type = NUMBER	Data = 1	Pos = (18, 28)
  Type = BRAC	Data = ,	Pos = (19, 28)
  Type = NUMBER	Data = 3	Pos = (21, 28)
  Type = BRAC	Data = ,	Pos = (22, 28)
  Type = NUMBER	Data = 5	Pos = (24, 28)
  Type = BRAC	Data = ,	Pos = (25, 28)
  Type = NUMBER	Data = 7	Pos = (27, 28)
  Type = BRAC	Data = }	Pos = (28, 28)
  Type = BSIG	Data = ;	Pos = (29, 28)
  Type = ID	Data = float	Pos = (4, 29)
  Type = ID	Data = farr	Pos = (10, 29)
  Type = BRAC	Data = [	Pos = (14, 29)
  Type = BRAC	Data = ]	Pos = (15, 29)
  Type = LSIG	Data = =	Pos = (17, 29)
  Type = BRAC	Data = {	Pos = (19, 29)
  Type = NUMBER	Data = 1.1	Pos = (20, 29)
  Type = BRAC	Data = ,	Pos = (23, 29)
  Type = NUMBER	Data = 2.2	Pos = (25, 29)
  Type = BRAC	Data = ,	Pos = (28, 29)
  Type = NUMBER	Data = 3.3	Pos = (30, 29)
  Type = BRAC	Data = }	Pos = (33, 29)
  Type = BSIG	Data = ;	Pos = (34, 29)
  Type = ID	Data = for	Pos = (4, 30)
  Type = BRAC	Data = (	Pos = (8, 30)
  Type = ID	Data = int	Pos = (9, 30)
  Type = ID	Data = i	Pos = (13, 30)
  Type = LSIG	Data = =	Pos = (15, 30)
  Type = NUMBER	Data = 0	Pos = (17, 30)
  Type = BSIG	Data = ;	Pos = (18, 30)
  Type = ID	Data = i	Pos = (20, 30)
  Type = LSIG	Data = <	Pos = (22, 30)
  Type = NUMBER	Data = 3	Pos = (24, 30)
  Type = BSIG	Data = ;	Pos = (25, 30)
  Type = MSIG	Data = ++	Pos = (27, 30)
  Type = ID	Data = i	Pos = (29, 30)
  Type = BRAC	Data = )	Pos = (30, 30)
  Type = BRAC	Data = {	Pos = (4, 31)
  Type = ID	Data = print	Pos = (8, 32)
  Type = BRAC	Data = (	Pos = (13, 32)
  Type = ID	Data = iarr	Pos = (14, 32)
  Type = BRAC	Data = [	Pos = (18, 32)
  Type = ID	Data = i	Pos = (19, 32)
  Type = BRAC	Data = ]	Pos = (20, 32)
  Type = BRAC	Data = )	Pos = (21, 32)
  Type = BSIG	Data = ;	Pos = (22, 32)
  Type = ID	Data = print	Pos = (8, 33)
  Type = BRAC	Data = (	Pos = (13, 33)
  Type = ID	Data = farr	Pos = (14, 33)
  Type = BRAC	Data = [	Pos = (18, 33)
  Type = ID	Data = i	Pos = (19, 33)
  Type = BRAC	Data = ]	Pos = (20, 33)
  Type = BRAC	Data = )	Pos = (21, 33)
  Type = BSIG	Data = ;	Pos = (22, 33)
  Type = BRAC	Data = }	Pos = (4, 34)
  Type = ID	Data = print	Pos = (4, 35)
  Type = BRAC	Data = (	Pos = (9, 35)
  Type = ID	Data = iarr	Pos = (10, 35)
  Type = BRAC	Data = [	Pos = (14, 35)
  Type = NUMBER	Data = 3	Pos = (15, 35)
  Type = BRAC	Data = ]	Pos = (16, 35)
  Type = BRAC	Data = )	Pos = (17, 35)
  Type = BSIG	Data = ;	Pos = (18, 35)
  Type = ID	Data = data_t	Pos = (4, 36)
  Type = ID	Data = v	Pos = (11, 36)
  Type = BSIG	Data = ;	Pos = (12, 36)
  Type = ID	Data = v	Pos = (4, 37)
  Type = BSIG	Data = .	Pos = (5, 37)
  Type = ID	Data = fib_v	Pos = (6, 37)
  Type = LSIG	Data = =	Pos = (12, 37)
  Type = ID	Data = fib	Pos = (14, 37)
  Type = BRAC	Data = (	Pos = (17, 37)
  Type = ID	Data = input	Pos = (18, 37)
  Type = BRAC	Data = (	Pos = (23, 37)
  Type = BRAC	Data = )	Pos = (24, 37)
  Type = BRAC	Data = )	Pos = (25, 37)
  Type = BSIG	Data = ;	Pos = (26, 37)
  Type = ID	Data = v	Pos = (4, 38)
  Type = BSIG	Data = .	Pos = (5, 38)
  Type = ID	Data = pi_v	Pos = (6, 38)
  Type = LSIG	Data = =	Pos = (11, 38)
  Type = ID	Data = pi	Pos = (13, 38)
  Type = BRAC	Data = (	Pos = (15, 38)
  Type = ID	Data = input	Pos = (16, 38)
  Type = BRAC	Data = (	Pos = (21, 38)
  Type = BRAC	Data = )	Pos = (22, 38)
  Type = BRAC	Data = )	Pos = (23, 38)
  Type = BSIG	Data = ;	Pos = (24, 38)
  Type = ID	Data = print	Pos = (4, 39)
  Type = BRAC	Data = (	Pos = (9, 39)
  Type = ID	Data = v	Pos = (10, 39)
  Type = BSIG	Data = .	Pos = (11, 39)
  Type = ID	Data = fib_v	Pos = (12, 39)
  Type = BRAC	Data = )	Pos = (17, 39)
  Type = BSIG	Data = ;	Pos = (18, 39)
  Type = ID	Data = print	Pos = (4, 40)
  Type = BRAC	Data = (	Pos = (9, 40)
  Type = ID	Data = v	Pos = (10, 40)
  Type = BSIG	Data = .	Pos = (11, 40)
  Type = ID	Data = pi_v	Pos = (12, 40)
  Type = BRAC	Data = )	Pos = (16, 40)
  Type = BSIG	Data = ;	Pos = (17, 40)
  Type = ID	Data = print	Pos = (4, 41)
  Type = BRAC	Data = (	Pos = (9, 41)
  Type = ID	Data = v	Pos = (10, 41)
  Type = BSIG	Data = .	Pos = (11, 41)
  Type = ID	Data = fib_v	Pos = (12, 41)
  Type = MSIG	Data = +	Pos = (18, 41)
  Type = ID	Data = v	Pos = (20, 41)
  Type = BSIG	Data = .	Pos = (21, 41)
  Type = ID	Data = pi_v	Pos = (22, 41)
  Type = MSIG	Data = +	Pos = (27, 41)
  Type = NUMBER	Data = 1	Pos = (29, 41)
  Type = BRAC	Data = )	Pos = (30, 41)
  Type = BSIG	Data = ;	Pos = (31, 41)
  Type = ID	Data = print	Pos = (4, 42)
  Type = BRAC	Data = (	Pos = (9, 42)
  Type = ID	Data = v	Pos = (10, 42)
  Type = BSIG	Data = .	Pos = (11, 42)
  Type = ID	Data = pi_v	Pos = (12, 42)
  Type = MSIG	Data = +	Pos = (17, 42)
  Type = ID	Data = v	Pos = (19, 42)
  Type = BSIG	Data = .	Pos = (20, 42)
  Type = ID	Data = fib_v	Pos = (21, 42)
  Type = MSIG	Data = +	Pos = (27, 42)
  Type = NUMBER	Data = 1.0	Pos = (29, 42)
  Type = BRAC	Data = )	Pos = (32, 42)
  Type = BSIG	Data = ;	Pos = (33, 42)
  Type = ID	Data = return	Pos = (4, 43)
  Type = NUMBER	Data = 0	Pos = (11, 43)
  Type = BSIG	Data = ;	Pos = (12, 43)
  Type = BRAC	Data = }	Pos = (0, 44)
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),ID n,ID int,BRAC (,ID fib,ID int,
state: 0,  data: ID  'int'
type
push dat: ID
res is : 121
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 ID 121 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),ID n,ID int,BRAC (,ID fib,
state: 121,  data: ID  'fib'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),ID n,ID int,BRAC (,ID fib,
state: 129,  data: ID  'fib'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),ID n,ID int,BRAC (,
state: 107,  data: BRAC  '('
data
push dat: '('
res is : 109
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),ID n,ID int,
state: 109,  data: ID  'int'
type
push dat: ID
res is : 121
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 ID 121 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),ID n,
state: 121,  data: ID  'n'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 type_specifier 120 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),ID n,
state: 120,  data: ID  'n'
type
push dat: ID
tree stack push node declaration_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 declaration_specifier 118 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),ID n,
state: 118,  data: ID  'n'
type
push dat: ID
res is : 119
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 declaration_specifier 118 ID 119 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),
state: 119,  data: BRAC  ')'
data
push dat: ')'
tree stack push node parameter_declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 parameter_declaration 113 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),
state: 113,  data: BRAC  ')'
data
push dat: ')'
tree stack push node parameter_list_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 parameter_declaration 113 parameter_list_0_rep_2 114 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),
state: 114,  data: BRAC  ')'
data
push dat: ')'
tree stack push node parameter_list
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 parameter_list 112 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),
state: 112,  data: BRAC  ')'
data
push dat: ')'
tree stack push node extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 extend_part_1_opt_2 110 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,BRAC ),
state: 110,  data: BRAC  ')'
data
push dat: ')'
res is : 111
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 '(' 109 extend_part_1_opt_2 110 ')' 111 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,
state: 111,  data: BRAC  '{'
data
push dat: '{'
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,
state: 108,  data: BRAC  '{'
data
push dat: '{'
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,BRAC {,
state: 130,  data: BRAC  '{'
data
push dat: '{'
res is : 132
shift restree stack push node '{'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,ID if,
state: 132,  data: ID  'if'
type
data
push dat: 'if'
res is : 158
shift restree stack push node 'if'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,BRAC (,
state: 158,  data: BRAC  '('
data
push dat: '('
res is : 159
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,ID n,
state: 159,  data: ID  'n'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,
state: 86,  data: LSIG  '>'
data
push dat: '>'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,
state: 59,  data: LSIG  '>'
data
push dat: '>'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,
state: 60,  data: LSIG  '>'
data
push dat: '>'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,
state: 56,  data: LSIG  '>'
data
push dat: '>'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,
state: 52,  data: LSIG  '>'
data
push dat: '>'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,
state: 53,  data: LSIG  '>'
data
push dat: '>'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,
state: 48,  data: LSIG  '>'
data
push dat: '>'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,
state: 49,  data: LSIG  '>'
data
push dat: '>'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,LSIG >,
state: 44,  data: LSIG  '>'
data
push dat: '>'
res is : 99
shift restree stack push node '>'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 '>' 99 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,
state: 99,  data: NUMBER  '1'
type
push dat: NUMBER
tree stack push node relat_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),NUMBER 1,
state: 46,  data: NUMBER  '1'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 85,  data: BRAC  ')'
data
push dat: ')'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 59,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_op 46 relat_expression 47 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 47,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 80,  data: BRAC  ')'
data
push dat: ')'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 81,  data: BRAC  ')'
data
push dat: ')'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,BRAC ),
state: 160,  data: BRAC  ')'
data
push dat: ')'
res is : 161
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,ID return,
state: 161,  data: ID  'return'
type
data
push dat: 'return'
res is : 144
shift restree stack push node 'return'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,ID fib,
state: 144,  data: ID  'fib'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,
state: 86,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,ID n,
state: 66,  data: ID  'n'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,
state: 86,  data: MSIG  '-'
data
push dat: '-'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,
state: 59,  data: MSIG  '-'
data
push dat: '-'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,
state: 60,  data: MSIG  '-'
data
push dat: '-'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,
state: 56,  data: MSIG  '-'
data
push dat: '-'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,
state: 52,  data: MSIG  '-'
data
push dat: '-'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,
state: 53,  data: MSIG  '-'
data
push dat: '-'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,MSIG -,
state: 48,  data: MSIG  '-'
data
push dat: '-'
res is : 94
shift restree stack push node '-'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 '-' 94 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,
state: 94,  data: NUMBER  '1'
type
push dat: NUMBER
tree stack push node add_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),NUMBER 1,
state: 50,  data: NUMBER  '1'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 85,  data: BRAC  ')'
data
push dat: ')'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 59,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 additive_expression 51 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 51,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,
state: 68,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,
state: 61,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,
state: 62,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,
state: 60,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,
state: 56,  data: MSIG  '+'
data
push dat: '+'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,
state: 52,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,
state: 53,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,MSIG +,
state: 48,  data: MSIG  '+'
data
push dat: '+'
res is : 95
shift restree stack push node '+'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 '+' 95 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,
state: 95,  data: ID  'fib'
type
push dat: ID
tree stack push node add_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,ID fib,
state: 50,  data: ID  'fib'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,
state: 86,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,ID n,
state: 66,  data: ID  'n'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,
state: 86,  data: MSIG  '-'
data
push dat: '-'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,
state: 59,  data: MSIG  '-'
data
push dat: '-'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,
state: 60,  data: MSIG  '-'
data
push dat: '-'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,
state: 56,  data: MSIG  '-'
data
push dat: '-'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,
state: 52,  data: MSIG  '-'
data
push dat: '-'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,
state: 53,  data: MSIG  '-'
data
push dat: '-'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,MSIG -,
state: 48,  data: MSIG  '-'
data
push dat: '-'
res is : 94
shift restree stack push node '-'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 '-' 94 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,
state: 94,  data: NUMBER  '2'
type
push dat: NUMBER
tree stack push node add_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),NUMBER 2,
state: 50,  data: NUMBER  '2'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 85,  data: BRAC  ')'
data
push dat: ')'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 59,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 additive_expression 51 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 51,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 add_op 50 additive_expression 51 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 51,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,
state: 147,  data: ID  'else'
type
data
push dat: 'else'
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 'return' 144 expression_statement 145 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,
state: 145,  data: ID  'else'
type
data
push dat: 'else'
tree stack push node return_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 return_statement 139 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,
state: 139,  data: ID  'else'
type
data
push dat: 'else'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,ID else,
state: 162,  data: ID  'else'
type
data
push dat: 'else'
res is : 164
shift restree stack push node 'else'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,ID return,
state: 164,  data: ID  'return'
type
data
push dat: 'return'
res is : 144
shift restree stack push node 'return'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,NUMBER 1,
state: 144,  data: NUMBER  '1'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 85,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },
state: 147,  data: BRAC  '}'
data
push dat: '}'
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 'return' 144 expression_statement 145 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },
state: 145,  data: BRAC  '}'
data
push dat: '}'
tree stack push node return_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 return_statement 139 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },
state: 139,  data: BRAC  '}'
data
push dat: '}'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 'else' 164 statement 165 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },
state: 165,  data: BRAC  '}'
data
push dat: '}'
tree stack push node selection_statement_0_opt_6
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 'if' 158 '(' 159 expression 160 ')' 161 statement 162 selection_statement_0_opt_6 163 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },
state: 163,  data: BRAC  '}'
data
push dat: '}'
tree stack push node selection_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 selection_statement 141 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },
state: 141,  data: BRAC  '}'
data
push dat: '}'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },
state: 135,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 compound_statement_0_rep_2 133 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,BRAC },
state: 133,  data: BRAC  '}'
data
push dat: '}'
res is : 134
shift restree stack push node '}'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 '{' 132 compound_statement_0_rep_2 133 '}' 134 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,
state: 134,  data: ID  'float'
type
push dat: ID
tree stack push node compound_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 type_specifier 129 direct_declarator 130 compound_statement 131 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,
state: 131,  data: ID  'float'
type
push dat: ID
tree stack push node function_declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 function_declaration 7 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,
state: 7,  data: ID  'float'
type
push dat: ID
tree stack push node external_declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,ID float,
state: 3,  data: ID  'float'
type
push dat: ID
res is : 121
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 ID 121 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,
state: 121,  data: ID  'pi'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,ID pi,
state: 129,  data: ID  'pi'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,BRAC (,
state: 107,  data: BRAC  '('
data
push dat: '('
res is : 109
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,ID int,
state: 109,  data: ID  'int'
type
push dat: ID
res is : 121
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 ID 121 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,
state: 121,  data: ID  'n'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 type_specifier 120 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,
state: 120,  data: ID  'n'
type
push dat: ID
tree stack push node declaration_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 declaration_specifier 118 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),ID n,
state: 118,  data: ID  'n'
type
push dat: ID
res is : 119
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 declaration_specifier 118 ID 119 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),
state: 119,  data: BRAC  ')'
data
push dat: ')'
tree stack push node parameter_declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 parameter_declaration 113 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),
state: 113,  data: BRAC  ')'
data
push dat: ')'
tree stack push node parameter_list_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 parameter_declaration 113 parameter_list_0_rep_2 114 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),
state: 114,  data: BRAC  ')'
data
push dat: ')'
tree stack push node parameter_list
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 parameter_list 112 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),
state: 112,  data: BRAC  ')'
data
push dat: ')'
tree stack push node extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 extend_part_1_opt_2 110 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,BRAC ),
state: 110,  data: BRAC  ')'
data
push dat: ')'
res is : 111
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 '(' 109 extend_part_1_opt_2 110 ')' 111 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,
state: 111,  data: BRAC  '{'
data
push dat: '{'
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,
state: 108,  data: BRAC  '{'
data
push dat: '{'
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,BRAC {,
state: 130,  data: BRAC  '{'
data
push dat: '{'
res is : 132
shift restree stack push node '{'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,ID float,
state: 132,  data: ID  'float'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,
state: 171,  data: ID  'sum'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,ID sum,
state: 18,  data: ID  'sum'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,
state: 107,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 extend_part_0_rep_1 122 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,
state: 122,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,
state: 108,  data: LSIG  '='
data
push dat: '='
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,LSIG =,
state: 21,  data: LSIG  '='
data
push dat: '='
res is : 23
shift restree stack push node '='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,NUMBER 0,
state: 23,  data: NUMBER  '0'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 85,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 35,  data: BSIG  ';'
data
push dat: ';'
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 initializer 24 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 24,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 init_declarator_0_opt_2 22 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 22,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 init_declarator 19 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,BSIG ;,
state: 19,  data: BSIG  ';'
data
push dat: ';'
res is : 20
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 init_declarator 19 ';' 20 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,
state: 20,  data: ID  'float'
type
push dat: ID
tree stack push node declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,ID float,
state: 137,  data: ID  'float'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,
state: 171,  data: ID  'sig'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,ID sig,
state: 18,  data: ID  'sig'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,
state: 107,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 extend_part_0_rep_1 122 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,
state: 122,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,
state: 108,  data: LSIG  '='
data
push dat: '='
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,LSIG =,
state: 21,  data: LSIG  '='
data
push dat: '='
res is : 23
shift restree stack push node '='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,NUMBER 1.0,
state: 23,  data: NUMBER  '1.0'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 85,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 35,  data: BSIG  ';'
data
push dat: ';'
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 initializer 24 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 24,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 init_declarator_0_opt_2 22 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 22,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 init_declarator 19 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 19,  data: BSIG  ';'
data
push dat: ';'
res is : 20
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 init_declarator 19 ';' 20 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,
state: 20,  data: ID  'for'
type
data
push dat: 'for'
tree stack push node declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,ID for,
state: 137,  data: ID  'for'
type
data
push dat: 'for'
res is : 149
shift restree stack push node 'for'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,BRAC (,
state: 149,  data: BRAC  '('
data
push dat: '('
res is : 150
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,ID int,
state: 150,  data: ID  'int'
type
push dat: ID
res is : 121
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 ID 121 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,
state: 121,  data: ID  'i'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 type_specifier 170 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,
state: 170,  data: ID  'i'
type
push dat: ID
tree stack push node iteration_statement_0_opt_3_0_opt_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,ID i,
state: 168,  data: ID  'i'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,
state: 107,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 ID 107 extend_part_0_rep_1 122 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,
state: 122,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,
state: 108,  data: LSIG  '='
data
push dat: '='
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,LSIG =,
state: 21,  data: LSIG  '='
data
push dat: '='
res is : 23
shift restree stack push node '='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,NUMBER 1,
state: 23,  data: NUMBER  '1'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 85,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 35,  data: BSIG  ';'
data
push dat: ';'
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 initializer 24 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 24,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 init_declarator_0_opt_2 22 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 22,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 init_declarator 169 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 169,  data: BSIG  ';'
data
push dat: ';'
tree stack push node iteration_statement_0_opt_3
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,BSIG ;,
state: 151,  data: BSIG  ';'
data
push dat: ';'
res is : 152
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,ID i,
state: 152,  data: ID  'i'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,
state: 86,  data: LSIG  '<='
data
push dat: '<='
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,
state: 59,  data: LSIG  '<='
data
push dat: '<='
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,
state: 60,  data: LSIG  '<='
data
push dat: '<='
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,
state: 56,  data: LSIG  '<='
data
push dat: '<='
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,
state: 52,  data: LSIG  '<='
data
push dat: '<='
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,
state: 53,  data: LSIG  '<='
data
push dat: '<='
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,
state: 48,  data: LSIG  '<='
data
push dat: '<='
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,
state: 49,  data: LSIG  '<='
data
push dat: '<='
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,LSIG <=,
state: 44,  data: LSIG  '<='
data
push dat: '<='
res is : 96
shift restree stack push node '<='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 '<=' 96 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,
state: 96,  data: ID  'n'
type
push dat: ID
tree stack push node relat_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,ID n,
state: 46,  data: ID  'n'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 86,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 relat_expression 47 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 47,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 expression 167 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 167,  data: BSIG  ';'
data
push dat: ';'
tree stack push node iteration_statement_0_opt_5
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,BSIG ;,
state: 153,  data: BSIG  ';'
data
push dat: ';'
res is : 154
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,ID i,
state: 154,  data: ID  'i'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 86,  data: MSIG  '+='
data
push dat: '+='
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 59,  data: MSIG  '+='
data
push dat: '+='
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 60,  data: MSIG  '+='
data
push dat: '+='
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 56,  data: MSIG  '+='
data
push dat: '+='
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 52,  data: MSIG  '+='
data
push dat: '+='
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 53,  data: MSIG  '+='
data
push dat: '+='
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 48,  data: MSIG  '+='
data
push dat: '+='
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 49,  data: MSIG  '+='
data
push dat: '+='
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 44,  data: MSIG  '+='
data
push dat: '+='
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 45,  data: MSIG  '+='
data
push dat: '+='
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 40,  data: MSIG  '+='
data
push dat: '+='
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 41,  data: MSIG  '+='
data
push dat: '+='
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,MSIG +=,
state: 36,  data: MSIG  '+='
data
push dat: '+='
res is : 105
shift restree stack push node '+='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 '+=' 105 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,
state: 105,  data: NUMBER  '2'
type
push dat: NUMBER
tree stack push node assign_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),NUMBER 2,
state: 38,  data: NUMBER  '2'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 85,  data: BRAC  ')'
data
push dat: ')'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 59,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assign_op 38 assignment_expression 39 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 39,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 80,  data: BRAC  ')'
data
push dat: ')'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 81,  data: BRAC  ')'
data
push dat: ')'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 expression 166 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 166,  data: BRAC  ')'
data
push dat: ')'
tree stack push node iteration_statement_0_opt_7
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,BRAC ),
state: 155,  data: BRAC  ')'
data
push dat: ')'
res is : 156
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,BRAC {,
state: 156,  data: BRAC  '{'
data
push dat: '{'
res is : 132
shift restree stack push node '{'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,ID sum,
state: 132,  data: ID  'sum'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 171,  data: MSIG  '+='
data
push dat: '+='
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 59,  data: MSIG  '+='
data
push dat: '+='
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 60,  data: MSIG  '+='
data
push dat: '+='
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 56,  data: MSIG  '+='
data
push dat: '+='
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 52,  data: MSIG  '+='
data
push dat: '+='
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 53,  data: MSIG  '+='
data
push dat: '+='
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 48,  data: MSIG  '+='
data
push dat: '+='
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 49,  data: MSIG  '+='
data
push dat: '+='
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 44,  data: MSIG  '+='
data
push dat: '+='
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 45,  data: MSIG  '+='
data
push dat: '+='
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 40,  data: MSIG  '+='
data
push dat: '+='
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 41,  data: MSIG  '+='
data
push dat: '+='
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,MSIG +=,
state: 36,  data: MSIG  '+='
data
push dat: '+='
res is : 105
shift restree stack push node '+='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 '+=' 105 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,
state: 105,  data: ID  'sig'
type
push dat: ID
tree stack push node assign_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,ID sig,
state: 38,  data: ID  'sig'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 86,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assign_op 38 assignment_expression 39 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 39,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,
state: 147,  data: ID  'sig'
type
push dat: ID
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,
state: 142,  data: ID  'sig'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,ID sig,
state: 135,  data: ID  'sig'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 171,  data: LSIG  '='
data
push dat: '='
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 59,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 60,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 56,  data: LSIG  '='
data
push dat: '='
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 52,  data: LSIG  '='
data
push dat: '='
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 53,  data: LSIG  '='
data
push dat: '='
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 48,  data: LSIG  '='
data
push dat: '='
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 49,  data: LSIG  '='
data
push dat: '='
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 44,  data: LSIG  '='
data
push dat: '='
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 45,  data: LSIG  '='
data
push dat: '='
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 40,  data: LSIG  '='
data
push dat: '='
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 41,  data: LSIG  '='
data
push dat: '='
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,LSIG =,
state: 36,  data: LSIG  '='
data
push dat: '='
res is : 106
shift restree stack push node '='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 '=' 106 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,
state: 106,  data: NUMBER  '0'
type
push dat: NUMBER
tree stack push node assign_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,NUMBER 0,
state: 38,  data: NUMBER  '0'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,
state: 85,  data: MSIG  '-'
data
push dat: '-'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,
state: 59,  data: MSIG  '-'
data
push dat: '-'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,
state: 60,  data: MSIG  '-'
data
push dat: '-'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,
state: 56,  data: MSIG  '-'
data
push dat: '-'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,
state: 52,  data: MSIG  '-'
data
push dat: '-'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,
state: 53,  data: MSIG  '-'
data
push dat: '-'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,MSIG -,
state: 48,  data: MSIG  '-'
data
push dat: '-'
res is : 94
shift restree stack push node '-'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 '-' 94 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,
state: 94,  data: ID  'sig'
type
push dat: ID
tree stack push node add_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,ID sig,
state: 50,  data: ID  'sig'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 86,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 add_op 50 additive_expression 51 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 51,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assign_op 38 assignment_expression 39 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 39,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },
state: 147,  data: BRAC  '}'
data
push dat: '}'
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },
state: 142,  data: BRAC  '}'
data
push dat: '}'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },
state: 135,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 compound_statement_0_rep_2 133 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,BRAC },
state: 133,  data: BRAC  '}'
data
push dat: '}'
res is : 134
shift restree stack push node '}'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 compound_statement_0_rep_2 133 '}' 134 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,
state: 134,  data: ID  'return'
type
data
push dat: 'return'
tree stack push node compound_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 compound_statement 143 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,
state: 143,  data: ID  'return'
type
data
push dat: 'return'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 statement 157 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,
state: 157,  data: ID  'return'
type
data
push dat: 'return'
tree stack push node iteration_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 iteration_statement 140 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,
state: 140,  data: ID  'return'
type
data
push dat: 'return'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,ID return,
state: 135,  data: ID  'return'
type
data
push dat: 'return'
res is : 144
shift restree stack push node 'return'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,ID sum,
state: 144,  data: ID  'sum'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 86,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },
state: 147,  data: BRAC  '}'
data
push dat: '}'
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 'return' 144 expression_statement 145 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },
state: 145,  data: BRAC  '}'
data
push dat: '}'
tree stack push node return_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 return_statement 139 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },
state: 139,  data: BRAC  '}'
data
push dat: '}'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },
state: 135,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 compound_statement_0_rep_2 138 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },
state: 138,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 compound_statement_0_rep_2 138 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },
state: 138,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 compound_statement_0_rep_2 133 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,BRAC },
state: 133,  data: BRAC  '}'
data
push dat: '}'
res is : 134
shift restree stack push node '}'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 compound_statement_0_rep_2 133 '}' 134 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,
state: 134,  data: ID  'struct'
type
data
push dat: 'struct'
tree stack push node compound_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 type_specifier 129 direct_declarator 130 compound_statement 131 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,
state: 131,  data: ID  'struct'
type
data
push dat: 'struct'
tree stack push node function_declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 function_declaration 7 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,
state: 7,  data: ID  'struct'
type
data
push dat: 'struct'
tree stack push node external_declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,ID struct,
state: 3,  data: ID  'struct'
type
data
push dat: 'struct'
res is : 8
shift restree stack push node 'struct'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,ID data_t,
state: 8,  data: ID  'data_t'
type
push dat: ID
res is : 9
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,BRAC {,
state: 9,  data: BRAC  '{'
data
push dat: '{'
res is : 10
shift restree stack push node '{'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,ID int,
state: 10,  data: ID  'int'
type
push dat: ID
res is : 121
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 ID 121 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,
state: 121,  data: ID  'fib_v'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 type_specifier 18 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,ID fib_v,
state: 18,  data: ID  'fib_v'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 type_specifier 18 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,
state: 107,  data: BSIG  ';'
data
push dat: ';'
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 type_specifier 18 ID 107 extend_part_0_rep_1 122 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,
state: 122,  data: BSIG  ';'
data
push dat: ';'
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 type_specifier 18 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,
state: 108,  data: BSIG  ';'
data
push dat: ';'
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 type_specifier 18 direct_declarator 21 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,
state: 21,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 type_specifier 18 direct_declarator 21 init_declarator_0_opt_2 22 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,
state: 22,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 type_specifier 18 init_declarator 19 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,BSIG ;,
state: 19,  data: BSIG  ';'
data
push dat: ';'
res is : 20
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 type_specifier 18 init_declarator 19 ';' 20 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,
state: 20,  data: ID  'float'
type
push dat: ID
tree stack push node declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,ID float,
state: 16,  data: ID  'float'
type
push dat: ID
res is : 121
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 ID 121 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,
state: 121,  data: ID  'pi_v'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 type_specifier 18 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,ID pi_v,
state: 18,  data: ID  'pi_v'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 type_specifier 18 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,
state: 107,  data: BSIG  ';'
data
push dat: ';'
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 type_specifier 18 ID 107 extend_part_0_rep_1 122 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,
state: 122,  data: BSIG  ';'
data
push dat: ';'
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 type_specifier 18 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,
state: 108,  data: BSIG  ';'
data
push dat: ';'
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 type_specifier 18 direct_declarator 21 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,
state: 21,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 type_specifier 18 direct_declarator 21 init_declarator_0_opt_2 22 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,
state: 22,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 type_specifier 18 init_declarator 19 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },BSIG ;,
state: 19,  data: BSIG  ';'
data
push dat: ';'
res is : 20
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 type_specifier 18 init_declarator 19 ';' 20 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },
state: 20,  data: BRAC  '}'
data
push dat: '}'
tree stack push node declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 declaration 16 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },
state: 16,  data: BRAC  '}'
data
push dat: '}'
tree stack push node struct_specifier_0_rep_4
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 declaration 16 struct_specifier_0_rep_4 17 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },
state: 17,  data: BRAC  '}'
data
push dat: '}'
tree stack push node struct_specifier_0_rep_4
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 declaration 16 struct_specifier_0_rep_4 17 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },
state: 17,  data: BRAC  '}'
data
push dat: '}'
tree stack push node struct_specifier_0_rep_4
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 struct_specifier_0_rep_4 11 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,BRAC },
state: 11,  data: BRAC  '}'
data
push dat: '}'
res is : 12
shift restree stack push node '}'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 struct_specifier_0_rep_4 11 '}' 12 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,
state: 12,  data: BSIG  ';'
data
push dat: ';'
tree stack push node struct_specifier_0_opt_6
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 struct_specifier_0_rep_4 11 '}' 12 struct_specifier_0_opt_6 13 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,BSIG ;,
state: 13,  data: BSIG  ';'
data
push dat: ';'
res is : 14
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 'struct' 8 ID 9 '{' 10 struct_specifier_0_rep_4 11 '}' 12 struct_specifier_0_opt_6 13 ';' 14 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,
state: 14,  data: ID  'int'
type
push dat: ID
tree stack push node struct_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 struct_specifier 5 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,
state: 5,  data: ID  'int'
type
push dat: ID
tree stack push node external_declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,ID int,
state: 3,  data: ID  'int'
type
push dat: ID
res is : 121
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 ID 121 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,
state: 121,  data: ID  'main'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,ID main,
state: 129,  data: ID  'main'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),BRAC (,
state: 107,  data: BRAC  '('
data
push dat: '('
res is : 109
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 ID 107 '(' 109 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),
state: 109,  data: BRAC  ')'
data
push dat: ')'
tree stack push node extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 ID 107 '(' 109 extend_part_1_opt_2 110 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,BRAC ),
state: 110,  data: BRAC  ')'
data
push dat: ')'
res is : 111
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 ID 107 '(' 109 extend_part_1_opt_2 110 ')' 111 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,
state: 111,  data: BRAC  '{'
data
push dat: '{'
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,
state: 108,  data: BRAC  '{'
data
push dat: '{'
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,BRAC {,
state: 130,  data: BRAC  '{'
data
push dat: '{'
res is : 132
shift restree stack push node '{'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,ID int,
state: 132,  data: ID  'int'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,
state: 171,  data: ID  'iarr'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,ID iarr,
state: 18,  data: ID  'iarr'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],BRAC [,
state: 107,  data: BRAC  '['
data
push dat: '['
res is : 123
shift restree stack push node '['
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 '[' 123 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],
state: 123,  data: BRAC  ']'
data
push dat: ']'
tree stack push node extend_part_0_rep_1_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 '[' 123 extend_part_0_rep_1_0_opt_2 124 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,BRAC ],
state: 124,  data: BRAC  ']'
data
push dat: ']'
res is : 125
shift restree stack push node ']'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 '[' 123 extend_part_0_rep_1_0_opt_2 124 ']' 125 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,
state: 125,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 '[' 123 extend_part_0_rep_1_0_opt_2 124 ']' 125 extend_part_0_rep_1 126 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,
state: 126,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 extend_part_0_rep_1 122 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,
state: 122,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,
state: 108,  data: LSIG  '='
data
push dat: '='
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,LSIG =,
state: 21,  data: LSIG  '='
data
push dat: '='
res is : 23
shift restree stack push node '='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,BRAC {,
state: 23,  data: BRAC  '{'
data
push dat: '{'
res is : 25
shift restree stack push node '{'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,NUMBER 1,
state: 25,  data: NUMBER  '1'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 85,  data: BRAC  ','
data
push dat: ','
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 59,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 60,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 56,  data: BRAC  ','
data
push dat: ','
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 52,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 53,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 48,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 49,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 44,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 45,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 40,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 41,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 36,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 37,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 35,  data: BRAC  ','
data
push dat: ','
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,BRAC ,,
state: 30,  data: BRAC  ','
data
push dat: ','
res is : 32
shift restree stack push node ','
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,NUMBER 3,
state: 32,  data: NUMBER  '3'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 85,  data: BRAC  ','
data
push dat: ','
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 59,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 60,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 56,  data: BRAC  ','
data
push dat: ','
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 52,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 53,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 48,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 49,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 44,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 45,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 40,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 41,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 36,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 37,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 35,  data: BRAC  ','
data
push dat: ','
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,BRAC ,,
state: 33,  data: BRAC  ','
data
push dat: ','
res is : 32
shift restree stack push node ','
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,NUMBER 5,
state: 32,  data: NUMBER  '5'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 85,  data: BRAC  ','
data
push dat: ','
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 59,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 60,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 56,  data: BRAC  ','
data
push dat: ','
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 52,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 53,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 48,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 49,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 44,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 45,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 40,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 41,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 36,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 37,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 35,  data: BRAC  ','
data
push dat: ','
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,BRAC ,,
state: 33,  data: BRAC  ','
data
push dat: ','
res is : 32
shift restree stack push node ','
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },NUMBER 7,
state: 32,  data: NUMBER  '7'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 85,  data: BRAC  '}'
data
push dat: '}'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 59,  data: BRAC  '}'
data
push dat: '}'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 60,  data: BRAC  '}'
data
push dat: '}'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 56,  data: BRAC  '}'
data
push dat: '}'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 52,  data: BRAC  '}'
data
push dat: '}'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 53,  data: BRAC  '}'
data
push dat: '}'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 48,  data: BRAC  '}'
data
push dat: '}'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 49,  data: BRAC  '}'
data
push dat: '}'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 44,  data: BRAC  '}'
data
push dat: '}'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 45,  data: BRAC  '}'
data
push dat: '}'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 40,  data: BRAC  '}'
data
push dat: '}'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 41,  data: BRAC  '}'
data
push dat: '}'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 36,  data: BRAC  '}'
data
push dat: '}'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 37,  data: BRAC  '}'
data
push dat: '}'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 35,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 initializer 33 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 33,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_list_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 ',' 32 initializer 33 initializer_list_0_rep_2 34 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 34,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_list_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 initializer_list_0_rep_2 34 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 34,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_list_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 initializer_list_0_rep_2 34 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 34,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_list_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 initializer_list_0_rep_2 31 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 31,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_list
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer_list 26 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 26,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_1_opt_3
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer_list 26 initializer_1_opt_3 27 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,BRAC },
state: 27,  data: BRAC  '}'
data
push dat: '}'
res is : 28
shift restree stack push node '}'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer_list 26 initializer_1_opt_3 27 '}' 28 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,
state: 28,  data: BSIG  ';'
data
push dat: ';'
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 '=' 23 initializer 24 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,
state: 24,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 direct_declarator 21 init_declarator_0_opt_2 22 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,
state: 22,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 init_declarator 19 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,BSIG ;,
state: 19,  data: BSIG  ';'
data
push dat: ';'
res is : 20
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 type_specifier 18 init_declarator 19 ';' 20 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,
state: 20,  data: ID  'float'
type
push dat: ID
tree stack push node declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,ID float,
state: 137,  data: ID  'float'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,
state: 171,  data: ID  'farr'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,ID farr,
state: 18,  data: ID  'farr'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],BRAC [,
state: 107,  data: BRAC  '['
data
push dat: '['
res is : 123
shift restree stack push node '['
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 '[' 123 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],
state: 123,  data: BRAC  ']'
data
push dat: ']'
tree stack push node extend_part_0_rep_1_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 '[' 123 extend_part_0_rep_1_0_opt_2 124 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,BRAC ],
state: 124,  data: BRAC  ']'
data
push dat: ']'
res is : 125
shift restree stack push node ']'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 '[' 123 extend_part_0_rep_1_0_opt_2 124 ']' 125 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,
state: 125,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 '[' 123 extend_part_0_rep_1_0_opt_2 124 ']' 125 extend_part_0_rep_1 126 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,
state: 126,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 extend_part_0_rep_1 122 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,
state: 122,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,
state: 108,  data: LSIG  '='
data
push dat: '='
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,LSIG =,
state: 21,  data: LSIG  '='
data
push dat: '='
res is : 23
shift restree stack push node '='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,BRAC {,
state: 23,  data: BRAC  '{'
data
push dat: '{'
res is : 25
shift restree stack push node '{'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,NUMBER 1.1,
state: 25,  data: NUMBER  '1.1'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 85,  data: BRAC  ','
data
push dat: ','
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 59,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 60,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 56,  data: BRAC  ','
data
push dat: ','
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 52,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 53,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 48,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 49,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 44,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 45,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 40,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 41,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 36,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 37,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 35,  data: BRAC  ','
data
push dat: ','
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,BRAC ,,
state: 30,  data: BRAC  ','
data
push dat: ','
res is : 32
shift restree stack push node ','
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,NUMBER 2.2,
state: 32,  data: NUMBER  '2.2'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 85,  data: BRAC  ','
data
push dat: ','
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 59,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 60,  data: BRAC  ','
data
push dat: ','
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 56,  data: BRAC  ','
data
push dat: ','
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 52,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 53,  data: BRAC  ','
data
push dat: ','
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 48,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 49,  data: BRAC  ','
data
push dat: ','
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 44,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 45,  data: BRAC  ','
data
push dat: ','
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 40,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 41,  data: BRAC  ','
data
push dat: ','
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 36,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 37,  data: BRAC  ','
data
push dat: ','
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 35,  data: BRAC  ','
data
push dat: ','
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,BRAC ,,
state: 33,  data: BRAC  ','
data
push dat: ','
res is : 32
shift restree stack push node ','
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },NUMBER 3.3,
state: 32,  data: NUMBER  '3.3'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 85,  data: BRAC  '}'
data
push dat: '}'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 59,  data: BRAC  '}'
data
push dat: '}'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 60,  data: BRAC  '}'
data
push dat: '}'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 56,  data: BRAC  '}'
data
push dat: '}'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 52,  data: BRAC  '}'
data
push dat: '}'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 53,  data: BRAC  '}'
data
push dat: '}'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 48,  data: BRAC  '}'
data
push dat: '}'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 49,  data: BRAC  '}'
data
push dat: '}'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 44,  data: BRAC  '}'
data
push dat: '}'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 45,  data: BRAC  '}'
data
push dat: '}'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 40,  data: BRAC  '}'
data
push dat: '}'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 41,  data: BRAC  '}'
data
push dat: '}'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 36,  data: BRAC  '}'
data
push dat: '}'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 37,  data: BRAC  '}'
data
push dat: '}'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 35,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 33,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_list_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 ',' 32 initializer 33 initializer_list_0_rep_2 34 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 34,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_list_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 ',' 32 initializer 33 initializer_list_0_rep_2 34 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 34,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_list_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer 30 initializer_list_0_rep_2 31 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 31,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_list
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer_list 26 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 26,  data: BRAC  '}'
data
push dat: '}'
tree stack push node initializer_1_opt_3
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer_list 26 initializer_1_opt_3 27 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,BRAC },
state: 27,  data: BRAC  '}'
data
push dat: '}'
res is : 28
shift restree stack push node '}'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 '{' 25 initializer_list 26 initializer_1_opt_3 27 '}' 28 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 28,  data: BSIG  ';'
data
push dat: ';'
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 '=' 23 initializer 24 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 24,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 direct_declarator 21 init_declarator_0_opt_2 22 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 22,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 init_declarator 19 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,BSIG ;,
state: 19,  data: BSIG  ';'
data
push dat: ';'
res is : 20
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 type_specifier 18 init_declarator 19 ';' 20 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,
state: 20,  data: ID  'for'
type
data
push dat: 'for'
tree stack push node declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,ID for,
state: 137,  data: ID  'for'
type
data
push dat: 'for'
res is : 149
shift restree stack push node 'for'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,BRAC (,
state: 149,  data: BRAC  '('
data
push dat: '('
res is : 150
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,ID int,
state: 150,  data: ID  'int'
type
push dat: ID
res is : 121
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 ID 121 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,
state: 121,  data: ID  'i'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 type_specifier 170 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,
state: 170,  data: ID  'i'
type
push dat: ID
tree stack push node iteration_statement_0_opt_3_0_opt_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,ID i,
state: 168,  data: ID  'i'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,
state: 107,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 ID 107 extend_part_0_rep_1 122 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,
state: 122,  data: LSIG  '='
data
push dat: '='
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,
state: 108,  data: LSIG  '='
data
push dat: '='
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,LSIG =,
state: 21,  data: LSIG  '='
data
push dat: '='
res is : 23
shift restree stack push node '='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,NUMBER 0,
state: 23,  data: NUMBER  '0'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 85,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 assignment_expression 35 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 35,  data: BSIG  ';'
data
push dat: ';'
tree stack push node initializer
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 '=' 23 initializer 24 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 24,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 direct_declarator 21 init_declarator_0_opt_2 22 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 22,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3_0_opt_1 168 init_declarator 169 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 169,  data: BSIG  ';'
data
push dat: ';'
tree stack push node iteration_statement_0_opt_3
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,BSIG ;,
state: 151,  data: BSIG  ';'
data
push dat: ';'
res is : 152
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,ID i,
state: 152,  data: ID  'i'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,
state: 86,  data: LSIG  '<'
data
push dat: '<'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,
state: 59,  data: LSIG  '<'
data
push dat: '<'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,
state: 60,  data: LSIG  '<'
data
push dat: '<'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,
state: 56,  data: LSIG  '<'
data
push dat: '<'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,
state: 52,  data: LSIG  '<'
data
push dat: '<'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,
state: 53,  data: LSIG  '<'
data
push dat: '<'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,
state: 48,  data: LSIG  '<'
data
push dat: '<'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,
state: 49,  data: LSIG  '<'
data
push dat: '<'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,LSIG <,
state: 44,  data: LSIG  '<'
data
push dat: '<'
res is : 98
shift restree stack push node '<'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 '<' 98 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,
state: 98,  data: NUMBER  '3'
type
push dat: NUMBER
tree stack push node relat_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,NUMBER 3,
state: 46,  data: NUMBER  '3'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 85,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_op 46 relat_expression 47 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 47,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 expression 167 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 167,  data: BSIG  ';'
data
push dat: ';'
tree stack push node iteration_statement_0_opt_5
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,BSIG ;,
state: 153,  data: BSIG  ';'
data
push dat: ';'
res is : 154
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,MSIG ++,
state: 154,  data: MSIG  '++'
data
push dat: '++'
res is : 76
shift restree stack push node '++'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 '++' 76 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,
state: 76,  data: ID  'i'
type
push dat: ID
tree stack push node sadd_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 sadd_op 57 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),ID i,
state: 57,  data: ID  'i'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 sadd_op 57 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 86,  data: BRAC  ')'
data
push dat: ')'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 sadd_op 57 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 59,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 sadd_op 57 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 sadd_op 57 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 sadd_op 57 unary_expression 58 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 58,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 80,  data: BRAC  ')'
data
push dat: ')'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 81,  data: BRAC  ')'
data
push dat: ')'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 expression 166 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 166,  data: BRAC  ')'
data
push dat: ')'
tree stack push node iteration_statement_0_opt_7
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,BRAC ),
state: 155,  data: BRAC  ')'
data
push dat: ')'
res is : 156
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,BRAC {,
state: 156,  data: BRAC  '{'
data
push dat: '{'
res is : 132
shift restree stack push node '{'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,ID print,
state: 132,  data: ID  'print'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,
state: 171,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID iarr,
state: 66,  data: ID  'iarr'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,
state: 86,  data: BRAC  '['
data
push dat: '['
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,BRAC [,
state: 59,  data: BRAC  '['
data
push dat: '['
res is : 87
shift restree stack push node '['
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],ID i,
state: 87,  data: ID  'i'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 86,  data: BRAC  ']'
data
push dat: ']'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 59,  data: BRAC  ']'
data
push dat: ']'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 60,  data: BRAC  ']'
data
push dat: ']'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 56,  data: BRAC  ']'
data
push dat: ']'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 52,  data: BRAC  ']'
data
push dat: ']'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 53,  data: BRAC  ']'
data
push dat: ']'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 48,  data: BRAC  ']'
data
push dat: ']'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 49,  data: BRAC  ']'
data
push dat: ']'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 44,  data: BRAC  ']'
data
push dat: ']'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 45,  data: BRAC  ']'
data
push dat: ']'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 40,  data: BRAC  ']'
data
push dat: ']'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 41,  data: BRAC  ']'
data
push dat: ']'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 36,  data: BRAC  ']'
data
push dat: ']'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 37,  data: BRAC  ']'
data
push dat: ']'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 80,  data: BRAC  ']'
data
push dat: ']'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 81,  data: BRAC  ']'
data
push dat: ']'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 expression 88 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),BRAC ],
state: 88,  data: BRAC  ']'
data
push dat: ']'
res is : 89
shift restree stack push node ']'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 '[' 87 expression 88 ']' 89 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 89,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 61,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 62,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,
state: 147,  data: ID  'print'
type
push dat: ID
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,
state: 142,  data: ID  'print'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,ID print,
state: 135,  data: ID  'print'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,
state: 171,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,ID farr,
state: 66,  data: ID  'farr'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,
state: 86,  data: BRAC  '['
data
push dat: '['
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,BRAC [,
state: 59,  data: BRAC  '['
data
push dat: '['
res is : 87
shift restree stack push node '['
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],ID i,
state: 87,  data: ID  'i'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 86,  data: BRAC  ']'
data
push dat: ']'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 59,  data: BRAC  ']'
data
push dat: ']'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 60,  data: BRAC  ']'
data
push dat: ']'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 56,  data: BRAC  ']'
data
push dat: ']'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 52,  data: BRAC  ']'
data
push dat: ']'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 53,  data: BRAC  ']'
data
push dat: ']'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 48,  data: BRAC  ']'
data
push dat: ']'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 49,  data: BRAC  ']'
data
push dat: ']'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 44,  data: BRAC  ']'
data
push dat: ']'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 45,  data: BRAC  ']'
data
push dat: ']'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 40,  data: BRAC  ']'
data
push dat: ']'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 41,  data: BRAC  ']'
data
push dat: ']'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 36,  data: BRAC  ']'
data
push dat: ']'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 37,  data: BRAC  ']'
data
push dat: ']'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 80,  data: BRAC  ']'
data
push dat: ']'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 81,  data: BRAC  ']'
data
push dat: ']'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 expression 88 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),BRAC ],
state: 88,  data: BRAC  ']'
data
push dat: ']'
res is : 89
shift restree stack push node ']'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 expression 88 ']' 89 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 89,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 61,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 62,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },
state: 147,  data: BRAC  '}'
data
push dat: '}'
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },
state: 142,  data: BRAC  '}'
data
push dat: '}'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },
state: 135,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 compound_statement_0_rep_2 133 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,BRAC },
state: 133,  data: BRAC  '}'
data
push dat: '}'
res is : 134
shift restree stack push node '}'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 '{' 132 compound_statement_0_rep_2 133 '}' 134 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,
state: 134,  data: ID  'print'
type
push dat: ID
tree stack push node compound_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 compound_statement 143 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,
state: 143,  data: ID  'print'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 'for' 149 '(' 150 iteration_statement_0_opt_3 151 ';' 152 iteration_statement_0_opt_5 153 ';' 154 iteration_statement_0_opt_7 155 ')' 156 statement 157 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,
state: 157,  data: ID  'print'
type
push dat: ID
tree stack push node iteration_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 iteration_statement 140 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,
state: 140,  data: ID  'print'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,ID print,
state: 135,  data: ID  'print'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,
state: 171,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,ID iarr,
state: 66,  data: ID  'iarr'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,
state: 86,  data: BRAC  '['
data
push dat: '['
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,BRAC [,
state: 59,  data: BRAC  '['
data
push dat: '['
res is : 87
shift restree stack push node '['
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],NUMBER 3,
state: 87,  data: NUMBER  '3'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 85,  data: BRAC  ']'
data
push dat: ']'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 59,  data: BRAC  ']'
data
push dat: ']'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 60,  data: BRAC  ']'
data
push dat: ']'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 56,  data: BRAC  ']'
data
push dat: ']'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 52,  data: BRAC  ']'
data
push dat: ']'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 53,  data: BRAC  ']'
data
push dat: ']'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 48,  data: BRAC  ']'
data
push dat: ']'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 49,  data: BRAC  ']'
data
push dat: ']'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 44,  data: BRAC  ']'
data
push dat: ']'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 45,  data: BRAC  ']'
data
push dat: ']'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 40,  data: BRAC  ']'
data
push dat: ']'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 41,  data: BRAC  ']'
data
push dat: ']'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 36,  data: BRAC  ']'
data
push dat: ']'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 37,  data: BRAC  ']'
data
push dat: ']'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 80,  data: BRAC  ']'
data
push dat: ']'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 81,  data: BRAC  ']'
data
push dat: ']'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 expression 88 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),BRAC ],
state: 88,  data: BRAC  ']'
data
push dat: ']'
res is : 89
shift restree stack push node ']'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 '[' 87 expression 88 ']' 89 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 89,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 61,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 62,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,
state: 147,  data: ID  'data_t'
type
push dat: ID
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,
state: 142,  data: ID  'data_t'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,ID data_t,
state: 135,  data: ID  'data_t'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,
state: 171,  data: ID  'v'
type
push dat: ID
tree stack push node type_specifier
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 type_specifier 18 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,ID v,
state: 18,  data: ID  'v'
type
push dat: ID
res is : 107
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 type_specifier 18 ID 107 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,
state: 107,  data: BSIG  ';'
data
push dat: ';'
tree stack push node extend_part_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 type_specifier 18 ID 107 extend_part_0_rep_1 122 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,
state: 122,  data: BSIG  ';'
data
push dat: ';'
tree stack push node extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 type_specifier 18 ID 107 extend_part 108 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,
state: 108,  data: BSIG  ';'
data
push dat: ';'
tree stack push node direct_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 type_specifier 18 direct_declarator 21 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,
state: 21,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 type_specifier 18 direct_declarator 21 init_declarator_0_opt_2 22 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,
state: 22,  data: BSIG  ';'
data
push dat: ';'
tree stack push node init_declarator
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 type_specifier 18 init_declarator 19 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,BSIG ;,
state: 19,  data: BSIG  ';'
data
push dat: ';'
res is : 20
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 type_specifier 18 init_declarator 19 ';' 20 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,
state: 20,  data: ID  'v'
type
push dat: ID
tree stack push node declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,ID v,
state: 137,  data: ID  'v'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,
state: 171,  data: BSIG  '.'
data
push dat: '.'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,BSIG .,
state: 59,  data: BSIG  '.'
data
push dat: '.'
res is : 64
shift restree stack push node '.'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 primary_expression 59 '.' 64 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,ID fib_v,
state: 64,  data: ID  'fib_v'
type
push dat: ID
res is : 65
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 primary_expression 59 '.' 64 ID 65 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 65,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 61,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 62,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 60,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 56,  data: LSIG  '='
data
push dat: '='
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 52,  data: LSIG  '='
data
push dat: '='
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 53,  data: LSIG  '='
data
push dat: '='
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 48,  data: LSIG  '='
data
push dat: '='
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 49,  data: LSIG  '='
data
push dat: '='
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 44,  data: LSIG  '='
data
push dat: '='
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 45,  data: LSIG  '='
data
push dat: '='
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 40,  data: LSIG  '='
data
push dat: '='
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 41,  data: LSIG  '='
data
push dat: '='
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,LSIG =,
state: 36,  data: LSIG  '='
data
push dat: '='
res is : 106
shift restree stack push node '='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 '=' 106 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,
state: 106,  data: ID  'fib'
type
push dat: ID
tree stack push node assign_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID fib,
state: 38,  data: ID  'fib'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,
state: 86,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,
state: 66,  data: ID  'input'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,
state: 86,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),
state: 66,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 68,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 61,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 62,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assign_op 38 assignment_expression 39 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 39,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,
state: 147,  data: ID  'v'
type
push dat: ID
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,
state: 142,  data: ID  'v'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,ID v,
state: 135,  data: ID  'v'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,
state: 171,  data: BSIG  '.'
data
push dat: '.'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,BSIG .,
state: 59,  data: BSIG  '.'
data
push dat: '.'
res is : 64
shift restree stack push node '.'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 primary_expression 59 '.' 64 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,ID pi_v,
state: 64,  data: ID  'pi_v'
type
push dat: ID
res is : 65
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 primary_expression 59 '.' 64 ID 65 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 65,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 61,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 62,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 60,  data: LSIG  '='
data
push dat: '='
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 56,  data: LSIG  '='
data
push dat: '='
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 52,  data: LSIG  '='
data
push dat: '='
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 53,  data: LSIG  '='
data
push dat: '='
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 48,  data: LSIG  '='
data
push dat: '='
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 49,  data: LSIG  '='
data
push dat: '='
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 44,  data: LSIG  '='
data
push dat: '='
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 45,  data: LSIG  '='
data
push dat: '='
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 40,  data: LSIG  '='
data
push dat: '='
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 41,  data: LSIG  '='
data
push dat: '='
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,LSIG =,
state: 36,  data: LSIG  '='
data
push dat: '='
res is : 106
shift restree stack push node '='
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 '=' 106 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,
state: 106,  data: ID  'pi'
type
push dat: ID
tree stack push node assign_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,ID pi,
state: 38,  data: ID  'pi'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,
state: 86,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,ID input,
state: 66,  data: ID  'input'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,
state: 86,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),
state: 66,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 68,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 61,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 62,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assign_op 38 assignment_expression 39 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 39,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,
state: 147,  data: ID  'print'
type
push dat: ID
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,
state: 142,  data: ID  'print'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,ID print,
state: 135,  data: ID  'print'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,
state: 171,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,ID v,
state: 66,  data: ID  'v'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,
state: 86,  data: BSIG  '.'
data
push dat: '.'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,BSIG .,
state: 59,  data: BSIG  '.'
data
push dat: '.'
res is : 64
shift restree stack push node '.'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 '.' 64 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID fib_v,
state: 64,  data: ID  'fib_v'
type
push dat: ID
res is : 65
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 '.' 64 ID 65 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 65,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 61,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 62,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,
state: 147,  data: ID  'print'
type
push dat: ID
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,
state: 142,  data: ID  'print'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,ID print,
state: 135,  data: ID  'print'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,
state: 171,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,ID v,
state: 66,  data: ID  'v'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,
state: 86,  data: BSIG  '.'
data
push dat: '.'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,BSIG .,
state: 59,  data: BSIG  '.'
data
push dat: '.'
res is : 64
shift restree stack push node '.'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 '.' 64 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),ID pi_v,
state: 64,  data: ID  'pi_v'
type
push dat: ID
res is : 65
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 '.' 64 ID 65 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 65,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 61,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 62,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,
state: 147,  data: ID  'print'
type
push dat: ID
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,
state: 142,  data: ID  'print'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,ID print,
state: 135,  data: ID  'print'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,
state: 171,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,ID v,
state: 66,  data: ID  'v'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,
state: 86,  data: BSIG  '.'
data
push dat: '.'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,BSIG .,
state: 59,  data: BSIG  '.'
data
push dat: '.'
res is : 64
shift restree stack push node '.'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 '.' 64 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,ID fib_v,
state: 64,  data: ID  'fib_v'
type
push dat: ID
res is : 65
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 '.' 64 ID 65 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,
state: 65,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,
state: 61,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,
state: 62,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,
state: 60,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,
state: 56,  data: MSIG  '+'
data
push dat: '+'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,
state: 52,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,
state: 53,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,MSIG +,
state: 48,  data: MSIG  '+'
data
push dat: '+'
res is : 95
shift restree stack push node '+'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 '+' 95 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,
state: 95,  data: ID  'v'
type
push dat: ID
tree stack push node add_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,ID v,
state: 50,  data: ID  'v'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,
state: 86,  data: BSIG  '.'
data
push dat: '.'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,BSIG .,
state: 59,  data: BSIG  '.'
data
push dat: '.'
res is : 64
shift restree stack push node '.'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 '.' 64 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,ID pi_v,
state: 64,  data: ID  'pi_v'
type
push dat: ID
res is : 65
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 '.' 64 ID 65 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,
state: 65,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,
state: 61,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,
state: 62,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,
state: 60,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,
state: 56,  data: MSIG  '+'
data
push dat: '+'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,
state: 52,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,
state: 53,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,MSIG +,
state: 48,  data: MSIG  '+'
data
push dat: '+'
res is : 95
shift restree stack push node '+'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 '+' 95 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,
state: 95,  data: NUMBER  '1'
type
push dat: NUMBER
tree stack push node add_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),NUMBER 1,
state: 50,  data: NUMBER  '1'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 85,  data: BRAC  ')'
data
push dat: ')'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 59,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 additive_expression 51 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 51,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 additive_expression 51 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 51,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,
state: 147,  data: ID  'print'
type
push dat: ID
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,
state: 142,  data: ID  'print'
type
push dat: ID
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,ID print,
state: 135,  data: ID  'print'
type
push dat: ID
res is : 171
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 ID 171 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,
state: 171,  data: BRAC  '('
data
push dat: '('
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,BRAC (,
state: 59,  data: BRAC  '('
data
push dat: '('
res is : 66
shift restree stack push node '('
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,ID v,
state: 66,  data: ID  'v'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,
state: 86,  data: BSIG  '.'
data
push dat: '.'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,BSIG .,
state: 59,  data: BSIG  '.'
data
push dat: '.'
res is : 64
shift restree stack push node '.'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 '.' 64 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,ID pi_v,
state: 64,  data: ID  'pi_v'
type
push dat: ID
res is : 65
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 '.' 64 ID 65 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,
state: 65,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,
state: 61,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,
state: 62,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,
state: 60,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,
state: 56,  data: MSIG  '+'
data
push dat: '+'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,
state: 52,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,
state: 53,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,MSIG +,
state: 48,  data: MSIG  '+'
data
push dat: '+'
res is : 95
shift restree stack push node '+'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 '+' 95 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,
state: 95,  data: ID  'v'
type
push dat: ID
tree stack push node add_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,ID v,
state: 50,  data: ID  'v'
type
push dat: ID
res is : 86
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 ID 86 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,
state: 86,  data: BSIG  '.'
data
push dat: '.'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,BSIG .,
state: 59,  data: BSIG  '.'
data
push dat: '.'
res is : 64
shift restree stack push node '.'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 '.' 64 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,ID fib_v,
state: 64,  data: ID  'fib_v'
type
push dat: ID
res is : 65
shift restree stack push node ID
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 '.' 64 ID 65 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,
state: 65,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,
state: 61,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,
state: 62,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,
state: 60,  data: MSIG  '+'
data
push dat: '+'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,
state: 56,  data: MSIG  '+'
data
push dat: '+'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,
state: 52,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,
state: 53,  data: MSIG  '+'
data
push dat: '+'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,MSIG +,
state: 48,  data: MSIG  '+'
data
push dat: '+'
res is : 95
shift restree stack push node '+'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 '+' 95 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,
state: 95,  data: NUMBER  '1.0'
type
push dat: NUMBER
tree stack push node add_op
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),NUMBER 1.0,
state: 50,  data: NUMBER  '1.0'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 85,  data: BRAC  ')'
data
push dat: ')'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 59,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 60,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 56,  data: BRAC  ')'
data
push dat: ')'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 52,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 53,  data: BRAC  ')'
data
push dat: ')'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 48,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 add_op 50 additive_expression 51 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 51,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 add_op 50 additive_expression 51 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 51,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 49,  data: BRAC  ')'
data
push dat: ')'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 44,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 45,  data: BRAC  ')'
data
push dat: ')'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 40,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 41,  data: BRAC  ')'
data
push dat: ')'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 36,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 37,  data: BRAC  ')'
data
push dat: ')'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 assignment_expression 69 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 69,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 assignment_expression 69 postfix_extend_part_1_opt_2_0_rep_2 70 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 70,  data: BRAC  ')'
data
push dat: ')'
tree stack push node postfix_extend_part_1_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,BRAC ),
state: 67,  data: BRAC  ')'
data
push dat: ')'
res is : 68
shift restree stack push node ')'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 '(' 66 postfix_extend_part_1_opt_2 67 ')' 68 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 68,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_extend_part
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 postfix_extend_part 61 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 61,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 postfix_extend_part 61 postfix_expression_0_rep_2 62 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 62,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,
state: 147,  data: ID  'return'
type
data
push dat: 'return'
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 expression_statement 142 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,
state: 142,  data: ID  'return'
type
data
push dat: 'return'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,ID return,
state: 135,  data: ID  'return'
type
data
push dat: 'return'
res is : 144
shift restree stack push node 'return'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 
Input: 
	EOF %END%,BRAC },BSIG ;,NUMBER 0,
state: 144,  data: NUMBER  '0'
type
push dat: NUMBER
res is : 85
shift restree stack push node NUMBER
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 NUMBER 85 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 85,  data: BSIG  ';'
data
push dat: ';'
tree stack push node primary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 primary_expression 59 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 59,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 primary_expression 59 postfix_expression_0_rep_2 60 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 60,  data: BSIG  ';'
data
push dat: ';'
tree stack push node postfix_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 postfix_expression 56 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 56,  data: BSIG  ';'
data
push dat: ';'
tree stack push node unary_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 unary_expression 52 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 52,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 unary_expression 52 multiplicative_expression_0_opt_2 53 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 53,  data: BSIG  ';'
data
push dat: ';'
tree stack push node multiplicative_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 multiplicative_expression 48 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 48,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 multiplicative_expression 48 additive_expression_0_opt_2 49 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 49,  data: BSIG  ';'
data
push dat: ';'
tree stack push node additive_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 additive_expression 44 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 44,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 additive_expression 44 relat_expression_0_opt_2 45 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 45,  data: BSIG  ';'
data
push dat: ';'
tree stack push node relat_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 relat_expression 40 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 40,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 relat_expression 40 equality_expression_0_opt_2 41 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 41,  data: BSIG  ';'
data
push dat: ';'
tree stack push node equality_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 equality_expression 36 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 36,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression_0_opt_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 equality_expression 36 assignment_expression_0_opt_2 37 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 37,  data: BSIG  ';'
data
push dat: ';'
tree stack push node assignment_expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 assignment_expression 80 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 80,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 assignment_expression 80 expression_0_rep_2 81 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 81,  data: BSIG  ';'
data
push dat: ';'
tree stack push node expression
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 expression 146 
Input: 
	EOF %END%,BRAC },BSIG ;,
state: 146,  data: BSIG  ';'
data
push dat: ';'
res is : 147
shift restree stack push node ';'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 expression 146 ';' 147 
Input: 
	EOF %END%,BRAC },
state: 147,  data: BRAC  '}'
data
push dat: '}'
tree stack push node expression_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 'return' 144 expression_statement 145 
Input: 
	EOF %END%,BRAC },
state: 145,  data: BRAC  '}'
data
push dat: '}'
tree stack push node return_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 return_statement 139 
Input: 
	EOF %END%,BRAC },
state: 139,  data: BRAC  '}'
data
push dat: '}'
tree stack push node statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 
Input: 
	EOF %END%,BRAC },
state: 135,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 declaration 137 compound_statement_0_rep_2 138 
Input: 
	EOF %END%,BRAC },
state: 138,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 statement 135 compound_statement_0_rep_2 136 
Input: 
	EOF %END%,BRAC },
state: 136,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 declaration 137 compound_statement_0_rep_2 138 
Input: 
	EOF %END%,BRAC },
state: 138,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 declaration 137 compound_statement_0_rep_2 138 
Input: 
	EOF %END%,BRAC },
state: 138,  data: BRAC  '}'
data
push dat: '}'
tree stack push node compound_statement_0_rep_2
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 compound_statement_0_rep_2 133 
Input: 
	EOF %END%,BRAC },
state: 133,  data: BRAC  '}'
data
push dat: '}'
res is : 134
shift restree stack push node '}'
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 '{' 132 compound_statement_0_rep_2 133 '}' 134 
Input: 
	EOF %END%,
state: 134,  data: EOF  %END%
data
push dat: %END%
tree stack push node compound_statement
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 type_specifier 129 direct_declarator 130 compound_statement 131 
Input: 
	EOF %END%,
state: 131,  data: EOF  %END%
data
push dat: %END%
tree stack push node function_declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 function_declaration 7 
Input: 
	EOF %END%,
state: 7,  data: EOF  %END%
data
push dat: %END%
tree stack push node external_declaration
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 external_declaration 3 
Input: 
	EOF %END%,
state: 3,  data: EOF  %END%
data
push dat: %END%
tree stack push node program_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 external_declaration 3 program_0_rep_1 4 
Input: 
	EOF %END%,
state: 4,  data: EOF  %END%
data
push dat: %END%
tree stack push node program_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 external_declaration 3 program_0_rep_1 4 
Input: 
	EOF %END%,
state: 4,  data: EOF  %END%
data
push dat: %END%
tree stack push node program_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 external_declaration 3 program_0_rep_1 4 
Input: 
	EOF %END%,
state: 4,  data: EOF  %END%
data
push dat: %END%
tree stack push node program_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 external_declaration 3 program_0_rep_1 4 
Input: 
	EOF %END%,
state: 4,  data: EOF  %END%
data
push dat: %END%
tree stack push node program_0_rep_1
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 program_0_rep_1 2 
Input: 
	EOF %END%,
state: 2,  data: EOF  %END%
data
push dat: %END%
tree stack push node program
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 program 1 
Input: 
	EOF %END%,
state: 1,  data: EOF  %END%
data
push dat: %END%
res is : -1
END OF PARSINGEND PARSING



#########
SHOW TREE
#########
program
	program_0_rep_1
		external_declaration
			function_declaration
				type_specifier
					ID
						int
				direct_declarator
					ID
						fib
					extend_part
						'('
						extend_part_1_opt_2
							parameter_list
								parameter_declaration
									declaration_specifier
										type_specifier
											ID
												int
									ID
										n
								parameter_list_0_rep_2
									NULL
						')'
				compound_statement
					'{'
					compound_statement_0_rep_2
						statement
							selection_statement
								'if'
								'('
								expression
									assignment_expression
										equality_expression
											relat_expression
												additive_expression
													multiplicative_expression
														unary_expression
															postfix_expression
																primary_expression
																	ID
																		n
																postfix_expression_0_rep_2
																	NULL
														multiplicative_expression_0_opt_2
															NULL
													additive_expression_0_opt_2
														NULL
												relat_expression_0_opt_2
													relat_op
														'>'
													relat_expression
														additive_expression
															multiplicative_expression
																unary_expression
																	postfix_expression
																		primary_expression
																			NUMBER
																				1
																		postfix_expression_0_rep_2
																			NULL
																multiplicative_expression_0_opt_2
																	NULL
															additive_expression_0_opt_2
																NULL
														relat_expression_0_opt_2
															NULL
											equality_expression_0_opt_2
												NULL
										assignment_expression_0_opt_2
											NULL
									expression_0_rep_2
										NULL
								')'
								statement
									return_statement
										'return'
										expression_statement
											expression
												assignment_expression
													equality_expression
														relat_expression
															additive_expression
																multiplicative_expression
																	unary_expression
																		postfix_expression
																			primary_expression
																				ID
																					fib
																			postfix_expression_0_rep_2
																				postfix_extend_part
																					'('
																					postfix_extend_part_1_opt_2
																						assignment_expression
																							equality_expression
																								relat_expression
																									additive_expression
																										multiplicative_expression
																											unary_expression
																												postfix_expression
																													primary_expression
																														ID
																															n
																													postfix_expression_0_rep_2
																														NULL
																											multiplicative_expression_0_opt_2
																												NULL
																										additive_expression_0_opt_2
																											add_op
																												'-'
																											additive_expression
																												multiplicative_expression
																													unary_expression
																														postfix_expression
																															primary_expression
																																NUMBER
																																	1
																															postfix_expression_0_rep_2
																																NULL
																													multiplicative_expression_0_opt_2
																														NULL
																												additive_expression_0_opt_2
																													NULL
																									relat_expression_0_opt_2
																										NULL
																								equality_expression_0_opt_2
																									NULL
																							assignment_expression_0_opt_2
																								NULL
																						postfix_extend_part_1_opt_2_0_rep_2
																							NULL
																					')'
																				postfix_expression_0_rep_2
																					NULL
																	multiplicative_expression_0_opt_2
																		NULL
																additive_expression_0_opt_2
																	add_op
																		'+'
																	additive_expression
																		multiplicative_expression
																			unary_expression
																				postfix_expression
																					primary_expression
																						ID
																							fib
																					postfix_expression_0_rep_2
																						postfix_extend_part
																							'('
																							postfix_extend_part_1_opt_2
																								assignment_expression
																									equality_expression
																										relat_expression
																											additive_expression
																												multiplicative_expression
																													unary_expression
																														postfix_expression
																															primary_expression
																																ID
																																	n
																															postfix_expression_0_rep_2
																																NULL
																													multiplicative_expression_0_opt_2
																														NULL
																												additive_expression_0_opt_2
																													add_op
																														'-'
																													additive_expression
																														multiplicative_expression
																															unary_expression
																																postfix_expression
																																	primary_expression
																																		NUMBER
																																			2
																																	postfix_expression_0_rep_2
																																		NULL
																															multiplicative_expression_0_opt_2
																																NULL
																														additive_expression_0_opt_2
																															NULL
																											relat_expression_0_opt_2
																												NULL
																										equality_expression_0_opt_2
																											NULL
																									assignment_expression_0_opt_2
																										NULL
																								postfix_extend_part_1_opt_2_0_rep_2
																									NULL
																							')'
																						postfix_expression_0_rep_2
																							NULL
																			multiplicative_expression_0_opt_2
																				NULL
																		additive_expression_0_opt_2
																			NULL
															relat_expression_0_opt_2
																NULL
														equality_expression_0_opt_2
															NULL
													assignment_expression_0_opt_2
														NULL
												expression_0_rep_2
													NULL
											';'
								selection_statement_0_opt_6
									'else'
									statement
										return_statement
											'return'
											expression_statement
												expression
													assignment_expression
														equality_expression
															relat_expression
																additive_expression
																	multiplicative_expression
																		unary_expression
																			postfix_expression
																				primary_expression
																					NUMBER
																						1
																				postfix_expression_0_rep_2
																					NULL
																		multiplicative_expression_0_opt_2
																			NULL
																	additive_expression_0_opt_2
																		NULL
																relat_expression_0_opt_2
																	NULL
															equality_expression_0_opt_2
																NULL
														assignment_expression_0_opt_2
															NULL
													expression_0_rep_2
														NULL
												';'
						compound_statement_0_rep_2
							NULL
					'}'
		program_0_rep_1
			external_declaration
				function_declaration
					type_specifier
						ID
							float
					direct_declarator
						ID
							pi
						extend_part
							'('
							extend_part_1_opt_2
								parameter_list
									parameter_declaration
										declaration_specifier
											type_specifier
												ID
													int
										ID
											n
									parameter_list_0_rep_2
										NULL
							')'
					compound_statement
						'{'
						compound_statement_0_rep_2
							declaration
								type_specifier
									ID
										float
								init_declarator
									direct_declarator
										ID
											sum
										extend_part
											extend_part_0_rep_1
												NULL
									init_declarator_0_opt_2
										'='
										initializer
											assignment_expression
												equality_expression
													relat_expression
														additive_expression
															multiplicative_expression
																unary_expression
																	postfix_expression
																		primary_expression
																			NUMBER
																				0
																		postfix_expression_0_rep_2
																			NULL
																multiplicative_expression_0_opt_2
																	NULL
															additive_expression_0_opt_2
																NULL
														relat_expression_0_opt_2
															NULL
													equality_expression_0_opt_2
														NULL
												assignment_expression_0_opt_2
													NULL
								';'
							compound_statement_0_rep_2
								declaration
									type_specifier
										ID
											float
									init_declarator
										direct_declarator
											ID
												sig
											extend_part
												extend_part_0_rep_1
													NULL
										init_declarator_0_opt_2
											'='
											initializer
												assignment_expression
													equality_expression
														relat_expression
															additive_expression
																multiplicative_expression
																	unary_expression
																		postfix_expression
																			primary_expression
																				NUMBER
																					1.0
																			postfix_expression_0_rep_2
																				NULL
																	multiplicative_expression_0_opt_2
																		NULL
																additive_expression_0_opt_2
																	NULL
															relat_expression_0_opt_2
																NULL
														equality_expression_0_opt_2
															NULL
													assignment_expression_0_opt_2
														NULL
									';'
								compound_statement_0_rep_2
									statement
										iteration_statement
											'for'
											'('
											iteration_statement_0_opt_3
												iteration_statement_0_opt_3_0_opt_1
													type_specifier
														ID
															int
												init_declarator
													direct_declarator
														ID
															i
														extend_part
															extend_part_0_rep_1
																NULL
													init_declarator_0_opt_2
														'='
														initializer
															assignment_expression
																equality_expression
																	relat_expression
																		additive_expression
																			multiplicative_expression
																				unary_expression
																					postfix_expression
																						primary_expression
																							NUMBER
																								1
																						postfix_expression_0_rep_2
																							NULL
																				multiplicative_expression_0_opt_2
																					NULL
																			additive_expression_0_opt_2
																				NULL
																		relat_expression_0_opt_2
																			NULL
																	equality_expression_0_opt_2
																		NULL
																assignment_expression_0_opt_2
																	NULL
											';'
											iteration_statement_0_opt_5
												expression
													assignment_expression
														equality_expression
															relat_expression
																additive_expression
																	multiplicative_expression
																		unary_expression
																			postfix_expression
																				primary_expression
																					ID
																						i
																				postfix_expression_0_rep_2
																					NULL
																		multiplicative_expression_0_opt_2
																			NULL
																	additive_expression_0_opt_2
																		NULL
																relat_expression_0_opt_2
																	relat_op
																		'<='
																	relat_expression
																		additive_expression
																			multiplicative_expression
																				unary_expression
																					postfix_expression
																						primary_expression
																							ID
																								n
																						postfix_expression_0_rep_2
																							NULL
																				multiplicative_expression_0_opt_2
																					NULL
																			additive_expression_0_opt_2
																				NULL
																		relat_expression_0_opt_2
																			NULL
															equality_expression_0_opt_2
																NULL
														assignment_expression_0_opt_2
															NULL
													expression_0_rep_2
														NULL
											';'
											iteration_statement_0_opt_7
												expression
													assignment_expression
														equality_expression
															relat_expression
																additive_expression
																	multiplicative_expression
																		unary_expression
																			postfix_expression
																				primary_expression
																					ID
																						i
																				postfix_expression_0_rep_2
																					NULL
																		multiplicative_expression_0_opt_2
																			NULL
																	additive_expression_0_opt_2
																		NULL
																relat_expression_0_opt_2
																	NULL
															equality_expression_0_opt_2
																NULL
														assignment_expression_0_opt_2
															assign_op
																'+='
															assignment_expression
																equality_expression
																	relat_expression
																		additive_expression
																			multiplicative_expression
																				unary_expression
																					postfix_expression
																						primary_expression
																							NUMBER
																								2
																						postfix_expression_0_rep_2
																							NULL
																				multiplicative_expression_0_opt_2
																					NULL
																			additive_expression_0_opt_2
																				NULL
																		relat_expression_0_opt_2
																			NULL
																	equality_expression_0_opt_2
																		NULL
																assignment_expression_0_opt_2
																	NULL
													expression_0_rep_2
														NULL
											')'
											statement
												compound_statement
													'{'
													compound_statement_0_rep_2
														statement
															expression_statement
																expression
																	assignment_expression
																		equality_expression
																			relat_expression
																				additive_expression
																					multiplicative_expression
																						unary_expression
																							postfix_expression
																								primary_expression
																									ID
																										sum
																								postfix_expression_0_rep_2
																									NULL
																						multiplicative_expression_0_opt_2
																							NULL
																					additive_expression_0_opt_2
																						NULL
																				relat_expression_0_opt_2
																					NULL
																			equality_expression_0_opt_2
																				NULL
																		assignment_expression_0_opt_2
																			assign_op
																				'+='
																			assignment_expression
																				equality_expression
																					relat_expression
																						additive_expression
																							multiplicative_expression
																								unary_expression
																									postfix_expression
																										primary_expression
																											ID
																												sig
																										postfix_expression_0_rep_2
																											NULL
																								multiplicative_expression_0_opt_2
																									NULL
																							additive_expression_0_opt_2
																								NULL
																						relat_expression_0_opt_2
																							NULL
																					equality_expression_0_opt_2
																						NULL
																				assignment_expression_0_opt_2
																					NULL
																	expression_0_rep_2
																		NULL
																';'
														compound_statement_0_rep_2
															statement
																expression_statement
																	expression
																		assignment_expression
																			equality_expression
																				relat_expression
																					additive_expression
																						multiplicative_expression
																							unary_expression
																								postfix_expression
																									primary_expression
																										ID
																											sig
																									postfix_expression_0_rep_2
																										NULL
																							multiplicative_expression_0_opt_2
																								NULL
																						additive_expression_0_opt_2
																							NULL
																					relat_expression_0_opt_2
																						NULL
																				equality_expression_0_opt_2
																					NULL
																			assignment_expression_0_opt_2
																				assign_op
																					'='
																				assignment_expression
																					equality_expression
																						relat_expression
																							additive_expression
																								multiplicative_expression
																									unary_expression
																										postfix_expression
																											primary_expression
																												NUMBER
																													0
																											postfix_expression_0_rep_2
																												NULL
																									multiplicative_expression_0_opt_2
																										NULL
																								additive_expression_0_opt_2
																									add_op
																										'-'
																									additive_expression
																										multiplicative_expression
																											unary_expression
																												postfix_expression
																													primary_expression
																														ID
																															sig
																													postfix_expression_0_rep_2
																														NULL
																											multiplicative_expression_0_opt_2
																												NULL
																										additive_expression_0_opt_2
																											NULL
																							relat_expression_0_opt_2
																								NULL
																						equality_expression_0_opt_2
																							NULL
																					assignment_expression_0_opt_2
																						NULL
																		expression_0_rep_2
																			NULL
																	';'
															compound_statement_0_rep_2
																NULL
													'}'
									compound_statement_0_rep_2
										statement
											return_statement
												'return'
												expression_statement
													expression
														assignment_expression
															equality_expression
																relat_expression
																	additive_expression
																		multiplicative_expression
																			unary_expression
																				postfix_expression
																					primary_expression
																						ID
																							sum
																					postfix_expression_0_rep_2
																						NULL
																			multiplicative_expression_0_opt_2
																				NULL
																		additive_expression_0_opt_2
																			NULL
																	relat_expression_0_opt_2
																		NULL
																equality_expression_0_opt_2
																	NULL
															assignment_expression_0_opt_2
																NULL
														expression_0_rep_2
															NULL
													';'
										compound_statement_0_rep_2
											NULL
						'}'
			program_0_rep_1
				external_declaration
					struct_specifier
						'struct'
						ID
							data_t
						'{'
						struct_specifier_0_rep_4
							declaration
								type_specifier
									ID
										int
								init_declarator
									direct_declarator
										ID
											fib_v
										extend_part
											extend_part_0_rep_1
												NULL
									init_declarator_0_opt_2
										NULL
								';'
							struct_specifier_0_rep_4
								declaration
									type_specifier
										ID
											float
									init_declarator
										direct_declarator
											ID
												pi_v
											extend_part
												extend_part_0_rep_1
													NULL
										init_declarator_0_opt_2
											NULL
									';'
								struct_specifier_0_rep_4
									NULL
						'}'
						struct_specifier_0_opt_6
							NULL
						';'
				program_0_rep_1
					external_declaration
						function_declaration
							type_specifier
								ID
									int
							direct_declarator
								ID
									main
								extend_part
									'('
									extend_part_1_opt_2
										NULL
									')'
							compound_statement
								'{'
								compound_statement_0_rep_2
									declaration
										type_specifier
											ID
												int
										init_declarator
											direct_declarator
												ID
													iarr
												extend_part
													extend_part_0_rep_1
														'['
														extend_part_0_rep_1_0_opt_2
															NULL
														']'
														extend_part_0_rep_1
															NULL
											init_declarator_0_opt_2
												'='
												initializer
													'{'
													initializer_list
														initializer
															assignment_expression
																equality_expression
																	relat_expression
																		additive_expression
																			multiplicative_expression
																				unary_expression
																					postfix_expression
																						primary_expression
																							NUMBER
																								1
																						postfix_expression_0_rep_2
																							NULL
																				multiplicative_expression_0_opt_2
																					NULL
																			additive_expression_0_opt_2
																				NULL
																		relat_expression_0_opt_2
																			NULL
																	equality_expression_0_opt_2
																		NULL
																assignment_expression_0_opt_2
																	NULL
														initializer_list_0_rep_2
															','
															initializer
																assignment_expression
																	equality_expression
																		relat_expression
																			additive_expression
																				multiplicative_expression
																					unary_expression
																						postfix_expression
																							primary_expression
																								NUMBER
																									3
																							postfix_expression_0_rep_2
																								NULL
																					multiplicative_expression_0_opt_2
																						NULL
																				additive_expression_0_opt_2
																					NULL
																			relat_expression_0_opt_2
																				NULL
																		equality_expression_0_opt_2
																			NULL
																	assignment_expression_0_opt_2
																		NULL
															initializer_list_0_rep_2
																','
																initializer
																	assignment_expression
																		equality_expression
																			relat_expression
																				additive_expression
																					multiplicative_expression
																						unary_expression
																							postfix_expression
																								primary_expression
																									NUMBER
																										5
																								postfix_expression_0_rep_2
																									NULL
																						multiplicative_expression_0_opt_2
																							NULL
																					additive_expression_0_opt_2
																						NULL
																				relat_expression_0_opt_2
																					NULL
																			equality_expression_0_opt_2
																				NULL
																		assignment_expression_0_opt_2
																			NULL
																initializer_list_0_rep_2
																	','
																	initializer
																		assignment_expression
																			equality_expression
																				relat_expression
																					additive_expression
																						multiplicative_expression
																							unary_expression
																								postfix_expression
																									primary_expression
																										NUMBER
																											7
																									postfix_expression_0_rep_2
																										NULL
																							multiplicative_expression_0_opt_2
																								NULL
																						additive_expression_0_opt_2
																							NULL
																					relat_expression_0_opt_2
																						NULL
																				equality_expression_0_opt_2
																					NULL
																			assignment_expression_0_opt_2
																				NULL
																	initializer_list_0_rep_2
																		NULL
													initializer_1_opt_3
														NULL
													'}'
										';'
									compound_statement_0_rep_2
										declaration
											type_specifier
												ID
													float
											init_declarator
												direct_declarator
													ID
														farr
													extend_part
														extend_part_0_rep_1
															'['
															extend_part_0_rep_1_0_opt_2
																NULL
															']'
															extend_part_0_rep_1
																NULL
												init_declarator_0_opt_2
													'='
													initializer
														'{'
														initializer_list
															initializer
																assignment_expression
																	equality_expression
																		relat_expression
																			additive_expression
																				multiplicative_expression
																					unary_expression
																						postfix_expression
																							primary_expression
																								NUMBER
																									1.1
																							postfix_expression_0_rep_2
																								NULL
																					multiplicative_expression_0_opt_2
																						NULL
																				additive_expression_0_opt_2
																					NULL
																			relat_expression_0_opt_2
																				NULL
																		equality_expression_0_opt_2
																			NULL
																	assignment_expression_0_opt_2
																		NULL
															initializer_list_0_rep_2
																','
																initializer
																	assignment_expression
																		equality_expression
																			relat_expression
																				additive_expression
																					multiplicative_expression
																						unary_expression
																							postfix_expression
																								primary_expression
																									NUMBER
																										2.2
																								postfix_expression_0_rep_2
																									NULL
																						multiplicative_expression_0_opt_2
																							NULL
																					additive_expression_0_opt_2
																						NULL
																				relat_expression_0_opt_2
																					NULL
																			equality_expression_0_opt_2
																				NULL
																		assignment_expression_0_opt_2
																			NULL
																initializer_list_0_rep_2
																	','
																	initializer
																		assignment_expression
																			equality_expression
																				relat_expression
																					additive_expression
																						multiplicative_expression
																							unary_expression
																								postfix_expression
																									primary_expression
																										NUMBER
																											3.3
																									postfix_expression_0_rep_2
																										NULL
																							multiplicative_expression_0_opt_2
																								NULL
																						additive_expression_0_opt_2
																							NULL
																					relat_expression_0_opt_2
																						NULL
																				equality_expression_0_opt_2
																					NULL
																			assignment_expression_0_opt_2
																				NULL
																	initializer_list_0_rep_2
																		NULL
														initializer_1_opt_3
															NULL
														'}'
											';'
										compound_statement_0_rep_2
											statement
												iteration_statement
													'for'
													'('
													iteration_statement_0_opt_3
														iteration_statement_0_opt_3_0_opt_1
															type_specifier
																ID
																	int
														init_declarator
															direct_declarator
																ID
																	i
																extend_part
																	extend_part_0_rep_1
																		NULL
															init_declarator_0_opt_2
																'='
																initializer
																	assignment_expression
																		equality_expression
																			relat_expression
																				additive_expression
																					multiplicative_expression
																						unary_expression
																							postfix_expression
																								primary_expression
																									NUMBER
																										0
																								postfix_expression_0_rep_2
																									NULL
																						multiplicative_expression_0_opt_2
																							NULL
																					additive_expression_0_opt_2
																						NULL
																				relat_expression_0_opt_2
																					NULL
																			equality_expression_0_opt_2
																				NULL
																		assignment_expression_0_opt_2
																			NULL
													';'
													iteration_statement_0_opt_5
														expression
															assignment_expression
																equality_expression
																	relat_expression
																		additive_expression
																			multiplicative_expression
																				unary_expression
																					postfix_expression
																						primary_expression
																							ID
																								i
																						postfix_expression_0_rep_2
																							NULL
																				multiplicative_expression_0_opt_2
																					NULL
																			additive_expression_0_opt_2
																				NULL
																		relat_expression_0_opt_2
																			relat_op
																				'<'
																			relat_expression
																				additive_expression
																					multiplicative_expression
																						unary_expression
																							postfix_expression
																								primary_expression
																									NUMBER
																										3
																								postfix_expression_0_rep_2
																									NULL
																						multiplicative_expression_0_opt_2
																							NULL
																					additive_expression_0_opt_2
																						NULL
																				relat_expression_0_opt_2
																					NULL
																	equality_expression_0_opt_2
																		NULL
																assignment_expression_0_opt_2
																	NULL
															expression_0_rep_2
																NULL
													';'
													iteration_statement_0_opt_7
														expression
															assignment_expression
																equality_expression
																	relat_expression
																		additive_expression
																			multiplicative_expression
																				unary_expression
																					sadd_op
																						'++'
																					unary_expression
																						postfix_expression
																							primary_expression
																								ID
																									i
																							postfix_expression_0_rep_2
																								NULL
																				multiplicative_expression_0_opt_2
																					NULL
																			additive_expression_0_opt_2
																				NULL
																		relat_expression_0_opt_2
																			NULL
																	equality_expression_0_opt_2
																		NULL
																assignment_expression_0_opt_2
																	NULL
															expression_0_rep_2
																NULL
													')'
													statement
														compound_statement
															'{'
															compound_statement_0_rep_2
																statement
																	expression_statement
																		expression
																			assignment_expression
																				equality_expression
																					relat_expression
																						additive_expression
																							multiplicative_expression
																								unary_expression
																									postfix_expression
																										primary_expression
																											ID
																												print
																										postfix_expression_0_rep_2
																											postfix_extend_part
																												'('
																												postfix_extend_part_1_opt_2
																													assignment_expression
																														equality_expression
																															relat_expression
																																additive_expression
																																	multiplicative_expression
																																		unary_expression
																																			postfix_expression
																																				primary_expression
																																					ID
																																						iarr
																																				postfix_expression_0_rep_2
																																					postfix_extend_part
																																						'['
																																						expression
																																							assignment_expression
																																								equality_expression
																																									relat_expression
																																										additive_expression
																																											multiplicative_expression
																																												unary_expression
																																													postfix_expression
																																														primary_expression
																																															ID
																																																i
																																														postfix_expression_0_rep_2
																																															NULL
																																												multiplicative_expression_0_opt_2
																																													NULL
																																											additive_expression_0_opt_2
																																												NULL
																																										relat_expression_0_opt_2
																																											NULL
																																									equality_expression_0_opt_2
																																										NULL
																																								assignment_expression_0_opt_2
																																									NULL
																																							expression_0_rep_2
																																								NULL
																																						']'
																																					postfix_expression_0_rep_2
																																						NULL
																																		multiplicative_expression_0_opt_2
																																			NULL
																																	additive_expression_0_opt_2
																																		NULL
																																relat_expression_0_opt_2
																																	NULL
																															equality_expression_0_opt_2
																																NULL
																														assignment_expression_0_opt_2
																															NULL
																													postfix_extend_part_1_opt_2_0_rep_2
																														NULL
																												')'
																											postfix_expression_0_rep_2
																												NULL
																								multiplicative_expression_0_opt_2
																									NULL
																							additive_expression_0_opt_2
																								NULL
																						relat_expression_0_opt_2
																							NULL
																					equality_expression_0_opt_2
																						NULL
																				assignment_expression_0_opt_2
																					NULL
																			expression_0_rep_2
																				NULL
																		';'
																compound_statement_0_rep_2
																	statement
																		expression_statement
																			expression
																				assignment_expression
																					equality_expression
																						relat_expression
																							additive_expression
																								multiplicative_expression
																									unary_expression
																										postfix_expression
																											primary_expression
																												ID
																													print
																											postfix_expression_0_rep_2
																												postfix_extend_part
																													'('
																													postfix_extend_part_1_opt_2
																														assignment_expression
																															equality_expression
																																relat_expression
																																	additive_expression
																																		multiplicative_expression
																																			unary_expression
																																				postfix_expression
																																					primary_expression
																																						ID
																																							farr
																																					postfix_expression_0_rep_2
																																						postfix_extend_part
																																							'['
																																							expression
																																								assignment_expression
																																									equality_expression
																																										relat_expression
																																											additive_expression
																																												multiplicative_expression
																																													unary_expression
																																														postfix_expression
																																															primary_expression
																																																ID
																																																	i
																																															postfix_expression_0_rep_2
																																																NULL
																																													multiplicative_expression_0_opt_2
																																														NULL
																																												additive_expression_0_opt_2
																																													NULL
																																											relat_expression_0_opt_2
																																												NULL
																																										equality_expression_0_opt_2
																																											NULL
																																									assignment_expression_0_opt_2
																																										NULL
																																								expression_0_rep_2
																																									NULL
																																							']'
																																						postfix_expression_0_rep_2
																																							NULL
																																			multiplicative_expression_0_opt_2
																																				NULL
																																		additive_expression_0_opt_2
																																			NULL
																																	relat_expression_0_opt_2
																																		NULL
																																equality_expression_0_opt_2
																																	NULL
																															assignment_expression_0_opt_2
																																NULL
																														postfix_extend_part_1_opt_2_0_rep_2
																															NULL
																													')'
																												postfix_expression_0_rep_2
																													NULL
																									multiplicative_expression_0_opt_2
																										NULL
																								additive_expression_0_opt_2
																									NULL
																							relat_expression_0_opt_2
																								NULL
																						equality_expression_0_opt_2
																							NULL
																					assignment_expression_0_opt_2
																						NULL
																				expression_0_rep_2
																					NULL
																			';'
																	compound_statement_0_rep_2
																		NULL
															'}'
											compound_statement_0_rep_2
												statement
													expression_statement
														expression
															assignment_expression
																equality_expression
																	relat_expression
																		additive_expression
																			multiplicative_expression
																				unary_expression
																					postfix_expression
																						primary_expression
																							ID
																								print
																						postfix_expression_0_rep_2
																							postfix_extend_part
																								'('
																								postfix_extend_part_1_opt_2
																									assignment_expression
																										equality_expression
																											relat_expression
																												additive_expression
																													multiplicative_expression
																														unary_expression
																															postfix_expression
																																primary_expression
																																	ID
																																		iarr
																																postfix_expression_0_rep_2
																																	postfix_extend_part
																																		'['
																																		expression
																																			assignment_expression
																																				equality_expression
																																					relat_expression
																																						additive_expression
																																							multiplicative_expression
																																								unary_expression
																																									postfix_expression
																																										primary_expression
																																											NUMBER
																																												3
																																										postfix_expression_0_rep_2
																																											NULL
																																								multiplicative_expression_0_opt_2
																																									NULL
																																							additive_expression_0_opt_2
																																								NULL
																																						relat_expression_0_opt_2
																																							NULL
																																					equality_expression_0_opt_2
																																						NULL
																																				assignment_expression_0_opt_2
																																					NULL
																																			expression_0_rep_2
																																				NULL
																																		']'
																																	postfix_expression_0_rep_2
																																		NULL
																														multiplicative_expression_0_opt_2
																															NULL
																													additive_expression_0_opt_2
																														NULL
																												relat_expression_0_opt_2
																													NULL
																											equality_expression_0_opt_2
																												NULL
																										assignment_expression_0_opt_2
																											NULL
																									postfix_extend_part_1_opt_2_0_rep_2
																										NULL
																								')'
																							postfix_expression_0_rep_2
																								NULL
																				multiplicative_expression_0_opt_2
																					NULL
																			additive_expression_0_opt_2
																				NULL
																		relat_expression_0_opt_2
																			NULL
																	equality_expression_0_opt_2
																		NULL
																assignment_expression_0_opt_2
																	NULL
															expression_0_rep_2
																NULL
														';'
												compound_statement_0_rep_2
													declaration
														type_specifier
															ID
																data_t
														init_declarator
															direct_declarator
																ID
																	v
																extend_part
																	extend_part_0_rep_1
																		NULL
															init_declarator_0_opt_2
																NULL
														';'
													compound_statement_0_rep_2
														statement
															expression_statement
																expression
																	assignment_expression
																		equality_expression
																			relat_expression
																				additive_expression
																					multiplicative_expression
																						unary_expression
																							postfix_expression
																								primary_expression
																									ID
																										v
																								postfix_expression_0_rep_2
																									postfix_extend_part
																										'.'
																										ID
																											fib_v
																									postfix_expression_0_rep_2
																										NULL
																						multiplicative_expression_0_opt_2
																							NULL
																					additive_expression_0_opt_2
																						NULL
																				relat_expression_0_opt_2
																					NULL
																			equality_expression_0_opt_2
																				NULL
																		assignment_expression_0_opt_2
																			assign_op
																				'='
																			assignment_expression
																				equality_expression
																					relat_expression
																						additive_expression
																							multiplicative_expression
																								unary_expression
																									postfix_expression
																										primary_expression
																											ID
																												fib
																										postfix_expression_0_rep_2
																											postfix_extend_part
																												'('
																												postfix_extend_part_1_opt_2
																													assignment_expression
																														equality_expression
																															relat_expression
																																additive_expression
																																	multiplicative_expression
																																		unary_expression
																																			postfix_expression
																																				primary_expression
																																					ID
																																						input
																																				postfix_expression_0_rep_2
																																					postfix_extend_part
																																						'('
																																						postfix_extend_part_1_opt_2
																																							NULL
																																						')'
																																					postfix_expression_0_rep_2
																																						NULL
																																		multiplicative_expression_0_opt_2
																																			NULL
																																	additive_expression_0_opt_2
																																		NULL
																																relat_expression_0_opt_2
																																	NULL
																															equality_expression_0_opt_2
																																NULL
																														assignment_expression_0_opt_2
																															NULL
																													postfix_extend_part_1_opt_2_0_rep_2
																														NULL
																												')'
																											postfix_expression_0_rep_2
																												NULL
																								multiplicative_expression_0_opt_2
																									NULL
																							additive_expression_0_opt_2
																								NULL
																						relat_expression_0_opt_2
																							NULL
																					equality_expression_0_opt_2
																						NULL
																				assignment_expression_0_opt_2
																					NULL
																	expression_0_rep_2
																		NULL
																';'
														compound_statement_0_rep_2
															statement
																expression_statement
																	expression
																		assignment_expression
																			equality_expression
																				relat_expression
																					additive_expression
																						multiplicative_expression
																							unary_expression
																								postfix_expression
																									primary_expression
																										ID
																											v
																									postfix_expression_0_rep_2
																										postfix_extend_part
																											'.'
																											ID
																												pi_v
																										postfix_expression_0_rep_2
																											NULL
																							multiplicative_expression_0_opt_2
																								NULL
																						additive_expression_0_opt_2
																							NULL
																					relat_expression_0_opt_2
																						NULL
																				equality_expression_0_opt_2
																					NULL
																			assignment_expression_0_opt_2
																				assign_op
																					'='
																				assignment_expression
																					equality_expression
																						relat_expression
																							additive_expression
																								multiplicative_expression
																									unary_expression
																										postfix_expression
																											primary_expression
																												ID
																													pi
																											postfix_expression_0_rep_2
																												postfix_extend_part
																													'('
																													postfix_extend_part_1_opt_2
																														assignment_expression
																															equality_expression
																																relat_expression
																																	additive_expression
																																		multiplicative_expression
																																			unary_expression
																																				postfix_expression
																																					primary_expression
																																						ID
																																							input
																																					postfix_expression_0_rep_2
																																						postfix_extend_part
																																							'('
																																							postfix_extend_part_1_opt_2
																																								NULL
																																							')'
																																						postfix_expression_0_rep_2
																																							NULL
																																			multiplicative_expression_0_opt_2
																																				NULL
																																		additive_expression_0_opt_2
																																			NULL
																																	relat_expression_0_opt_2
																																		NULL
																																equality_expression_0_opt_2
																																	NULL
																															assignment_expression_0_opt_2
																																NULL
																														postfix_extend_part_1_opt_2_0_rep_2
																															NULL
																													')'
																												postfix_expression_0_rep_2
																													NULL
																									multiplicative_expression_0_opt_2
																										NULL
																								additive_expression_0_opt_2
																									NULL
																							relat_expression_0_opt_2
																								NULL
																						equality_expression_0_opt_2
																							NULL
																					assignment_expression_0_opt_2
																						NULL
																		expression_0_rep_2
																			NULL
																	';'
															compound_statement_0_rep_2
																statement
																	expression_statement
																		expression
																			assignment_expression
																				equality_expression
																					relat_expression
																						additive_expression
																							multiplicative_expression
																								unary_expression
																									postfix_expression
																										primary_expression
																											ID
																												print
																										postfix_expression_0_rep_2
																											postfix_extend_part
																												'('
																												postfix_extend_part_1_opt_2
																													assignment_expression
																														equality_expression
																															relat_expression
																																additive_expression
																																	multiplicative_expression
																																		unary_expression
																																			postfix_expression
																																				primary_expression
																																					ID
																																						v
																																				postfix_expression_0_rep_2
																																					postfix_extend_part
																																						'.'
																																						ID
																																							fib_v
																																					postfix_expression_0_rep_2
																																						NULL
																																		multiplicative_expression_0_opt_2
																																			NULL
																																	additive_expression_0_opt_2
																																		NULL
																																relat_expression_0_opt_2
																																	NULL
																															equality_expression_0_opt_2
																																NULL
																														assignment_expression_0_opt_2
																															NULL
																													postfix_extend_part_1_opt_2_0_rep_2
																														NULL
																												')'
																											postfix_expression_0_rep_2
																												NULL
																								multiplicative_expression_0_opt_2
																									NULL
																							additive_expression_0_opt_2
																								NULL
																						relat_expression_0_opt_2
																							NULL
																					equality_expression_0_opt_2
																						NULL
																				assignment_expression_0_opt_2
																					NULL
																			expression_0_rep_2
																				NULL
																		';'
																compound_statement_0_rep_2
																	statement
																		expression_statement
																			expression
																				assignment_expression
																					equality_expression
																						relat_expression
																							additive_expression
																								multiplicative_expression
																									unary_expression
																										postfix_expression
																											primary_expression
																												ID
																													print
																											postfix_expression_0_rep_2
																												postfix_extend_part
																													'('
																													postfix_extend_part_1_opt_2
																														assignment_expression
																															equality_expression
																																relat_expression
																																	additive_expression
																																		multiplicative_expression
																																			unary_expression
																																				postfix_expression
																																					primary_expression
																																						ID
																																							v
																																					postfix_expression_0_rep_2
																																						postfix_extend_part
																																							'.'
																																							ID
																																								pi_v
																																						postfix_expression_0_rep_2
																																							NULL
																																			multiplicative_expression_0_opt_2
																																				NULL
																																		additive_expression_0_opt_2
																																			NULL
																																	relat_expression_0_opt_2
																																		NULL
																																equality_expression_0_opt_2
																																	NULL
																															assignment_expression_0_opt_2
																																NULL
																														postfix_extend_part_1_opt_2_0_rep_2
																															NULL
																													')'
																												postfix_expression_0_rep_2
																													NULL
																									multiplicative_expression_0_opt_2
																										NULL
																								additive_expression_0_opt_2
																									NULL
																							relat_expression_0_opt_2
																								NULL
																						equality_expression_0_opt_2
																							NULL
																					assignment_expression_0_opt_2
																						NULL
																				expression_0_rep_2
																					NULL
																			';'
																	compound_statement_0_rep_2
																		statement
																			expression_statement
																				expression
																					assignment_expression
																						equality_expression
																							relat_expression
																								additive_expression
																									multiplicative_expression
																										unary_expression
																											postfix_expression
																												primary_expression
																													ID
																														print
																												postfix_expression_0_rep_2
																													postfix_extend_part
																														'('
																														postfix_extend_part_1_opt_2
																															assignment_expression
																																equality_expression
																																	relat_expression
																																		additive_expression
																																			multiplicative_expression
																																				unary_expression
																																					postfix_expression
																																						primary_expression
																																							ID
																																								v
																																						postfix_expression_0_rep_2
																																							postfix_extend_part
																																								'.'
																																								ID
																																									fib_v
																																							postfix_expression_0_rep_2
																																								NULL
																																				multiplicative_expression_0_opt_2
																																					NULL
																																			additive_expression_0_opt_2
																																				add_op
																																					'+'
																																				additive_expression
																																					multiplicative_expression
																																						unary_expression
																																							postfix_expression
																																								primary_expression
																																									ID
																																										v
																																								postfix_expression_0_rep_2
																																									postfix_extend_part
																																										'.'
																																										ID
																																											pi_v
																																									postfix_expression_0_rep_2
																																										NULL
																																						multiplicative_expression_0_opt_2
																																							NULL
																																					additive_expression_0_opt_2
																																						add_op
																																							'+'
																																						additive_expression
																																							multiplicative_expression
																																								unary_expression
																																									postfix_expression
																																										primary_expression
																																											NUMBER
																																												1
																																										postfix_expression_0_rep_2
																																											NULL
																																								multiplicative_expression_0_opt_2
																																									NULL
																																							additive_expression_0_opt_2
																																								NULL
																																		relat_expression_0_opt_2
																																			NULL
																																	equality_expression_0_opt_2
																																		NULL
																																assignment_expression_0_opt_2
																																	NULL
																															postfix_extend_part_1_opt_2_0_rep_2
																																NULL
																														')'
																													postfix_expression_0_rep_2
																														NULL
																										multiplicative_expression_0_opt_2
																											NULL
																									additive_expression_0_opt_2
																										NULL
																								relat_expression_0_opt_2
																									NULL
																							equality_expression_0_opt_2
																								NULL
																						assignment_expression_0_opt_2
																							NULL
																					expression_0_rep_2
																						NULL
																				';'
																		compound_statement_0_rep_2
																			statement
																				expression_statement
																					expression
																						assignment_expression
																							equality_expression
																								relat_expression
																									additive_expression
																										multiplicative_expression
																											unary_expression
																												postfix_expression
																													primary_expression
																														ID
																															print
																													postfix_expression_0_rep_2
																														postfix_extend_part
																															'('
																															postfix_extend_part_1_opt_2
																																assignment_expression
																																	equality_expression
																																		relat_expression
																																			additive_expression
																																				multiplicative_expression
																																					unary_expression
																																						postfix_expression
																																							primary_expression
																																								ID
																																									v
																																							postfix_expression_0_rep_2
																																								postfix_extend_part
																																									'.'
																																									ID
																																										pi_v
																																								postfix_expression_0_rep_2
																																									NULL
																																					multiplicative_expression_0_opt_2
																																						NULL
																																				additive_expression_0_opt_2
																																					add_op
																																						'+'
																																					additive_expression
																																						multiplicative_expression
																																							unary_expression
																																								postfix_expression
																																									primary_expression
																																										ID
																																											v
																																									postfix_expression_0_rep_2
																																										postfix_extend_part
																																											'.'
																																											ID
																																												fib_v
																																										postfix_expression_0_rep_2
																																											NULL
																																							multiplicative_expression_0_opt_2
																																								NULL
																																						additive_expression_0_opt_2
																																							add_op
																																								'+'
																																							additive_expression
																																								multiplicative_expression
																																									unary_expression
																																										postfix_expression
																																											primary_expression
																																												NUMBER
																																													1.0
																																											postfix_expression_0_rep_2
																																												NULL
																																									multiplicative_expression_0_opt_2
																																										NULL
																																								additive_expression_0_opt_2
																																									NULL
																																			relat_expression_0_opt_2
																																				NULL
																																		equality_expression_0_opt_2
																																			NULL
																																	assignment_expression_0_opt_2
																																		NULL
																																postfix_extend_part_1_opt_2_0_rep_2
																																	NULL
																															')'
																														postfix_expression_0_rep_2
																															NULL
																											multiplicative_expression_0_opt_2
																												NULL
																										additive_expression_0_opt_2
																											NULL
																									relat_expression_0_opt_2
																										NULL
																								equality_expression_0_opt_2
																									NULL
																							assignment_expression_0_opt_2
																								NULL
																						expression_0_rep_2
																							NULL
																					';'
																			compound_statement_0_rep_2
																				statement
																					return_statement
																						'return'
																						expression_statement
																							expression
																								assignment_expression
																									equality_expression
																										relat_expression
																											additive_expression
																												multiplicative_expression
																													unary_expression
																														postfix_expression
																															primary_expression
																																NUMBER
																																	0
																															postfix_expression_0_rep_2
																																NULL
																													multiplicative_expression_0_opt_2
																														NULL
																												additive_expression_0_opt_2
																													NULL
																											relat_expression_0_opt_2
																												NULL
																										equality_expression_0_opt_2
																											NULL
																									assignment_expression_0_opt_2
																										NULL
																								expression_0_rep_2
																									NULL
																							';'
																				compound_statement_0_rep_2
																					NULL
								'}'
					program_0_rep_1
						NULL
intfib(intn){if(n>1)returnfib(n-1)+fib(n-2);
elsereturn1;
}floatpi(intn){floatsum=0;
floatsig=1.0;
for(inti=1;i<=n;i+=2){sum+=sig;
sig=0-sig;
}returnsum;
}structdata_t{intfib_v;
floatpi_v;
};
intmain(){intiarr[]={1,3,5,7};
floatfarr[]={1.1,2.2,3.3};
for(inti=0;i<3;++i){print(iarr[i]);
print(farr[i]);
}print(iarr[3]);
data_tv;
v.fib_v=fib(input());
v.pi_v=pi(input());
print(v.fib_v);
print(v.pi_v);
print(v.fib_v+v.pi_v+1);
print(v.pi_v+v.fib_v+1.0);
return0;
}