Compile Time: 0.009s
begin
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "e"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "e"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> ""+""
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> ""n""
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> ""n""
    statement -> end_op
      end_op -> ";"
#############
New Statement
#############
Left Non-terminal-symbol: e
Now_name: e
create now_tree : e
Start analyze Declaration: 
simple part: non_terminal_symbol: e
simple part: terminal_symbol: "+"
simple part: terminal_symbol: "n"
simple part: terminal_symbol: "n"
End analyze Decalration 



#########
show list
#########
################
show_origin_info
################
e ::= "n" 
e ::= e "+" "n" 
##############################
show info after add start node
##############################
%START% ::= e 
e ::= "n" 
e ::= e "+" "n" 
#######################
show FOLLOW SET(1 SCAN)
#######################
#############
TERM  %START%
#############
%END%  


