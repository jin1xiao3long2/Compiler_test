Compile Time: 0.532s



#########
show list
#########



######################
show origin terms info
######################
begin ::= stmts 
ignore ::= ignore@0_rep_1 
ignore@0_rep_1 ::= NULL 
ignore@0_rep_1 ::= ENDL ignore@0_rep_1 
endline ::= ';' 
endline ::= ENDL 
stmts ::= stmts@0_rep_1 
stmts@0_rep_1 ::= NULL 
stmts@0_rep_1 ::= statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1 
stmts@0_rep_1@0_rep_2 ::= NULL 
stmts@0_rep_1@0_rep_2 ::= ENDL stmts@0_rep_1@0_rep_2 
decl_stmts ::= decl_stmts@0_rep_1 
decl_stmts@0_rep_1 ::= NULL 
decl_stmts@0_rep_1 ::= declaration decl_stmts@0_rep_1@0_rep_2 decl_stmts@0_rep_1 
decl_stmts@0_rep_1@0_rep_2 ::= NULL 
decl_stmts@0_rep_1@0_rep_2 ::= ENDL decl_stmts@0_rep_1@0_rep_2 
endblock ::= catch_stmt 
endblock ::= until_stmt 
endblock ::= else_stmt 
endblock ::= end_stmt 
statement ::= expr_stmt 
statement ::= class_stmt 
statement ::= throw_stmt 
statement ::= try_stmt 
statement ::= return_stmt 
statement ::= function_stmt 
statement ::= control_stmt 
statement ::= foreach_stmt 
statement ::= for_stmt 
statement ::= loop_stmt 
statement ::= while_stmt 
statement ::= switch_stmt 
statement ::= if_stmt 
statement ::= using_stmt 
statement ::= namespace_stmt 
statement ::= block_stmt 
statement ::= var_stmt 
statement ::= import_stmt 
statement ::= package_stmt 
statement ::= prep_stmt 
declaration ::= class_stmt 
declaration ::= function_stmt 
declaration ::= using_stmt 
declaration ::= var_stmt 
declaration ::= namespace_stmt 
declaration ::= prep_stmt 
prep_stmt ::= PREP ENDL 
package_stmt ::= 'package' ID endline 
import_stmt ::= 'import' import_list endline 
module_list ::= ID module_list@0_opt_2 
module_list@0_opt_2 ::= NULL 
module_list@0_opt_2 ::= '.' module_list@0_opt_2@0_decl_2 
module_list@0_opt_2@0_decl_2 ::= module_list 
module_list@0_opt_2@0_decl_2 ::= '*' 
import_list ::= module_list import_list@0_opt_2 import_list@0_opt_3 
import_list@0_opt_3 ::= NULL 
import_list@0_opt_3 ::= ',' import_list 
import_list@0_opt_2 ::= NULL 
import_list@0_opt_2 ::= 'as' ID 
var_def ::= var_list 
var_def ::= var_bind '=' basic_expr 
var_stmt ::= var_stmt@0_decl_1 var_def endline 
var_stmt@0_decl_1 ::= 'constant' 
var_stmt@0_decl_1 ::= 'link' 
var_stmt@0_decl_1 ::= 'var' 
var_bind ::= '(' var_bind_list var_bind@0_rep_3 ')' 
var_bind@0_rep_3 ::= NULL 
var_bind@0_rep_3 ::= ',' var_bind_list var_bind@0_rep_3 
var_bind_list ::= var_bind 
var_bind_list ::= '...' 
var_bind_list ::= ID 
var_list ::= ID '=' single_expr var_list@0_opt_4 
var_list@0_opt_4 ::= NULL 
var_list@0_opt_4 ::= ',' var_list 
block_stmt ::= 'block' ENDL stmts 'end' ENDL 
namespace_stmt ::= 'namespace' ID ENDL decl_stmts 'end' ENDL 
using_stmt ::= 'using' using_list endline 
using_list ::= module_list using_list@0_opt_2 
using_list@0_opt_2 ::= NULL 
using_list@0_opt_2 ::= ',' using_list 
if_stmt ::= 'if' basic_expr ENDL stmts if_stmt@0_rep_5 
if_stmt@0_rep_5 ::= NULL 
if_stmt@0_rep_5 ::= else_stmt stmts 'end' ENDL if_stmt@0_rep_5 
else_stmt ::= 'else' else_stmt@0_opt_2 ENDL 
else_stmt@0_opt_2 ::= NULL 
else_stmt@0_opt_2 ::= 'if' basic_expr 
switch_stmt ::= 'switch' basic_expr ENDL switch_stmts 'end' ENDL 
switch_stmts ::= switch_stmts@0_rep_1 switch_stmts@0_rep_2 
switch_stmts@0_rep_2 ::= NULL 
switch_stmts@0_rep_2 ::= ENDL switch_stmts@0_rep_2 
switch_stmts@0_rep_1 ::= NULL 
switch_stmts@0_rep_1 ::= switch_default switch_stmts@0_rep_1 
switch_stmts@0_rep_1 ::= switch_case switch_stmts@0_rep_1 
switch_case ::= 'case' logic_or_expr ENDL stmts 'end' ENDL 
switch_default ::= 'default' ENDL stmts 'end' ENDL 
while_stmt ::= 'while' basic_expr ENDL stmts 'end' ENDL 
loop_stmt ::= 'loop' ENDL stmts loop_stmt@0_decl_4 
loop_stmt@0_decl_4 ::= ENDL 
loop_stmt@0_decl_4 ::= 'end' 
loop_stmt@0_decl_4 ::= until_stmt 
until_stmt ::= 'until' basic_expr ENDL 
for_stmt ::= 'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body 
for_stmt@0_opt_6 ::= NULL 
for_stmt@0_opt_6 ::= basic_expr 
for_stmt@0_decl_5 ::= ',' 
for_stmt@0_decl_5 ::= ';' 
for_stmt@0_opt_4 ::= NULL 
for_stmt@0_opt_4 ::= basic_expr 
for_stmt@0_decl_3 ::= ',' 
for_stmt@0_decl_3 ::= ';' 
for_stmt@0_opt_2 ::= NULL 
for_stmt@0_opt_2 ::= var_def 
foreach_stmt ::= 'foreach' ID 'in' basic_expr for_body 
for_body ::= for_body@0_decl_1 
for_body@0_decl_1 ::= ENDL stmts 'end' ENDL 
for_body@0_decl_1 ::= 'do' basic_expr endline 
function_stmt ::= 'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body 
function_stmt@0_opt_6 ::= NULL 
function_stmt@0_opt_6 ::= 'override' 
function_stmt@0_opt_4 ::= NULL 
function_stmt@0_opt_4 ::= argument_list 
function_body ::= function_body@0_decl_1 
function_body@0_decl_1 ::= ENDL stmts 'end' ENDL 
function_body@0_decl_1 ::= '{' stmts '}' 
return_stmt ::= 'return' return_stmt@0_opt_2 endline 
return_stmt@0_opt_2 ::= NULL 
return_stmt@0_opt_2 ::= expr 
try_stmt ::= 'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL 
try_stmt@0_rep_4 ::= NULL 
try_stmt@0_rep_4 ::= catch_stmt stmts try_stmt@0_rep_4 
catch_stmt ::= 'catch' ID catch_stmt@0_opt_3 ENDL 
catch_stmt@0_opt_3 ::= NULL 
catch_stmt@0_opt_3 ::= ':' visit_expr 
throw_stmt ::= 'throw' throw_stmt@0_opt_2 endline 
throw_stmt@0_opt_2 ::= NULL 
throw_stmt@0_opt_2 ::= expr 
class_stmt ::= class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL 
class_stmt@0_opt_3 ::= NULL 
class_stmt@0_opt_3 ::= 'extends' visit_expr 
class_stmt@0_decl_1 ::= 'struct' 
class_stmt@0_decl_1 ::= 'class' 
control_stmt ::= control_stmt@0_decl_1 endline 
control_stmt@0_decl_1 ::= 'continue' 
control_stmt@0_decl_1 ::= 'break' 
expr_stmt ::= expr endline 
end_stmt ::= 'end' ENDL 
expr ::= single_expr expr@0_opt_2 
expr@0_opt_2 ::= NULL 
expr@0_opt_2 ::= ',' expr 
single_expr ::= basic_expr 
single_expr ::= lambda_expr 
basic_expr ::= cond_expr basic_expr@1_opt_2 
basic_expr ::= var_bind '=' cond_expr 
basic_expr@1_opt_2 ::= NULL 
basic_expr@1_opt_2 ::= asi_op single_expr 
asi_op ::= '^=' 
asi_op ::= '%=' 
asi_op ::= '/=' 
asi_op ::= '*=' 
asi_op ::= '-=' 
asi_op ::= '+=' 
asi_op ::= ':=' 
asi_op ::= '=' 
lambda_expr ::= '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body 
lambda_expr@0_opt_5 ::= NULL 
lambda_expr@0_opt_5 ::= argument_list 
lambda_expr@0_opt_2 ::= NULL 
lambda_expr@0_opt_2 ::= capture_list 
capture_list ::= capture_list@0_opt_1 ID capture_list@0_rep_3 
capture_list@0_rep_3 ::= NULL 
capture_list@0_rep_3 ::= ',' capture_list capture_list@0_rep_3 
capture_list@0_opt_1 ::= NULL 
capture_list@0_opt_1 ::= '=' 
argument_list ::= argument_list@1_opt_1 ID argument_list@1_opt_3 visit_expr argument_list@1_rep_5 
argument_list ::= '...' ID 
argument_list@1_rep_5 ::= NULL 
argument_list@1_rep_5 ::= ',' argument_list argument_list@1_rep_5 
argument_list@1_opt_3 ::= NULL 
argument_list@1_opt_3 ::= ':' 
argument_list@1_opt_1 ::= NULL 
argument_list@1_opt_1 ::= '=' 
lambda_body ::= '->' cond_expr 
lambda_body ::= '{' lambda_body@0_rep_2 '}' 
lambda_body@0_rep_2 ::= NULL 
lambda_body@0_rep_2 ::= statement lambda_body@0_rep_2@0_rep_2 lambda_body@0_rep_2 
lambda_body@0_rep_2@0_rep_2 ::= NULL 
lambda_body@0_rep_2@0_rep_2 ::= ENDL lambda_body@0_rep_2@0_rep_2 
cond_expr ::= logic_or_expr cond_expr@0_opt_2 
cond_expr@0_opt_2 ::= NULL 
cond_expr@0_opt_2 ::= cond_postfix 
cond_postfix ::= ':' logic_or_expr 
cond_postfix ::= '?' logic_or_expr ':' cond_expr 
logic_or_expr ::= logic_and_expr logic_or_expr@0_opt_2 
logic_or_expr@0_opt_2 ::= NULL 
logic_or_expr@0_opt_2 ::= logic_or_expr@0_opt_2@0_decl_1 logic_or_expr 
logic_or_expr@0_opt_2@0_decl_1 ::= 'or' 
logic_or_expr@0_opt_2@0_decl_1 ::= '||' 
logic_and_expr ::= equal_expr logic_and_expr@0_opt_2 
logic_and_expr@0_opt_2 ::= NULL 
logic_and_expr@0_opt_2 ::= logic_and_expr@0_opt_2@0_decl_1 logic_and_expr 
logic_and_expr@0_opt_2@0_decl_1 ::= 'and' 
logic_and_expr@0_opt_2@0_decl_1 ::= '&&' 
equal_expr ::= relat_expr equal_expr@0_opt_2 
equal_expr@0_opt_2 ::= NULL 
equal_expr@0_opt_2 ::= equal_expr@0_opt_2@0_decl_1 equal_expr 
equal_expr@0_opt_2@0_decl_1 ::= '!=' 
equal_expr@0_opt_2@0_decl_1 ::= '==' 
relat_expr ::= add_expr relat_expr@0_opt_2 
relat_expr@0_opt_2 ::= NULL 
relat_expr@0_opt_2 ::= relat_expr@0_opt_2@0_decl_1 relat_expr 
relat_expr@0_opt_2@0_decl_1 ::= '<=' 
relat_expr@0_opt_2@0_decl_1 ::= '>=' 
relat_expr@0_opt_2@0_decl_1 ::= '<' 
relat_expr@0_opt_2@0_decl_1 ::= '>' 
add_expr ::= mul_expr add_expr@0_opt_2 
add_expr@0_opt_2 ::= NULL 
add_expr@0_opt_2 ::= add_expr@0_opt_2@0_decl_1 add_expr 
add_expr@0_opt_2@0_decl_1 ::= '-' 
add_expr@0_opt_2@0_decl_1 ::= '+' 
mul_expr ::= unary_expr mul_expr@0_opt_2 
mul_expr@0_opt_2 ::= NULL 
mul_expr@0_opt_2 ::= mul_expr@0_opt_2@0_decl_1 mul_expr 
mul_expr@0_opt_2@0_decl_1 ::= '^' 
mul_expr@0_opt_2@0_decl_1 ::= '%' 
mul_expr@0_opt_2@0_decl_1 ::= '/' 
mul_expr@0_opt_2@0_decl_1 ::= '*' 
unary_expr ::= prim_expr unary_expr@2_opt_2 
unary_expr ::= unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3 
unary_expr ::= unary_op unary_expr 
unary_expr@2_opt_2 ::= NULL 
unary_expr@2_opt_2 ::= postfix_expr 
unary_expr@1_opt_3 ::= NULL 
unary_expr@1_opt_3 ::= array 
unary_expr@1_decl_1 ::= 'gcnew' 
unary_expr@1_decl_1 ::= 'new' 
unary_op ::= '!' 
unary_op ::= '-' 
unary_op ::= '&' 
unary_op ::= '*' 
unary_op ::= '--' 
unary_op ::= '++' 
unary_op ::= 'typeid' 
postfix_expr ::= postfix_expr@0_decl_1 postfix_expr@0_opt_2 
postfix_expr@0_opt_2 ::= NULL 
postfix_expr@0_opt_2 ::= postfix_expr 
postfix_expr@0_decl_1 ::= '...' 
postfix_expr@0_decl_1 ::= '--' 
postfix_expr@0_decl_1 ::= '++' 
prim_expr ::= constant 
prim_expr ::= visit_expr 
visit_expr ::= object visit_expr@0_opt_2 
visit_expr@0_opt_2 ::= NULL 
visit_expr@0_opt_2 ::= visit_expr@0_opt_2@0_decl_1 visit_expr 
visit_expr@0_opt_2@0_decl_1 ::= '.' 
visit_expr@0_opt_2@0_decl_1 ::= '->' 
object ::= CHAR 
object ::= element 
object ::= 'global' 
object ::= 'local' 
object ::= STR object@1_opt_2 
object ::= array object@0_opt_2 
object@1_opt_2 ::= NULL 
object@1_opt_2 ::= index 
object@0_opt_2 ::= NULL 
object@0_opt_2 ::= index 
element ::= element@0_decl_1 element@0_rep_2 
element@0_rep_2 ::= NULL 
element@0_rep_2 ::= index element@0_rep_2 
element@0_rep_2 ::= fcall element@0_rep_2 
element@0_decl_1 ::= '(' single_expr ')' 
element@0_decl_1 ::= ID 
constant ::= 'false' 
constant ::= 'true' 
constant ::= 'null' 
constant ::= NUM 
array ::= '{' array@0_opt_2 '}' 
array@0_opt_2 ::= NULL 
array@0_opt_2 ::= expr 
fcall ::= '(' fcall@0_opt_2 ')' 
fcall@0_opt_2 ::= NULL 
fcall@0_opt_2 ::= expr 
index ::= '[' basic_expr ']' 



##############################
show info after add start node
##############################
%start% ::= begin ;
begin ::= stmts ;
ignore ::= ignore@0_rep_1 ;
ignore@0_rep_1 ::= NULL ;
ignore@0_rep_1 ::= ENDL ignore@0_rep_1 ;
endline ::= ';' ;
endline ::= ENDL ;
stmts ::= stmts@0_rep_1 ;
stmts@0_rep_1 ::= NULL ;
stmts@0_rep_1 ::= statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1 ;
stmts@0_rep_1@0_rep_2 ::= NULL ;
stmts@0_rep_1@0_rep_2 ::= ENDL stmts@0_rep_1@0_rep_2 ;
decl_stmts ::= decl_stmts@0_rep_1 ;
decl_stmts@0_rep_1 ::= NULL ;
decl_stmts@0_rep_1 ::= declaration decl_stmts@0_rep_1@0_rep_2 decl_stmts@0_rep_1 ;
decl_stmts@0_rep_1@0_rep_2 ::= NULL ;
decl_stmts@0_rep_1@0_rep_2 ::= ENDL decl_stmts@0_rep_1@0_rep_2 ;
endblock ::= catch_stmt ;
endblock ::= until_stmt ;
endblock ::= else_stmt ;
endblock ::= end_stmt ;
statement ::= expr_stmt ;
statement ::= class_stmt ;
statement ::= throw_stmt ;
statement ::= try_stmt ;
statement ::= return_stmt ;
statement ::= function_stmt ;
statement ::= control_stmt ;
statement ::= foreach_stmt ;
statement ::= for_stmt ;
statement ::= loop_stmt ;
statement ::= while_stmt ;
statement ::= switch_stmt ;
statement ::= if_stmt ;
statement ::= using_stmt ;
statement ::= namespace_stmt ;
statement ::= block_stmt ;
statement ::= var_stmt ;
statement ::= import_stmt ;
statement ::= package_stmt ;
statement ::= prep_stmt ;
declaration ::= class_stmt ;
declaration ::= function_stmt ;
declaration ::= using_stmt ;
declaration ::= var_stmt ;
declaration ::= namespace_stmt ;
declaration ::= prep_stmt ;
prep_stmt ::= PREP ENDL ;
package_stmt ::= 'package' ID endline ;
import_stmt ::= 'import' import_list endline ;
module_list ::= ID module_list@0_opt_2 ;
module_list@0_opt_2 ::= NULL ;
module_list@0_opt_2 ::= '.' module_list@0_opt_2@0_decl_2 ;
module_list@0_opt_2@0_decl_2 ::= module_list ;
module_list@0_opt_2@0_decl_2 ::= '*' ;
import_list ::= module_list import_list@0_opt_2 import_list@0_opt_3 ;
import_list@0_opt_3 ::= NULL ;
import_list@0_opt_3 ::= ',' import_list ;
import_list@0_opt_2 ::= NULL ;
import_list@0_opt_2 ::= 'as' ID ;
var_def ::= var_list ;
var_def ::= var_bind '=' basic_expr ;
var_stmt ::= var_stmt@0_decl_1 var_def endline ;
var_stmt@0_decl_1 ::= 'constant' ;
var_stmt@0_decl_1 ::= 'link' ;
var_stmt@0_decl_1 ::= 'var' ;
var_bind ::= '(' var_bind_list var_bind@0_rep_3 ')' ;
var_bind@0_rep_3 ::= NULL ;
var_bind@0_rep_3 ::= ',' var_bind_list var_bind@0_rep_3 ;
var_bind_list ::= var_bind ;
var_bind_list ::= '...' ;
var_bind_list ::= ID ;
var_list ::= ID '=' single_expr var_list@0_opt_4 ;
var_list@0_opt_4 ::= NULL ;
var_list@0_opt_4 ::= ',' var_list ;
block_stmt ::= 'block' ENDL stmts 'end' ENDL ;
namespace_stmt ::= 'namespace' ID ENDL decl_stmts 'end' ENDL ;
using_stmt ::= 'using' using_list endline ;
using_list ::= module_list using_list@0_opt_2 ;
using_list@0_opt_2 ::= NULL ;
using_list@0_opt_2 ::= ',' using_list ;
if_stmt ::= 'if' basic_expr ENDL stmts if_stmt@0_rep_5 ;
if_stmt@0_rep_5 ::= NULL ;
if_stmt@0_rep_5 ::= else_stmt stmts 'end' ENDL if_stmt@0_rep_5 ;
else_stmt ::= 'else' else_stmt@0_opt_2 ENDL ;
else_stmt@0_opt_2 ::= NULL ;
else_stmt@0_opt_2 ::= 'if' basic_expr ;
switch_stmt ::= 'switch' basic_expr ENDL switch_stmts 'end' ENDL ;
switch_stmts ::= switch_stmts@0_rep_1 switch_stmts@0_rep_2 ;
switch_stmts@0_rep_2 ::= NULL ;
switch_stmts@0_rep_2 ::= ENDL switch_stmts@0_rep_2 ;
switch_stmts@0_rep_1 ::= NULL ;
switch_stmts@0_rep_1 ::= switch_default switch_stmts@0_rep_1 ;
switch_stmts@0_rep_1 ::= switch_case switch_stmts@0_rep_1 ;
switch_case ::= 'case' logic_or_expr ENDL stmts 'end' ENDL ;
switch_default ::= 'default' ENDL stmts 'end' ENDL ;
while_stmt ::= 'while' basic_expr ENDL stmts 'end' ENDL ;
loop_stmt ::= 'loop' ENDL stmts loop_stmt@0_decl_4 ;
loop_stmt@0_decl_4 ::= ENDL ;
loop_stmt@0_decl_4 ::= 'end' ;
loop_stmt@0_decl_4 ::= until_stmt ;
until_stmt ::= 'until' basic_expr ENDL ;
for_stmt ::= 'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body ;
for_stmt@0_opt_6 ::= NULL ;
for_stmt@0_opt_6 ::= basic_expr ;
for_stmt@0_decl_5 ::= ',' ;
for_stmt@0_decl_5 ::= ';' ;
for_stmt@0_opt_4 ::= NULL ;
for_stmt@0_opt_4 ::= basic_expr ;
for_stmt@0_decl_3 ::= ',' ;
for_stmt@0_decl_3 ::= ';' ;
for_stmt@0_opt_2 ::= NULL ;
for_stmt@0_opt_2 ::= var_def ;
foreach_stmt ::= 'foreach' ID 'in' basic_expr for_body ;
for_body ::= for_body@0_decl_1 ;
for_body@0_decl_1 ::= ENDL stmts 'end' ENDL ;
for_body@0_decl_1 ::= 'do' basic_expr endline ;
function_stmt ::= 'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body ;
function_stmt@0_opt_6 ::= NULL ;
function_stmt@0_opt_6 ::= 'override' ;
function_stmt@0_opt_4 ::= NULL ;
function_stmt@0_opt_4 ::= argument_list ;
function_body ::= function_body@0_decl_1 ;
function_body@0_decl_1 ::= ENDL stmts 'end' ENDL ;
function_body@0_decl_1 ::= '{' stmts '}' ;
return_stmt ::= 'return' return_stmt@0_opt_2 endline ;
return_stmt@0_opt_2 ::= NULL ;
return_stmt@0_opt_2 ::= expr ;
try_stmt ::= 'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL ;
try_stmt@0_rep_4 ::= NULL ;
try_stmt@0_rep_4 ::= catch_stmt stmts try_stmt@0_rep_4 ;
catch_stmt ::= 'catch' ID catch_stmt@0_opt_3 ENDL ;
catch_stmt@0_opt_3 ::= NULL ;
catch_stmt@0_opt_3 ::= ':' visit_expr ;
throw_stmt ::= 'throw' throw_stmt@0_opt_2 endline ;
throw_stmt@0_opt_2 ::= NULL ;
throw_stmt@0_opt_2 ::= expr ;
class_stmt ::= class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL ;
class_stmt@0_opt_3 ::= NULL ;
class_stmt@0_opt_3 ::= 'extends' visit_expr ;
class_stmt@0_decl_1 ::= 'struct' ;
class_stmt@0_decl_1 ::= 'class' ;
control_stmt ::= control_stmt@0_decl_1 endline ;
control_stmt@0_decl_1 ::= 'continue' ;
control_stmt@0_decl_1 ::= 'break' ;
expr_stmt ::= expr endline ;
end_stmt ::= 'end' ENDL ;
expr ::= single_expr expr@0_opt_2 ;
expr@0_opt_2 ::= NULL ;
expr@0_opt_2 ::= ',' expr ;
single_expr ::= basic_expr ;
single_expr ::= lambda_expr ;
basic_expr ::= cond_expr basic_expr@1_opt_2 ;
basic_expr ::= var_bind '=' cond_expr ;
basic_expr@1_opt_2 ::= NULL ;
basic_expr@1_opt_2 ::= asi_op single_expr ;
asi_op ::= '^=' ;
asi_op ::= '%=' ;
asi_op ::= '/=' ;
asi_op ::= '*=' ;
asi_op ::= '-=' ;
asi_op ::= '+=' ;
asi_op ::= ':=' ;
asi_op ::= '=' ;
lambda_expr ::= '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body ;
lambda_expr@0_opt_5 ::= NULL ;
lambda_expr@0_opt_5 ::= argument_list ;
lambda_expr@0_opt_2 ::= NULL ;
lambda_expr@0_opt_2 ::= capture_list ;
capture_list ::= capture_list@0_opt_1 ID capture_list@0_rep_3 ;
capture_list@0_rep_3 ::= NULL ;
capture_list@0_rep_3 ::= ',' capture_list capture_list@0_rep_3 ;
capture_list@0_opt_1 ::= NULL ;
capture_list@0_opt_1 ::= '=' ;
argument_list ::= argument_list@1_opt_1 ID argument_list@1_opt_3 visit_expr argument_list@1_rep_5 ;
argument_list ::= '...' ID ;
argument_list@1_rep_5 ::= NULL ;
argument_list@1_rep_5 ::= ',' argument_list argument_list@1_rep_5 ;
argument_list@1_opt_3 ::= NULL ;
argument_list@1_opt_3 ::= ':' ;
argument_list@1_opt_1 ::= NULL ;
argument_list@1_opt_1 ::= '=' ;
lambda_body ::= '->' cond_expr ;
lambda_body ::= '{' lambda_body@0_rep_2 '}' ;
lambda_body@0_rep_2 ::= NULL ;
lambda_body@0_rep_2 ::= statement lambda_body@0_rep_2@0_rep_2 lambda_body@0_rep_2 ;
lambda_body@0_rep_2@0_rep_2 ::= NULL ;
lambda_body@0_rep_2@0_rep_2 ::= ENDL lambda_body@0_rep_2@0_rep_2 ;
cond_expr ::= logic_or_expr cond_expr@0_opt_2 ;
cond_expr@0_opt_2 ::= NULL ;
cond_expr@0_opt_2 ::= cond_postfix ;
cond_postfix ::= ':' logic_or_expr ;
cond_postfix ::= '?' logic_or_expr ':' cond_expr ;
logic_or_expr ::= logic_and_expr logic_or_expr@0_opt_2 ;
logic_or_expr@0_opt_2 ::= NULL ;
logic_or_expr@0_opt_2 ::= logic_or_expr@0_opt_2@0_decl_1 logic_or_expr ;
logic_or_expr@0_opt_2@0_decl_1 ::= 'or' ;
logic_or_expr@0_opt_2@0_decl_1 ::= '||' ;
logic_and_expr ::= equal_expr logic_and_expr@0_opt_2 ;
logic_and_expr@0_opt_2 ::= NULL ;
logic_and_expr@0_opt_2 ::= logic_and_expr@0_opt_2@0_decl_1 logic_and_expr ;
logic_and_expr@0_opt_2@0_decl_1 ::= 'and' ;
logic_and_expr@0_opt_2@0_decl_1 ::= '&&' ;
equal_expr ::= relat_expr equal_expr@0_opt_2 ;
equal_expr@0_opt_2 ::= NULL ;
equal_expr@0_opt_2 ::= equal_expr@0_opt_2@0_decl_1 equal_expr ;
equal_expr@0_opt_2@0_decl_1 ::= '!=' ;
equal_expr@0_opt_2@0_decl_1 ::= '==' ;
relat_expr ::= add_expr relat_expr@0_opt_2 ;
relat_expr@0_opt_2 ::= NULL ;
relat_expr@0_opt_2 ::= relat_expr@0_opt_2@0_decl_1 relat_expr ;
relat_expr@0_opt_2@0_decl_1 ::= '<=' ;
relat_expr@0_opt_2@0_decl_1 ::= '>=' ;
relat_expr@0_opt_2@0_decl_1 ::= '<' ;
relat_expr@0_opt_2@0_decl_1 ::= '>' ;
add_expr ::= mul_expr add_expr@0_opt_2 ;
add_expr@0_opt_2 ::= NULL ;
add_expr@0_opt_2 ::= add_expr@0_opt_2@0_decl_1 add_expr ;
add_expr@0_opt_2@0_decl_1 ::= '-' ;
add_expr@0_opt_2@0_decl_1 ::= '+' ;
mul_expr ::= unary_expr mul_expr@0_opt_2 ;
mul_expr@0_opt_2 ::= NULL ;
mul_expr@0_opt_2 ::= mul_expr@0_opt_2@0_decl_1 mul_expr ;
mul_expr@0_opt_2@0_decl_1 ::= '^' ;
mul_expr@0_opt_2@0_decl_1 ::= '%' ;
mul_expr@0_opt_2@0_decl_1 ::= '/' ;
mul_expr@0_opt_2@0_decl_1 ::= '*' ;
unary_expr ::= prim_expr unary_expr@2_opt_2 ;
unary_expr ::= unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3 ;
unary_expr ::= unary_op unary_expr ;
unary_expr@2_opt_2 ::= NULL ;
unary_expr@2_opt_2 ::= postfix_expr ;
unary_expr@1_opt_3 ::= NULL ;
unary_expr@1_opt_3 ::= array ;
unary_expr@1_decl_1 ::= 'gcnew' ;
unary_expr@1_decl_1 ::= 'new' ;
unary_op ::= '!' ;
unary_op ::= '-' ;
unary_op ::= '&' ;
unary_op ::= '*' ;
unary_op ::= '--' ;
unary_op ::= '++' ;
unary_op ::= 'typeid' ;
postfix_expr ::= postfix_expr@0_decl_1 postfix_expr@0_opt_2 ;
postfix_expr@0_opt_2 ::= NULL ;
postfix_expr@0_opt_2 ::= postfix_expr ;
postfix_expr@0_decl_1 ::= '...' ;
postfix_expr@0_decl_1 ::= '--' ;
postfix_expr@0_decl_1 ::= '++' ;
prim_expr ::= constant ;
prim_expr ::= visit_expr ;
visit_expr ::= object visit_expr@0_opt_2 ;
visit_expr@0_opt_2 ::= NULL ;
visit_expr@0_opt_2 ::= visit_expr@0_opt_2@0_decl_1 visit_expr ;
visit_expr@0_opt_2@0_decl_1 ::= '.' ;
visit_expr@0_opt_2@0_decl_1 ::= '->' ;
object ::= CHAR ;
object ::= element ;
object ::= 'global' ;
object ::= 'local' ;
object ::= STR object@1_opt_2 ;
object ::= array object@0_opt_2 ;
object@1_opt_2 ::= NULL ;
object@1_opt_2 ::= index ;
object@0_opt_2 ::= NULL ;
object@0_opt_2 ::= index ;
element ::= element@0_decl_1 element@0_rep_2 ;
element@0_rep_2 ::= NULL ;
element@0_rep_2 ::= index element@0_rep_2 ;
element@0_rep_2 ::= fcall element@0_rep_2 ;
element@0_decl_1 ::= '(' single_expr ')' ;
element@0_decl_1 ::= ID ;
constant ::= 'false' ;
constant ::= 'true' ;
constant ::= 'null' ;
constant ::= NUM ;
array ::= '{' array@0_opt_2 '}' ;
array@0_opt_2 ::= NULL ;
array@0_opt_2 ::= expr ;
fcall ::= '(' fcall@0_opt_2 ')' ;
fcall@0_opt_2 ::= NULL ;
fcall@0_opt_2 ::= expr ;
index ::= '[' basic_expr ']' ;



##############
show FIRST SET
##############
TERM  ignore@0_rep_1 : ENDL  NULL  

TERM  declaration : PREP  'struct'  'var'  'using'  'class'  'namespace'  'constant'  'function'  'link'  

TERM  unary_op : 'typeid'  '++'  '--'  '!'  '-'  '&'  '*'  

TERM  else_stmt : 'else'  

TERM  module_list@0_opt_2@0_decl_2 : ID  '*'  

TERM  block_stmt : 'block'  

TERM  relat_expr@0_opt_2@0_decl_1 : '<'  '>='  '<='  '>'  

TERM  stmts : '('  CHAR  'gcnew'  'return'  '*'  'using'  NULL  NUM  'for'  'null'  'foreach'  'false'  'while'  'local'  STR  '{'  'package'  '-'  'import'  'block'  'function'  PREP  '--'  '['  'switch'  'true'  'global'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  '!'  ID  'var'  '&'  'class'  'loop'  'constant'  'throw'  'if'  

TERM  statement : '('  CHAR  'gcnew'  'return'  '*'  'using'  NUM  'for'  'null'  'foreach'  'false'  'while'  'local'  STR  '{'  'package'  '-'  'import'  'block'  'function'  PREP  '--'  '['  'switch'  'true'  'global'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  '!'  ID  'var'  '&'  'class'  'loop'  'constant'  'throw'  'if'  

TERM  throw_stmt@0_opt_2 : CHAR  '('  '['  'gcnew'  '--'  '*'  'true'  'global'  'false'  NUM  'null'  'new'  '++'  NULL  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  capture_list@0_opt_1 : '='  NULL  

TERM  argument_list : ID  '...'  '='  

TERM  begin : CHAR  '('  'gcnew'  'return'  '*'  'using'  NULL  'false'  NUM  'null'  'foreach'  'for'  'local'  'while'  STR  '{'  'package'  '-'  'function'  'block'  'import'  PREP  '['  '--'  'switch'  'true'  'global'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  visit_expr : CHAR  '('  'local'  STR  ID  '{'  'global'  

TERM  else_stmt@0_opt_2 : NULL  'if'  

TERM  try_stmt : 'try'  

TERM  switch_default : 'default'  

TERM  postfix_expr@0_opt_2 : NULL  '--'  '++'  '...'  

TERM  for_stmt@0_decl_3 : ';'  ','  

TERM  argument_list@1_opt_3 : NULL  ':'  

TERM  lambda_body@0_rep_2@0_rep_2 : ENDL  NULL  

TERM  mul_expr : '('  CHAR  'gcnew'  '--'  'true'  '*'  'false'  NUM  'null'  'new'  'global'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  function_stmt@0_opt_6 : NULL  'override'  

TERM  lambda_expr : '['  

TERM  capture_list : ID  '='  

TERM  prep_stmt : PREP  

TERM  using_stmt : 'using'  

TERM  postfix_expr : '++'  '...'  '--'  

TERM  logic_or_expr : CHAR  '('  '--'  'gcnew'  '*'  'global'  NUM  'null'  'new'  'false'  'true'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  equal_expr : CHAR  '('  '--'  'gcnew'  'true'  'global'  NUM  'null'  'new'  'false'  '*'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  var_bind : '('  

TERM  return_stmt : 'return'  

TERM  index : '['  

TERM  function_stmt : 'function'  

TERM  stmts@0_rep_1@0_rep_2 : ENDL  NULL  

TERM  import_list : ID  

TERM  class_stmt : 'class'  'struct'  

TERM  logic_and_expr@0_opt_2 : NULL  '&&'  'and'  

TERM  equal_expr@0_opt_2@0_decl_1 : '=='  '!='  

TERM  for_stmt@0_opt_4 : CHAR  '('  'gcnew'  '--'  'true'  '*'  'false'  NUM  'null'  'new'  'global'  '++'  NULL  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  control_stmt : 'continue'  'break'  

TERM  unary_expr@2_opt_2 : NULL  '--'  '++'  '...'  

TERM  var_def : '('  ID  

TERM  for_stmt : 'for'  

TERM  switch_stmts@0_rep_1 : 'case'  NULL  'default'  

TERM  element : '('  ID  

TERM  cond_postfix : '?'  ':'  

TERM  module_list : ID  

TERM  add_expr@0_opt_2@0_decl_1 : '+'  '-'  

TERM  cond_expr@0_opt_2 : '?'  ':'  NULL  

TERM  import_stmt : 'import'  

TERM  switch_stmt : 'switch'  

TERM  unary_expr@1_opt_3 : '{'  NULL  

TERM  decl_stmts@0_rep_1 : PREP  'struct'  'var'  'using'  'class'  'namespace'  NULL  'function'  'constant'  'link'  

TERM  lambda_expr@0_opt_5 : NULL  '='  ID  '...'  

TERM  for_body@0_decl_1 : 'do'  ENDL  

TERM  add_expr@0_opt_2 : '+'  NULL  '-'  

TERM  endline : ENDL  ';'  

TERM  switch_stmts : NULL  ENDL  'case'  'default'  

TERM  prim_expr : 'local'  '('  STR  CHAR  '{'  ID  'global'  'true'  'false'  NUM  'null'  

TERM  foreach_stmt : 'foreach'  

TERM  add_expr : CHAR  '('  '--'  'gcnew'  '*'  'global'  NUM  'null'  'new'  'false'  'true'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  var_list@0_opt_4 : NULL  ','  

TERM  array@0_opt_2 : CHAR  '('  '['  'gcnew'  '--'  '*'  'true'  'global'  'false'  NUM  'null'  'new'  '++'  NULL  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  visit_expr@0_opt_2@0_decl_1 : '->'  '.'  

TERM  unary_expr@1_decl_1 : 'new'  'gcnew'  

TERM  object@1_opt_2 : NULL  '['  

TERM  fcall : '('  

TERM  equal_expr@0_opt_2 : NULL  '=='  '!='  

TERM  switch_stmts@0_rep_2 : ENDL  NULL  

TERM  throw_stmt : 'throw'  

TERM  basic_expr : '('  CHAR  '--'  'gcnew'  'true'  'global'  NUM  'null'  'new'  'false'  '*'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  lambda_body@0_rep_2 : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  NULL  'local'  'while'  STR  '{'  'package'  '-'  'function'  'block'  'import'  PREP  '['  '--'  'switch'  'true'  'global'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  for_body : ENDL  'do'  

TERM  using_list : ID  

TERM  expr : '('  CHAR  '--'  'gcnew'  '['  'true'  'global'  NUM  'null'  'new'  'false'  '*'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  var_stmt : 'constant'  'link'  'var'  

TERM  endblock : 'until'  'catch'  'end'  'else'  

TERM  function_body@0_decl_1 : '{'  ENDL  

TERM  %start% : '('  CHAR  'gcnew'  'return'  '*'  'using'  NULL  NUM  'for'  'null'  'foreach'  'false'  'while'  'local'  STR  '{'  'package'  '-'  'import'  'block'  'function'  PREP  '--'  '['  'switch'  'true'  'global'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  '!'  ID  'var'  '&'  'class'  'loop'  'constant'  'throw'  'if'  

TERM  expr_stmt : CHAR  '('  '['  'gcnew'  '--'  '*'  'true'  'global'  'false'  NUM  'null'  'new'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  relat_expr : '('  CHAR  'gcnew'  '--'  '*'  'true'  'false'  NUM  'null'  'new'  'global'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  constant : NUM  'null'  'false'  'true'  

TERM  capture_list@0_rep_3 : NULL  ','  

TERM  logic_and_expr : '('  CHAR  'gcnew'  '--'  'true'  '*'  'false'  NUM  'null'  'new'  'global'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  function_stmt@0_opt_4 : NULL  '='  ID  '...'  

TERM  decl_stmts@0_rep_1@0_rep_2 : ENDL  NULL  

TERM  if_stmt@0_rep_5 : 'else'  NULL  

TERM  control_stmt@0_decl_1 : 'continue'  'break'  

TERM  for_stmt@0_opt_2 : ID  '('  NULL  

TERM  basic_expr@1_opt_2 : '='  '%='  '-='  '+='  '^='  NULL  ':='  '*='  '/='  

TERM  fcall@0_opt_2 : CHAR  '('  '['  'gcnew'  '--'  '*'  'true'  'global'  'false'  NUM  'null'  'new'  '++'  NULL  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  mul_expr@0_opt_2 : '/'  NULL  '^'  '%'  '*'  

TERM  argument_list@1_rep_5 : NULL  ','  

TERM  package_stmt : 'package'  

TERM  element@0_rep_2 : '('  NULL  '['  

TERM  relat_expr@0_opt_2 : '<'  NULL  '<='  '>='  '>'  

TERM  module_list@0_opt_2 : NULL  '.'  

TERM  for_stmt@0_opt_6 : CHAR  '('  'gcnew'  '--'  'true'  '*'  'false'  NUM  'null'  'new'  'global'  '++'  NULL  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  mul_expr@0_opt_2@0_decl_1 : '/'  '^'  '*'  '%'  

TERM  import_list@0_opt_2 : 'as'  NULL  

TERM  for_stmt@0_decl_5 : ';'  ','  

TERM  class_stmt@0_decl_1 : 'class'  'struct'  

TERM  function_body : ENDL  '{'  

TERM  stmts@0_rep_1 : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  NULL  'local'  'while'  STR  '{'  'package'  '-'  'function'  'block'  'import'  PREP  '['  '--'  'switch'  'true'  'global'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  loop_stmt@0_decl_4 : 'end'  'until'  ENDL  

TERM  class_stmt@0_opt_3 : NULL  'extends'  

TERM  logic_and_expr@0_opt_2@0_decl_1 : '&&'  'and'  

TERM  while_stmt : 'while'  

TERM  catch_stmt@0_opt_3 : NULL  ':'  

TERM  namespace_stmt : 'namespace'  

TERM  if_stmt : 'if'  

TERM  var_bind_list : ID  '('  '...'  

TERM  postfix_expr@0_decl_1 : '++'  '...'  '--'  

TERM  visit_expr@0_opt_2 : '->'  NULL  '.'  

TERM  object : 'local'  '('  STR  CHAR  '{'  ID  'global'  

TERM  element@0_decl_1 : ID  '('  

TERM  catch_stmt : 'catch'  

TERM  loop_stmt : 'loop'  

TERM  lambda_expr@0_opt_2 : '='  ID  NULL  

TERM  lambda_body : '{'  '->'  

TERM  array : '{'  

TERM  ignore : NULL  ENDL  

TERM  asi_op : '='  '-='  '%='  '+='  '^='  ':='  '*='  '/='  

TERM  return_stmt@0_opt_2 : CHAR  '('  '['  'gcnew'  '--'  '*'  'true'  'global'  'false'  NUM  'null'  'new'  '++'  NULL  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  logic_or_expr@0_opt_2 : '||'  'or'  NULL  

TERM  expr@0_opt_2 : NULL  ','  

TERM  logic_or_expr@0_opt_2@0_decl_1 : '||'  'or'  

TERM  decl_stmts : PREP  'struct'  'var'  'using'  NULL  'class'  'namespace'  'constant'  'function'  'link'  

TERM  unary_expr : CHAR  '('  '--'  'gcnew'  '*'  'true'  'global'  NUM  'null'  'new'  'false'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  argument_list@1_opt_1 : '='  NULL  

TERM  var_stmt@0_decl_1 : 'constant'  'var'  'link'  

TERM  object@0_opt_2 : NULL  '['  

TERM  until_stmt : 'until'  

TERM  switch_case : 'case'  

TERM  import_list@0_opt_3 : NULL  ','  

TERM  single_expr : CHAR  '('  '['  'gcnew'  '--'  '*'  'true'  'global'  'false'  NUM  'null'  'new'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  var_bind@0_rep_3 : NULL  ','  

TERM  try_stmt@0_rep_4 : NULL  'catch'  

TERM  var_list : ID  

TERM  using_list@0_opt_2 : NULL  ','  

TERM  end_stmt : 'end'  

TERM  cond_expr : '('  CHAR  'gcnew'  '--'  '*'  'true'  'false'  NUM  'null'  'new'  'global'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  




###############
show FOLLOW SET
###############
TERM  declaration : PREP  'struct'  ENDL  'var'  'using'  'class'  'namespace'  'end'  'constant'  'function'  'link'  

TERM  unary_op : '('  CHAR  'gcnew'  '--'  'true'  '*'  'false'  NUM  'null'  'new'  'global'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  else_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  'local'  'while'  STR  '{'  'package'  '-'  'end'  'block'  'import'  'function'  PREP  '['  '--'  'switch'  'true'  'global'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  block_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  stmts : '('  CHAR  'gcnew'  'return'  '*'  'using'  NUM  'for'  %END%  'null'  'foreach'  'false'  'while'  ENDL  'local'  STR  '}'  '{'  'package'  '-'  'end'  'block'  'function'  'import'  PREP  'catch'  'until'  '--'  '['  'switch'  'true'  'global'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  '!'  ID  'var'  '&'  'class'  'else'  'loop'  'constant'  'throw'  'if'  

TERM  begin : %END%  

TERM  statement : '('  CHAR  'gcnew'  'return'  '*'  'using'  NUM  'for'  'null'  'foreach'  'false'  %END%  'while'  'local'  ENDL  STR  '}'  '{'  'package'  '-'  'block'  'function'  'end'  'import'  PREP  'catch'  '--'  '['  'switch'  'true'  'global'  'until'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  '!'  ID  'var'  '&'  'class'  'else'  'loop'  'constant'  'throw'  'if'  

TERM  relat_expr@0_opt_2@0_decl_1 : CHAR  '('  '--'  'gcnew'  'true'  'global'  NUM  'null'  'new'  'false'  '*'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  throw_stmt@0_opt_2 : ENDL  ';'  

TERM  capture_list@0_opt_1 : ID  

TERM  argument_list : ')'  ','  

TERM  module_list@0_opt_2@0_decl_2 : ENDL  ';'  'as'  ','  

TERM  visit_expr : '<'  '/'  '>='  '<='  '*'  ']'  '+='  ';'  '...'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '--'  '='  '%='  '&&'  ')'  '!='  '*='  '++'  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  else_stmt@0_opt_2 : ENDL  

TERM  try_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  switch_default : ENDL  'end'  'case'  'default'  

TERM  postfix_expr@0_opt_2 : '/'  '<'  '>='  '*'  '<='  '+='  ']'  ';'  '+'  '?'  ENDL  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '%='  '='  '&&'  ')'  ':='  '!='  '*='  '/='  '>'  'or'  '^'  'and'  '-='  '%'  ':'  

TERM  for_stmt@0_decl_3 : '('  CHAR  '--'  'gcnew'  '*'  'global'  NUM  'null'  ';'  'new'  'false'  'true'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  ','  

TERM  argument_list@1_opt_3 : 'local'  '('  STR  CHAR  '{'  ID  'global'  

TERM  lambda_body@0_rep_2@0_rep_2 : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  'local'  'while'  STR  '}'  '{'  'package'  '-'  'function'  'block'  'import'  PREP  '['  '--'  'switch'  'true'  'global'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  mul_expr : '<'  '<='  '>='  '+='  ']'  ';'  '+'  '?'  ENDL  '}'  '^='  '-'  'do'  ','  '=='  '||'  '%='  '='  '&&'  ')'  ':='  '!='  '*='  '/='  '>'  'or'  'and'  '-='  ':'  

TERM  function_stmt@0_opt_6 : '{'  ENDL  

TERM  lambda_expr : ']'  ENDL  ';'  'do'  ')'  ','  '}'  

TERM  capture_list : ']'  ','  

TERM  prep_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  ENDL  'while'  STR  '}'  '{'  'package'  '-'  'function'  'import'  'end'  'block'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  'var'  ID  'class'  '&'  'loop'  'constant'  'throw'  'if'  

TERM  using_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  ENDL  'while'  STR  '}'  '{'  'package'  '-'  'function'  'import'  'end'  'block'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  'var'  ID  'class'  '&'  'loop'  'constant'  'throw'  'if'  

TERM  logic_or_expr : '='  '%='  '+='  ']'  ')'  ':='  '*='  ';'  '/='  ENDL  '?'  '}'  '-='  '^='  ':'  'do'  ','  

TERM  postfix_expr : '<'  '/'  '>='  '*'  '<='  ']'  '+='  ';'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '='  '%='  '&&'  ')'  '!='  '*='  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  equal_expr : '||'  '='  '%='  '&&'  '+='  ']'  ')'  ':='  '*='  ';'  '/='  'or'  ENDL  '?'  'and'  '}'  '-='  '^='  ':'  'do'  ','  

TERM  var_bind : '='  ','  ')'  

TERM  return_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  index : '->'  '<'  '/'  '('  '>='  '*'  '<='  '...'  ']'  '+='  ';'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '.'  '--'  '='  '%='  '&&'  '['  ')'  '!='  '*='  '++'  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  function_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  ENDL  'while'  STR  '}'  '{'  'package'  '-'  'function'  'import'  'end'  'block'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  'var'  ID  'class'  '&'  'loop'  'constant'  'throw'  'if'  

TERM  stmts@0_rep_1@0_rep_2 : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  class_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  ENDL  'while'  STR  '}'  '{'  'package'  '-'  'function'  'import'  'end'  'block'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  'var'  ID  'class'  '&'  'loop'  'constant'  'throw'  'if'  

TERM  import_list : ENDL  ';'  

TERM  logic_and_expr@0_opt_2 : '||'  '='  '%='  '+='  ']'  ')'  ':='  '*='  ';'  'or'  '/='  ENDL  '?'  '}'  '-='  '^='  ':'  'do'  ','  

TERM  equal_expr@0_opt_2@0_decl_1 : '('  CHAR  'gcnew'  '--'  'true'  '*'  'false'  NUM  'null'  'new'  'global'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  for_stmt@0_opt_4 : ','  ';'  

TERM  control_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  unary_expr@2_opt_2 : '/'  '<'  '>='  '*'  '<='  '+='  ']'  ';'  '+'  '?'  ENDL  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '%='  '='  '&&'  ')'  ':='  '!='  '*='  '/='  '>'  'or'  '^'  'and'  '-='  '%'  ':'  

TERM  var_def : ENDL  ';'  ','  

TERM  for_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  switch_stmts@0_rep_1 : 'end'  ENDL  

TERM  element : '->'  '<'  '/'  '>='  '...'  '*'  '<='  ']'  '+='  ';'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '.'  '--'  '='  '%='  '&&'  ')'  '!='  '*='  '++'  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  cond_postfix : '%='  '='  ']'  '+='  ';'  ')'  ':='  '*='  '/='  ENDL  '}'  '-='  '^='  'do'  ','  

TERM  module_list : ENDL  ';'  'as'  ','  

TERM  add_expr@0_opt_2@0_decl_1 : '('  CHAR  'gcnew'  '--'  '*'  'true'  'false'  NUM  'null'  'new'  'global'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  cond_expr@0_opt_2 : '='  '%='  '+='  ']'  ')'  ':='  '*='  ';'  '/='  ENDL  '}'  '-='  '^='  'do'  ','  

TERM  switch_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  import_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  unary_expr@1_opt_3 : '<'  '/'  '<='  '>='  '*'  ']'  '+='  ';'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '='  '%='  '&&'  ')'  '!='  '*='  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  lambda_expr@0_opt_5 : ')'  

TERM  decl_stmts@0_rep_1 : 'end'  

TERM  for_body@0_decl_1 : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  add_expr@0_opt_2 : '<'  '||'  '<='  '%='  '&&'  '='  ']'  ')'  ';'  '>='  ':='  '!='  '+='  '>'  'or'  '/='  '?'  ENDL  'and'  '}'  '-='  '*='  '^='  ':'  'do'  ','  '=='  

TERM  endline : '('  CHAR  'gcnew'  'return'  '*'  'using'  NUM  'for'  %END%  'null'  'foreach'  'false'  'while'  ENDL  'local'  STR  '}'  '{'  'package'  '-'  'end'  'block'  'function'  'import'  PREP  'catch'  'until'  '--'  '['  'switch'  'true'  'global'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  '!'  ID  'var'  '&'  'class'  'else'  'loop'  'constant'  'throw'  'if'  

TERM  switch_stmts : 'end'  

TERM  prim_expr : '/'  '<'  '<='  '*'  '...'  '+='  ']'  ';'  '>='  '+'  '?'  ENDL  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '--'  '%='  '='  '&&'  ')'  ':='  '!='  '*='  '/='  '>'  'or'  '++'  '^'  'and'  '-='  '%'  ':'  

TERM  foreach_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  add_expr : '||'  '<'  '%='  '<='  '&&'  ']'  '>='  '+='  '!='  ':='  '='  '*='  ';'  '/='  'or'  ENDL  '?'  'and'  '}'  '-='  '>'  ')'  '^='  ':'  'do'  ','  '=='  

TERM  logic_and_expr : '||'  '%='  '='  ']'  '+='  ';'  ')'  ':='  '*='  '/='  'or'  '?'  ENDL  '}'  '-='  '^='  ':'  'do'  ','  

TERM  array@0_opt_2 : '}'  

TERM  visit_expr@0_opt_2@0_decl_1 : 'local'  '('  STR  CHAR  '{'  ID  'global'  

TERM  unary_expr@1_decl_1 : '('  CHAR  'gcnew'  '--'  'true'  '*'  'false'  NUM  'null'  'new'  'global'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  expr_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  equal_expr@0_opt_2 : '||'  '%='  '='  '&&'  ']'  '+='  ';'  ')'  ':='  '*='  '/='  'or'  '?'  ENDL  'and'  '}'  '-='  '^='  ':'  'do'  ','  

TERM  object@1_opt_2 : '->'  '<'  '/'  '>='  '...'  '*'  '<='  ']'  '+='  ';'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '.'  '--'  '='  '%='  '&&'  ')'  '!='  '*='  '++'  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  switch_stmts@0_rep_2 : 'end'  

TERM  %start% : %END%  

TERM  throw_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  basic_expr : ']'  ENDL  ';'  'do'  ')'  ','  '}'  

TERM  for_body : '('  CHAR  'gcnew'  'return'  '*'  'using'  NUM  'for'  %END%  'null'  'foreach'  'false'  'while'  ENDL  'local'  STR  '}'  '{'  'package'  '-'  'end'  'block'  'function'  'import'  PREP  'catch'  'until'  '--'  '['  'switch'  'true'  'global'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  '!'  ID  'var'  '&'  'class'  'else'  'loop'  'constant'  'throw'  'if'  

TERM  using_list : ENDL  ';'  

TERM  expr : ENDL  ')'  ';'  '}'  

TERM  var_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  ENDL  'while'  STR  '}'  '{'  'package'  '-'  'function'  'import'  'end'  'block'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  'var'  ID  'class'  '&'  'loop'  'constant'  'throw'  'if'  

TERM  lambda_body@0_rep_2 : '}'  

TERM  function_body@0_decl_1 : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  ENDL  'while'  STR  '}'  '{'  'package'  '-'  'function'  'import'  'end'  'block'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  'var'  ID  'class'  '&'  'loop'  'constant'  'throw'  'if'  

TERM  relat_expr : '||'  '%='  '='  '&&'  ']'  '+='  ')'  ':='  '!='  ';'  '/='  '*='  'or'  '?'  ENDL  'and'  '}'  '-='  '^='  ':'  'do'  ','  '=='  

TERM  fcall : '/'  '<'  '->'  '('  '<='  '>='  '*'  '+='  ']'  ';'  '...'  '+'  '?'  ENDL  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '--'  '.'  '%='  '='  '&&'  '['  ')'  ':='  '!='  '*='  '/='  '>'  'or'  '++'  '^'  'and'  '-='  '%'  ':'  

TERM  var_list@0_opt_4 : ENDL  ';'  ','  

TERM  constant : '<'  '/'  '>='  '*'  '<='  ']'  '+='  ';'  '...'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '--'  '='  '%='  '&&'  ')'  '!='  '*='  '++'  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  capture_list@0_rep_3 : ']'  ','  

TERM  function_stmt@0_opt_4 : ')'  

TERM  decl_stmts@0_rep_1@0_rep_2 : PREP  'struct'  'var'  'using'  'class'  'namespace'  'function'  'constant'  'link'  'end'  

TERM  if_stmt@0_rep_5 : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  control_stmt@0_decl_1 : ENDL  ';'  

TERM  for_stmt@0_opt_2 : ','  ';'  

TERM  basic_expr@1_opt_2 : ENDL  ')'  ';'  '}'  ']'  'do'  ','  

TERM  fcall@0_opt_2 : ')'  

TERM  mul_expr@0_opt_2 : '<'  '>='  '<='  ']'  '+='  ';'  '+'  ENDL  '?'  '}'  '^='  '-'  'do'  ','  '=='  '||'  '='  '%='  '&&'  ')'  '!='  '*='  ':='  'or'  '/='  '>'  'and'  '-='  ':'  

TERM  argument_list@1_rep_5 : ')'  ','  

TERM  package_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  element@0_rep_2 : '/'  '<'  '->'  '>='  '<='  '...'  '+='  ']'  ';'  '*'  '+'  '?'  ENDL  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '--'  '.'  '%='  '='  '&&'  ')'  ':='  '!='  '*='  '/='  '>'  'or'  '++'  '^'  'and'  '-='  '%'  ':'  

TERM  relat_expr@0_opt_2 : '||'  '='  '%='  '&&'  '+='  ']'  ')'  '!='  ':='  '*='  'or'  ';'  '/='  ENDL  '?'  'and'  '}'  '-='  '^='  ':'  'do'  ','  '=='  

TERM  for_stmt@0_opt_6 : 'do'  ENDL  

TERM  mul_expr@0_opt_2@0_decl_1 : CHAR  '('  '--'  'gcnew'  '*'  'global'  NUM  'null'  'new'  'false'  'true'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  module_list@0_opt_2 : 'as'  ENDL  ';'  ','  

TERM  import_list@0_opt_2 : ENDL  ';'  ','  

TERM  for_stmt@0_decl_5 : '('  CHAR  '--'  'gcnew'  '*'  'global'  NUM  'null'  'new'  'false'  'true'  '++'  'local'  ENDL  'typeid'  STR  '!'  ID  '&'  '{'  '-'  'do'  

TERM  class_stmt@0_decl_1 : ID  

TERM  function_body : '('  CHAR  'gcnew'  'return'  '*'  'using'  NUM  'for'  %END%  'null'  'foreach'  'false'  'while'  'local'  ENDL  STR  '}'  '{'  'package'  '-'  'end'  'import'  'function'  'block'  PREP  'catch'  'until'  '--'  '['  'switch'  'true'  'global'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  '!'  ID  '&'  'else'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  stmts@0_rep_1 : '('  CHAR  'gcnew'  'return'  '*'  'using'  NUM  'for'  %END%  'null'  'foreach'  'false'  'while'  ENDL  'local'  STR  '}'  '{'  'package'  '-'  'end'  'block'  'function'  'import'  PREP  'catch'  'until'  '--'  '['  'switch'  'true'  'global'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  '!'  ID  'var'  '&'  'class'  'else'  'loop'  'constant'  'throw'  'if'  

TERM  loop_stmt@0_decl_4 : '('  CHAR  'gcnew'  'return'  '*'  'using'  NUM  'for'  %END%  'null'  'foreach'  'false'  'while'  ENDL  'local'  STR  '}'  '{'  'package'  '-'  'end'  'block'  'function'  'import'  PREP  'catch'  'until'  '--'  '['  'switch'  'true'  'global'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  '!'  ID  'var'  '&'  'class'  'else'  'loop'  'constant'  'throw'  'if'  

TERM  class_stmt@0_opt_3 : ENDL  

TERM  logic_and_expr@0_opt_2@0_decl_1 : CHAR  '('  '--'  'gcnew'  '*'  'global'  NUM  'null'  'new'  'false'  'true'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  while_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  catch_stmt@0_opt_3 : ENDL  

TERM  namespace_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  ENDL  'while'  STR  '}'  '{'  'package'  '-'  'function'  'import'  'end'  'block'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'link'  'break'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  'var'  ID  'class'  '&'  'loop'  'constant'  'throw'  'if'  

TERM  if_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  var_bind_list : ')'  ','  

TERM  postfix_expr@0_decl_1 : '/'  '<'  '<='  '*'  '...'  '+='  ']'  ';'  '>='  '+'  '?'  ENDL  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '--'  '%='  '='  '&&'  ')'  ':='  '!='  '*='  '/='  '>'  'or'  '++'  '^'  'and'  '-='  '%'  ':'  

TERM  object : '/'  '<'  '->'  '<='  '...'  '>='  '+='  ']'  ';'  '*'  '+'  '?'  ENDL  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '--'  '.'  '%='  '='  '&&'  ')'  ':='  '!='  '*='  '/='  '>'  'or'  '++'  '^'  'and'  '-='  '%'  ':'  

TERM  visit_expr@0_opt_2 : '/'  '<'  '<='  '...'  '*'  '+='  ']'  ';'  '>='  '+'  '?'  ENDL  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '--'  '%='  '='  '&&'  ')'  ':='  '!='  '*='  '/='  '>'  'or'  '++'  '^'  'and'  '-='  '%'  ':'  

TERM  element@0_decl_1 : '/'  '<'  '->'  '('  '<='  '>='  '*'  '+='  ']'  ';'  '...'  '+'  '?'  ENDL  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '--'  '.'  '%='  '='  '&&'  '['  ')'  ':='  '!='  '*='  '/='  '>'  'or'  '++'  '^'  'and'  '-='  '%'  ':'  

TERM  catch_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  'local'  'while'  STR  '{'  'package'  '-'  'end'  'block'  'import'  'function'  PREP  'catch'  '['  '--'  'switch'  'true'  'global'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  loop_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  lambda_expr@0_opt_2 : ']'  

TERM  lambda_body : ENDL  ')'  ';'  '}'  ']'  'do'  ','  

TERM  unary_expr : '<'  '/'  '<='  '>='  '*'  ']'  '+='  ';'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '='  '%='  '&&'  ')'  '!='  '*='  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  decl_stmts : 'end'  

TERM  asi_op : '('  CHAR  '--'  'gcnew'  '['  'true'  'global'  NUM  'null'  'new'  'false'  '*'  '++'  'local'  'typeid'  STR  '!'  ID  '&'  '{'  '-'  

TERM  return_stmt@0_opt_2 : ENDL  ';'  

TERM  logic_or_expr@0_opt_2 : '%='  '='  ']'  '+='  ';'  ')'  ':='  '*='  '/='  '?'  ENDL  '}'  '-='  '^='  ':'  'do'  ','  

TERM  expr@0_opt_2 : ENDL  ')'  ';'  '}'  

TERM  logic_or_expr@0_opt_2@0_decl_1 : '('  CHAR  'gcnew'  '--'  '*'  'true'  'false'  NUM  'null'  'new'  'global'  '++'  'local'  'typeid'  STR  '!'  '{'  ID  '&'  '-'  

TERM  array : '->'  '<'  '/'  '<='  '>='  '*'  '...'  ']'  '+='  ';'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '.'  '--'  '='  '%='  '&&'  '['  ')'  '!='  '*='  '++'  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  argument_list@1_opt_1 : ID  

TERM  var_stmt@0_decl_1 : ID  '('  

TERM  object@0_opt_2 : '->'  '<'  '/'  '>='  '...'  '*'  '<='  ']'  '+='  ';'  '+'  ENDL  '?'  '}'  '{'  '^='  '-'  'do'  ','  '=='  '||'  '.'  '--'  '='  '%='  '&&'  ')'  '!='  '*='  '++'  ':='  'or'  '/='  '>'  'and'  '^'  '-='  '%'  ':'  

TERM  until_stmt : CHAR  '('  'gcnew'  'return'  '*'  'using'  'false'  NUM  'null'  'foreach'  'for'  %END%  'local'  'while'  ENDL  STR  '}'  '{'  'package'  '-'  'function'  'block'  'end'  'import'  PREP  'until'  '['  '--'  'switch'  'true'  'global'  'catch'  'namespace'  'new'  '++'  'break'  'link'  'continue'  'typeid'  'struct'  'try'  'else'  '!'  ID  '&'  'var'  'class'  'loop'  'throw'  'constant'  'if'  

TERM  switch_case : ENDL  'end'  'case'  'default'  

TERM  import_list@0_opt_3 : ENDL  ';'  

TERM  single_expr : ']'  ')'  ENDL  ';'  'do'  ','  '}'  

TERM  var_bind@0_rep_3 : ')'  

TERM  using_list@0_opt_2 : ENDL  ';'  

TERM  try_stmt@0_rep_4 : 'end'  

TERM  cond_expr : '='  '%='  '+='  ']'  ')'  ':='  '*='  ';'  '/='  ENDL  '}'  '-='  '^='  'do'  ','  

TERM  var_list : ENDL  ','  ';'  

##############
show_mark_info
##############
%start% =  %MARK% begin
%start% =  begin %MARK%
begin =  %MARK% stmts
begin =  stmts %MARK%
ignore =  %MARK% ignore@0_rep_1
ignore =  ignore@0_rep_1 %MARK%
ignore@0_rep_1 =  %MARK%
ignore@0_rep_1 =  %MARK% ENDL ignore@0_rep_1
ignore@0_rep_1 =  ENDL %MARK% ignore@0_rep_1
ignore@0_rep_1 =  ENDL ignore@0_rep_1 %MARK%
endline =  %MARK% ';'
endline =  ';' %MARK%
endline =  %MARK% ENDL
endline =  ENDL %MARK%
stmts =  %MARK% stmts@0_rep_1
stmts =  stmts@0_rep_1 %MARK%
stmts@0_rep_1 =  %MARK%
stmts@0_rep_1 =  %MARK% statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1
stmts@0_rep_1 =  statement %MARK% stmts@0_rep_1@0_rep_2 stmts@0_rep_1
stmts@0_rep_1 =  statement stmts@0_rep_1@0_rep_2 %MARK% stmts@0_rep_1
stmts@0_rep_1 =  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1 %MARK%
stmts@0_rep_1@0_rep_2 =  %MARK%
stmts@0_rep_1@0_rep_2 =  %MARK% ENDL stmts@0_rep_1@0_rep_2
stmts@0_rep_1@0_rep_2 =  ENDL %MARK% stmts@0_rep_1@0_rep_2
stmts@0_rep_1@0_rep_2 =  ENDL stmts@0_rep_1@0_rep_2 %MARK%
decl_stmts =  %MARK% decl_stmts@0_rep_1
decl_stmts =  decl_stmts@0_rep_1 %MARK%
decl_stmts@0_rep_1 =  %MARK%
decl_stmts@0_rep_1 =  %MARK% declaration decl_stmts@0_rep_1@0_rep_2 decl_stmts@0_rep_1
decl_stmts@0_rep_1 =  declaration %MARK% decl_stmts@0_rep_1@0_rep_2 decl_stmts@0_rep_1
decl_stmts@0_rep_1 =  declaration decl_stmts@0_rep_1@0_rep_2 %MARK% decl_stmts@0_rep_1
decl_stmts@0_rep_1 =  declaration decl_stmts@0_rep_1@0_rep_2 decl_stmts@0_rep_1 %MARK%
decl_stmts@0_rep_1@0_rep_2 =  %MARK%
decl_stmts@0_rep_1@0_rep_2 =  %MARK% ENDL decl_stmts@0_rep_1@0_rep_2
decl_stmts@0_rep_1@0_rep_2 =  ENDL %MARK% decl_stmts@0_rep_1@0_rep_2
decl_stmts@0_rep_1@0_rep_2 =  ENDL decl_stmts@0_rep_1@0_rep_2 %MARK%
endblock =  %MARK% catch_stmt
endblock =  catch_stmt %MARK%
endblock =  %MARK% until_stmt
endblock =  until_stmt %MARK%
endblock =  %MARK% else_stmt
endblock =  else_stmt %MARK%
endblock =  %MARK% end_stmt
endblock =  end_stmt %MARK%
statement =  %MARK% expr_stmt
statement =  expr_stmt %MARK%
statement =  %MARK% class_stmt
statement =  class_stmt %MARK%
statement =  %MARK% throw_stmt
statement =  throw_stmt %MARK%
statement =  %MARK% try_stmt
statement =  try_stmt %MARK%
statement =  %MARK% return_stmt
statement =  return_stmt %MARK%
statement =  %MARK% function_stmt
statement =  function_stmt %MARK%
statement =  %MARK% control_stmt
statement =  control_stmt %MARK%
statement =  %MARK% foreach_stmt
statement =  foreach_stmt %MARK%
statement =  %MARK% for_stmt
statement =  for_stmt %MARK%
statement =  %MARK% loop_stmt
statement =  loop_stmt %MARK%
statement =  %MARK% while_stmt
statement =  while_stmt %MARK%
statement =  %MARK% switch_stmt
statement =  switch_stmt %MARK%
statement =  %MARK% if_stmt
statement =  if_stmt %MARK%
statement =  %MARK% using_stmt
statement =  using_stmt %MARK%
statement =  %MARK% namespace_stmt
statement =  namespace_stmt %MARK%
statement =  %MARK% block_stmt
statement =  block_stmt %MARK%
statement =  %MARK% var_stmt
statement =  var_stmt %MARK%
statement =  %MARK% import_stmt
statement =  import_stmt %MARK%
statement =  %MARK% package_stmt
statement =  package_stmt %MARK%
statement =  %MARK% prep_stmt
statement =  prep_stmt %MARK%
declaration =  %MARK% class_stmt
declaration =  class_stmt %MARK%
declaration =  %MARK% function_stmt
declaration =  function_stmt %MARK%
declaration =  %MARK% using_stmt
declaration =  using_stmt %MARK%
declaration =  %MARK% var_stmt
declaration =  var_stmt %MARK%
declaration =  %MARK% namespace_stmt
declaration =  namespace_stmt %MARK%
declaration =  %MARK% prep_stmt
declaration =  prep_stmt %MARK%
prep_stmt =  %MARK% PREP ENDL
prep_stmt =  PREP %MARK% ENDL
prep_stmt =  PREP ENDL %MARK%
package_stmt =  %MARK% 'package' ID endline
package_stmt =  'package' %MARK% ID endline
package_stmt =  'package' ID %MARK% endline
package_stmt =  'package' ID endline %MARK%
import_stmt =  %MARK% 'import' import_list endline
import_stmt =  'import' %MARK% import_list endline
import_stmt =  'import' import_list %MARK% endline
import_stmt =  'import' import_list endline %MARK%
module_list =  %MARK% ID module_list@0_opt_2
module_list =  ID %MARK% module_list@0_opt_2
module_list =  ID module_list@0_opt_2 %MARK%
module_list@0_opt_2 =  %MARK%
module_list@0_opt_2 =  %MARK% '.' module_list@0_opt_2@0_decl_2
module_list@0_opt_2 =  '.' %MARK% module_list@0_opt_2@0_decl_2
module_list@0_opt_2 =  '.' module_list@0_opt_2@0_decl_2 %MARK%
module_list@0_opt_2@0_decl_2 =  %MARK% module_list
module_list@0_opt_2@0_decl_2 =  module_list %MARK%
module_list@0_opt_2@0_decl_2 =  %MARK% '*'
module_list@0_opt_2@0_decl_2 =  '*' %MARK%
import_list =  %MARK% module_list import_list@0_opt_2 import_list@0_opt_3
import_list =  module_list %MARK% import_list@0_opt_2 import_list@0_opt_3
import_list =  module_list import_list@0_opt_2 %MARK% import_list@0_opt_3
import_list =  module_list import_list@0_opt_2 import_list@0_opt_3 %MARK%
import_list@0_opt_3 =  %MARK%
import_list@0_opt_3 =  %MARK% ',' import_list
import_list@0_opt_3 =  ',' %MARK% import_list
import_list@0_opt_3 =  ',' import_list %MARK%
import_list@0_opt_2 =  %MARK%
import_list@0_opt_2 =  %MARK% 'as' ID
import_list@0_opt_2 =  'as' %MARK% ID
import_list@0_opt_2 =  'as' ID %MARK%
var_def =  %MARK% var_list
var_def =  var_list %MARK%
var_def =  %MARK% var_bind '=' basic_expr
var_def =  var_bind %MARK% '=' basic_expr
var_def =  var_bind '=' %MARK% basic_expr
var_def =  var_bind '=' basic_expr %MARK%
var_stmt =  %MARK% var_stmt@0_decl_1 var_def endline
var_stmt =  var_stmt@0_decl_1 %MARK% var_def endline
var_stmt =  var_stmt@0_decl_1 var_def %MARK% endline
var_stmt =  var_stmt@0_decl_1 var_def endline %MARK%
var_stmt@0_decl_1 =  %MARK% 'constant'
var_stmt@0_decl_1 =  'constant' %MARK%
var_stmt@0_decl_1 =  %MARK% 'link'
var_stmt@0_decl_1 =  'link' %MARK%
var_stmt@0_decl_1 =  %MARK% 'var'
var_stmt@0_decl_1 =  'var' %MARK%
var_bind =  %MARK% '(' var_bind_list var_bind@0_rep_3 ')'
var_bind =  '(' %MARK% var_bind_list var_bind@0_rep_3 ')'
var_bind =  '(' var_bind_list %MARK% var_bind@0_rep_3 ')'
var_bind =  '(' var_bind_list var_bind@0_rep_3 %MARK% ')'
var_bind =  '(' var_bind_list var_bind@0_rep_3 ')' %MARK%
var_bind@0_rep_3 =  %MARK%
var_bind@0_rep_3 =  %MARK% ',' var_bind_list var_bind@0_rep_3
var_bind@0_rep_3 =  ',' %MARK% var_bind_list var_bind@0_rep_3
var_bind@0_rep_3 =  ',' var_bind_list %MARK% var_bind@0_rep_3
var_bind@0_rep_3 =  ',' var_bind_list var_bind@0_rep_3 %MARK%
var_bind_list =  %MARK% var_bind
var_bind_list =  var_bind %MARK%
var_bind_list =  %MARK% '...'
var_bind_list =  '...' %MARK%
var_bind_list =  %MARK% ID
var_bind_list =  ID %MARK%
var_list =  %MARK% ID '=' single_expr var_list@0_opt_4
var_list =  ID %MARK% '=' single_expr var_list@0_opt_4
var_list =  ID '=' %MARK% single_expr var_list@0_opt_4
var_list =  ID '=' single_expr %MARK% var_list@0_opt_4
var_list =  ID '=' single_expr var_list@0_opt_4 %MARK%
var_list@0_opt_4 =  %MARK%
var_list@0_opt_4 =  %MARK% ',' var_list
var_list@0_opt_4 =  ',' %MARK% var_list
var_list@0_opt_4 =  ',' var_list %MARK%
block_stmt =  %MARK% 'block' ENDL stmts 'end' ENDL
block_stmt =  'block' %MARK% ENDL stmts 'end' ENDL
block_stmt =  'block' ENDL %MARK% stmts 'end' ENDL
block_stmt =  'block' ENDL stmts %MARK% 'end' ENDL
block_stmt =  'block' ENDL stmts 'end' %MARK% ENDL
block_stmt =  'block' ENDL stmts 'end' ENDL %MARK%
namespace_stmt =  %MARK% 'namespace' ID ENDL decl_stmts 'end' ENDL
namespace_stmt =  'namespace' %MARK% ID ENDL decl_stmts 'end' ENDL
namespace_stmt =  'namespace' ID %MARK% ENDL decl_stmts 'end' ENDL
namespace_stmt =  'namespace' ID ENDL %MARK% decl_stmts 'end' ENDL
namespace_stmt =  'namespace' ID ENDL decl_stmts %MARK% 'end' ENDL
namespace_stmt =  'namespace' ID ENDL decl_stmts 'end' %MARK% ENDL
namespace_stmt =  'namespace' ID ENDL decl_stmts 'end' ENDL %MARK%
using_stmt =  %MARK% 'using' using_list endline
using_stmt =  'using' %MARK% using_list endline
using_stmt =  'using' using_list %MARK% endline
using_stmt =  'using' using_list endline %MARK%
using_list =  %MARK% module_list using_list@0_opt_2
using_list =  module_list %MARK% using_list@0_opt_2
using_list =  module_list using_list@0_opt_2 %MARK%
using_list@0_opt_2 =  %MARK%
using_list@0_opt_2 =  %MARK% ',' using_list
using_list@0_opt_2 =  ',' %MARK% using_list
using_list@0_opt_2 =  ',' using_list %MARK%
if_stmt =  %MARK% 'if' basic_expr ENDL stmts if_stmt@0_rep_5
if_stmt =  'if' %MARK% basic_expr ENDL stmts if_stmt@0_rep_5
if_stmt =  'if' basic_expr %MARK% ENDL stmts if_stmt@0_rep_5
if_stmt =  'if' basic_expr ENDL %MARK% stmts if_stmt@0_rep_5
if_stmt =  'if' basic_expr ENDL stmts %MARK% if_stmt@0_rep_5
if_stmt =  'if' basic_expr ENDL stmts if_stmt@0_rep_5 %MARK%
if_stmt@0_rep_5 =  %MARK%
if_stmt@0_rep_5 =  %MARK% else_stmt stmts 'end' ENDL if_stmt@0_rep_5
if_stmt@0_rep_5 =  else_stmt %MARK% stmts 'end' ENDL if_stmt@0_rep_5
if_stmt@0_rep_5 =  else_stmt stmts %MARK% 'end' ENDL if_stmt@0_rep_5
if_stmt@0_rep_5 =  else_stmt stmts 'end' %MARK% ENDL if_stmt@0_rep_5
if_stmt@0_rep_5 =  else_stmt stmts 'end' ENDL %MARK% if_stmt@0_rep_5
if_stmt@0_rep_5 =  else_stmt stmts 'end' ENDL if_stmt@0_rep_5 %MARK%
else_stmt =  %MARK% 'else' else_stmt@0_opt_2 ENDL
else_stmt =  'else' %MARK% else_stmt@0_opt_2 ENDL
else_stmt =  'else' else_stmt@0_opt_2 %MARK% ENDL
else_stmt =  'else' else_stmt@0_opt_2 ENDL %MARK%
else_stmt@0_opt_2 =  %MARK%
else_stmt@0_opt_2 =  %MARK% 'if' basic_expr
else_stmt@0_opt_2 =  'if' %MARK% basic_expr
else_stmt@0_opt_2 =  'if' basic_expr %MARK%
switch_stmt =  %MARK% 'switch' basic_expr ENDL switch_stmts 'end' ENDL
switch_stmt =  'switch' %MARK% basic_expr ENDL switch_stmts 'end' ENDL
switch_stmt =  'switch' basic_expr %MARK% ENDL switch_stmts 'end' ENDL
switch_stmt =  'switch' basic_expr ENDL %MARK% switch_stmts 'end' ENDL
switch_stmt =  'switch' basic_expr ENDL switch_stmts %MARK% 'end' ENDL
switch_stmt =  'switch' basic_expr ENDL switch_stmts 'end' %MARK% ENDL
switch_stmt =  'switch' basic_expr ENDL switch_stmts 'end' ENDL %MARK%
switch_stmts =  %MARK% switch_stmts@0_rep_1 switch_stmts@0_rep_2
switch_stmts =  switch_stmts@0_rep_1 %MARK% switch_stmts@0_rep_2
switch_stmts =  switch_stmts@0_rep_1 switch_stmts@0_rep_2 %MARK%
switch_stmts@0_rep_2 =  %MARK%
switch_stmts@0_rep_2 =  %MARK% ENDL switch_stmts@0_rep_2
switch_stmts@0_rep_2 =  ENDL %MARK% switch_stmts@0_rep_2
switch_stmts@0_rep_2 =  ENDL switch_stmts@0_rep_2 %MARK%
switch_stmts@0_rep_1 =  %MARK%
switch_stmts@0_rep_1 =  %MARK% switch_default switch_stmts@0_rep_1
switch_stmts@0_rep_1 =  switch_default %MARK% switch_stmts@0_rep_1
switch_stmts@0_rep_1 =  switch_default switch_stmts@0_rep_1 %MARK%
switch_stmts@0_rep_1 =  %MARK% switch_case switch_stmts@0_rep_1
switch_stmts@0_rep_1 =  switch_case %MARK% switch_stmts@0_rep_1
switch_stmts@0_rep_1 =  switch_case switch_stmts@0_rep_1 %MARK%
switch_case =  %MARK% 'case' logic_or_expr ENDL stmts 'end' ENDL
switch_case =  'case' %MARK% logic_or_expr ENDL stmts 'end' ENDL
switch_case =  'case' logic_or_expr %MARK% ENDL stmts 'end' ENDL
switch_case =  'case' logic_or_expr ENDL %MARK% stmts 'end' ENDL
switch_case =  'case' logic_or_expr ENDL stmts %MARK% 'end' ENDL
switch_case =  'case' logic_or_expr ENDL stmts 'end' %MARK% ENDL
switch_case =  'case' logic_or_expr ENDL stmts 'end' ENDL %MARK%
switch_default =  %MARK% 'default' ENDL stmts 'end' ENDL
switch_default =  'default' %MARK% ENDL stmts 'end' ENDL
switch_default =  'default' ENDL %MARK% stmts 'end' ENDL
switch_default =  'default' ENDL stmts %MARK% 'end' ENDL
switch_default =  'default' ENDL stmts 'end' %MARK% ENDL
switch_default =  'default' ENDL stmts 'end' ENDL %MARK%
while_stmt =  %MARK% 'while' basic_expr ENDL stmts 'end' ENDL
while_stmt =  'while' %MARK% basic_expr ENDL stmts 'end' ENDL
while_stmt =  'while' basic_expr %MARK% ENDL stmts 'end' ENDL
while_stmt =  'while' basic_expr ENDL %MARK% stmts 'end' ENDL
while_stmt =  'while' basic_expr ENDL stmts %MARK% 'end' ENDL
while_stmt =  'while' basic_expr ENDL stmts 'end' %MARK% ENDL
while_stmt =  'while' basic_expr ENDL stmts 'end' ENDL %MARK%
loop_stmt =  %MARK% 'loop' ENDL stmts loop_stmt@0_decl_4
loop_stmt =  'loop' %MARK% ENDL stmts loop_stmt@0_decl_4
loop_stmt =  'loop' ENDL %MARK% stmts loop_stmt@0_decl_4
loop_stmt =  'loop' ENDL stmts %MARK% loop_stmt@0_decl_4
loop_stmt =  'loop' ENDL stmts loop_stmt@0_decl_4 %MARK%
loop_stmt@0_decl_4 =  %MARK% ENDL
loop_stmt@0_decl_4 =  ENDL %MARK%
loop_stmt@0_decl_4 =  %MARK% 'end'
loop_stmt@0_decl_4 =  'end' %MARK%
loop_stmt@0_decl_4 =  %MARK% until_stmt
loop_stmt@0_decl_4 =  until_stmt %MARK%
until_stmt =  %MARK% 'until' basic_expr ENDL
until_stmt =  'until' %MARK% basic_expr ENDL
until_stmt =  'until' basic_expr %MARK% ENDL
until_stmt =  'until' basic_expr ENDL %MARK%
for_stmt =  %MARK% 'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body
for_stmt =  'for' %MARK% for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body
for_stmt =  'for' for_stmt@0_opt_2 %MARK% for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body
for_stmt =  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 %MARK% for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body
for_stmt =  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 %MARK% for_stmt@0_decl_5 for_stmt@0_opt_6 for_body
for_stmt =  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 %MARK% for_stmt@0_opt_6 for_body
for_stmt =  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 %MARK% for_body
for_stmt =  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body %MARK%
for_stmt@0_opt_6 =  %MARK%
for_stmt@0_opt_6 =  %MARK% basic_expr
for_stmt@0_opt_6 =  basic_expr %MARK%
for_stmt@0_decl_5 =  %MARK% ','
for_stmt@0_decl_5 =  ',' %MARK%
for_stmt@0_decl_5 =  %MARK% ';'
for_stmt@0_decl_5 =  ';' %MARK%
for_stmt@0_opt_4 =  %MARK%
for_stmt@0_opt_4 =  %MARK% basic_expr
for_stmt@0_opt_4 =  basic_expr %MARK%
for_stmt@0_decl_3 =  %MARK% ','
for_stmt@0_decl_3 =  ',' %MARK%
for_stmt@0_decl_3 =  %MARK% ';'
for_stmt@0_decl_3 =  ';' %MARK%
for_stmt@0_opt_2 =  %MARK%
for_stmt@0_opt_2 =  %MARK% var_def
for_stmt@0_opt_2 =  var_def %MARK%
foreach_stmt =  %MARK% 'foreach' ID 'in' basic_expr for_body
foreach_stmt =  'foreach' %MARK% ID 'in' basic_expr for_body
foreach_stmt =  'foreach' ID %MARK% 'in' basic_expr for_body
foreach_stmt =  'foreach' ID 'in' %MARK% basic_expr for_body
foreach_stmt =  'foreach' ID 'in' basic_expr %MARK% for_body
foreach_stmt =  'foreach' ID 'in' basic_expr for_body %MARK%
for_body =  %MARK% for_body@0_decl_1
for_body =  for_body@0_decl_1 %MARK%
for_body@0_decl_1 =  %MARK% ENDL stmts 'end' ENDL
for_body@0_decl_1 =  ENDL %MARK% stmts 'end' ENDL
for_body@0_decl_1 =  ENDL stmts %MARK% 'end' ENDL
for_body@0_decl_1 =  ENDL stmts 'end' %MARK% ENDL
for_body@0_decl_1 =  ENDL stmts 'end' ENDL %MARK%
for_body@0_decl_1 =  %MARK% 'do' basic_expr endline
for_body@0_decl_1 =  'do' %MARK% basic_expr endline
for_body@0_decl_1 =  'do' basic_expr %MARK% endline
for_body@0_decl_1 =  'do' basic_expr endline %MARK%
function_stmt =  %MARK% 'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body
function_stmt =  'function' %MARK% ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body
function_stmt =  'function' ID %MARK% '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body
function_stmt =  'function' ID '(' %MARK% function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body
function_stmt =  'function' ID '(' function_stmt@0_opt_4 %MARK% ')' function_stmt@0_opt_6 function_body
function_stmt =  'function' ID '(' function_stmt@0_opt_4 ')' %MARK% function_stmt@0_opt_6 function_body
function_stmt =  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 %MARK% function_body
function_stmt =  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body %MARK%
function_stmt@0_opt_6 =  %MARK%
function_stmt@0_opt_6 =  %MARK% 'override'
function_stmt@0_opt_6 =  'override' %MARK%
function_stmt@0_opt_4 =  %MARK%
function_stmt@0_opt_4 =  %MARK% argument_list
function_stmt@0_opt_4 =  argument_list %MARK%
function_body =  %MARK% function_body@0_decl_1
function_body =  function_body@0_decl_1 %MARK%
function_body@0_decl_1 =  %MARK% ENDL stmts 'end' ENDL
function_body@0_decl_1 =  ENDL %MARK% stmts 'end' ENDL
function_body@0_decl_1 =  ENDL stmts %MARK% 'end' ENDL
function_body@0_decl_1 =  ENDL stmts 'end' %MARK% ENDL
function_body@0_decl_1 =  ENDL stmts 'end' ENDL %MARK%
function_body@0_decl_1 =  %MARK% '{' stmts '}'
function_body@0_decl_1 =  '{' %MARK% stmts '}'
function_body@0_decl_1 =  '{' stmts %MARK% '}'
function_body@0_decl_1 =  '{' stmts '}' %MARK%
return_stmt =  %MARK% 'return' return_stmt@0_opt_2 endline
return_stmt =  'return' %MARK% return_stmt@0_opt_2 endline
return_stmt =  'return' return_stmt@0_opt_2 %MARK% endline
return_stmt =  'return' return_stmt@0_opt_2 endline %MARK%
return_stmt@0_opt_2 =  %MARK%
return_stmt@0_opt_2 =  %MARK% expr
return_stmt@0_opt_2 =  expr %MARK%
try_stmt =  %MARK% 'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL
try_stmt =  'try' %MARK% ENDL stmts try_stmt@0_rep_4 'end' ENDL
try_stmt =  'try' ENDL %MARK% stmts try_stmt@0_rep_4 'end' ENDL
try_stmt =  'try' ENDL stmts %MARK% try_stmt@0_rep_4 'end' ENDL
try_stmt =  'try' ENDL stmts try_stmt@0_rep_4 %MARK% 'end' ENDL
try_stmt =  'try' ENDL stmts try_stmt@0_rep_4 'end' %MARK% ENDL
try_stmt =  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL %MARK%
try_stmt@0_rep_4 =  %MARK%
try_stmt@0_rep_4 =  %MARK% catch_stmt stmts try_stmt@0_rep_4
try_stmt@0_rep_4 =  catch_stmt %MARK% stmts try_stmt@0_rep_4
try_stmt@0_rep_4 =  catch_stmt stmts %MARK% try_stmt@0_rep_4
try_stmt@0_rep_4 =  catch_stmt stmts try_stmt@0_rep_4 %MARK%
catch_stmt =  %MARK% 'catch' ID catch_stmt@0_opt_3 ENDL
catch_stmt =  'catch' %MARK% ID catch_stmt@0_opt_3 ENDL
catch_stmt =  'catch' ID %MARK% catch_stmt@0_opt_3 ENDL
catch_stmt =  'catch' ID catch_stmt@0_opt_3 %MARK% ENDL
catch_stmt =  'catch' ID catch_stmt@0_opt_3 ENDL %MARK%
catch_stmt@0_opt_3 =  %MARK%
catch_stmt@0_opt_3 =  %MARK% ':' visit_expr
catch_stmt@0_opt_3 =  ':' %MARK% visit_expr
catch_stmt@0_opt_3 =  ':' visit_expr %MARK%
throw_stmt =  %MARK% 'throw' throw_stmt@0_opt_2 endline
throw_stmt =  'throw' %MARK% throw_stmt@0_opt_2 endline
throw_stmt =  'throw' throw_stmt@0_opt_2 %MARK% endline
throw_stmt =  'throw' throw_stmt@0_opt_2 endline %MARK%
throw_stmt@0_opt_2 =  %MARK%
throw_stmt@0_opt_2 =  %MARK% expr
throw_stmt@0_opt_2 =  expr %MARK%
class_stmt =  %MARK% class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL
class_stmt =  class_stmt@0_decl_1 %MARK% ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL
class_stmt =  class_stmt@0_decl_1 ID %MARK% class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL
class_stmt =  class_stmt@0_decl_1 ID class_stmt@0_opt_3 %MARK% ENDL decl_stmts 'end' ENDL
class_stmt =  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL %MARK% decl_stmts 'end' ENDL
class_stmt =  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts %MARK% 'end' ENDL
class_stmt =  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' %MARK% ENDL
class_stmt =  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL %MARK%
class_stmt@0_opt_3 =  %MARK%
class_stmt@0_opt_3 =  %MARK% 'extends' visit_expr
class_stmt@0_opt_3 =  'extends' %MARK% visit_expr
class_stmt@0_opt_3 =  'extends' visit_expr %MARK%
class_stmt@0_decl_1 =  %MARK% 'struct'
class_stmt@0_decl_1 =  'struct' %MARK%
class_stmt@0_decl_1 =  %MARK% 'class'
class_stmt@0_decl_1 =  'class' %MARK%
control_stmt =  %MARK% control_stmt@0_decl_1 endline
control_stmt =  control_stmt@0_decl_1 %MARK% endline
control_stmt =  control_stmt@0_decl_1 endline %MARK%
control_stmt@0_decl_1 =  %MARK% 'continue'
control_stmt@0_decl_1 =  'continue' %MARK%
control_stmt@0_decl_1 =  %MARK% 'break'
control_stmt@0_decl_1 =  'break' %MARK%
expr_stmt =  %MARK% expr endline
expr_stmt =  expr %MARK% endline
expr_stmt =  expr endline %MARK%
end_stmt =  %MARK% 'end' ENDL
end_stmt =  'end' %MARK% ENDL
end_stmt =  'end' ENDL %MARK%
expr =  %MARK% single_expr expr@0_opt_2
expr =  single_expr %MARK% expr@0_opt_2
expr =  single_expr expr@0_opt_2 %MARK%
expr@0_opt_2 =  %MARK%
expr@0_opt_2 =  %MARK% ',' expr
expr@0_opt_2 =  ',' %MARK% expr
expr@0_opt_2 =  ',' expr %MARK%
single_expr =  %MARK% basic_expr
single_expr =  basic_expr %MARK%
single_expr =  %MARK% lambda_expr
single_expr =  lambda_expr %MARK%
basic_expr =  %MARK% cond_expr basic_expr@1_opt_2
basic_expr =  cond_expr %MARK% basic_expr@1_opt_2
basic_expr =  cond_expr basic_expr@1_opt_2 %MARK%
basic_expr =  %MARK% var_bind '=' cond_expr
basic_expr =  var_bind %MARK% '=' cond_expr
basic_expr =  var_bind '=' %MARK% cond_expr
basic_expr =  var_bind '=' cond_expr %MARK%
basic_expr@1_opt_2 =  %MARK%
basic_expr@1_opt_2 =  %MARK% asi_op single_expr
basic_expr@1_opt_2 =  asi_op %MARK% single_expr
basic_expr@1_opt_2 =  asi_op single_expr %MARK%
asi_op =  %MARK% '^='
asi_op =  '^=' %MARK%
asi_op =  %MARK% '%='
asi_op =  '%=' %MARK%
asi_op =  %MARK% '/='
asi_op =  '/=' %MARK%
asi_op =  %MARK% '*='
asi_op =  '*=' %MARK%
asi_op =  %MARK% '-='
asi_op =  '-=' %MARK%
asi_op =  %MARK% '+='
asi_op =  '+=' %MARK%
asi_op =  %MARK% ':='
asi_op =  ':=' %MARK%
asi_op =  %MARK% '='
asi_op =  '=' %MARK%
lambda_expr =  %MARK% '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body
lambda_expr =  '[' %MARK% lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body
lambda_expr =  '[' lambda_expr@0_opt_2 %MARK% ']' '(' lambda_expr@0_opt_5 ')' lambda_body
lambda_expr =  '[' lambda_expr@0_opt_2 ']' %MARK% '(' lambda_expr@0_opt_5 ')' lambda_body
lambda_expr =  '[' lambda_expr@0_opt_2 ']' '(' %MARK% lambda_expr@0_opt_5 ')' lambda_body
lambda_expr =  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 %MARK% ')' lambda_body
lambda_expr =  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' %MARK% lambda_body
lambda_expr =  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body %MARK%
lambda_expr@0_opt_5 =  %MARK%
lambda_expr@0_opt_5 =  %MARK% argument_list
lambda_expr@0_opt_5 =  argument_list %MARK%
lambda_expr@0_opt_2 =  %MARK%
lambda_expr@0_opt_2 =  %MARK% capture_list
lambda_expr@0_opt_2 =  capture_list %MARK%
capture_list =  %MARK% capture_list@0_opt_1 ID capture_list@0_rep_3
capture_list =  capture_list@0_opt_1 %MARK% ID capture_list@0_rep_3
capture_list =  capture_list@0_opt_1 ID %MARK% capture_list@0_rep_3
capture_list =  capture_list@0_opt_1 ID capture_list@0_rep_3 %MARK%
capture_list@0_rep_3 =  %MARK%
capture_list@0_rep_3 =  %MARK% ',' capture_list capture_list@0_rep_3
capture_list@0_rep_3 =  ',' %MARK% capture_list capture_list@0_rep_3
capture_list@0_rep_3 =  ',' capture_list %MARK% capture_list@0_rep_3
capture_list@0_rep_3 =  ',' capture_list capture_list@0_rep_3 %MARK%
capture_list@0_opt_1 =  %MARK%
capture_list@0_opt_1 =  %MARK% '='
capture_list@0_opt_1 =  '=' %MARK%
argument_list =  %MARK% argument_list@1_opt_1 ID argument_list@1_opt_3 visit_expr argument_list@1_rep_5
argument_list =  argument_list@1_opt_1 %MARK% ID argument_list@1_opt_3 visit_expr argument_list@1_rep_5
argument_list =  argument_list@1_opt_1 ID %MARK% argument_list@1_opt_3 visit_expr argument_list@1_rep_5
argument_list =  argument_list@1_opt_1 ID argument_list@1_opt_3 %MARK% visit_expr argument_list@1_rep_5
argument_list =  argument_list@1_opt_1 ID argument_list@1_opt_3 visit_expr %MARK% argument_list@1_rep_5
argument_list =  argument_list@1_opt_1 ID argument_list@1_opt_3 visit_expr argument_list@1_rep_5 %MARK%
argument_list =  %MARK% '...' ID
argument_list =  '...' %MARK% ID
argument_list =  '...' ID %MARK%
argument_list@1_rep_5 =  %MARK%
argument_list@1_rep_5 =  %MARK% ',' argument_list argument_list@1_rep_5
argument_list@1_rep_5 =  ',' %MARK% argument_list argument_list@1_rep_5
argument_list@1_rep_5 =  ',' argument_list %MARK% argument_list@1_rep_5
argument_list@1_rep_5 =  ',' argument_list argument_list@1_rep_5 %MARK%
argument_list@1_opt_3 =  %MARK%
argument_list@1_opt_3 =  %MARK% ':'
argument_list@1_opt_3 =  ':' %MARK%
argument_list@1_opt_1 =  %MARK%
argument_list@1_opt_1 =  %MARK% '='
argument_list@1_opt_1 =  '=' %MARK%
lambda_body =  %MARK% '->' cond_expr
lambda_body =  '->' %MARK% cond_expr
lambda_body =  '->' cond_expr %MARK%
lambda_body =  %MARK% '{' lambda_body@0_rep_2 '}'
lambda_body =  '{' %MARK% lambda_body@0_rep_2 '}'
lambda_body =  '{' lambda_body@0_rep_2 %MARK% '}'
lambda_body =  '{' lambda_body@0_rep_2 '}' %MARK%
lambda_body@0_rep_2 =  %MARK%
lambda_body@0_rep_2 =  %MARK% statement lambda_body@0_rep_2@0_rep_2 lambda_body@0_rep_2
lambda_body@0_rep_2 =  statement %MARK% lambda_body@0_rep_2@0_rep_2 lambda_body@0_rep_2
lambda_body@0_rep_2 =  statement lambda_body@0_rep_2@0_rep_2 %MARK% lambda_body@0_rep_2
lambda_body@0_rep_2 =  statement lambda_body@0_rep_2@0_rep_2 lambda_body@0_rep_2 %MARK%
lambda_body@0_rep_2@0_rep_2 =  %MARK%
lambda_body@0_rep_2@0_rep_2 =  %MARK% ENDL lambda_body@0_rep_2@0_rep_2
lambda_body@0_rep_2@0_rep_2 =  ENDL %MARK% lambda_body@0_rep_2@0_rep_2
lambda_body@0_rep_2@0_rep_2 =  ENDL lambda_body@0_rep_2@0_rep_2 %MARK%
cond_expr =  %MARK% logic_or_expr cond_expr@0_opt_2
cond_expr =  logic_or_expr %MARK% cond_expr@0_opt_2
cond_expr =  logic_or_expr cond_expr@0_opt_2 %MARK%
cond_expr@0_opt_2 =  %MARK%
cond_expr@0_opt_2 =  %MARK% cond_postfix
cond_expr@0_opt_2 =  cond_postfix %MARK%
cond_postfix =  %MARK% ':' logic_or_expr
cond_postfix =  ':' %MARK% logic_or_expr
cond_postfix =  ':' logic_or_expr %MARK%
cond_postfix =  %MARK% '?' logic_or_expr ':' cond_expr
cond_postfix =  '?' %MARK% logic_or_expr ':' cond_expr
cond_postfix =  '?' logic_or_expr %MARK% ':' cond_expr
cond_postfix =  '?' logic_or_expr ':' %MARK% cond_expr
cond_postfix =  '?' logic_or_expr ':' cond_expr %MARK%
logic_or_expr =  %MARK% logic_and_expr logic_or_expr@0_opt_2
logic_or_expr =  logic_and_expr %MARK% logic_or_expr@0_opt_2
logic_or_expr =  logic_and_expr logic_or_expr@0_opt_2 %MARK%
logic_or_expr@0_opt_2 =  %MARK%
logic_or_expr@0_opt_2 =  %MARK% logic_or_expr@0_opt_2@0_decl_1 logic_or_expr
logic_or_expr@0_opt_2 =  logic_or_expr@0_opt_2@0_decl_1 %MARK% logic_or_expr
logic_or_expr@0_opt_2 =  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr %MARK%
logic_or_expr@0_opt_2@0_decl_1 =  %MARK% 'or'
logic_or_expr@0_opt_2@0_decl_1 =  'or' %MARK%
logic_or_expr@0_opt_2@0_decl_1 =  %MARK% '||'
logic_or_expr@0_opt_2@0_decl_1 =  '||' %MARK%
logic_and_expr =  %MARK% equal_expr logic_and_expr@0_opt_2
logic_and_expr =  equal_expr %MARK% logic_and_expr@0_opt_2
logic_and_expr =  equal_expr logic_and_expr@0_opt_2 %MARK%
logic_and_expr@0_opt_2 =  %MARK%
logic_and_expr@0_opt_2 =  %MARK% logic_and_expr@0_opt_2@0_decl_1 logic_and_expr
logic_and_expr@0_opt_2 =  logic_and_expr@0_opt_2@0_decl_1 %MARK% logic_and_expr
logic_and_expr@0_opt_2 =  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr %MARK%
logic_and_expr@0_opt_2@0_decl_1 =  %MARK% 'and'
logic_and_expr@0_opt_2@0_decl_1 =  'and' %MARK%
logic_and_expr@0_opt_2@0_decl_1 =  %MARK% '&&'
logic_and_expr@0_opt_2@0_decl_1 =  '&&' %MARK%
equal_expr =  %MARK% relat_expr equal_expr@0_opt_2
equal_expr =  relat_expr %MARK% equal_expr@0_opt_2
equal_expr =  relat_expr equal_expr@0_opt_2 %MARK%
equal_expr@0_opt_2 =  %MARK%
equal_expr@0_opt_2 =  %MARK% equal_expr@0_opt_2@0_decl_1 equal_expr
equal_expr@0_opt_2 =  equal_expr@0_opt_2@0_decl_1 %MARK% equal_expr
equal_expr@0_opt_2 =  equal_expr@0_opt_2@0_decl_1 equal_expr %MARK%
equal_expr@0_opt_2@0_decl_1 =  %MARK% '!='
equal_expr@0_opt_2@0_decl_1 =  '!=' %MARK%
equal_expr@0_opt_2@0_decl_1 =  %MARK% '=='
equal_expr@0_opt_2@0_decl_1 =  '==' %MARK%
relat_expr =  %MARK% add_expr relat_expr@0_opt_2
relat_expr =  add_expr %MARK% relat_expr@0_opt_2
relat_expr =  add_expr relat_expr@0_opt_2 %MARK%
relat_expr@0_opt_2 =  %MARK%
relat_expr@0_opt_2 =  %MARK% relat_expr@0_opt_2@0_decl_1 relat_expr
relat_expr@0_opt_2 =  relat_expr@0_opt_2@0_decl_1 %MARK% relat_expr
relat_expr@0_opt_2 =  relat_expr@0_opt_2@0_decl_1 relat_expr %MARK%
relat_expr@0_opt_2@0_decl_1 =  %MARK% '<='
relat_expr@0_opt_2@0_decl_1 =  '<=' %MARK%
relat_expr@0_opt_2@0_decl_1 =  %MARK% '>='
relat_expr@0_opt_2@0_decl_1 =  '>=' %MARK%
relat_expr@0_opt_2@0_decl_1 =  %MARK% '<'
relat_expr@0_opt_2@0_decl_1 =  '<' %MARK%
relat_expr@0_opt_2@0_decl_1 =  %MARK% '>'
relat_expr@0_opt_2@0_decl_1 =  '>' %MARK%
add_expr =  %MARK% mul_expr add_expr@0_opt_2
add_expr =  mul_expr %MARK% add_expr@0_opt_2
add_expr =  mul_expr add_expr@0_opt_2 %MARK%
add_expr@0_opt_2 =  %MARK%
add_expr@0_opt_2 =  %MARK% add_expr@0_opt_2@0_decl_1 add_expr
add_expr@0_opt_2 =  add_expr@0_opt_2@0_decl_1 %MARK% add_expr
add_expr@0_opt_2 =  add_expr@0_opt_2@0_decl_1 add_expr %MARK%
add_expr@0_opt_2@0_decl_1 =  %MARK% '-'
add_expr@0_opt_2@0_decl_1 =  '-' %MARK%
add_expr@0_opt_2@0_decl_1 =  %MARK% '+'
add_expr@0_opt_2@0_decl_1 =  '+' %MARK%
mul_expr =  %MARK% unary_expr mul_expr@0_opt_2
mul_expr =  unary_expr %MARK% mul_expr@0_opt_2
mul_expr =  unary_expr mul_expr@0_opt_2 %MARK%
mul_expr@0_opt_2 =  %MARK%
mul_expr@0_opt_2 =  %MARK% mul_expr@0_opt_2@0_decl_1 mul_expr
mul_expr@0_opt_2 =  mul_expr@0_opt_2@0_decl_1 %MARK% mul_expr
mul_expr@0_opt_2 =  mul_expr@0_opt_2@0_decl_1 mul_expr %MARK%
mul_expr@0_opt_2@0_decl_1 =  %MARK% '^'
mul_expr@0_opt_2@0_decl_1 =  '^' %MARK%
mul_expr@0_opt_2@0_decl_1 =  %MARK% '%'
mul_expr@0_opt_2@0_decl_1 =  '%' %MARK%
mul_expr@0_opt_2@0_decl_1 =  %MARK% '/'
mul_expr@0_opt_2@0_decl_1 =  '/' %MARK%
mul_expr@0_opt_2@0_decl_1 =  %MARK% '*'
mul_expr@0_opt_2@0_decl_1 =  '*' %MARK%
unary_expr =  %MARK% prim_expr unary_expr@2_opt_2
unary_expr =  prim_expr %MARK% unary_expr@2_opt_2
unary_expr =  prim_expr unary_expr@2_opt_2 %MARK%
unary_expr =  %MARK% unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3
unary_expr =  unary_expr@1_decl_1 %MARK% unary_expr unary_expr@1_opt_3
unary_expr =  unary_expr@1_decl_1 unary_expr %MARK% unary_expr@1_opt_3
unary_expr =  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3 %MARK%
unary_expr =  %MARK% unary_op unary_expr
unary_expr =  unary_op %MARK% unary_expr
unary_expr =  unary_op unary_expr %MARK%
unary_expr@2_opt_2 =  %MARK%
unary_expr@2_opt_2 =  %MARK% postfix_expr
unary_expr@2_opt_2 =  postfix_expr %MARK%
unary_expr@1_opt_3 =  %MARK%
unary_expr@1_opt_3 =  %MARK% array
unary_expr@1_opt_3 =  array %MARK%
unary_expr@1_decl_1 =  %MARK% 'gcnew'
unary_expr@1_decl_1 =  'gcnew' %MARK%
unary_expr@1_decl_1 =  %MARK% 'new'
unary_expr@1_decl_1 =  'new' %MARK%
unary_op =  %MARK% '!'
unary_op =  '!' %MARK%
unary_op =  %MARK% '-'
unary_op =  '-' %MARK%
unary_op =  %MARK% '&'
unary_op =  '&' %MARK%
unary_op =  %MARK% '*'
unary_op =  '*' %MARK%
unary_op =  %MARK% '--'
unary_op =  '--' %MARK%
unary_op =  %MARK% '++'
unary_op =  '++' %MARK%
unary_op =  %MARK% 'typeid'
unary_op =  'typeid' %MARK%
postfix_expr =  %MARK% postfix_expr@0_decl_1 postfix_expr@0_opt_2
postfix_expr =  postfix_expr@0_decl_1 %MARK% postfix_expr@0_opt_2
postfix_expr =  postfix_expr@0_decl_1 postfix_expr@0_opt_2 %MARK%
postfix_expr@0_opt_2 =  %MARK%
postfix_expr@0_opt_2 =  %MARK% postfix_expr
postfix_expr@0_opt_2 =  postfix_expr %MARK%
postfix_expr@0_decl_1 =  %MARK% '...'
postfix_expr@0_decl_1 =  '...' %MARK%
postfix_expr@0_decl_1 =  %MARK% '--'
postfix_expr@0_decl_1 =  '--' %MARK%
postfix_expr@0_decl_1 =  %MARK% '++'
postfix_expr@0_decl_1 =  '++' %MARK%
prim_expr =  %MARK% constant
prim_expr =  constant %MARK%
prim_expr =  %MARK% visit_expr
prim_expr =  visit_expr %MARK%
visit_expr =  %MARK% object visit_expr@0_opt_2
visit_expr =  object %MARK% visit_expr@0_opt_2
visit_expr =  object visit_expr@0_opt_2 %MARK%
visit_expr@0_opt_2 =  %MARK%
visit_expr@0_opt_2 =  %MARK% visit_expr@0_opt_2@0_decl_1 visit_expr
visit_expr@0_opt_2 =  visit_expr@0_opt_2@0_decl_1 %MARK% visit_expr
visit_expr@0_opt_2 =  visit_expr@0_opt_2@0_decl_1 visit_expr %MARK%
visit_expr@0_opt_2@0_decl_1 =  %MARK% '.'
visit_expr@0_opt_2@0_decl_1 =  '.' %MARK%
visit_expr@0_opt_2@0_decl_1 =  %MARK% '->'
visit_expr@0_opt_2@0_decl_1 =  '->' %MARK%
object =  %MARK% CHAR
object =  CHAR %MARK%
object =  %MARK% element
object =  element %MARK%
object =  %MARK% 'global'
object =  'global' %MARK%
object =  %MARK% 'local'
object =  'local' %MARK%
object =  %MARK% STR object@1_opt_2
object =  STR %MARK% object@1_opt_2
object =  STR object@1_opt_2 %MARK%
object =  %MARK% array object@0_opt_2
object =  array %MARK% object@0_opt_2
object =  array object@0_opt_2 %MARK%
object@1_opt_2 =  %MARK%
object@1_opt_2 =  %MARK% index
object@1_opt_2 =  index %MARK%
object@0_opt_2 =  %MARK%
object@0_opt_2 =  %MARK% index
object@0_opt_2 =  index %MARK%
element =  %MARK% element@0_decl_1 element@0_rep_2
element =  element@0_decl_1 %MARK% element@0_rep_2
element =  element@0_decl_1 element@0_rep_2 %MARK%
element@0_rep_2 =  %MARK%
element@0_rep_2 =  %MARK% index element@0_rep_2
element@0_rep_2 =  index %MARK% element@0_rep_2
element@0_rep_2 =  index element@0_rep_2 %MARK%
element@0_rep_2 =  %MARK% fcall element@0_rep_2
element@0_rep_2 =  fcall %MARK% element@0_rep_2
element@0_rep_2 =  fcall element@0_rep_2 %MARK%
element@0_decl_1 =  %MARK% '(' single_expr ')'
element@0_decl_1 =  '(' %MARK% single_expr ')'
element@0_decl_1 =  '(' single_expr %MARK% ')'
element@0_decl_1 =  '(' single_expr ')' %MARK%
element@0_decl_1 =  %MARK% ID
element@0_decl_1 =  ID %MARK%
constant =  %MARK% 'false'
constant =  'false' %MARK%
constant =  %MARK% 'true'
constant =  'true' %MARK%
constant =  %MARK% 'null'
constant =  'null' %MARK%
constant =  %MARK% NUM
constant =  NUM %MARK%
array =  %MARK% '{' array@0_opt_2 '}'
array =  '{' %MARK% array@0_opt_2 '}'
array =  '{' array@0_opt_2 %MARK% '}'
array =  '{' array@0_opt_2 '}' %MARK%
array@0_opt_2 =  %MARK%
array@0_opt_2 =  %MARK% expr
array@0_opt_2 =  expr %MARK%
fcall =  %MARK% '(' fcall@0_opt_2 ')'
fcall =  '(' %MARK% fcall@0_opt_2 ')'
fcall =  '(' fcall@0_opt_2 %MARK% ')'
fcall =  '(' fcall@0_opt_2 ')' %MARK%
fcall@0_opt_2 =  %MARK%
fcall@0_opt_2 =  %MARK% expr
fcall@0_opt_2 =  expr %MARK%
index =  %MARK% '[' basic_expr ']'
index =  '[' %MARK% basic_expr ']'
index =  '[' basic_expr %MARK% ']'
index =  '[' basic_expr ']' %MARK%



########
DFA TERM
########
%start%  :  %MARK%  begin  
 index is: 0, source_index: 0, before: %NULL%, after: begin
%start%  :  begin  %MARK%  
 index is: 1, source_index: 0, before: begin, after: %NULL%
begin  :  %MARK%  stmts  
 index is: 2, source_index: 1, before: %NULL%, after: stmts
begin  :  stmts  %MARK%  
 index is: 3, source_index: 1, before: stmts, after: %NULL%
ignore  :  %MARK%  ignore@0_rep_1  
 index is: 4, source_index: 2, before: %NULL%, after: ignore@0_rep_1
ignore  :  ignore@0_rep_1  %MARK%  
 index is: 5, source_index: 2, before: ignore@0_rep_1, after: %NULL%
ignore@0_rep_1  :  %MARK%  
 index is: 6, source_index: 3, before: %NULL%, after: %NULL%
ignore@0_rep_1  :  %MARK%  ENDL  ignore@0_rep_1  
 index is: 7, source_index: 4, before: %NULL%, after: ENDL
ignore@0_rep_1  :  ENDL  %MARK%  ignore@0_rep_1  
 index is: 8, source_index: 4, before: ENDL, after: ignore@0_rep_1
ignore@0_rep_1  :  ENDL  ignore@0_rep_1  %MARK%  
 index is: 9, source_index: 4, before: ignore@0_rep_1, after: %NULL%
endline  :  %MARK%  ';'  
 index is: 10, source_index: 5, before: %NULL%, after: ';'
endline  :  ';'  %MARK%  
 index is: 11, source_index: 5, before: ';', after: %NULL%
endline  :  %MARK%  ENDL  
 index is: 12, source_index: 6, before: %NULL%, after: ENDL
endline  :  ENDL  %MARK%  
 index is: 13, source_index: 6, before: ENDL, after: %NULL%
stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, source_index: 7, before: %NULL%, after: stmts@0_rep_1
stmts  :  stmts@0_rep_1  %MARK%  
 index is: 15, source_index: 7, before: stmts@0_rep_1, after: %NULL%
stmts@0_rep_1  :  %MARK%  
 index is: 16, source_index: 8, before: %NULL%, after: %NULL%
stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, source_index: 9, before: %NULL%, after: statement
stmts@0_rep_1  :  statement  %MARK%  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 18, source_index: 9, before: statement, after: stmts@0_rep_1@0_rep_2
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  %MARK%  stmts@0_rep_1  
 index is: 19, source_index: 9, before: stmts@0_rep_1@0_rep_2, after: stmts@0_rep_1
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  %MARK%  
 index is: 20, source_index: 9, before: stmts@0_rep_1, after: %NULL%
stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 21, source_index: 10, before: %NULL%, after: %NULL%
stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  stmts@0_rep_1@0_rep_2  
 index is: 22, source_index: 11, before: %NULL%, after: ENDL
stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  stmts@0_rep_1@0_rep_2  
 index is: 23, source_index: 11, before: ENDL, after: stmts@0_rep_1@0_rep_2
stmts@0_rep_1@0_rep_2  :  ENDL  stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 24, source_index: 11, before: stmts@0_rep_1@0_rep_2, after: %NULL%
decl_stmts  :  %MARK%  decl_stmts@0_rep_1  
 index is: 25, source_index: 12, before: %NULL%, after: decl_stmts@0_rep_1
decl_stmts  :  decl_stmts@0_rep_1  %MARK%  
 index is: 26, source_index: 12, before: decl_stmts@0_rep_1, after: %NULL%
decl_stmts@0_rep_1  :  %MARK%  
 index is: 27, source_index: 13, before: %NULL%, after: %NULL%
decl_stmts@0_rep_1  :  %MARK%  declaration  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  
 index is: 28, source_index: 14, before: %NULL%, after: declaration
decl_stmts@0_rep_1  :  declaration  %MARK%  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  
 index is: 29, source_index: 14, before: declaration, after: decl_stmts@0_rep_1@0_rep_2
decl_stmts@0_rep_1  :  declaration  decl_stmts@0_rep_1@0_rep_2  %MARK%  decl_stmts@0_rep_1  
 index is: 30, source_index: 14, before: decl_stmts@0_rep_1@0_rep_2, after: decl_stmts@0_rep_1
decl_stmts@0_rep_1  :  declaration  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  %MARK%  
 index is: 31, source_index: 14, before: decl_stmts@0_rep_1, after: %NULL%
decl_stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 32, source_index: 15, before: %NULL%, after: %NULL%
decl_stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  decl_stmts@0_rep_1@0_rep_2  
 index is: 33, source_index: 16, before: %NULL%, after: ENDL
decl_stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  decl_stmts@0_rep_1@0_rep_2  
 index is: 34, source_index: 16, before: ENDL, after: decl_stmts@0_rep_1@0_rep_2
decl_stmts@0_rep_1@0_rep_2  :  ENDL  decl_stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 35, source_index: 16, before: decl_stmts@0_rep_1@0_rep_2, after: %NULL%
endblock  :  %MARK%  catch_stmt  
 index is: 36, source_index: 17, before: %NULL%, after: catch_stmt
endblock  :  catch_stmt  %MARK%  
 index is: 37, source_index: 17, before: catch_stmt, after: %NULL%
endblock  :  %MARK%  until_stmt  
 index is: 38, source_index: 18, before: %NULL%, after: until_stmt
endblock  :  until_stmt  %MARK%  
 index is: 39, source_index: 18, before: until_stmt, after: %NULL%
endblock  :  %MARK%  else_stmt  
 index is: 40, source_index: 19, before: %NULL%, after: else_stmt
endblock  :  else_stmt  %MARK%  
 index is: 41, source_index: 19, before: else_stmt, after: %NULL%
endblock  :  %MARK%  end_stmt  
 index is: 42, source_index: 20, before: %NULL%, after: end_stmt
endblock  :  end_stmt  %MARK%  
 index is: 43, source_index: 20, before: end_stmt, after: %NULL%
statement  :  %MARK%  expr_stmt  
 index is: 44, source_index: 21, before: %NULL%, after: expr_stmt
statement  :  expr_stmt  %MARK%  
 index is: 45, source_index: 21, before: expr_stmt, after: %NULL%
statement  :  %MARK%  class_stmt  
 index is: 46, source_index: 22, before: %NULL%, after: class_stmt
statement  :  class_stmt  %MARK%  
 index is: 47, source_index: 22, before: class_stmt, after: %NULL%
statement  :  %MARK%  throw_stmt  
 index is: 48, source_index: 23, before: %NULL%, after: throw_stmt
statement  :  throw_stmt  %MARK%  
 index is: 49, source_index: 23, before: throw_stmt, after: %NULL%
statement  :  %MARK%  try_stmt  
 index is: 50, source_index: 24, before: %NULL%, after: try_stmt
statement  :  try_stmt  %MARK%  
 index is: 51, source_index: 24, before: try_stmt, after: %NULL%
statement  :  %MARK%  return_stmt  
 index is: 52, source_index: 25, before: %NULL%, after: return_stmt
statement  :  return_stmt  %MARK%  
 index is: 53, source_index: 25, before: return_stmt, after: %NULL%
statement  :  %MARK%  function_stmt  
 index is: 54, source_index: 26, before: %NULL%, after: function_stmt
statement  :  function_stmt  %MARK%  
 index is: 55, source_index: 26, before: function_stmt, after: %NULL%
statement  :  %MARK%  control_stmt  
 index is: 56, source_index: 27, before: %NULL%, after: control_stmt
statement  :  control_stmt  %MARK%  
 index is: 57, source_index: 27, before: control_stmt, after: %NULL%
statement  :  %MARK%  foreach_stmt  
 index is: 58, source_index: 28, before: %NULL%, after: foreach_stmt
statement  :  foreach_stmt  %MARK%  
 index is: 59, source_index: 28, before: foreach_stmt, after: %NULL%
statement  :  %MARK%  for_stmt  
 index is: 60, source_index: 29, before: %NULL%, after: for_stmt
statement  :  for_stmt  %MARK%  
 index is: 61, source_index: 29, before: for_stmt, after: %NULL%
statement  :  %MARK%  loop_stmt  
 index is: 62, source_index: 30, before: %NULL%, after: loop_stmt
statement  :  loop_stmt  %MARK%  
 index is: 63, source_index: 30, before: loop_stmt, after: %NULL%
statement  :  %MARK%  while_stmt  
 index is: 64, source_index: 31, before: %NULL%, after: while_stmt
statement  :  while_stmt  %MARK%  
 index is: 65, source_index: 31, before: while_stmt, after: %NULL%
statement  :  %MARK%  switch_stmt  
 index is: 66, source_index: 32, before: %NULL%, after: switch_stmt
statement  :  switch_stmt  %MARK%  
 index is: 67, source_index: 32, before: switch_stmt, after: %NULL%
statement  :  %MARK%  if_stmt  
 index is: 68, source_index: 33, before: %NULL%, after: if_stmt
statement  :  if_stmt  %MARK%  
 index is: 69, source_index: 33, before: if_stmt, after: %NULL%
statement  :  %MARK%  using_stmt  
 index is: 70, source_index: 34, before: %NULL%, after: using_stmt
statement  :  using_stmt  %MARK%  
 index is: 71, source_index: 34, before: using_stmt, after: %NULL%
statement  :  %MARK%  namespace_stmt  
 index is: 72, source_index: 35, before: %NULL%, after: namespace_stmt
statement  :  namespace_stmt  %MARK%  
 index is: 73, source_index: 35, before: namespace_stmt, after: %NULL%
statement  :  %MARK%  block_stmt  
 index is: 74, source_index: 36, before: %NULL%, after: block_stmt
statement  :  block_stmt  %MARK%  
 index is: 75, source_index: 36, before: block_stmt, after: %NULL%
statement  :  %MARK%  var_stmt  
 index is: 76, source_index: 37, before: %NULL%, after: var_stmt
statement  :  var_stmt  %MARK%  
 index is: 77, source_index: 37, before: var_stmt, after: %NULL%
statement  :  %MARK%  import_stmt  
 index is: 78, source_index: 38, before: %NULL%, after: import_stmt
statement  :  import_stmt  %MARK%  
 index is: 79, source_index: 38, before: import_stmt, after: %NULL%
statement  :  %MARK%  package_stmt  
 index is: 80, source_index: 39, before: %NULL%, after: package_stmt
statement  :  package_stmt  %MARK%  
 index is: 81, source_index: 39, before: package_stmt, after: %NULL%
statement  :  %MARK%  prep_stmt  
 index is: 82, source_index: 40, before: %NULL%, after: prep_stmt
statement  :  prep_stmt  %MARK%  
 index is: 83, source_index: 40, before: prep_stmt, after: %NULL%
declaration  :  %MARK%  class_stmt  
 index is: 84, source_index: 41, before: %NULL%, after: class_stmt
declaration  :  class_stmt  %MARK%  
 index is: 85, source_index: 41, before: class_stmt, after: %NULL%
declaration  :  %MARK%  function_stmt  
 index is: 86, source_index: 42, before: %NULL%, after: function_stmt
declaration  :  function_stmt  %MARK%  
 index is: 87, source_index: 42, before: function_stmt, after: %NULL%
declaration  :  %MARK%  using_stmt  
 index is: 88, source_index: 43, before: %NULL%, after: using_stmt
declaration  :  using_stmt  %MARK%  
 index is: 89, source_index: 43, before: using_stmt, after: %NULL%
declaration  :  %MARK%  var_stmt  
 index is: 90, source_index: 44, before: %NULL%, after: var_stmt
declaration  :  var_stmt  %MARK%  
 index is: 91, source_index: 44, before: var_stmt, after: %NULL%
declaration  :  %MARK%  namespace_stmt  
 index is: 92, source_index: 45, before: %NULL%, after: namespace_stmt
declaration  :  namespace_stmt  %MARK%  
 index is: 93, source_index: 45, before: namespace_stmt, after: %NULL%
declaration  :  %MARK%  prep_stmt  
 index is: 94, source_index: 46, before: %NULL%, after: prep_stmt
declaration  :  prep_stmt  %MARK%  
 index is: 95, source_index: 46, before: prep_stmt, after: %NULL%
prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, source_index: 47, before: %NULL%, after: PREP
prep_stmt  :  PREP  %MARK%  ENDL  
 index is: 97, source_index: 47, before: PREP, after: ENDL
prep_stmt  :  PREP  ENDL  %MARK%  
 index is: 98, source_index: 47, before: ENDL, after: %NULL%
package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, source_index: 48, before: %NULL%, after: 'package'
package_stmt  :  'package'  %MARK%  ID  endline  
 index is: 100, source_index: 48, before: 'package', after: ID
package_stmt  :  'package'  ID  %MARK%  endline  
 index is: 101, source_index: 48, before: ID, after: endline
package_stmt  :  'package'  ID  endline  %MARK%  
 index is: 102, source_index: 48, before: endline, after: %NULL%
import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, source_index: 49, before: %NULL%, after: 'import'
import_stmt  :  'import'  %MARK%  import_list  endline  
 index is: 104, source_index: 49, before: 'import', after: import_list
import_stmt  :  'import'  import_list  %MARK%  endline  
 index is: 105, source_index: 49, before: import_list, after: endline
import_stmt  :  'import'  import_list  endline  %MARK%  
 index is: 106, source_index: 49, before: endline, after: %NULL%
module_list  :  %MARK%  ID  module_list@0_opt_2  
 index is: 107, source_index: 50, before: %NULL%, after: ID
module_list  :  ID  %MARK%  module_list@0_opt_2  
 index is: 108, source_index: 50, before: ID, after: module_list@0_opt_2
module_list  :  ID  module_list@0_opt_2  %MARK%  
 index is: 109, source_index: 50, before: module_list@0_opt_2, after: %NULL%
module_list@0_opt_2  :  %MARK%  
 index is: 110, source_index: 51, before: %NULL%, after: %NULL%
module_list@0_opt_2  :  %MARK%  '.'  module_list@0_opt_2@0_decl_2  
 index is: 111, source_index: 52, before: %NULL%, after: '.'
module_list@0_opt_2  :  '.'  %MARK%  module_list@0_opt_2@0_decl_2  
 index is: 112, source_index: 52, before: '.', after: module_list@0_opt_2@0_decl_2
module_list@0_opt_2  :  '.'  module_list@0_opt_2@0_decl_2  %MARK%  
 index is: 113, source_index: 52, before: module_list@0_opt_2@0_decl_2, after: %NULL%
module_list@0_opt_2@0_decl_2  :  %MARK%  module_list  
 index is: 114, source_index: 53, before: %NULL%, after: module_list
module_list@0_opt_2@0_decl_2  :  module_list  %MARK%  
 index is: 115, source_index: 53, before: module_list, after: %NULL%
module_list@0_opt_2@0_decl_2  :  %MARK%  '*'  
 index is: 116, source_index: 54, before: %NULL%, after: '*'
module_list@0_opt_2@0_decl_2  :  '*'  %MARK%  
 index is: 117, source_index: 54, before: '*', after: %NULL%
import_list  :  %MARK%  module_list  import_list@0_opt_2  import_list@0_opt_3  
 index is: 118, source_index: 55, before: %NULL%, after: module_list
import_list  :  module_list  %MARK%  import_list@0_opt_2  import_list@0_opt_3  
 index is: 119, source_index: 55, before: module_list, after: import_list@0_opt_2
import_list  :  module_list  import_list@0_opt_2  %MARK%  import_list@0_opt_3  
 index is: 120, source_index: 55, before: import_list@0_opt_2, after: import_list@0_opt_3
import_list  :  module_list  import_list@0_opt_2  import_list@0_opt_3  %MARK%  
 index is: 121, source_index: 55, before: import_list@0_opt_3, after: %NULL%
import_list@0_opt_3  :  %MARK%  
 index is: 122, source_index: 56, before: %NULL%, after: %NULL%
import_list@0_opt_3  :  %MARK%  ','  import_list  
 index is: 123, source_index: 57, before: %NULL%, after: ','
import_list@0_opt_3  :  ','  %MARK%  import_list  
 index is: 124, source_index: 57, before: ',', after: import_list
import_list@0_opt_3  :  ','  import_list  %MARK%  
 index is: 125, source_index: 57, before: import_list, after: %NULL%
import_list@0_opt_2  :  %MARK%  
 index is: 126, source_index: 58, before: %NULL%, after: %NULL%
import_list@0_opt_2  :  %MARK%  'as'  ID  
 index is: 127, source_index: 59, before: %NULL%, after: 'as'
import_list@0_opt_2  :  'as'  %MARK%  ID  
 index is: 128, source_index: 59, before: 'as', after: ID
import_list@0_opt_2  :  'as'  ID  %MARK%  
 index is: 129, source_index: 59, before: ID, after: %NULL%
var_def  :  %MARK%  var_list  
 index is: 130, source_index: 60, before: %NULL%, after: var_list
var_def  :  var_list  %MARK%  
 index is: 131, source_index: 60, before: var_list, after: %NULL%
var_def  :  %MARK%  var_bind  '='  basic_expr  
 index is: 132, source_index: 61, before: %NULL%, after: var_bind
var_def  :  var_bind  %MARK%  '='  basic_expr  
 index is: 133, source_index: 61, before: var_bind, after: '='
var_def  :  var_bind  '='  %MARK%  basic_expr  
 index is: 134, source_index: 61, before: '=', after: basic_expr
var_def  :  var_bind  '='  basic_expr  %MARK%  
 index is: 135, source_index: 61, before: basic_expr, after: %NULL%
var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, source_index: 62, before: %NULL%, after: var_stmt@0_decl_1
var_stmt  :  var_stmt@0_decl_1  %MARK%  var_def  endline  
 index is: 137, source_index: 62, before: var_stmt@0_decl_1, after: var_def
var_stmt  :  var_stmt@0_decl_1  var_def  %MARK%  endline  
 index is: 138, source_index: 62, before: var_def, after: endline
var_stmt  :  var_stmt@0_decl_1  var_def  endline  %MARK%  
 index is: 139, source_index: 62, before: endline, after: %NULL%
var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, source_index: 63, before: %NULL%, after: 'constant'
var_stmt@0_decl_1  :  'constant'  %MARK%  
 index is: 141, source_index: 63, before: 'constant', after: %NULL%
var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, source_index: 64, before: %NULL%, after: 'link'
var_stmt@0_decl_1  :  'link'  %MARK%  
 index is: 143, source_index: 64, before: 'link', after: %NULL%
var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, source_index: 65, before: %NULL%, after: 'var'
var_stmt@0_decl_1  :  'var'  %MARK%  
 index is: 145, source_index: 65, before: 'var', after: %NULL%
var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, source_index: 66, before: %NULL%, after: '('
var_bind  :  '('  %MARK%  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 147, source_index: 66, before: '(', after: var_bind_list
var_bind  :  '('  var_bind_list  %MARK%  var_bind@0_rep_3  ')'  
 index is: 148, source_index: 66, before: var_bind_list, after: var_bind@0_rep_3
var_bind  :  '('  var_bind_list  var_bind@0_rep_3  %MARK%  ')'  
 index is: 149, source_index: 66, before: var_bind@0_rep_3, after: ')'
var_bind  :  '('  var_bind_list  var_bind@0_rep_3  ')'  %MARK%  
 index is: 150, source_index: 66, before: ')', after: %NULL%
var_bind@0_rep_3  :  %MARK%  
 index is: 151, source_index: 67, before: %NULL%, after: %NULL%
var_bind@0_rep_3  :  %MARK%  ','  var_bind_list  var_bind@0_rep_3  
 index is: 152, source_index: 68, before: %NULL%, after: ','
var_bind@0_rep_3  :  ','  %MARK%  var_bind_list  var_bind@0_rep_3  
 index is: 153, source_index: 68, before: ',', after: var_bind_list
var_bind@0_rep_3  :  ','  var_bind_list  %MARK%  var_bind@0_rep_3  
 index is: 154, source_index: 68, before: var_bind_list, after: var_bind@0_rep_3
var_bind@0_rep_3  :  ','  var_bind_list  var_bind@0_rep_3  %MARK%  
 index is: 155, source_index: 68, before: var_bind@0_rep_3, after: %NULL%
var_bind_list  :  %MARK%  var_bind  
 index is: 156, source_index: 69, before: %NULL%, after: var_bind
var_bind_list  :  var_bind  %MARK%  
 index is: 157, source_index: 69, before: var_bind, after: %NULL%
var_bind_list  :  %MARK%  '...'  
 index is: 158, source_index: 70, before: %NULL%, after: '...'
var_bind_list  :  '...'  %MARK%  
 index is: 159, source_index: 70, before: '...', after: %NULL%
var_bind_list  :  %MARK%  ID  
 index is: 160, source_index: 71, before: %NULL%, after: ID
var_bind_list  :  ID  %MARK%  
 index is: 161, source_index: 71, before: ID, after: %NULL%
var_list  :  %MARK%  ID  '='  single_expr  var_list@0_opt_4  
 index is: 162, source_index: 72, before: %NULL%, after: ID
var_list  :  ID  %MARK%  '='  single_expr  var_list@0_opt_4  
 index is: 163, source_index: 72, before: ID, after: '='
var_list  :  ID  '='  %MARK%  single_expr  var_list@0_opt_4  
 index is: 164, source_index: 72, before: '=', after: single_expr
var_list  :  ID  '='  single_expr  %MARK%  var_list@0_opt_4  
 index is: 165, source_index: 72, before: single_expr, after: var_list@0_opt_4
var_list  :  ID  '='  single_expr  var_list@0_opt_4  %MARK%  
 index is: 166, source_index: 72, before: var_list@0_opt_4, after: %NULL%
var_list@0_opt_4  :  %MARK%  
 index is: 167, source_index: 73, before: %NULL%, after: %NULL%
var_list@0_opt_4  :  %MARK%  ','  var_list  
 index is: 168, source_index: 74, before: %NULL%, after: ','
var_list@0_opt_4  :  ','  %MARK%  var_list  
 index is: 169, source_index: 74, before: ',', after: var_list
var_list@0_opt_4  :  ','  var_list  %MARK%  
 index is: 170, source_index: 74, before: var_list, after: %NULL%
block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, source_index: 75, before: %NULL%, after: 'block'
block_stmt  :  'block'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 172, source_index: 75, before: 'block', after: ENDL
block_stmt  :  'block'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 173, source_index: 75, before: ENDL, after: stmts
block_stmt  :  'block'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 174, source_index: 75, before: stmts, after: 'end'
block_stmt  :  'block'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 175, source_index: 75, before: 'end', after: ENDL
block_stmt  :  'block'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 176, source_index: 75, before: ENDL, after: %NULL%
namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, source_index: 76, before: %NULL%, after: 'namespace'
namespace_stmt  :  'namespace'  %MARK%  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 178, source_index: 76, before: 'namespace', after: ID
namespace_stmt  :  'namespace'  ID  %MARK%  ENDL  decl_stmts  'end'  ENDL  
 index is: 179, source_index: 76, before: ID, after: ENDL
namespace_stmt  :  'namespace'  ID  ENDL  %MARK%  decl_stmts  'end'  ENDL  
 index is: 180, source_index: 76, before: ENDL, after: decl_stmts
namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  %MARK%  'end'  ENDL  
 index is: 181, source_index: 76, before: decl_stmts, after: 'end'
namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  'end'  %MARK%  ENDL  
 index is: 182, source_index: 76, before: 'end', after: ENDL
namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  %MARK%  
 index is: 183, source_index: 76, before: ENDL, after: %NULL%
using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, source_index: 77, before: %NULL%, after: 'using'
using_stmt  :  'using'  %MARK%  using_list  endline  
 index is: 185, source_index: 77, before: 'using', after: using_list
using_stmt  :  'using'  using_list  %MARK%  endline  
 index is: 186, source_index: 77, before: using_list, after: endline
using_stmt  :  'using'  using_list  endline  %MARK%  
 index is: 187, source_index: 77, before: endline, after: %NULL%
using_list  :  %MARK%  module_list  using_list@0_opt_2  
 index is: 188, source_index: 78, before: %NULL%, after: module_list
using_list  :  module_list  %MARK%  using_list@0_opt_2  
 index is: 189, source_index: 78, before: module_list, after: using_list@0_opt_2
using_list  :  module_list  using_list@0_opt_2  %MARK%  
 index is: 190, source_index: 78, before: using_list@0_opt_2, after: %NULL%
using_list@0_opt_2  :  %MARK%  
 index is: 191, source_index: 79, before: %NULL%, after: %NULL%
using_list@0_opt_2  :  %MARK%  ','  using_list  
 index is: 192, source_index: 80, before: %NULL%, after: ','
using_list@0_opt_2  :  ','  %MARK%  using_list  
 index is: 193, source_index: 80, before: ',', after: using_list
using_list@0_opt_2  :  ','  using_list  %MARK%  
 index is: 194, source_index: 80, before: using_list, after: %NULL%
if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, source_index: 81, before: %NULL%, after: 'if'
if_stmt  :  'if'  %MARK%  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 196, source_index: 81, before: 'if', after: basic_expr
if_stmt  :  'if'  basic_expr  %MARK%  ENDL  stmts  if_stmt@0_rep_5  
 index is: 197, source_index: 81, before: basic_expr, after: ENDL
if_stmt  :  'if'  basic_expr  ENDL  %MARK%  stmts  if_stmt@0_rep_5  
 index is: 198, source_index: 81, before: ENDL, after: stmts
if_stmt  :  'if'  basic_expr  ENDL  stmts  %MARK%  if_stmt@0_rep_5  
 index is: 199, source_index: 81, before: stmts, after: if_stmt@0_rep_5
if_stmt  :  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  %MARK%  
 index is: 200, source_index: 81, before: if_stmt@0_rep_5, after: %NULL%
if_stmt@0_rep_5  :  %MARK%  
 index is: 201, source_index: 82, before: %NULL%, after: %NULL%
if_stmt@0_rep_5  :  %MARK%  else_stmt  stmts  'end'  ENDL  if_stmt@0_rep_5  
 index is: 202, source_index: 83, before: %NULL%, after: else_stmt
if_stmt@0_rep_5  :  else_stmt  %MARK%  stmts  'end'  ENDL  if_stmt@0_rep_5  
 index is: 203, source_index: 83, before: else_stmt, after: stmts
if_stmt@0_rep_5  :  else_stmt  stmts  %MARK%  'end'  ENDL  if_stmt@0_rep_5  
 index is: 204, source_index: 83, before: stmts, after: 'end'
if_stmt@0_rep_5  :  else_stmt  stmts  'end'  %MARK%  ENDL  if_stmt@0_rep_5  
 index is: 205, source_index: 83, before: 'end', after: ENDL
if_stmt@0_rep_5  :  else_stmt  stmts  'end'  ENDL  %MARK%  if_stmt@0_rep_5  
 index is: 206, source_index: 83, before: ENDL, after: if_stmt@0_rep_5
if_stmt@0_rep_5  :  else_stmt  stmts  'end'  ENDL  if_stmt@0_rep_5  %MARK%  
 index is: 207, source_index: 83, before: if_stmt@0_rep_5, after: %NULL%
else_stmt  :  %MARK%  'else'  else_stmt@0_opt_2  ENDL  
 index is: 208, source_index: 84, before: %NULL%, after: 'else'
else_stmt  :  'else'  %MARK%  else_stmt@0_opt_2  ENDL  
 index is: 209, source_index: 84, before: 'else', after: else_stmt@0_opt_2
else_stmt  :  'else'  else_stmt@0_opt_2  %MARK%  ENDL  
 index is: 210, source_index: 84, before: else_stmt@0_opt_2, after: ENDL
else_stmt  :  'else'  else_stmt@0_opt_2  ENDL  %MARK%  
 index is: 211, source_index: 84, before: ENDL, after: %NULL%
else_stmt@0_opt_2  :  %MARK%  
 index is: 212, source_index: 85, before: %NULL%, after: %NULL%
else_stmt@0_opt_2  :  %MARK%  'if'  basic_expr  
 index is: 213, source_index: 86, before: %NULL%, after: 'if'
else_stmt@0_opt_2  :  'if'  %MARK%  basic_expr  
 index is: 214, source_index: 86, before: 'if', after: basic_expr
else_stmt@0_opt_2  :  'if'  basic_expr  %MARK%  
 index is: 215, source_index: 86, before: basic_expr, after: %NULL%
switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, source_index: 87, before: %NULL%, after: 'switch'
switch_stmt  :  'switch'  %MARK%  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 217, source_index: 87, before: 'switch', after: basic_expr
switch_stmt  :  'switch'  basic_expr  %MARK%  ENDL  switch_stmts  'end'  ENDL  
 index is: 218, source_index: 87, before: basic_expr, after: ENDL
switch_stmt  :  'switch'  basic_expr  ENDL  %MARK%  switch_stmts  'end'  ENDL  
 index is: 219, source_index: 87, before: ENDL, after: switch_stmts
switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  %MARK%  'end'  ENDL  
 index is: 220, source_index: 87, before: switch_stmts, after: 'end'
switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  'end'  %MARK%  ENDL  
 index is: 221, source_index: 87, before: 'end', after: ENDL
switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  %MARK%  
 index is: 222, source_index: 87, before: ENDL, after: %NULL%
switch_stmts  :  %MARK%  switch_stmts@0_rep_1  switch_stmts@0_rep_2  
 index is: 223, source_index: 88, before: %NULL%, after: switch_stmts@0_rep_1
switch_stmts  :  switch_stmts@0_rep_1  %MARK%  switch_stmts@0_rep_2  
 index is: 224, source_index: 88, before: switch_stmts@0_rep_1, after: switch_stmts@0_rep_2
switch_stmts  :  switch_stmts@0_rep_1  switch_stmts@0_rep_2  %MARK%  
 index is: 225, source_index: 88, before: switch_stmts@0_rep_2, after: %NULL%
switch_stmts@0_rep_2  :  %MARK%  
 index is: 226, source_index: 89, before: %NULL%, after: %NULL%
switch_stmts@0_rep_2  :  %MARK%  ENDL  switch_stmts@0_rep_2  
 index is: 227, source_index: 90, before: %NULL%, after: ENDL
switch_stmts@0_rep_2  :  ENDL  %MARK%  switch_stmts@0_rep_2  
 index is: 228, source_index: 90, before: ENDL, after: switch_stmts@0_rep_2
switch_stmts@0_rep_2  :  ENDL  switch_stmts@0_rep_2  %MARK%  
 index is: 229, source_index: 90, before: switch_stmts@0_rep_2, after: %NULL%
switch_stmts@0_rep_1  :  %MARK%  
 index is: 230, source_index: 91, before: %NULL%, after: %NULL%
switch_stmts@0_rep_1  :  %MARK%  switch_default  switch_stmts@0_rep_1  
 index is: 231, source_index: 92, before: %NULL%, after: switch_default
switch_stmts@0_rep_1  :  switch_default  %MARK%  switch_stmts@0_rep_1  
 index is: 232, source_index: 92, before: switch_default, after: switch_stmts@0_rep_1
switch_stmts@0_rep_1  :  switch_default  switch_stmts@0_rep_1  %MARK%  
 index is: 233, source_index: 92, before: switch_stmts@0_rep_1, after: %NULL%
switch_stmts@0_rep_1  :  %MARK%  switch_case  switch_stmts@0_rep_1  
 index is: 234, source_index: 93, before: %NULL%, after: switch_case
switch_stmts@0_rep_1  :  switch_case  %MARK%  switch_stmts@0_rep_1  
 index is: 235, source_index: 93, before: switch_case, after: switch_stmts@0_rep_1
switch_stmts@0_rep_1  :  switch_case  switch_stmts@0_rep_1  %MARK%  
 index is: 236, source_index: 93, before: switch_stmts@0_rep_1, after: %NULL%
switch_case  :  %MARK%  'case'  logic_or_expr  ENDL  stmts  'end'  ENDL  
 index is: 237, source_index: 94, before: %NULL%, after: 'case'
switch_case  :  'case'  %MARK%  logic_or_expr  ENDL  stmts  'end'  ENDL  
 index is: 238, source_index: 94, before: 'case', after: logic_or_expr
switch_case  :  'case'  logic_or_expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 239, source_index: 94, before: logic_or_expr, after: ENDL
switch_case  :  'case'  logic_or_expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 240, source_index: 94, before: ENDL, after: stmts
switch_case  :  'case'  logic_or_expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 241, source_index: 94, before: stmts, after: 'end'
switch_case  :  'case'  logic_or_expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 242, source_index: 94, before: 'end', after: ENDL
switch_case  :  'case'  logic_or_expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 243, source_index: 94, before: ENDL, after: %NULL%
switch_default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, source_index: 95, before: %NULL%, after: 'default'
switch_default  :  'default'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 245, source_index: 95, before: 'default', after: ENDL
switch_default  :  'default'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 246, source_index: 95, before: ENDL, after: stmts
switch_default  :  'default'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 247, source_index: 95, before: stmts, after: 'end'
switch_default  :  'default'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 248, source_index: 95, before: 'end', after: ENDL
switch_default  :  'default'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 249, source_index: 95, before: ENDL, after: %NULL%
while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, source_index: 96, before: %NULL%, after: 'while'
while_stmt  :  'while'  %MARK%  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 251, source_index: 96, before: 'while', after: basic_expr
while_stmt  :  'while'  basic_expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 252, source_index: 96, before: basic_expr, after: ENDL
while_stmt  :  'while'  basic_expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 253, source_index: 96, before: ENDL, after: stmts
while_stmt  :  'while'  basic_expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 254, source_index: 96, before: stmts, after: 'end'
while_stmt  :  'while'  basic_expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 255, source_index: 96, before: 'end', after: ENDL
while_stmt  :  'while'  basic_expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 256, source_index: 96, before: ENDL, after: %NULL%
loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, source_index: 97, before: %NULL%, after: 'loop'
loop_stmt  :  'loop'  %MARK%  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 258, source_index: 97, before: 'loop', after: ENDL
loop_stmt  :  'loop'  ENDL  %MARK%  stmts  loop_stmt@0_decl_4  
 index is: 259, source_index: 97, before: ENDL, after: stmts
loop_stmt  :  'loop'  ENDL  stmts  %MARK%  loop_stmt@0_decl_4  
 index is: 260, source_index: 97, before: stmts, after: loop_stmt@0_decl_4
loop_stmt  :  'loop'  ENDL  stmts  loop_stmt@0_decl_4  %MARK%  
 index is: 261, source_index: 97, before: loop_stmt@0_decl_4, after: %NULL%
loop_stmt@0_decl_4  :  %MARK%  ENDL  
 index is: 262, source_index: 98, before: %NULL%, after: ENDL
loop_stmt@0_decl_4  :  ENDL  %MARK%  
 index is: 263, source_index: 98, before: ENDL, after: %NULL%
loop_stmt@0_decl_4  :  %MARK%  'end'  
 index is: 264, source_index: 99, before: %NULL%, after: 'end'
loop_stmt@0_decl_4  :  'end'  %MARK%  
 index is: 265, source_index: 99, before: 'end', after: %NULL%
loop_stmt@0_decl_4  :  %MARK%  until_stmt  
 index is: 266, source_index: 100, before: %NULL%, after: until_stmt
loop_stmt@0_decl_4  :  until_stmt  %MARK%  
 index is: 267, source_index: 100, before: until_stmt, after: %NULL%
until_stmt  :  %MARK%  'until'  basic_expr  ENDL  
 index is: 268, source_index: 101, before: %NULL%, after: 'until'
until_stmt  :  'until'  %MARK%  basic_expr  ENDL  
 index is: 269, source_index: 101, before: 'until', after: basic_expr
until_stmt  :  'until'  basic_expr  %MARK%  ENDL  
 index is: 270, source_index: 101, before: basic_expr, after: ENDL
until_stmt  :  'until'  basic_expr  ENDL  %MARK%  
 index is: 271, source_index: 101, before: ENDL, after: %NULL%
for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, source_index: 102, before: %NULL%, after: 'for'
for_stmt  :  'for'  %MARK%  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 273, source_index: 102, before: 'for', after: for_stmt@0_opt_2
for_stmt  :  'for'  for_stmt@0_opt_2  %MARK%  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 274, source_index: 102, before: for_stmt@0_opt_2, after: for_stmt@0_decl_3
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  %MARK%  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 275, source_index: 102, before: for_stmt@0_decl_3, after: for_stmt@0_opt_4
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  %MARK%  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 276, source_index: 102, before: for_stmt@0_opt_4, after: for_stmt@0_decl_5
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  %MARK%  for_stmt@0_opt_6  for_body  
 index is: 277, source_index: 102, before: for_stmt@0_decl_5, after: for_stmt@0_opt_6
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  %MARK%  for_body  
 index is: 278, source_index: 102, before: for_stmt@0_opt_6, after: for_body
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  %MARK%  
 index is: 279, source_index: 102, before: for_body, after: %NULL%
for_stmt@0_opt_6  :  %MARK%  
 index is: 280, source_index: 103, before: %NULL%, after: %NULL%
for_stmt@0_opt_6  :  %MARK%  basic_expr  
 index is: 281, source_index: 104, before: %NULL%, after: basic_expr
for_stmt@0_opt_6  :  basic_expr  %MARK%  
 index is: 282, source_index: 104, before: basic_expr, after: %NULL%
for_stmt@0_decl_5  :  %MARK%  ','  
 index is: 283, source_index: 105, before: %NULL%, after: ','
for_stmt@0_decl_5  :  ','  %MARK%  
 index is: 284, source_index: 105, before: ',', after: %NULL%
for_stmt@0_decl_5  :  %MARK%  ';'  
 index is: 285, source_index: 106, before: %NULL%, after: ';'
for_stmt@0_decl_5  :  ';'  %MARK%  
 index is: 286, source_index: 106, before: ';', after: %NULL%
for_stmt@0_opt_4  :  %MARK%  
 index is: 287, source_index: 107, before: %NULL%, after: %NULL%
for_stmt@0_opt_4  :  %MARK%  basic_expr  
 index is: 288, source_index: 108, before: %NULL%, after: basic_expr
for_stmt@0_opt_4  :  basic_expr  %MARK%  
 index is: 289, source_index: 108, before: basic_expr, after: %NULL%
for_stmt@0_decl_3  :  %MARK%  ','  
 index is: 290, source_index: 109, before: %NULL%, after: ','
for_stmt@0_decl_3  :  ','  %MARK%  
 index is: 291, source_index: 109, before: ',', after: %NULL%
for_stmt@0_decl_3  :  %MARK%  ';'  
 index is: 292, source_index: 110, before: %NULL%, after: ';'
for_stmt@0_decl_3  :  ';'  %MARK%  
 index is: 293, source_index: 110, before: ';', after: %NULL%
for_stmt@0_opt_2  :  %MARK%  
 index is: 294, source_index: 111, before: %NULL%, after: %NULL%
for_stmt@0_opt_2  :  %MARK%  var_def  
 index is: 295, source_index: 112, before: %NULL%, after: var_def
for_stmt@0_opt_2  :  var_def  %MARK%  
 index is: 296, source_index: 112, before: var_def, after: %NULL%
foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, source_index: 113, before: %NULL%, after: 'foreach'
foreach_stmt  :  'foreach'  %MARK%  ID  'in'  basic_expr  for_body  
 index is: 298, source_index: 113, before: 'foreach', after: ID
foreach_stmt  :  'foreach'  ID  %MARK%  'in'  basic_expr  for_body  
 index is: 299, source_index: 113, before: ID, after: 'in'
foreach_stmt  :  'foreach'  ID  'in'  %MARK%  basic_expr  for_body  
 index is: 300, source_index: 113, before: 'in', after: basic_expr
foreach_stmt  :  'foreach'  ID  'in'  basic_expr  %MARK%  for_body  
 index is: 301, source_index: 113, before: basic_expr, after: for_body
foreach_stmt  :  'foreach'  ID  'in'  basic_expr  for_body  %MARK%  
 index is: 302, source_index: 113, before: for_body, after: %NULL%
for_body  :  %MARK%  for_body@0_decl_1  
 index is: 303, source_index: 114, before: %NULL%, after: for_body@0_decl_1
for_body  :  for_body@0_decl_1  %MARK%  
 index is: 304, source_index: 114, before: for_body@0_decl_1, after: %NULL%
for_body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 305, source_index: 115, before: %NULL%, after: ENDL
for_body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 306, source_index: 115, before: ENDL, after: stmts
for_body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 307, source_index: 115, before: stmts, after: 'end'
for_body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 308, source_index: 115, before: 'end', after: ENDL
for_body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 309, source_index: 115, before: ENDL, after: %NULL%
for_body@0_decl_1  :  %MARK%  'do'  basic_expr  endline  
 index is: 310, source_index: 116, before: %NULL%, after: 'do'
for_body@0_decl_1  :  'do'  %MARK%  basic_expr  endline  
 index is: 311, source_index: 116, before: 'do', after: basic_expr
for_body@0_decl_1  :  'do'  basic_expr  %MARK%  endline  
 index is: 312, source_index: 116, before: basic_expr, after: endline
for_body@0_decl_1  :  'do'  basic_expr  endline  %MARK%  
 index is: 313, source_index: 116, before: endline, after: %NULL%
function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, source_index: 117, before: %NULL%, after: 'function'
function_stmt  :  'function'  %MARK%  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 315, source_index: 117, before: 'function', after: ID
function_stmt  :  'function'  ID  %MARK%  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 316, source_index: 117, before: ID, after: '('
function_stmt  :  'function'  ID  '('  %MARK%  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 317, source_index: 117, before: '(', after: function_stmt@0_opt_4
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  %MARK%  ')'  function_stmt@0_opt_6  function_body  
 index is: 318, source_index: 117, before: function_stmt@0_opt_4, after: ')'
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  %MARK%  function_stmt@0_opt_6  function_body  
 index is: 319, source_index: 117, before: ')', after: function_stmt@0_opt_6
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  %MARK%  function_body  
 index is: 320, source_index: 117, before: function_stmt@0_opt_6, after: function_body
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  %MARK%  
 index is: 321, source_index: 117, before: function_body, after: %NULL%
function_stmt@0_opt_6  :  %MARK%  
 index is: 322, source_index: 118, before: %NULL%, after: %NULL%
function_stmt@0_opt_6  :  %MARK%  'override'  
 index is: 323, source_index: 119, before: %NULL%, after: 'override'
function_stmt@0_opt_6  :  'override'  %MARK%  
 index is: 324, source_index: 119, before: 'override', after: %NULL%
function_stmt@0_opt_4  :  %MARK%  
 index is: 325, source_index: 120, before: %NULL%, after: %NULL%
function_stmt@0_opt_4  :  %MARK%  argument_list  
 index is: 326, source_index: 121, before: %NULL%, after: argument_list
function_stmt@0_opt_4  :  argument_list  %MARK%  
 index is: 327, source_index: 121, before: argument_list, after: %NULL%
function_body  :  %MARK%  function_body@0_decl_1  
 index is: 328, source_index: 122, before: %NULL%, after: function_body@0_decl_1
function_body  :  function_body@0_decl_1  %MARK%  
 index is: 329, source_index: 122, before: function_body@0_decl_1, after: %NULL%
function_body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 330, source_index: 123, before: %NULL%, after: ENDL
function_body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 331, source_index: 123, before: ENDL, after: stmts
function_body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 332, source_index: 123, before: stmts, after: 'end'
function_body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 333, source_index: 123, before: 'end', after: ENDL
function_body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 334, source_index: 123, before: ENDL, after: %NULL%
function_body@0_decl_1  :  %MARK%  '{'  stmts  '}'  
 index is: 335, source_index: 124, before: %NULL%, after: '{'
function_body@0_decl_1  :  '{'  %MARK%  stmts  '}'  
 index is: 336, source_index: 124, before: '{', after: stmts
function_body@0_decl_1  :  '{'  stmts  %MARK%  '}'  
 index is: 337, source_index: 124, before: stmts, after: '}'
function_body@0_decl_1  :  '{'  stmts  '}'  %MARK%  
 index is: 338, source_index: 124, before: '}', after: %NULL%
return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, source_index: 125, before: %NULL%, after: 'return'
return_stmt  :  'return'  %MARK%  return_stmt@0_opt_2  endline  
 index is: 340, source_index: 125, before: 'return', after: return_stmt@0_opt_2
return_stmt  :  'return'  return_stmt@0_opt_2  %MARK%  endline  
 index is: 341, source_index: 125, before: return_stmt@0_opt_2, after: endline
return_stmt  :  'return'  return_stmt@0_opt_2  endline  %MARK%  
 index is: 342, source_index: 125, before: endline, after: %NULL%
return_stmt@0_opt_2  :  %MARK%  
 index is: 343, source_index: 126, before: %NULL%, after: %NULL%
return_stmt@0_opt_2  :  %MARK%  expr  
 index is: 344, source_index: 127, before: %NULL%, after: expr
return_stmt@0_opt_2  :  expr  %MARK%  
 index is: 345, source_index: 127, before: expr, after: %NULL%
try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, source_index: 128, before: %NULL%, after: 'try'
try_stmt  :  'try'  %MARK%  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 347, source_index: 128, before: 'try', after: ENDL
try_stmt  :  'try'  ENDL  %MARK%  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 348, source_index: 128, before: ENDL, after: stmts
try_stmt  :  'try'  ENDL  stmts  %MARK%  try_stmt@0_rep_4  'end'  ENDL  
 index is: 349, source_index: 128, before: stmts, after: try_stmt@0_rep_4
try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  %MARK%  'end'  ENDL  
 index is: 350, source_index: 128, before: try_stmt@0_rep_4, after: 'end'
try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  %MARK%  ENDL  
 index is: 351, source_index: 128, before: 'end', after: ENDL
try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  %MARK%  
 index is: 352, source_index: 128, before: ENDL, after: %NULL%
try_stmt@0_rep_4  :  %MARK%  
 index is: 353, source_index: 129, before: %NULL%, after: %NULL%
try_stmt@0_rep_4  :  %MARK%  catch_stmt  stmts  try_stmt@0_rep_4  
 index is: 354, source_index: 130, before: %NULL%, after: catch_stmt
try_stmt@0_rep_4  :  catch_stmt  %MARK%  stmts  try_stmt@0_rep_4  
 index is: 355, source_index: 130, before: catch_stmt, after: stmts
try_stmt@0_rep_4  :  catch_stmt  stmts  %MARK%  try_stmt@0_rep_4  
 index is: 356, source_index: 130, before: stmts, after: try_stmt@0_rep_4
try_stmt@0_rep_4  :  catch_stmt  stmts  try_stmt@0_rep_4  %MARK%  
 index is: 357, source_index: 130, before: try_stmt@0_rep_4, after: %NULL%
catch_stmt  :  %MARK%  'catch'  ID  catch_stmt@0_opt_3  ENDL  
 index is: 358, source_index: 131, before: %NULL%, after: 'catch'
catch_stmt  :  'catch'  %MARK%  ID  catch_stmt@0_opt_3  ENDL  
 index is: 359, source_index: 131, before: 'catch', after: ID
catch_stmt  :  'catch'  ID  %MARK%  catch_stmt@0_opt_3  ENDL  
 index is: 360, source_index: 131, before: ID, after: catch_stmt@0_opt_3
catch_stmt  :  'catch'  ID  catch_stmt@0_opt_3  %MARK%  ENDL  
 index is: 361, source_index: 131, before: catch_stmt@0_opt_3, after: ENDL
catch_stmt  :  'catch'  ID  catch_stmt@0_opt_3  ENDL  %MARK%  
 index is: 362, source_index: 131, before: ENDL, after: %NULL%
catch_stmt@0_opt_3  :  %MARK%  
 index is: 363, source_index: 132, before: %NULL%, after: %NULL%
catch_stmt@0_opt_3  :  %MARK%  ':'  visit_expr  
 index is: 364, source_index: 133, before: %NULL%, after: ':'
catch_stmt@0_opt_3  :  ':'  %MARK%  visit_expr  
 index is: 365, source_index: 133, before: ':', after: visit_expr
catch_stmt@0_opt_3  :  ':'  visit_expr  %MARK%  
 index is: 366, source_index: 133, before: visit_expr, after: %NULL%
throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, source_index: 134, before: %NULL%, after: 'throw'
throw_stmt  :  'throw'  %MARK%  throw_stmt@0_opt_2  endline  
 index is: 368, source_index: 134, before: 'throw', after: throw_stmt@0_opt_2
throw_stmt  :  'throw'  throw_stmt@0_opt_2  %MARK%  endline  
 index is: 369, source_index: 134, before: throw_stmt@0_opt_2, after: endline
throw_stmt  :  'throw'  throw_stmt@0_opt_2  endline  %MARK%  
 index is: 370, source_index: 134, before: endline, after: %NULL%
throw_stmt@0_opt_2  :  %MARK%  
 index is: 371, source_index: 135, before: %NULL%, after: %NULL%
throw_stmt@0_opt_2  :  %MARK%  expr  
 index is: 372, source_index: 136, before: %NULL%, after: expr
throw_stmt@0_opt_2  :  expr  %MARK%  
 index is: 373, source_index: 136, before: expr, after: %NULL%
class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, source_index: 137, before: %NULL%, after: class_stmt@0_decl_1
class_stmt  :  class_stmt@0_decl_1  %MARK%  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 375, source_index: 137, before: class_stmt@0_decl_1, after: ID
class_stmt  :  class_stmt@0_decl_1  ID  %MARK%  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 376, source_index: 137, before: ID, after: class_stmt@0_opt_3
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  %MARK%  ENDL  decl_stmts  'end'  ENDL  
 index is: 377, source_index: 137, before: class_stmt@0_opt_3, after: ENDL
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  %MARK%  decl_stmts  'end'  ENDL  
 index is: 378, source_index: 137, before: ENDL, after: decl_stmts
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  %MARK%  'end'  ENDL  
 index is: 379, source_index: 137, before: decl_stmts, after: 'end'
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  %MARK%  ENDL  
 index is: 380, source_index: 137, before: 'end', after: ENDL
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  %MARK%  
 index is: 381, source_index: 137, before: ENDL, after: %NULL%
class_stmt@0_opt_3  :  %MARK%  
 index is: 382, source_index: 138, before: %NULL%, after: %NULL%
class_stmt@0_opt_3  :  %MARK%  'extends'  visit_expr  
 index is: 383, source_index: 139, before: %NULL%, after: 'extends'
class_stmt@0_opt_3  :  'extends'  %MARK%  visit_expr  
 index is: 384, source_index: 139, before: 'extends', after: visit_expr
class_stmt@0_opt_3  :  'extends'  visit_expr  %MARK%  
 index is: 385, source_index: 139, before: visit_expr, after: %NULL%
class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, source_index: 140, before: %NULL%, after: 'struct'
class_stmt@0_decl_1  :  'struct'  %MARK%  
 index is: 387, source_index: 140, before: 'struct', after: %NULL%
class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, source_index: 141, before: %NULL%, after: 'class'
class_stmt@0_decl_1  :  'class'  %MARK%  
 index is: 389, source_index: 141, before: 'class', after: %NULL%
control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, source_index: 142, before: %NULL%, after: control_stmt@0_decl_1
control_stmt  :  control_stmt@0_decl_1  %MARK%  endline  
 index is: 391, source_index: 142, before: control_stmt@0_decl_1, after: endline
control_stmt  :  control_stmt@0_decl_1  endline  %MARK%  
 index is: 392, source_index: 142, before: endline, after: %NULL%
control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, source_index: 143, before: %NULL%, after: 'continue'
control_stmt@0_decl_1  :  'continue'  %MARK%  
 index is: 394, source_index: 143, before: 'continue', after: %NULL%
control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, source_index: 144, before: %NULL%, after: 'break'
control_stmt@0_decl_1  :  'break'  %MARK%  
 index is: 396, source_index: 144, before: 'break', after: %NULL%
expr_stmt  :  %MARK%  expr  endline  
 index is: 397, source_index: 145, before: %NULL%, after: expr
expr_stmt  :  expr  %MARK%  endline  
 index is: 398, source_index: 145, before: expr, after: endline
expr_stmt  :  expr  endline  %MARK%  
 index is: 399, source_index: 145, before: endline, after: %NULL%
end_stmt  :  %MARK%  'end'  ENDL  
 index is: 400, source_index: 146, before: %NULL%, after: 'end'
end_stmt  :  'end'  %MARK%  ENDL  
 index is: 401, source_index: 146, before: 'end', after: ENDL
end_stmt  :  'end'  ENDL  %MARK%  
 index is: 402, source_index: 146, before: ENDL, after: %NULL%
expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, source_index: 147, before: %NULL%, after: single_expr
expr  :  single_expr  %MARK%  expr@0_opt_2  
 index is: 404, source_index: 147, before: single_expr, after: expr@0_opt_2
expr  :  single_expr  expr@0_opt_2  %MARK%  
 index is: 405, source_index: 147, before: expr@0_opt_2, after: %NULL%
expr@0_opt_2  :  %MARK%  
 index is: 406, source_index: 148, before: %NULL%, after: %NULL%
expr@0_opt_2  :  %MARK%  ','  expr  
 index is: 407, source_index: 149, before: %NULL%, after: ','
expr@0_opt_2  :  ','  %MARK%  expr  
 index is: 408, source_index: 149, before: ',', after: expr
expr@0_opt_2  :  ','  expr  %MARK%  
 index is: 409, source_index: 149, before: expr, after: %NULL%
single_expr  :  %MARK%  basic_expr  
 index is: 410, source_index: 150, before: %NULL%, after: basic_expr
single_expr  :  basic_expr  %MARK%  
 index is: 411, source_index: 150, before: basic_expr, after: %NULL%
single_expr  :  %MARK%  lambda_expr  
 index is: 412, source_index: 151, before: %NULL%, after: lambda_expr
single_expr  :  lambda_expr  %MARK%  
 index is: 413, source_index: 151, before: lambda_expr, after: %NULL%
basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, source_index: 152, before: %NULL%, after: cond_expr
basic_expr  :  cond_expr  %MARK%  basic_expr@1_opt_2  
 index is: 415, source_index: 152, before: cond_expr, after: basic_expr@1_opt_2
basic_expr  :  cond_expr  basic_expr@1_opt_2  %MARK%  
 index is: 416, source_index: 152, before: basic_expr@1_opt_2, after: %NULL%
basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, source_index: 153, before: %NULL%, after: var_bind
basic_expr  :  var_bind  %MARK%  '='  cond_expr  
 index is: 418, source_index: 153, before: var_bind, after: '='
basic_expr  :  var_bind  '='  %MARK%  cond_expr  
 index is: 419, source_index: 153, before: '=', after: cond_expr
basic_expr  :  var_bind  '='  cond_expr  %MARK%  
 index is: 420, source_index: 153, before: cond_expr, after: %NULL%
basic_expr@1_opt_2  :  %MARK%  
 index is: 421, source_index: 154, before: %NULL%, after: %NULL%
basic_expr@1_opt_2  :  %MARK%  asi_op  single_expr  
 index is: 422, source_index: 155, before: %NULL%, after: asi_op
basic_expr@1_opt_2  :  asi_op  %MARK%  single_expr  
 index is: 423, source_index: 155, before: asi_op, after: single_expr
basic_expr@1_opt_2  :  asi_op  single_expr  %MARK%  
 index is: 424, source_index: 155, before: single_expr, after: %NULL%
asi_op  :  %MARK%  '^='  
 index is: 425, source_index: 156, before: %NULL%, after: '^='
asi_op  :  '^='  %MARK%  
 index is: 426, source_index: 156, before: '^=', after: %NULL%
asi_op  :  %MARK%  '%='  
 index is: 427, source_index: 157, before: %NULL%, after: '%='
asi_op  :  '%='  %MARK%  
 index is: 428, source_index: 157, before: '%=', after: %NULL%
asi_op  :  %MARK%  '/='  
 index is: 429, source_index: 158, before: %NULL%, after: '/='
asi_op  :  '/='  %MARK%  
 index is: 430, source_index: 158, before: '/=', after: %NULL%
asi_op  :  %MARK%  '*='  
 index is: 431, source_index: 159, before: %NULL%, after: '*='
asi_op  :  '*='  %MARK%  
 index is: 432, source_index: 159, before: '*=', after: %NULL%
asi_op  :  %MARK%  '-='  
 index is: 433, source_index: 160, before: %NULL%, after: '-='
asi_op  :  '-='  %MARK%  
 index is: 434, source_index: 160, before: '-=', after: %NULL%
asi_op  :  %MARK%  '+='  
 index is: 435, source_index: 161, before: %NULL%, after: '+='
asi_op  :  '+='  %MARK%  
 index is: 436, source_index: 161, before: '+=', after: %NULL%
asi_op  :  %MARK%  ':='  
 index is: 437, source_index: 162, before: %NULL%, after: ':='
asi_op  :  ':='  %MARK%  
 index is: 438, source_index: 162, before: ':=', after: %NULL%
asi_op  :  %MARK%  '='  
 index is: 439, source_index: 163, before: %NULL%, after: '='
asi_op  :  '='  %MARK%  
 index is: 440, source_index: 163, before: '=', after: %NULL%
lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, source_index: 164, before: %NULL%, after: '['
lambda_expr  :  '['  %MARK%  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 442, source_index: 164, before: '[', after: lambda_expr@0_opt_2
lambda_expr  :  '['  lambda_expr@0_opt_2  %MARK%  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 443, source_index: 164, before: lambda_expr@0_opt_2, after: ']'
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  %MARK%  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 444, source_index: 164, before: ']', after: '('
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  %MARK%  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 445, source_index: 164, before: '(', after: lambda_expr@0_opt_5
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  %MARK%  ')'  lambda_body  
 index is: 446, source_index: 164, before: lambda_expr@0_opt_5, after: ')'
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  %MARK%  lambda_body  
 index is: 447, source_index: 164, before: ')', after: lambda_body
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  %MARK%  
 index is: 448, source_index: 164, before: lambda_body, after: %NULL%
lambda_expr@0_opt_5  :  %MARK%  
 index is: 449, source_index: 165, before: %NULL%, after: %NULL%
lambda_expr@0_opt_5  :  %MARK%  argument_list  
 index is: 450, source_index: 166, before: %NULL%, after: argument_list
lambda_expr@0_opt_5  :  argument_list  %MARK%  
 index is: 451, source_index: 166, before: argument_list, after: %NULL%
lambda_expr@0_opt_2  :  %MARK%  
 index is: 452, source_index: 167, before: %NULL%, after: %NULL%
lambda_expr@0_opt_2  :  %MARK%  capture_list  
 index is: 453, source_index: 168, before: %NULL%, after: capture_list
lambda_expr@0_opt_2  :  capture_list  %MARK%  
 index is: 454, source_index: 168, before: capture_list, after: %NULL%
capture_list  :  %MARK%  capture_list@0_opt_1  ID  capture_list@0_rep_3  
 index is: 455, source_index: 169, before: %NULL%, after: capture_list@0_opt_1
capture_list  :  capture_list@0_opt_1  %MARK%  ID  capture_list@0_rep_3  
 index is: 456, source_index: 169, before: capture_list@0_opt_1, after: ID
capture_list  :  capture_list@0_opt_1  ID  %MARK%  capture_list@0_rep_3  
 index is: 457, source_index: 169, before: ID, after: capture_list@0_rep_3
capture_list  :  capture_list@0_opt_1  ID  capture_list@0_rep_3  %MARK%  
 index is: 458, source_index: 169, before: capture_list@0_rep_3, after: %NULL%
capture_list@0_rep_3  :  %MARK%  
 index is: 459, source_index: 170, before: %NULL%, after: %NULL%
capture_list@0_rep_3  :  %MARK%  ','  capture_list  capture_list@0_rep_3  
 index is: 460, source_index: 171, before: %NULL%, after: ','
capture_list@0_rep_3  :  ','  %MARK%  capture_list  capture_list@0_rep_3  
 index is: 461, source_index: 171, before: ',', after: capture_list
capture_list@0_rep_3  :  ','  capture_list  %MARK%  capture_list@0_rep_3  
 index is: 462, source_index: 171, before: capture_list, after: capture_list@0_rep_3
capture_list@0_rep_3  :  ','  capture_list  capture_list@0_rep_3  %MARK%  
 index is: 463, source_index: 171, before: capture_list@0_rep_3, after: %NULL%
capture_list@0_opt_1  :  %MARK%  
 index is: 464, source_index: 172, before: %NULL%, after: %NULL%
capture_list@0_opt_1  :  %MARK%  '='  
 index is: 465, source_index: 173, before: %NULL%, after: '='
capture_list@0_opt_1  :  '='  %MARK%  
 index is: 466, source_index: 173, before: '=', after: %NULL%
argument_list  :  %MARK%  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 467, source_index: 174, before: %NULL%, after: argument_list@1_opt_1
argument_list  :  argument_list@1_opt_1  %MARK%  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 468, source_index: 174, before: argument_list@1_opt_1, after: ID
argument_list  :  argument_list@1_opt_1  ID  %MARK%  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 469, source_index: 174, before: ID, after: argument_list@1_opt_3
argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  %MARK%  visit_expr  argument_list@1_rep_5  
 index is: 470, source_index: 174, before: argument_list@1_opt_3, after: visit_expr
argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  %MARK%  argument_list@1_rep_5  
 index is: 471, source_index: 174, before: visit_expr, after: argument_list@1_rep_5
argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  %MARK%  
 index is: 472, source_index: 174, before: argument_list@1_rep_5, after: %NULL%
argument_list  :  %MARK%  '...'  ID  
 index is: 473, source_index: 175, before: %NULL%, after: '...'
argument_list  :  '...'  %MARK%  ID  
 index is: 474, source_index: 175, before: '...', after: ID
argument_list  :  '...'  ID  %MARK%  
 index is: 475, source_index: 175, before: ID, after: %NULL%
argument_list@1_rep_5  :  %MARK%  
 index is: 476, source_index: 176, before: %NULL%, after: %NULL%
argument_list@1_rep_5  :  %MARK%  ','  argument_list  argument_list@1_rep_5  
 index is: 477, source_index: 177, before: %NULL%, after: ','
argument_list@1_rep_5  :  ','  %MARK%  argument_list  argument_list@1_rep_5  
 index is: 478, source_index: 177, before: ',', after: argument_list
argument_list@1_rep_5  :  ','  argument_list  %MARK%  argument_list@1_rep_5  
 index is: 479, source_index: 177, before: argument_list, after: argument_list@1_rep_5
argument_list@1_rep_5  :  ','  argument_list  argument_list@1_rep_5  %MARK%  
 index is: 480, source_index: 177, before: argument_list@1_rep_5, after: %NULL%
argument_list@1_opt_3  :  %MARK%  
 index is: 481, source_index: 178, before: %NULL%, after: %NULL%
argument_list@1_opt_3  :  %MARK%  ':'  
 index is: 482, source_index: 179, before: %NULL%, after: ':'
argument_list@1_opt_3  :  ':'  %MARK%  
 index is: 483, source_index: 179, before: ':', after: %NULL%
argument_list@1_opt_1  :  %MARK%  
 index is: 484, source_index: 180, before: %NULL%, after: %NULL%
argument_list@1_opt_1  :  %MARK%  '='  
 index is: 485, source_index: 181, before: %NULL%, after: '='
argument_list@1_opt_1  :  '='  %MARK%  
 index is: 486, source_index: 181, before: '=', after: %NULL%
lambda_body  :  %MARK%  '->'  cond_expr  
 index is: 487, source_index: 182, before: %NULL%, after: '->'
lambda_body  :  '->'  %MARK%  cond_expr  
 index is: 488, source_index: 182, before: '->', after: cond_expr
lambda_body  :  '->'  cond_expr  %MARK%  
 index is: 489, source_index: 182, before: cond_expr, after: %NULL%
lambda_body  :  %MARK%  '{'  lambda_body@0_rep_2  '}'  
 index is: 490, source_index: 183, before: %NULL%, after: '{'
lambda_body  :  '{'  %MARK%  lambda_body@0_rep_2  '}'  
 index is: 491, source_index: 183, before: '{', after: lambda_body@0_rep_2
lambda_body  :  '{'  lambda_body@0_rep_2  %MARK%  '}'  
 index is: 492, source_index: 183, before: lambda_body@0_rep_2, after: '}'
lambda_body  :  '{'  lambda_body@0_rep_2  '}'  %MARK%  
 index is: 493, source_index: 183, before: '}', after: %NULL%
lambda_body@0_rep_2  :  %MARK%  
 index is: 494, source_index: 184, before: %NULL%, after: %NULL%
lambda_body@0_rep_2  :  %MARK%  statement  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  
 index is: 495, source_index: 185, before: %NULL%, after: statement
lambda_body@0_rep_2  :  statement  %MARK%  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  
 index is: 496, source_index: 185, before: statement, after: lambda_body@0_rep_2@0_rep_2
lambda_body@0_rep_2  :  statement  lambda_body@0_rep_2@0_rep_2  %MARK%  lambda_body@0_rep_2  
 index is: 497, source_index: 185, before: lambda_body@0_rep_2@0_rep_2, after: lambda_body@0_rep_2
lambda_body@0_rep_2  :  statement  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  %MARK%  
 index is: 498, source_index: 185, before: lambda_body@0_rep_2, after: %NULL%
lambda_body@0_rep_2@0_rep_2  :  %MARK%  
 index is: 499, source_index: 186, before: %NULL%, after: %NULL%
lambda_body@0_rep_2@0_rep_2  :  %MARK%  ENDL  lambda_body@0_rep_2@0_rep_2  
 index is: 500, source_index: 187, before: %NULL%, after: ENDL
lambda_body@0_rep_2@0_rep_2  :  ENDL  %MARK%  lambda_body@0_rep_2@0_rep_2  
 index is: 501, source_index: 187, before: ENDL, after: lambda_body@0_rep_2@0_rep_2
lambda_body@0_rep_2@0_rep_2  :  ENDL  lambda_body@0_rep_2@0_rep_2  %MARK%  
 index is: 502, source_index: 187, before: lambda_body@0_rep_2@0_rep_2, after: %NULL%
cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, source_index: 188, before: %NULL%, after: logic_or_expr
cond_expr  :  logic_or_expr  %MARK%  cond_expr@0_opt_2  
 index is: 504, source_index: 188, before: logic_or_expr, after: cond_expr@0_opt_2
cond_expr  :  logic_or_expr  cond_expr@0_opt_2  %MARK%  
 index is: 505, source_index: 188, before: cond_expr@0_opt_2, after: %NULL%
cond_expr@0_opt_2  :  %MARK%  
 index is: 506, source_index: 189, before: %NULL%, after: %NULL%
cond_expr@0_opt_2  :  %MARK%  cond_postfix  
 index is: 507, source_index: 190, before: %NULL%, after: cond_postfix
cond_expr@0_opt_2  :  cond_postfix  %MARK%  
 index is: 508, source_index: 190, before: cond_postfix, after: %NULL%
cond_postfix  :  %MARK%  ':'  logic_or_expr  
 index is: 509, source_index: 191, before: %NULL%, after: ':'
cond_postfix  :  ':'  %MARK%  logic_or_expr  
 index is: 510, source_index: 191, before: ':', after: logic_or_expr
cond_postfix  :  ':'  logic_or_expr  %MARK%  
 index is: 511, source_index: 191, before: logic_or_expr, after: %NULL%
cond_postfix  :  %MARK%  '?'  logic_or_expr  ':'  cond_expr  
 index is: 512, source_index: 192, before: %NULL%, after: '?'
cond_postfix  :  '?'  %MARK%  logic_or_expr  ':'  cond_expr  
 index is: 513, source_index: 192, before: '?', after: logic_or_expr
cond_postfix  :  '?'  logic_or_expr  %MARK%  ':'  cond_expr  
 index is: 514, source_index: 192, before: logic_or_expr, after: ':'
cond_postfix  :  '?'  logic_or_expr  ':'  %MARK%  cond_expr  
 index is: 515, source_index: 192, before: ':', after: cond_expr
cond_postfix  :  '?'  logic_or_expr  ':'  cond_expr  %MARK%  
 index is: 516, source_index: 192, before: cond_expr, after: %NULL%
logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, source_index: 193, before: %NULL%, after: logic_and_expr
logic_or_expr  :  logic_and_expr  %MARK%  logic_or_expr@0_opt_2  
 index is: 518, source_index: 193, before: logic_and_expr, after: logic_or_expr@0_opt_2
logic_or_expr  :  logic_and_expr  logic_or_expr@0_opt_2  %MARK%  
 index is: 519, source_index: 193, before: logic_or_expr@0_opt_2, after: %NULL%
logic_or_expr@0_opt_2  :  %MARK%  
 index is: 520, source_index: 194, before: %NULL%, after: %NULL%
logic_or_expr@0_opt_2  :  %MARK%  logic_or_expr@0_opt_2@0_decl_1  logic_or_expr  
 index is: 521, source_index: 195, before: %NULL%, after: logic_or_expr@0_opt_2@0_decl_1
logic_or_expr@0_opt_2  :  logic_or_expr@0_opt_2@0_decl_1  %MARK%  logic_or_expr  
 index is: 522, source_index: 195, before: logic_or_expr@0_opt_2@0_decl_1, after: logic_or_expr
logic_or_expr@0_opt_2  :  logic_or_expr@0_opt_2@0_decl_1  logic_or_expr  %MARK%  
 index is: 523, source_index: 195, before: logic_or_expr, after: %NULL%
logic_or_expr@0_opt_2@0_decl_1  :  %MARK%  'or'  
 index is: 524, source_index: 196, before: %NULL%, after: 'or'
logic_or_expr@0_opt_2@0_decl_1  :  'or'  %MARK%  
 index is: 525, source_index: 196, before: 'or', after: %NULL%
logic_or_expr@0_opt_2@0_decl_1  :  %MARK%  '||'  
 index is: 526, source_index: 197, before: %NULL%, after: '||'
logic_or_expr@0_opt_2@0_decl_1  :  '||'  %MARK%  
 index is: 527, source_index: 197, before: '||', after: %NULL%
logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, source_index: 198, before: %NULL%, after: equal_expr
logic_and_expr  :  equal_expr  %MARK%  logic_and_expr@0_opt_2  
 index is: 529, source_index: 198, before: equal_expr, after: logic_and_expr@0_opt_2
logic_and_expr  :  equal_expr  logic_and_expr@0_opt_2  %MARK%  
 index is: 530, source_index: 198, before: logic_and_expr@0_opt_2, after: %NULL%
logic_and_expr@0_opt_2  :  %MARK%  
 index is: 531, source_index: 199, before: %NULL%, after: %NULL%
logic_and_expr@0_opt_2  :  %MARK%  logic_and_expr@0_opt_2@0_decl_1  logic_and_expr  
 index is: 532, source_index: 200, before: %NULL%, after: logic_and_expr@0_opt_2@0_decl_1
logic_and_expr@0_opt_2  :  logic_and_expr@0_opt_2@0_decl_1  %MARK%  logic_and_expr  
 index is: 533, source_index: 200, before: logic_and_expr@0_opt_2@0_decl_1, after: logic_and_expr
logic_and_expr@0_opt_2  :  logic_and_expr@0_opt_2@0_decl_1  logic_and_expr  %MARK%  
 index is: 534, source_index: 200, before: logic_and_expr, after: %NULL%
logic_and_expr@0_opt_2@0_decl_1  :  %MARK%  'and'  
 index is: 535, source_index: 201, before: %NULL%, after: 'and'
logic_and_expr@0_opt_2@0_decl_1  :  'and'  %MARK%  
 index is: 536, source_index: 201, before: 'and', after: %NULL%
logic_and_expr@0_opt_2@0_decl_1  :  %MARK%  '&&'  
 index is: 537, source_index: 202, before: %NULL%, after: '&&'
logic_and_expr@0_opt_2@0_decl_1  :  '&&'  %MARK%  
 index is: 538, source_index: 202, before: '&&', after: %NULL%
equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, source_index: 203, before: %NULL%, after: relat_expr
equal_expr  :  relat_expr  %MARK%  equal_expr@0_opt_2  
 index is: 540, source_index: 203, before: relat_expr, after: equal_expr@0_opt_2
equal_expr  :  relat_expr  equal_expr@0_opt_2  %MARK%  
 index is: 541, source_index: 203, before: equal_expr@0_opt_2, after: %NULL%
equal_expr@0_opt_2  :  %MARK%  
 index is: 542, source_index: 204, before: %NULL%, after: %NULL%
equal_expr@0_opt_2  :  %MARK%  equal_expr@0_opt_2@0_decl_1  equal_expr  
 index is: 543, source_index: 205, before: %NULL%, after: equal_expr@0_opt_2@0_decl_1
equal_expr@0_opt_2  :  equal_expr@0_opt_2@0_decl_1  %MARK%  equal_expr  
 index is: 544, source_index: 205, before: equal_expr@0_opt_2@0_decl_1, after: equal_expr
equal_expr@0_opt_2  :  equal_expr@0_opt_2@0_decl_1  equal_expr  %MARK%  
 index is: 545, source_index: 205, before: equal_expr, after: %NULL%
equal_expr@0_opt_2@0_decl_1  :  %MARK%  '!='  
 index is: 546, source_index: 206, before: %NULL%, after: '!='
equal_expr@0_opt_2@0_decl_1  :  '!='  %MARK%  
 index is: 547, source_index: 206, before: '!=', after: %NULL%
equal_expr@0_opt_2@0_decl_1  :  %MARK%  '=='  
 index is: 548, source_index: 207, before: %NULL%, after: '=='
equal_expr@0_opt_2@0_decl_1  :  '=='  %MARK%  
 index is: 549, source_index: 207, before: '==', after: %NULL%
relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, source_index: 208, before: %NULL%, after: add_expr
relat_expr  :  add_expr  %MARK%  relat_expr@0_opt_2  
 index is: 551, source_index: 208, before: add_expr, after: relat_expr@0_opt_2
relat_expr  :  add_expr  relat_expr@0_opt_2  %MARK%  
 index is: 552, source_index: 208, before: relat_expr@0_opt_2, after: %NULL%
relat_expr@0_opt_2  :  %MARK%  
 index is: 553, source_index: 209, before: %NULL%, after: %NULL%
relat_expr@0_opt_2  :  %MARK%  relat_expr@0_opt_2@0_decl_1  relat_expr  
 index is: 554, source_index: 210, before: %NULL%, after: relat_expr@0_opt_2@0_decl_1
relat_expr@0_opt_2  :  relat_expr@0_opt_2@0_decl_1  %MARK%  relat_expr  
 index is: 555, source_index: 210, before: relat_expr@0_opt_2@0_decl_1, after: relat_expr
relat_expr@0_opt_2  :  relat_expr@0_opt_2@0_decl_1  relat_expr  %MARK%  
 index is: 556, source_index: 210, before: relat_expr, after: %NULL%
relat_expr@0_opt_2@0_decl_1  :  %MARK%  '<='  
 index is: 557, source_index: 211, before: %NULL%, after: '<='
relat_expr@0_opt_2@0_decl_1  :  '<='  %MARK%  
 index is: 558, source_index: 211, before: '<=', after: %NULL%
relat_expr@0_opt_2@0_decl_1  :  %MARK%  '>='  
 index is: 559, source_index: 212, before: %NULL%, after: '>='
relat_expr@0_opt_2@0_decl_1  :  '>='  %MARK%  
 index is: 560, source_index: 212, before: '>=', after: %NULL%
relat_expr@0_opt_2@0_decl_1  :  %MARK%  '<'  
 index is: 561, source_index: 213, before: %NULL%, after: '<'
relat_expr@0_opt_2@0_decl_1  :  '<'  %MARK%  
 index is: 562, source_index: 213, before: '<', after: %NULL%
relat_expr@0_opt_2@0_decl_1  :  %MARK%  '>'  
 index is: 563, source_index: 214, before: %NULL%, after: '>'
relat_expr@0_opt_2@0_decl_1  :  '>'  %MARK%  
 index is: 564, source_index: 214, before: '>', after: %NULL%
add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, source_index: 215, before: %NULL%, after: mul_expr
add_expr  :  mul_expr  %MARK%  add_expr@0_opt_2  
 index is: 566, source_index: 215, before: mul_expr, after: add_expr@0_opt_2
add_expr  :  mul_expr  add_expr@0_opt_2  %MARK%  
 index is: 567, source_index: 215, before: add_expr@0_opt_2, after: %NULL%
add_expr@0_opt_2  :  %MARK%  
 index is: 568, source_index: 216, before: %NULL%, after: %NULL%
add_expr@0_opt_2  :  %MARK%  add_expr@0_opt_2@0_decl_1  add_expr  
 index is: 569, source_index: 217, before: %NULL%, after: add_expr@0_opt_2@0_decl_1
add_expr@0_opt_2  :  add_expr@0_opt_2@0_decl_1  %MARK%  add_expr  
 index is: 570, source_index: 217, before: add_expr@0_opt_2@0_decl_1, after: add_expr
add_expr@0_opt_2  :  add_expr@0_opt_2@0_decl_1  add_expr  %MARK%  
 index is: 571, source_index: 217, before: add_expr, after: %NULL%
add_expr@0_opt_2@0_decl_1  :  %MARK%  '-'  
 index is: 572, source_index: 218, before: %NULL%, after: '-'
add_expr@0_opt_2@0_decl_1  :  '-'  %MARK%  
 index is: 573, source_index: 218, before: '-', after: %NULL%
add_expr@0_opt_2@0_decl_1  :  %MARK%  '+'  
 index is: 574, source_index: 219, before: %NULL%, after: '+'
add_expr@0_opt_2@0_decl_1  :  '+'  %MARK%  
 index is: 575, source_index: 219, before: '+', after: %NULL%
mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, source_index: 220, before: %NULL%, after: unary_expr
mul_expr  :  unary_expr  %MARK%  mul_expr@0_opt_2  
 index is: 577, source_index: 220, before: unary_expr, after: mul_expr@0_opt_2
mul_expr  :  unary_expr  mul_expr@0_opt_2  %MARK%  
 index is: 578, source_index: 220, before: mul_expr@0_opt_2, after: %NULL%
mul_expr@0_opt_2  :  %MARK%  
 index is: 579, source_index: 221, before: %NULL%, after: %NULL%
mul_expr@0_opt_2  :  %MARK%  mul_expr@0_opt_2@0_decl_1  mul_expr  
 index is: 580, source_index: 222, before: %NULL%, after: mul_expr@0_opt_2@0_decl_1
mul_expr@0_opt_2  :  mul_expr@0_opt_2@0_decl_1  %MARK%  mul_expr  
 index is: 581, source_index: 222, before: mul_expr@0_opt_2@0_decl_1, after: mul_expr
mul_expr@0_opt_2  :  mul_expr@0_opt_2@0_decl_1  mul_expr  %MARK%  
 index is: 582, source_index: 222, before: mul_expr, after: %NULL%
mul_expr@0_opt_2@0_decl_1  :  %MARK%  '^'  
 index is: 583, source_index: 223, before: %NULL%, after: '^'
mul_expr@0_opt_2@0_decl_1  :  '^'  %MARK%  
 index is: 584, source_index: 223, before: '^', after: %NULL%
mul_expr@0_opt_2@0_decl_1  :  %MARK%  '%'  
 index is: 585, source_index: 224, before: %NULL%, after: '%'
mul_expr@0_opt_2@0_decl_1  :  '%'  %MARK%  
 index is: 586, source_index: 224, before: '%', after: %NULL%
mul_expr@0_opt_2@0_decl_1  :  %MARK%  '/'  
 index is: 587, source_index: 225, before: %NULL%, after: '/'
mul_expr@0_opt_2@0_decl_1  :  '/'  %MARK%  
 index is: 588, source_index: 225, before: '/', after: %NULL%
mul_expr@0_opt_2@0_decl_1  :  %MARK%  '*'  
 index is: 589, source_index: 226, before: %NULL%, after: '*'
mul_expr@0_opt_2@0_decl_1  :  '*'  %MARK%  
 index is: 590, source_index: 226, before: '*', after: %NULL%
unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, source_index: 227, before: %NULL%, after: prim_expr
unary_expr  :  prim_expr  %MARK%  unary_expr@2_opt_2  
 index is: 592, source_index: 227, before: prim_expr, after: unary_expr@2_opt_2
unary_expr  :  prim_expr  unary_expr@2_opt_2  %MARK%  
 index is: 593, source_index: 227, before: unary_expr@2_opt_2, after: %NULL%
unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, source_index: 228, before: %NULL%, after: unary_expr@1_decl_1
unary_expr  :  unary_expr@1_decl_1  %MARK%  unary_expr  unary_expr@1_opt_3  
 index is: 595, source_index: 228, before: unary_expr@1_decl_1, after: unary_expr
unary_expr  :  unary_expr@1_decl_1  unary_expr  %MARK%  unary_expr@1_opt_3  
 index is: 596, source_index: 228, before: unary_expr, after: unary_expr@1_opt_3
unary_expr  :  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  %MARK%  
 index is: 597, source_index: 228, before: unary_expr@1_opt_3, after: %NULL%
unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, source_index: 229, before: %NULL%, after: unary_op
unary_expr  :  unary_op  %MARK%  unary_expr  
 index is: 599, source_index: 229, before: unary_op, after: unary_expr
unary_expr  :  unary_op  unary_expr  %MARK%  
 index is: 600, source_index: 229, before: unary_expr, after: %NULL%
unary_expr@2_opt_2  :  %MARK%  
 index is: 601, source_index: 230, before: %NULL%, after: %NULL%
unary_expr@2_opt_2  :  %MARK%  postfix_expr  
 index is: 602, source_index: 231, before: %NULL%, after: postfix_expr
unary_expr@2_opt_2  :  postfix_expr  %MARK%  
 index is: 603, source_index: 231, before: postfix_expr, after: %NULL%
unary_expr@1_opt_3  :  %MARK%  
 index is: 604, source_index: 232, before: %NULL%, after: %NULL%
unary_expr@1_opt_3  :  %MARK%  array  
 index is: 605, source_index: 233, before: %NULL%, after: array
unary_expr@1_opt_3  :  array  %MARK%  
 index is: 606, source_index: 233, before: array, after: %NULL%
unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, source_index: 234, before: %NULL%, after: 'gcnew'
unary_expr@1_decl_1  :  'gcnew'  %MARK%  
 index is: 608, source_index: 234, before: 'gcnew', after: %NULL%
unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, source_index: 235, before: %NULL%, after: 'new'
unary_expr@1_decl_1  :  'new'  %MARK%  
 index is: 610, source_index: 235, before: 'new', after: %NULL%
unary_op  :  %MARK%  '!'  
 index is: 611, source_index: 236, before: %NULL%, after: '!'
unary_op  :  '!'  %MARK%  
 index is: 612, source_index: 236, before: '!', after: %NULL%
unary_op  :  %MARK%  '-'  
 index is: 613, source_index: 237, before: %NULL%, after: '-'
unary_op  :  '-'  %MARK%  
 index is: 614, source_index: 237, before: '-', after: %NULL%
unary_op  :  %MARK%  '&'  
 index is: 615, source_index: 238, before: %NULL%, after: '&'
unary_op  :  '&'  %MARK%  
 index is: 616, source_index: 238, before: '&', after: %NULL%
unary_op  :  %MARK%  '*'  
 index is: 617, source_index: 239, before: %NULL%, after: '*'
unary_op  :  '*'  %MARK%  
 index is: 618, source_index: 239, before: '*', after: %NULL%
unary_op  :  %MARK%  '--'  
 index is: 619, source_index: 240, before: %NULL%, after: '--'
unary_op  :  '--'  %MARK%  
 index is: 620, source_index: 240, before: '--', after: %NULL%
unary_op  :  %MARK%  '++'  
 index is: 621, source_index: 241, before: %NULL%, after: '++'
unary_op  :  '++'  %MARK%  
 index is: 622, source_index: 241, before: '++', after: %NULL%
unary_op  :  %MARK%  'typeid'  
 index is: 623, source_index: 242, before: %NULL%, after: 'typeid'
unary_op  :  'typeid'  %MARK%  
 index is: 624, source_index: 242, before: 'typeid', after: %NULL%
postfix_expr  :  %MARK%  postfix_expr@0_decl_1  postfix_expr@0_opt_2  
 index is: 625, source_index: 243, before: %NULL%, after: postfix_expr@0_decl_1
postfix_expr  :  postfix_expr@0_decl_1  %MARK%  postfix_expr@0_opt_2  
 index is: 626, source_index: 243, before: postfix_expr@0_decl_1, after: postfix_expr@0_opt_2
postfix_expr  :  postfix_expr@0_decl_1  postfix_expr@0_opt_2  %MARK%  
 index is: 627, source_index: 243, before: postfix_expr@0_opt_2, after: %NULL%
postfix_expr@0_opt_2  :  %MARK%  
 index is: 628, source_index: 244, before: %NULL%, after: %NULL%
postfix_expr@0_opt_2  :  %MARK%  postfix_expr  
 index is: 629, source_index: 245, before: %NULL%, after: postfix_expr
postfix_expr@0_opt_2  :  postfix_expr  %MARK%  
 index is: 630, source_index: 245, before: postfix_expr, after: %NULL%
postfix_expr@0_decl_1  :  %MARK%  '...'  
 index is: 631, source_index: 246, before: %NULL%, after: '...'
postfix_expr@0_decl_1  :  '...'  %MARK%  
 index is: 632, source_index: 246, before: '...', after: %NULL%
postfix_expr@0_decl_1  :  %MARK%  '--'  
 index is: 633, source_index: 247, before: %NULL%, after: '--'
postfix_expr@0_decl_1  :  '--'  %MARK%  
 index is: 634, source_index: 247, before: '--', after: %NULL%
postfix_expr@0_decl_1  :  %MARK%  '++'  
 index is: 635, source_index: 248, before: %NULL%, after: '++'
postfix_expr@0_decl_1  :  '++'  %MARK%  
 index is: 636, source_index: 248, before: '++', after: %NULL%
prim_expr  :  %MARK%  constant  
 index is: 637, source_index: 249, before: %NULL%, after: constant
prim_expr  :  constant  %MARK%  
 index is: 638, source_index: 249, before: constant, after: %NULL%
prim_expr  :  %MARK%  visit_expr  
 index is: 639, source_index: 250, before: %NULL%, after: visit_expr
prim_expr  :  visit_expr  %MARK%  
 index is: 640, source_index: 250, before: visit_expr, after: %NULL%
visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, source_index: 251, before: %NULL%, after: object
visit_expr  :  object  %MARK%  visit_expr@0_opt_2  
 index is: 642, source_index: 251, before: object, after: visit_expr@0_opt_2
visit_expr  :  object  visit_expr@0_opt_2  %MARK%  
 index is: 643, source_index: 251, before: visit_expr@0_opt_2, after: %NULL%
visit_expr@0_opt_2  :  %MARK%  
 index is: 644, source_index: 252, before: %NULL%, after: %NULL%
visit_expr@0_opt_2  :  %MARK%  visit_expr@0_opt_2@0_decl_1  visit_expr  
 index is: 645, source_index: 253, before: %NULL%, after: visit_expr@0_opt_2@0_decl_1
visit_expr@0_opt_2  :  visit_expr@0_opt_2@0_decl_1  %MARK%  visit_expr  
 index is: 646, source_index: 253, before: visit_expr@0_opt_2@0_decl_1, after: visit_expr
visit_expr@0_opt_2  :  visit_expr@0_opt_2@0_decl_1  visit_expr  %MARK%  
 index is: 647, source_index: 253, before: visit_expr, after: %NULL%
visit_expr@0_opt_2@0_decl_1  :  %MARK%  '.'  
 index is: 648, source_index: 254, before: %NULL%, after: '.'
visit_expr@0_opt_2@0_decl_1  :  '.'  %MARK%  
 index is: 649, source_index: 254, before: '.', after: %NULL%
visit_expr@0_opt_2@0_decl_1  :  %MARK%  '->'  
 index is: 650, source_index: 255, before: %NULL%, after: '->'
visit_expr@0_opt_2@0_decl_1  :  '->'  %MARK%  
 index is: 651, source_index: 255, before: '->', after: %NULL%
object  :  %MARK%  CHAR  
 index is: 652, source_index: 256, before: %NULL%, after: CHAR
object  :  CHAR  %MARK%  
 index is: 653, source_index: 256, before: CHAR, after: %NULL%
object  :  %MARK%  element  
 index is: 654, source_index: 257, before: %NULL%, after: element
object  :  element  %MARK%  
 index is: 655, source_index: 257, before: element, after: %NULL%
object  :  %MARK%  'global'  
 index is: 656, source_index: 258, before: %NULL%, after: 'global'
object  :  'global'  %MARK%  
 index is: 657, source_index: 258, before: 'global', after: %NULL%
object  :  %MARK%  'local'  
 index is: 658, source_index: 259, before: %NULL%, after: 'local'
object  :  'local'  %MARK%  
 index is: 659, source_index: 259, before: 'local', after: %NULL%
object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, source_index: 260, before: %NULL%, after: STR
object  :  STR  %MARK%  object@1_opt_2  
 index is: 661, source_index: 260, before: STR, after: object@1_opt_2
object  :  STR  object@1_opt_2  %MARK%  
 index is: 662, source_index: 260, before: object@1_opt_2, after: %NULL%
object  :  %MARK%  array  object@0_opt_2  
 index is: 663, source_index: 261, before: %NULL%, after: array
object  :  array  %MARK%  object@0_opt_2  
 index is: 664, source_index: 261, before: array, after: object@0_opt_2
object  :  array  object@0_opt_2  %MARK%  
 index is: 665, source_index: 261, before: object@0_opt_2, after: %NULL%
object@1_opt_2  :  %MARK%  
 index is: 666, source_index: 262, before: %NULL%, after: %NULL%
object@1_opt_2  :  %MARK%  index  
 index is: 667, source_index: 263, before: %NULL%, after: index
object@1_opt_2  :  index  %MARK%  
 index is: 668, source_index: 263, before: index, after: %NULL%
object@0_opt_2  :  %MARK%  
 index is: 669, source_index: 264, before: %NULL%, after: %NULL%
object@0_opt_2  :  %MARK%  index  
 index is: 670, source_index: 265, before: %NULL%, after: index
object@0_opt_2  :  index  %MARK%  
 index is: 671, source_index: 265, before: index, after: %NULL%
element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, source_index: 266, before: %NULL%, after: element@0_decl_1
element  :  element@0_decl_1  %MARK%  element@0_rep_2  
 index is: 673, source_index: 266, before: element@0_decl_1, after: element@0_rep_2
element  :  element@0_decl_1  element@0_rep_2  %MARK%  
 index is: 674, source_index: 266, before: element@0_rep_2, after: %NULL%
element@0_rep_2  :  %MARK%  
 index is: 675, source_index: 267, before: %NULL%, after: %NULL%
element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 676, source_index: 268, before: %NULL%, after: index
element@0_rep_2  :  index  %MARK%  element@0_rep_2  
 index is: 677, source_index: 268, before: index, after: element@0_rep_2
element@0_rep_2  :  index  element@0_rep_2  %MARK%  
 index is: 678, source_index: 268, before: element@0_rep_2, after: %NULL%
element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 679, source_index: 269, before: %NULL%, after: fcall
element@0_rep_2  :  fcall  %MARK%  element@0_rep_2  
 index is: 680, source_index: 269, before: fcall, after: element@0_rep_2
element@0_rep_2  :  fcall  element@0_rep_2  %MARK%  
 index is: 681, source_index: 269, before: element@0_rep_2, after: %NULL%
element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, source_index: 270, before: %NULL%, after: '('
element@0_decl_1  :  '('  %MARK%  single_expr  ')'  
 index is: 683, source_index: 270, before: '(', after: single_expr
element@0_decl_1  :  '('  single_expr  %MARK%  ')'  
 index is: 684, source_index: 270, before: single_expr, after: ')'
element@0_decl_1  :  '('  single_expr  ')'  %MARK%  
 index is: 685, source_index: 270, before: ')', after: %NULL%
element@0_decl_1  :  %MARK%  ID  
 index is: 686, source_index: 271, before: %NULL%, after: ID
element@0_decl_1  :  ID  %MARK%  
 index is: 687, source_index: 271, before: ID, after: %NULL%
constant  :  %MARK%  'false'  
 index is: 688, source_index: 272, before: %NULL%, after: 'false'
constant  :  'false'  %MARK%  
 index is: 689, source_index: 272, before: 'false', after: %NULL%
constant  :  %MARK%  'true'  
 index is: 690, source_index: 273, before: %NULL%, after: 'true'
constant  :  'true'  %MARK%  
 index is: 691, source_index: 273, before: 'true', after: %NULL%
constant  :  %MARK%  'null'  
 index is: 692, source_index: 274, before: %NULL%, after: 'null'
constant  :  'null'  %MARK%  
 index is: 693, source_index: 274, before: 'null', after: %NULL%
constant  :  %MARK%  NUM  
 index is: 694, source_index: 275, before: %NULL%, after: NUM
constant  :  NUM  %MARK%  
 index is: 695, source_index: 275, before: NUM, after: %NULL%
array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, source_index: 276, before: %NULL%, after: '{'
array  :  '{'  %MARK%  array@0_opt_2  '}'  
 index is: 697, source_index: 276, before: '{', after: array@0_opt_2
array  :  '{'  array@0_opt_2  %MARK%  '}'  
 index is: 698, source_index: 276, before: array@0_opt_2, after: '}'
array  :  '{'  array@0_opt_2  '}'  %MARK%  
 index is: 699, source_index: 276, before: '}', after: %NULL%
array@0_opt_2  :  %MARK%  
 index is: 700, source_index: 277, before: %NULL%, after: %NULL%
array@0_opt_2  :  %MARK%  expr  
 index is: 701, source_index: 278, before: %NULL%, after: expr
array@0_opt_2  :  expr  %MARK%  
 index is: 702, source_index: 278, before: expr, after: %NULL%
fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 703, source_index: 279, before: %NULL%, after: '('
fcall  :  '('  %MARK%  fcall@0_opt_2  ')'  
 index is: 704, source_index: 279, before: '(', after: fcall@0_opt_2
fcall  :  '('  fcall@0_opt_2  %MARK%  ')'  
 index is: 705, source_index: 279, before: fcall@0_opt_2, after: ')'
fcall  :  '('  fcall@0_opt_2  ')'  %MARK%  
 index is: 706, source_index: 279, before: ')', after: %NULL%
fcall@0_opt_2  :  %MARK%  
 index is: 707, source_index: 280, before: %NULL%, after: %NULL%
fcall@0_opt_2  :  %MARK%  expr  
 index is: 708, source_index: 281, before: %NULL%, after: expr
fcall@0_opt_2  :  expr  %MARK%  
 index is: 709, source_index: 281, before: expr, after: %NULL%
index  :  %MARK%  '['  basic_expr  ']'  
 index is: 710, source_index: 282, before: %NULL%, after: '['
index  :  '['  %MARK%  basic_expr  ']'  
 index is: 711, source_index: 282, before: '[', after: basic_expr
index  :  '['  basic_expr  %MARK%  ']'  
 index is: 712, source_index: 282, before: basic_expr, after: ']'
index  :  '['  basic_expr  ']'  %MARK%  
 index is: 713, source_index: 282, before: ']', after: %NULL%



###########
ADD TARGETS
###########
%start%  :  %MARK%  begin  
 index is: 0, term type: to_deduce, before: %NULL%, after: begin
TARGET LIST: 
target index: 1  , change_value: begin
target index: 2  , change_value: %NULL%

%start%  :  begin  %MARK%  
 index is: 1, term type: accept, before: begin, after: %NULL%
TARGET LIST: 

begin  :  %MARK%  stmts  
 index is: 2, term type: to_deduce, before: %NULL%, after: stmts
TARGET LIST: 
target index: 3  , change_value: stmts
target index: 14  , change_value: %NULL%

begin  :  stmts  %MARK%  
 index is: 3, term type: deduce, before: stmts, after: %NULL%
TARGET LIST: 

ignore  :  %MARK%  ignore@0_rep_1  
 index is: 4, term type: to_deduce, before: %NULL%, after: ignore@0_rep_1
TARGET LIST: 
target index: 5  , change_value: ignore@0_rep_1
target index: 6  , change_value: %NULL%
target index: 7  , change_value: %NULL%

ignore  :  ignore@0_rep_1  %MARK%  
 index is: 5, term type: deduce, before: ignore@0_rep_1, after: %NULL%
TARGET LIST: 

ignore@0_rep_1  :  %MARK%  
 index is: 6, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

ignore@0_rep_1  :  %MARK%  ENDL  ignore@0_rep_1  
 index is: 7, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 8  , change_value: ENDL

ignore@0_rep_1  :  ENDL  %MARK%  ignore@0_rep_1  
 index is: 8, term type: to_deduce, before: ENDL, after: ignore@0_rep_1
TARGET LIST: 
target index: 6  , change_value: %NULL%
target index: 7  , change_value: %NULL%
target index: 9  , change_value: ignore@0_rep_1

ignore@0_rep_1  :  ENDL  ignore@0_rep_1  %MARK%  
 index is: 9, term type: deduce, before: ignore@0_rep_1, after: %NULL%
TARGET LIST: 

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  ';'  %MARK%  
 index is: 11, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

endline  :  ENDL  %MARK%  
 index is: 13, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts  :  stmts@0_rep_1  %MARK%  
 index is: 15, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

stmts@0_rep_1  :  statement  %MARK%  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 18, term type: to_deduce, before: statement, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 19  , change_value: stmts@0_rep_1@0_rep_2
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%

stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  %MARK%  stmts@0_rep_1  
 index is: 19, term type: to_deduce, before: stmts@0_rep_1@0_rep_2, after: stmts@0_rep_1
TARGET LIST: 
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%
target index: 20  , change_value: stmts@0_rep_1

stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  %MARK%  
 index is: 20, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 21, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  stmts@0_rep_1@0_rep_2  
 index is: 22, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 23  , change_value: ENDL

stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  stmts@0_rep_1@0_rep_2  
 index is: 23, term type: to_deduce, before: ENDL, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%
target index: 24  , change_value: stmts@0_rep_1@0_rep_2

stmts@0_rep_1@0_rep_2  :  ENDL  stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 24, term type: deduce, before: stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

decl_stmts  :  %MARK%  decl_stmts@0_rep_1  
 index is: 25, term type: to_deduce, before: %NULL%, after: decl_stmts@0_rep_1
TARGET LIST: 
target index: 26  , change_value: decl_stmts@0_rep_1
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%

decl_stmts  :  decl_stmts@0_rep_1  %MARK%  
 index is: 26, term type: deduce, before: decl_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

decl_stmts@0_rep_1  :  %MARK%  
 index is: 27, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl_stmts@0_rep_1  :  %MARK%  declaration  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  
 index is: 28, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 29  , change_value: declaration
target index: 84  , change_value: %NULL%
target index: 86  , change_value: %NULL%
target index: 88  , change_value: %NULL%
target index: 90  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 94  , change_value: %NULL%

decl_stmts@0_rep_1  :  declaration  %MARK%  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  
 index is: 29, term type: to_deduce, before: declaration, after: decl_stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 30  , change_value: decl_stmts@0_rep_1@0_rep_2
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%

decl_stmts@0_rep_1  :  declaration  decl_stmts@0_rep_1@0_rep_2  %MARK%  decl_stmts@0_rep_1  
 index is: 30, term type: to_deduce, before: decl_stmts@0_rep_1@0_rep_2, after: decl_stmts@0_rep_1
TARGET LIST: 
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%
target index: 31  , change_value: decl_stmts@0_rep_1

decl_stmts@0_rep_1  :  declaration  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  %MARK%  
 index is: 31, term type: deduce, before: decl_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

decl_stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 32, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl_stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  decl_stmts@0_rep_1@0_rep_2  
 index is: 33, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 34  , change_value: ENDL

decl_stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  decl_stmts@0_rep_1@0_rep_2  
 index is: 34, term type: to_deduce, before: ENDL, after: decl_stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%
target index: 35  , change_value: decl_stmts@0_rep_1@0_rep_2

decl_stmts@0_rep_1@0_rep_2  :  ENDL  decl_stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 35, term type: deduce, before: decl_stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

endblock  :  %MARK%  catch_stmt  
 index is: 36, term type: to_deduce, before: %NULL%, after: catch_stmt
TARGET LIST: 
target index: 37  , change_value: catch_stmt
target index: 358  , change_value: %NULL%

endblock  :  catch_stmt  %MARK%  
 index is: 37, term type: deduce, before: catch_stmt, after: %NULL%
TARGET LIST: 

endblock  :  %MARK%  until_stmt  
 index is: 38, term type: to_deduce, before: %NULL%, after: until_stmt
TARGET LIST: 
target index: 39  , change_value: until_stmt
target index: 268  , change_value: %NULL%

endblock  :  until_stmt  %MARK%  
 index is: 39, term type: deduce, before: until_stmt, after: %NULL%
TARGET LIST: 

endblock  :  %MARK%  else_stmt  
 index is: 40, term type: to_deduce, before: %NULL%, after: else_stmt
TARGET LIST: 
target index: 41  , change_value: else_stmt
target index: 208  , change_value: %NULL%

endblock  :  else_stmt  %MARK%  
 index is: 41, term type: deduce, before: else_stmt, after: %NULL%
TARGET LIST: 

endblock  :  %MARK%  end_stmt  
 index is: 42, term type: to_deduce, before: %NULL%, after: end_stmt
TARGET LIST: 
target index: 43  , change_value: end_stmt
target index: 400  , change_value: %NULL%

endblock  :  end_stmt  %MARK%  
 index is: 43, term type: deduce, before: end_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  expr_stmt  %MARK%  
 index is: 45, term type: deduce, before: expr_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  class_stmt  %MARK%  
 index is: 47, term type: deduce, before: class_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  throw_stmt  %MARK%  
 index is: 49, term type: deduce, before: throw_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  try_stmt  %MARK%  
 index is: 51, term type: deduce, before: try_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  return_stmt  %MARK%  
 index is: 53, term type: deduce, before: return_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  function_stmt  %MARK%  
 index is: 55, term type: deduce, before: function_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  control_stmt  %MARK%  
 index is: 57, term type: deduce, before: control_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  foreach_stmt  %MARK%  
 index is: 59, term type: deduce, before: foreach_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  for_stmt  %MARK%  
 index is: 61, term type: deduce, before: for_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  loop_stmt  %MARK%  
 index is: 63, term type: deduce, before: loop_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  while_stmt  %MARK%  
 index is: 65, term type: deduce, before: while_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  switch_stmt  %MARK%  
 index is: 67, term type: deduce, before: switch_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  if_stmt  %MARK%  
 index is: 69, term type: deduce, before: if_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  using_stmt  %MARK%  
 index is: 71, term type: deduce, before: using_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  namespace_stmt  %MARK%  
 index is: 73, term type: deduce, before: namespace_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  block_stmt  %MARK%  
 index is: 75, term type: deduce, before: block_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  var_stmt  %MARK%  
 index is: 77, term type: deduce, before: var_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  import_stmt  %MARK%  
 index is: 79, term type: deduce, before: import_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  package_stmt  %MARK%  
 index is: 81, term type: deduce, before: package_stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

statement  :  prep_stmt  %MARK%  
 index is: 83, term type: deduce, before: prep_stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  class_stmt  
 index is: 84, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 85  , change_value: class_stmt
target index: 374  , change_value: %NULL%

declaration  :  class_stmt  %MARK%  
 index is: 85, term type: deduce, before: class_stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  function_stmt  
 index is: 86, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 87  , change_value: function_stmt
target index: 314  , change_value: %NULL%

declaration  :  function_stmt  %MARK%  
 index is: 87, term type: deduce, before: function_stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  using_stmt  
 index is: 88, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 89  , change_value: using_stmt
target index: 184  , change_value: %NULL%

declaration  :  using_stmt  %MARK%  
 index is: 89, term type: deduce, before: using_stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  var_stmt  
 index is: 90, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 91  , change_value: var_stmt
target index: 136  , change_value: %NULL%

declaration  :  var_stmt  %MARK%  
 index is: 91, term type: deduce, before: var_stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  namespace_stmt  
 index is: 92, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 93  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

declaration  :  namespace_stmt  %MARK%  
 index is: 93, term type: deduce, before: namespace_stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  prep_stmt  
 index is: 94, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 95  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

declaration  :  prep_stmt  %MARK%  
 index is: 95, term type: deduce, before: prep_stmt, after: %NULL%
TARGET LIST: 

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

prep_stmt  :  PREP  %MARK%  ENDL  
 index is: 97, term type: shift, before: PREP, after: ENDL
TARGET LIST: 
target index: 98  , change_value: ENDL

prep_stmt  :  PREP  ENDL  %MARK%  
 index is: 98, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

package_stmt  :  'package'  %MARK%  ID  endline  
 index is: 100, term type: shift, before: 'package', after: ID
TARGET LIST: 
target index: 101  , change_value: ID

package_stmt  :  'package'  ID  %MARK%  endline  
 index is: 101, term type: to_deduce, before: ID, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 102  , change_value: endline

package_stmt  :  'package'  ID  endline  %MARK%  
 index is: 102, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

import_stmt  :  'import'  %MARK%  import_list  endline  
 index is: 104, term type: to_deduce, before: 'import', after: import_list
TARGET LIST: 
target index: 105  , change_value: import_list
target index: 118  , change_value: %NULL%

import_stmt  :  'import'  import_list  %MARK%  endline  
 index is: 105, term type: to_deduce, before: import_list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 106  , change_value: endline

import_stmt  :  'import'  import_list  endline  %MARK%  
 index is: 106, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

module_list  :  %MARK%  ID  module_list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

module_list  :  ID  %MARK%  module_list@0_opt_2  
 index is: 108, term type: to_deduce, before: ID, after: module_list@0_opt_2
TARGET LIST: 
target index: 109  , change_value: module_list@0_opt_2
target index: 110  , change_value: %NULL%
target index: 111  , change_value: %NULL%

module_list  :  ID  module_list@0_opt_2  %MARK%  
 index is: 109, term type: deduce, before: module_list@0_opt_2, after: %NULL%
TARGET LIST: 

module_list@0_opt_2  :  %MARK%  
 index is: 110, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

module_list@0_opt_2  :  %MARK%  '.'  module_list@0_opt_2@0_decl_2  
 index is: 111, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 112  , change_value: '.'

module_list@0_opt_2  :  '.'  %MARK%  module_list@0_opt_2@0_decl_2  
 index is: 112, term type: to_deduce, before: '.', after: module_list@0_opt_2@0_decl_2
TARGET LIST: 
target index: 113  , change_value: module_list@0_opt_2@0_decl_2
target index: 114  , change_value: %NULL%
target index: 116  , change_value: %NULL%

module_list@0_opt_2  :  '.'  module_list@0_opt_2@0_decl_2  %MARK%  
 index is: 113, term type: deduce, before: module_list@0_opt_2@0_decl_2, after: %NULL%
TARGET LIST: 

module_list@0_opt_2@0_decl_2  :  %MARK%  module_list  
 index is: 114, term type: to_deduce, before: %NULL%, after: module_list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 115  , change_value: module_list

module_list@0_opt_2@0_decl_2  :  module_list  %MARK%  
 index is: 115, term type: deduce, before: module_list, after: %NULL%
TARGET LIST: 

module_list@0_opt_2@0_decl_2  :  %MARK%  '*'  
 index is: 116, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 117  , change_value: '*'

module_list@0_opt_2@0_decl_2  :  '*'  %MARK%  
 index is: 117, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

import_list  :  %MARK%  module_list  import_list@0_opt_2  import_list@0_opt_3  
 index is: 118, term type: to_deduce, before: %NULL%, after: module_list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 119  , change_value: module_list

import_list  :  module_list  %MARK%  import_list@0_opt_2  import_list@0_opt_3  
 index is: 119, term type: to_deduce, before: module_list, after: import_list@0_opt_2
TARGET LIST: 
target index: 120  , change_value: import_list@0_opt_2
target index: 126  , change_value: %NULL%
target index: 127  , change_value: %NULL%

import_list  :  module_list  import_list@0_opt_2  %MARK%  import_list@0_opt_3  
 index is: 120, term type: to_deduce, before: import_list@0_opt_2, after: import_list@0_opt_3
TARGET LIST: 
target index: 121  , change_value: import_list@0_opt_3
target index: 122  , change_value: %NULL%
target index: 123  , change_value: %NULL%

import_list  :  module_list  import_list@0_opt_2  import_list@0_opt_3  %MARK%  
 index is: 121, term type: deduce, before: import_list@0_opt_3, after: %NULL%
TARGET LIST: 

import_list@0_opt_3  :  %MARK%  
 index is: 122, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

import_list@0_opt_3  :  %MARK%  ','  import_list  
 index is: 123, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 124  , change_value: ','

import_list@0_opt_3  :  ','  %MARK%  import_list  
 index is: 124, term type: to_deduce, before: ',', after: import_list
TARGET LIST: 
target index: 118  , change_value: %NULL%
target index: 125  , change_value: import_list

import_list@0_opt_3  :  ','  import_list  %MARK%  
 index is: 125, term type: deduce, before: import_list, after: %NULL%
TARGET LIST: 

import_list@0_opt_2  :  %MARK%  
 index is: 126, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

import_list@0_opt_2  :  %MARK%  'as'  ID  
 index is: 127, term type: shift, before: %NULL%, after: 'as'
TARGET LIST: 
target index: 128  , change_value: 'as'

import_list@0_opt_2  :  'as'  %MARK%  ID  
 index is: 128, term type: shift, before: 'as', after: ID
TARGET LIST: 
target index: 129  , change_value: ID

import_list@0_opt_2  :  'as'  ID  %MARK%  
 index is: 129, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

var_def  :  %MARK%  var_list  
 index is: 130, term type: to_deduce, before: %NULL%, after: var_list
TARGET LIST: 
target index: 131  , change_value: var_list
target index: 162  , change_value: %NULL%

var_def  :  var_list  %MARK%  
 index is: 131, term type: deduce, before: var_list, after: %NULL%
TARGET LIST: 

var_def  :  %MARK%  var_bind  '='  basic_expr  
 index is: 132, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 133  , change_value: var_bind
target index: 146  , change_value: %NULL%

var_def  :  var_bind  %MARK%  '='  basic_expr  
 index is: 133, term type: shift, before: var_bind, after: '='
TARGET LIST: 
target index: 134  , change_value: '='

var_def  :  var_bind  '='  %MARK%  basic_expr  
 index is: 134, term type: to_deduce, before: '=', after: basic_expr
TARGET LIST: 
target index: 135  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

var_def  :  var_bind  '='  basic_expr  %MARK%  
 index is: 135, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

var_stmt  :  var_stmt@0_decl_1  %MARK%  var_def  endline  
 index is: 137, term type: to_deduce, before: var_stmt@0_decl_1, after: var_def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 138  , change_value: var_def

var_stmt  :  var_stmt@0_decl_1  var_def  %MARK%  endline  
 index is: 138, term type: to_deduce, before: var_def, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 139  , change_value: endline

var_stmt  :  var_stmt@0_decl_1  var_def  endline  %MARK%  
 index is: 139, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  'constant'  %MARK%  
 index is: 141, term type: deduce, before: 'constant', after: %NULL%
TARGET LIST: 

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  'link'  %MARK%  
 index is: 143, term type: deduce, before: 'link', after: %NULL%
TARGET LIST: 

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

var_stmt@0_decl_1  :  'var'  %MARK%  
 index is: 145, term type: deduce, before: 'var', after: %NULL%
TARGET LIST: 

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

var_bind  :  '('  %MARK%  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var_bind_list
TARGET LIST: 
target index: 148  , change_value: var_bind_list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

var_bind  :  '('  var_bind_list  %MARK%  var_bind@0_rep_3  ')'  
 index is: 148, term type: to_deduce, before: var_bind_list, after: var_bind@0_rep_3
TARGET LIST: 
target index: 149  , change_value: var_bind@0_rep_3
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%

var_bind  :  '('  var_bind_list  var_bind@0_rep_3  %MARK%  ')'  
 index is: 149, term type: shift, before: var_bind@0_rep_3, after: ')'
TARGET LIST: 
target index: 150  , change_value: ')'

var_bind  :  '('  var_bind_list  var_bind@0_rep_3  ')'  %MARK%  
 index is: 150, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

var_bind@0_rep_3  :  %MARK%  
 index is: 151, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var_bind@0_rep_3  :  %MARK%  ','  var_bind_list  var_bind@0_rep_3  
 index is: 152, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 153  , change_value: ','

var_bind@0_rep_3  :  ','  %MARK%  var_bind_list  var_bind@0_rep_3  
 index is: 153, term type: to_deduce, before: ',', after: var_bind_list
TARGET LIST: 
target index: 154  , change_value: var_bind_list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

var_bind@0_rep_3  :  ','  var_bind_list  %MARK%  var_bind@0_rep_3  
 index is: 154, term type: to_deduce, before: var_bind_list, after: var_bind@0_rep_3
TARGET LIST: 
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%
target index: 155  , change_value: var_bind@0_rep_3

var_bind@0_rep_3  :  ','  var_bind_list  var_bind@0_rep_3  %MARK%  
 index is: 155, term type: deduce, before: var_bind@0_rep_3, after: %NULL%
TARGET LIST: 

var_bind_list  :  %MARK%  var_bind  
 index is: 156, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 157  , change_value: var_bind

var_bind_list  :  var_bind  %MARK%  
 index is: 157, term type: deduce, before: var_bind, after: %NULL%
TARGET LIST: 

var_bind_list  :  %MARK%  '...'  
 index is: 158, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 159  , change_value: '...'

var_bind_list  :  '...'  %MARK%  
 index is: 159, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

var_bind_list  :  %MARK%  ID  
 index is: 160, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 161  , change_value: ID

var_bind_list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

var_list  :  %MARK%  ID  '='  single_expr  var_list@0_opt_4  
 index is: 162, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 163  , change_value: ID

var_list  :  ID  %MARK%  '='  single_expr  var_list@0_opt_4  
 index is: 163, term type: shift, before: ID, after: '='
TARGET LIST: 
target index: 164  , change_value: '='

var_list  :  ID  '='  %MARK%  single_expr  var_list@0_opt_4  
 index is: 164, term type: to_deduce, before: '=', after: single_expr
TARGET LIST: 
target index: 165  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

var_list  :  ID  '='  single_expr  %MARK%  var_list@0_opt_4  
 index is: 165, term type: to_deduce, before: single_expr, after: var_list@0_opt_4
TARGET LIST: 
target index: 166  , change_value: var_list@0_opt_4
target index: 167  , change_value: %NULL%
target index: 168  , change_value: %NULL%

var_list  :  ID  '='  single_expr  var_list@0_opt_4  %MARK%  
 index is: 166, term type: deduce, before: var_list@0_opt_4, after: %NULL%
TARGET LIST: 

var_list@0_opt_4  :  %MARK%  
 index is: 167, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var_list@0_opt_4  :  %MARK%  ','  var_list  
 index is: 168, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 169  , change_value: ','

var_list@0_opt_4  :  ','  %MARK%  var_list  
 index is: 169, term type: to_deduce, before: ',', after: var_list
TARGET LIST: 
target index: 162  , change_value: %NULL%
target index: 170  , change_value: var_list

var_list@0_opt_4  :  ','  var_list  %MARK%  
 index is: 170, term type: deduce, before: var_list, after: %NULL%
TARGET LIST: 

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

block_stmt  :  'block'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 172, term type: shift, before: 'block', after: ENDL
TARGET LIST: 
target index: 173  , change_value: ENDL

block_stmt  :  'block'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 173, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 174  , change_value: stmts

block_stmt  :  'block'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 174, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 175  , change_value: 'end'

block_stmt  :  'block'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 175, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 176  , change_value: ENDL

block_stmt  :  'block'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 176, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

namespace_stmt  :  'namespace'  %MARK%  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 178, term type: shift, before: 'namespace', after: ID
TARGET LIST: 
target index: 179  , change_value: ID

namespace_stmt  :  'namespace'  ID  %MARK%  ENDL  decl_stmts  'end'  ENDL  
 index is: 179, term type: shift, before: ID, after: ENDL
TARGET LIST: 
target index: 180  , change_value: ENDL

namespace_stmt  :  'namespace'  ID  ENDL  %MARK%  decl_stmts  'end'  ENDL  
 index is: 180, term type: to_deduce, before: ENDL, after: decl_stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 181  , change_value: decl_stmts

namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  %MARK%  'end'  ENDL  
 index is: 181, term type: shift, before: decl_stmts, after: 'end'
TARGET LIST: 
target index: 182  , change_value: 'end'

namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  'end'  %MARK%  ENDL  
 index is: 182, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 183  , change_value: ENDL

namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  %MARK%  
 index is: 183, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

using_stmt  :  'using'  %MARK%  using_list  endline  
 index is: 185, term type: to_deduce, before: 'using', after: using_list
TARGET LIST: 
target index: 186  , change_value: using_list
target index: 188  , change_value: %NULL%

using_stmt  :  'using'  using_list  %MARK%  endline  
 index is: 186, term type: to_deduce, before: using_list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 187  , change_value: endline

using_stmt  :  'using'  using_list  endline  %MARK%  
 index is: 187, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

using_list  :  %MARK%  module_list  using_list@0_opt_2  
 index is: 188, term type: to_deduce, before: %NULL%, after: module_list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 189  , change_value: module_list

using_list  :  module_list  %MARK%  using_list@0_opt_2  
 index is: 189, term type: to_deduce, before: module_list, after: using_list@0_opt_2
TARGET LIST: 
target index: 190  , change_value: using_list@0_opt_2
target index: 191  , change_value: %NULL%
target index: 192  , change_value: %NULL%

using_list  :  module_list  using_list@0_opt_2  %MARK%  
 index is: 190, term type: deduce, before: using_list@0_opt_2, after: %NULL%
TARGET LIST: 

using_list@0_opt_2  :  %MARK%  
 index is: 191, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

using_list@0_opt_2  :  %MARK%  ','  using_list  
 index is: 192, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 193  , change_value: ','

using_list@0_opt_2  :  ','  %MARK%  using_list  
 index is: 193, term type: to_deduce, before: ',', after: using_list
TARGET LIST: 
target index: 188  , change_value: %NULL%
target index: 194  , change_value: using_list

using_list@0_opt_2  :  ','  using_list  %MARK%  
 index is: 194, term type: deduce, before: using_list, after: %NULL%
TARGET LIST: 

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

if_stmt  :  'if'  %MARK%  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 196, term type: to_deduce, before: 'if', after: basic_expr
TARGET LIST: 
target index: 197  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

if_stmt  :  'if'  basic_expr  %MARK%  ENDL  stmts  if_stmt@0_rep_5  
 index is: 197, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 198  , change_value: ENDL

if_stmt  :  'if'  basic_expr  ENDL  %MARK%  stmts  if_stmt@0_rep_5  
 index is: 198, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 199  , change_value: stmts

if_stmt  :  'if'  basic_expr  ENDL  stmts  %MARK%  if_stmt@0_rep_5  
 index is: 199, term type: to_deduce, before: stmts, after: if_stmt@0_rep_5
TARGET LIST: 
target index: 200  , change_value: if_stmt@0_rep_5
target index: 201  , change_value: %NULL%
target index: 202  , change_value: %NULL%

if_stmt  :  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  %MARK%  
 index is: 200, term type: deduce, before: if_stmt@0_rep_5, after: %NULL%
TARGET LIST: 

if_stmt@0_rep_5  :  %MARK%  
 index is: 201, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

if_stmt@0_rep_5  :  %MARK%  else_stmt  stmts  'end'  ENDL  if_stmt@0_rep_5  
 index is: 202, term type: to_deduce, before: %NULL%, after: else_stmt
TARGET LIST: 
target index: 203  , change_value: else_stmt
target index: 208  , change_value: %NULL%

if_stmt@0_rep_5  :  else_stmt  %MARK%  stmts  'end'  ENDL  if_stmt@0_rep_5  
 index is: 203, term type: to_deduce, before: else_stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 204  , change_value: stmts

if_stmt@0_rep_5  :  else_stmt  stmts  %MARK%  'end'  ENDL  if_stmt@0_rep_5  
 index is: 204, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 205  , change_value: 'end'

if_stmt@0_rep_5  :  else_stmt  stmts  'end'  %MARK%  ENDL  if_stmt@0_rep_5  
 index is: 205, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 206  , change_value: ENDL

if_stmt@0_rep_5  :  else_stmt  stmts  'end'  ENDL  %MARK%  if_stmt@0_rep_5  
 index is: 206, term type: to_deduce, before: ENDL, after: if_stmt@0_rep_5
TARGET LIST: 
target index: 201  , change_value: %NULL%
target index: 202  , change_value: %NULL%
target index: 207  , change_value: if_stmt@0_rep_5

if_stmt@0_rep_5  :  else_stmt  stmts  'end'  ENDL  if_stmt@0_rep_5  %MARK%  
 index is: 207, term type: deduce, before: if_stmt@0_rep_5, after: %NULL%
TARGET LIST: 

else_stmt  :  %MARK%  'else'  else_stmt@0_opt_2  ENDL  
 index is: 208, term type: shift, before: %NULL%, after: 'else'
TARGET LIST: 
target index: 209  , change_value: 'else'

else_stmt  :  'else'  %MARK%  else_stmt@0_opt_2  ENDL  
 index is: 209, term type: to_deduce, before: 'else', after: else_stmt@0_opt_2
TARGET LIST: 
target index: 210  , change_value: else_stmt@0_opt_2
target index: 212  , change_value: %NULL%
target index: 213  , change_value: %NULL%

else_stmt  :  'else'  else_stmt@0_opt_2  %MARK%  ENDL  
 index is: 210, term type: shift, before: else_stmt@0_opt_2, after: ENDL
TARGET LIST: 
target index: 211  , change_value: ENDL

else_stmt  :  'else'  else_stmt@0_opt_2  ENDL  %MARK%  
 index is: 211, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

else_stmt@0_opt_2  :  %MARK%  
 index is: 212, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

else_stmt@0_opt_2  :  %MARK%  'if'  basic_expr  
 index is: 213, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 214  , change_value: 'if'

else_stmt@0_opt_2  :  'if'  %MARK%  basic_expr  
 index is: 214, term type: to_deduce, before: 'if', after: basic_expr
TARGET LIST: 
target index: 215  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

else_stmt@0_opt_2  :  'if'  basic_expr  %MARK%  
 index is: 215, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

switch_stmt  :  'switch'  %MARK%  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 217, term type: to_deduce, before: 'switch', after: basic_expr
TARGET LIST: 
target index: 218  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

switch_stmt  :  'switch'  basic_expr  %MARK%  ENDL  switch_stmts  'end'  ENDL  
 index is: 218, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 219  , change_value: ENDL

switch_stmt  :  'switch'  basic_expr  ENDL  %MARK%  switch_stmts  'end'  ENDL  
 index is: 219, term type: to_deduce, before: ENDL, after: switch_stmts
TARGET LIST: 
target index: 220  , change_value: switch_stmts
target index: 223  , change_value: %NULL%

switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  %MARK%  'end'  ENDL  
 index is: 220, term type: shift, before: switch_stmts, after: 'end'
TARGET LIST: 
target index: 221  , change_value: 'end'

switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  'end'  %MARK%  ENDL  
 index is: 221, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 222  , change_value: ENDL

switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  %MARK%  
 index is: 222, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

switch_stmts  :  %MARK%  switch_stmts@0_rep_1  switch_stmts@0_rep_2  
 index is: 223, term type: to_deduce, before: %NULL%, after: switch_stmts@0_rep_1
TARGET LIST: 
target index: 224  , change_value: switch_stmts@0_rep_1
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%

switch_stmts  :  switch_stmts@0_rep_1  %MARK%  switch_stmts@0_rep_2  
 index is: 224, term type: to_deduce, before: switch_stmts@0_rep_1, after: switch_stmts@0_rep_2
TARGET LIST: 
target index: 225  , change_value: switch_stmts@0_rep_2
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%

switch_stmts  :  switch_stmts@0_rep_1  switch_stmts@0_rep_2  %MARK%  
 index is: 225, term type: deduce, before: switch_stmts@0_rep_2, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_2  :  %MARK%  
 index is: 226, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_2  :  %MARK%  ENDL  switch_stmts@0_rep_2  
 index is: 227, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 228  , change_value: ENDL

switch_stmts@0_rep_2  :  ENDL  %MARK%  switch_stmts@0_rep_2  
 index is: 228, term type: to_deduce, before: ENDL, after: switch_stmts@0_rep_2
TARGET LIST: 
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%
target index: 229  , change_value: switch_stmts@0_rep_2

switch_stmts@0_rep_2  :  ENDL  switch_stmts@0_rep_2  %MARK%  
 index is: 229, term type: deduce, before: switch_stmts@0_rep_2, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_1  :  %MARK%  
 index is: 230, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_1  :  %MARK%  switch_default  switch_stmts@0_rep_1  
 index is: 231, term type: to_deduce, before: %NULL%, after: switch_default
TARGET LIST: 
target index: 232  , change_value: switch_default
target index: 244  , change_value: %NULL%

switch_stmts@0_rep_1  :  switch_default  %MARK%  switch_stmts@0_rep_1  
 index is: 232, term type: to_deduce, before: switch_default, after: switch_stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 233  , change_value: switch_stmts@0_rep_1
target index: 234  , change_value: %NULL%

switch_stmts@0_rep_1  :  switch_default  switch_stmts@0_rep_1  %MARK%  
 index is: 233, term type: deduce, before: switch_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_1  :  %MARK%  switch_case  switch_stmts@0_rep_1  
 index is: 234, term type: to_deduce, before: %NULL%, after: switch_case
TARGET LIST: 
target index: 235  , change_value: switch_case
target index: 237  , change_value: %NULL%

switch_stmts@0_rep_1  :  switch_case  %MARK%  switch_stmts@0_rep_1  
 index is: 235, term type: to_deduce, before: switch_case, after: switch_stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%
target index: 236  , change_value: switch_stmts@0_rep_1

switch_stmts@0_rep_1  :  switch_case  switch_stmts@0_rep_1  %MARK%  
 index is: 236, term type: deduce, before: switch_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

switch_case  :  %MARK%  'case'  logic_or_expr  ENDL  stmts  'end'  ENDL  
 index is: 237, term type: shift, before: %NULL%, after: 'case'
TARGET LIST: 
target index: 238  , change_value: 'case'

switch_case  :  'case'  %MARK%  logic_or_expr  ENDL  stmts  'end'  ENDL  
 index is: 238, term type: to_deduce, before: 'case', after: logic_or_expr
TARGET LIST: 
target index: 239  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

switch_case  :  'case'  logic_or_expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 239, term type: shift, before: logic_or_expr, after: ENDL
TARGET LIST: 
target index: 240  , change_value: ENDL

switch_case  :  'case'  logic_or_expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 240, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 241  , change_value: stmts

switch_case  :  'case'  logic_or_expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 241, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 242  , change_value: 'end'

switch_case  :  'case'  logic_or_expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 242, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 243  , change_value: ENDL

switch_case  :  'case'  logic_or_expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 243, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

switch_default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, term type: shift, before: %NULL%, after: 'default'
TARGET LIST: 
target index: 245  , change_value: 'default'

switch_default  :  'default'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 245, term type: shift, before: 'default', after: ENDL
TARGET LIST: 
target index: 246  , change_value: ENDL

switch_default  :  'default'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 246, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 247  , change_value: stmts

switch_default  :  'default'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 247, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 248  , change_value: 'end'

switch_default  :  'default'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 248, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 249  , change_value: ENDL

switch_default  :  'default'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 249, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

while_stmt  :  'while'  %MARK%  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 251, term type: to_deduce, before: 'while', after: basic_expr
TARGET LIST: 
target index: 252  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

while_stmt  :  'while'  basic_expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 252, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 253  , change_value: ENDL

while_stmt  :  'while'  basic_expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 253, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 254  , change_value: stmts

while_stmt  :  'while'  basic_expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 254, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 255  , change_value: 'end'

while_stmt  :  'while'  basic_expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 255, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 256  , change_value: ENDL

while_stmt  :  'while'  basic_expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 256, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

loop_stmt  :  'loop'  %MARK%  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 258, term type: shift, before: 'loop', after: ENDL
TARGET LIST: 
target index: 259  , change_value: ENDL

loop_stmt  :  'loop'  ENDL  %MARK%  stmts  loop_stmt@0_decl_4  
 index is: 259, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 260  , change_value: stmts

loop_stmt  :  'loop'  ENDL  stmts  %MARK%  loop_stmt@0_decl_4  
 index is: 260, term type: to_deduce, before: stmts, after: loop_stmt@0_decl_4
TARGET LIST: 
target index: 261  , change_value: loop_stmt@0_decl_4
target index: 262  , change_value: %NULL%
target index: 264  , change_value: %NULL%
target index: 266  , change_value: %NULL%

loop_stmt  :  'loop'  ENDL  stmts  loop_stmt@0_decl_4  %MARK%  
 index is: 261, term type: deduce, before: loop_stmt@0_decl_4, after: %NULL%
TARGET LIST: 

loop_stmt@0_decl_4  :  %MARK%  ENDL  
 index is: 262, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 263  , change_value: ENDL

loop_stmt@0_decl_4  :  ENDL  %MARK%  
 index is: 263, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

loop_stmt@0_decl_4  :  %MARK%  'end'  
 index is: 264, term type: shift, before: %NULL%, after: 'end'
TARGET LIST: 
target index: 265  , change_value: 'end'

loop_stmt@0_decl_4  :  'end'  %MARK%  
 index is: 265, term type: deduce, before: 'end', after: %NULL%
TARGET LIST: 

loop_stmt@0_decl_4  :  %MARK%  until_stmt  
 index is: 266, term type: to_deduce, before: %NULL%, after: until_stmt
TARGET LIST: 
target index: 267  , change_value: until_stmt
target index: 268  , change_value: %NULL%

loop_stmt@0_decl_4  :  until_stmt  %MARK%  
 index is: 267, term type: deduce, before: until_stmt, after: %NULL%
TARGET LIST: 

until_stmt  :  %MARK%  'until'  basic_expr  ENDL  
 index is: 268, term type: shift, before: %NULL%, after: 'until'
TARGET LIST: 
target index: 269  , change_value: 'until'

until_stmt  :  'until'  %MARK%  basic_expr  ENDL  
 index is: 269, term type: to_deduce, before: 'until', after: basic_expr
TARGET LIST: 
target index: 270  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

until_stmt  :  'until'  basic_expr  %MARK%  ENDL  
 index is: 270, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 271  , change_value: ENDL

until_stmt  :  'until'  basic_expr  ENDL  %MARK%  
 index is: 271, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

for_stmt  :  'for'  %MARK%  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 273, term type: to_deduce, before: 'for', after: for_stmt@0_opt_2
TARGET LIST: 
target index: 274  , change_value: for_stmt@0_opt_2
target index: 294  , change_value: %NULL%
target index: 295  , change_value: %NULL%

for_stmt  :  'for'  for_stmt@0_opt_2  %MARK%  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 274, term type: to_deduce, before: for_stmt@0_opt_2, after: for_stmt@0_decl_3
TARGET LIST: 
target index: 275  , change_value: for_stmt@0_decl_3
target index: 290  , change_value: %NULL%
target index: 292  , change_value: %NULL%

for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  %MARK%  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 275, term type: to_deduce, before: for_stmt@0_decl_3, after: for_stmt@0_opt_4
TARGET LIST: 
target index: 276  , change_value: for_stmt@0_opt_4
target index: 287  , change_value: %NULL%
target index: 288  , change_value: %NULL%

for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  %MARK%  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 276, term type: to_deduce, before: for_stmt@0_opt_4, after: for_stmt@0_decl_5
TARGET LIST: 
target index: 277  , change_value: for_stmt@0_decl_5
target index: 283  , change_value: %NULL%
target index: 285  , change_value: %NULL%

for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  %MARK%  for_stmt@0_opt_6  for_body  
 index is: 277, term type: to_deduce, before: for_stmt@0_decl_5, after: for_stmt@0_opt_6
TARGET LIST: 
target index: 278  , change_value: for_stmt@0_opt_6
target index: 280  , change_value: %NULL%
target index: 281  , change_value: %NULL%

for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  %MARK%  for_body  
 index is: 278, term type: to_deduce, before: for_stmt@0_opt_6, after: for_body
TARGET LIST: 
target index: 279  , change_value: for_body
target index: 303  , change_value: %NULL%

for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  %MARK%  
 index is: 279, term type: deduce, before: for_body, after: %NULL%
TARGET LIST: 

for_stmt@0_opt_6  :  %MARK%  
 index is: 280, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for_stmt@0_opt_6  :  %MARK%  basic_expr  
 index is: 281, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 282  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

for_stmt@0_opt_6  :  basic_expr  %MARK%  
 index is: 282, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

for_stmt@0_decl_5  :  %MARK%  ','  
 index is: 283, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 284  , change_value: ','

for_stmt@0_decl_5  :  ','  %MARK%  
 index is: 284, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

for_stmt@0_decl_5  :  %MARK%  ';'  
 index is: 285, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 286  , change_value: ';'

for_stmt@0_decl_5  :  ';'  %MARK%  
 index is: 286, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

for_stmt@0_opt_4  :  %MARK%  
 index is: 287, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for_stmt@0_opt_4  :  %MARK%  basic_expr  
 index is: 288, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 289  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

for_stmt@0_opt_4  :  basic_expr  %MARK%  
 index is: 289, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

for_stmt@0_decl_3  :  %MARK%  ','  
 index is: 290, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 291  , change_value: ','

for_stmt@0_decl_3  :  ','  %MARK%  
 index is: 291, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

for_stmt@0_decl_3  :  %MARK%  ';'  
 index is: 292, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 293  , change_value: ';'

for_stmt@0_decl_3  :  ';'  %MARK%  
 index is: 293, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

for_stmt@0_opt_2  :  %MARK%  
 index is: 294, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for_stmt@0_opt_2  :  %MARK%  var_def  
 index is: 295, term type: to_deduce, before: %NULL%, after: var_def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 296  , change_value: var_def

for_stmt@0_opt_2  :  var_def  %MARK%  
 index is: 296, term type: deduce, before: var_def, after: %NULL%
TARGET LIST: 

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

foreach_stmt  :  'foreach'  %MARK%  ID  'in'  basic_expr  for_body  
 index is: 298, term type: shift, before: 'foreach', after: ID
TARGET LIST: 
target index: 299  , change_value: ID

foreach_stmt  :  'foreach'  ID  %MARK%  'in'  basic_expr  for_body  
 index is: 299, term type: shift, before: ID, after: 'in'
TARGET LIST: 
target index: 300  , change_value: 'in'

foreach_stmt  :  'foreach'  ID  'in'  %MARK%  basic_expr  for_body  
 index is: 300, term type: to_deduce, before: 'in', after: basic_expr
TARGET LIST: 
target index: 301  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

foreach_stmt  :  'foreach'  ID  'in'  basic_expr  %MARK%  for_body  
 index is: 301, term type: to_deduce, before: basic_expr, after: for_body
TARGET LIST: 
target index: 302  , change_value: for_body
target index: 303  , change_value: %NULL%

foreach_stmt  :  'foreach'  ID  'in'  basic_expr  for_body  %MARK%  
 index is: 302, term type: deduce, before: for_body, after: %NULL%
TARGET LIST: 

for_body  :  %MARK%  for_body@0_decl_1  
 index is: 303, term type: to_deduce, before: %NULL%, after: for_body@0_decl_1
TARGET LIST: 
target index: 304  , change_value: for_body@0_decl_1
target index: 305  , change_value: %NULL%
target index: 310  , change_value: %NULL%

for_body  :  for_body@0_decl_1  %MARK%  
 index is: 304, term type: deduce, before: for_body@0_decl_1, after: %NULL%
TARGET LIST: 

for_body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 305, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 306  , change_value: ENDL

for_body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 306, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 307  , change_value: stmts

for_body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 307, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 308  , change_value: 'end'

for_body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 308, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 309  , change_value: ENDL

for_body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 309, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

for_body@0_decl_1  :  %MARK%  'do'  basic_expr  endline  
 index is: 310, term type: shift, before: %NULL%, after: 'do'
TARGET LIST: 
target index: 311  , change_value: 'do'

for_body@0_decl_1  :  'do'  %MARK%  basic_expr  endline  
 index is: 311, term type: to_deduce, before: 'do', after: basic_expr
TARGET LIST: 
target index: 312  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

for_body@0_decl_1  :  'do'  basic_expr  %MARK%  endline  
 index is: 312, term type: to_deduce, before: basic_expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 313  , change_value: endline

for_body@0_decl_1  :  'do'  basic_expr  endline  %MARK%  
 index is: 313, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

function_stmt  :  'function'  %MARK%  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 315, term type: shift, before: 'function', after: ID
TARGET LIST: 
target index: 316  , change_value: ID

function_stmt  :  'function'  ID  %MARK%  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 316, term type: shift, before: ID, after: '('
TARGET LIST: 
target index: 317  , change_value: '('

function_stmt  :  'function'  ID  '('  %MARK%  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 317, term type: to_deduce, before: '(', after: function_stmt@0_opt_4
TARGET LIST: 
target index: 318  , change_value: function_stmt@0_opt_4
target index: 325  , change_value: %NULL%
target index: 326  , change_value: %NULL%

function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  %MARK%  ')'  function_stmt@0_opt_6  function_body  
 index is: 318, term type: shift, before: function_stmt@0_opt_4, after: ')'
TARGET LIST: 
target index: 319  , change_value: ')'

function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  %MARK%  function_stmt@0_opt_6  function_body  
 index is: 319, term type: to_deduce, before: ')', after: function_stmt@0_opt_6
TARGET LIST: 
target index: 320  , change_value: function_stmt@0_opt_6
target index: 322  , change_value: %NULL%
target index: 323  , change_value: %NULL%

function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  %MARK%  function_body  
 index is: 320, term type: to_deduce, before: function_stmt@0_opt_6, after: function_body
TARGET LIST: 
target index: 321  , change_value: function_body
target index: 328  , change_value: %NULL%

function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  %MARK%  
 index is: 321, term type: deduce, before: function_body, after: %NULL%
TARGET LIST: 

function_stmt@0_opt_6  :  %MARK%  
 index is: 322, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function_stmt@0_opt_6  :  %MARK%  'override'  
 index is: 323, term type: shift, before: %NULL%, after: 'override'
TARGET LIST: 
target index: 324  , change_value: 'override'

function_stmt@0_opt_6  :  'override'  %MARK%  
 index is: 324, term type: deduce, before: 'override', after: %NULL%
TARGET LIST: 

function_stmt@0_opt_4  :  %MARK%  
 index is: 325, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function_stmt@0_opt_4  :  %MARK%  argument_list  
 index is: 326, term type: to_deduce, before: %NULL%, after: argument_list
TARGET LIST: 
target index: 327  , change_value: argument_list
target index: 467  , change_value: %NULL%
target index: 473  , change_value: %NULL%

function_stmt@0_opt_4  :  argument_list  %MARK%  
 index is: 327, term type: deduce, before: argument_list, after: %NULL%
TARGET LIST: 

function_body  :  %MARK%  function_body@0_decl_1  
 index is: 328, term type: to_deduce, before: %NULL%, after: function_body@0_decl_1
TARGET LIST: 
target index: 329  , change_value: function_body@0_decl_1
target index: 330  , change_value: %NULL%
target index: 335  , change_value: %NULL%

function_body  :  function_body@0_decl_1  %MARK%  
 index is: 329, term type: deduce, before: function_body@0_decl_1, after: %NULL%
TARGET LIST: 

function_body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 330, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 331  , change_value: ENDL

function_body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 331, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 332  , change_value: stmts

function_body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 332, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 333  , change_value: 'end'

function_body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 333, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 334  , change_value: ENDL

function_body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 334, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

function_body@0_decl_1  :  %MARK%  '{'  stmts  '}'  
 index is: 335, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 336  , change_value: '{'

function_body@0_decl_1  :  '{'  %MARK%  stmts  '}'  
 index is: 336, term type: to_deduce, before: '{', after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 337  , change_value: stmts

function_body@0_decl_1  :  '{'  stmts  %MARK%  '}'  
 index is: 337, term type: shift, before: stmts, after: '}'
TARGET LIST: 
target index: 338  , change_value: '}'

function_body@0_decl_1  :  '{'  stmts  '}'  %MARK%  
 index is: 338, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

return_stmt  :  'return'  %MARK%  return_stmt@0_opt_2  endline  
 index is: 340, term type: to_deduce, before: 'return', after: return_stmt@0_opt_2
TARGET LIST: 
target index: 341  , change_value: return_stmt@0_opt_2
target index: 343  , change_value: %NULL%
target index: 344  , change_value: %NULL%

return_stmt  :  'return'  return_stmt@0_opt_2  %MARK%  endline  
 index is: 341, term type: to_deduce, before: return_stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 342  , change_value: endline

return_stmt  :  'return'  return_stmt@0_opt_2  endline  %MARK%  
 index is: 342, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

return_stmt@0_opt_2  :  %MARK%  
 index is: 343, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

return_stmt@0_opt_2  :  %MARK%  expr  
 index is: 344, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 345  , change_value: expr
target index: 403  , change_value: %NULL%

return_stmt@0_opt_2  :  expr  %MARK%  
 index is: 345, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

try_stmt  :  'try'  %MARK%  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 347, term type: shift, before: 'try', after: ENDL
TARGET LIST: 
target index: 348  , change_value: ENDL

try_stmt  :  'try'  ENDL  %MARK%  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 348, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 349  , change_value: stmts

try_stmt  :  'try'  ENDL  stmts  %MARK%  try_stmt@0_rep_4  'end'  ENDL  
 index is: 349, term type: to_deduce, before: stmts, after: try_stmt@0_rep_4
TARGET LIST: 
target index: 350  , change_value: try_stmt@0_rep_4
target index: 353  , change_value: %NULL%
target index: 354  , change_value: %NULL%

try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  %MARK%  'end'  ENDL  
 index is: 350, term type: shift, before: try_stmt@0_rep_4, after: 'end'
TARGET LIST: 
target index: 351  , change_value: 'end'

try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  %MARK%  ENDL  
 index is: 351, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 352  , change_value: ENDL

try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  %MARK%  
 index is: 352, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

try_stmt@0_rep_4  :  %MARK%  
 index is: 353, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

try_stmt@0_rep_4  :  %MARK%  catch_stmt  stmts  try_stmt@0_rep_4  
 index is: 354, term type: to_deduce, before: %NULL%, after: catch_stmt
TARGET LIST: 
target index: 355  , change_value: catch_stmt
target index: 358  , change_value: %NULL%

try_stmt@0_rep_4  :  catch_stmt  %MARK%  stmts  try_stmt@0_rep_4  
 index is: 355, term type: to_deduce, before: catch_stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 356  , change_value: stmts

try_stmt@0_rep_4  :  catch_stmt  stmts  %MARK%  try_stmt@0_rep_4  
 index is: 356, term type: to_deduce, before: stmts, after: try_stmt@0_rep_4
TARGET LIST: 
target index: 353  , change_value: %NULL%
target index: 354  , change_value: %NULL%
target index: 357  , change_value: try_stmt@0_rep_4

try_stmt@0_rep_4  :  catch_stmt  stmts  try_stmt@0_rep_4  %MARK%  
 index is: 357, term type: deduce, before: try_stmt@0_rep_4, after: %NULL%
TARGET LIST: 

catch_stmt  :  %MARK%  'catch'  ID  catch_stmt@0_opt_3  ENDL  
 index is: 358, term type: shift, before: %NULL%, after: 'catch'
TARGET LIST: 
target index: 359  , change_value: 'catch'

catch_stmt  :  'catch'  %MARK%  ID  catch_stmt@0_opt_3  ENDL  
 index is: 359, term type: shift, before: 'catch', after: ID
TARGET LIST: 
target index: 360  , change_value: ID

catch_stmt  :  'catch'  ID  %MARK%  catch_stmt@0_opt_3  ENDL  
 index is: 360, term type: to_deduce, before: ID, after: catch_stmt@0_opt_3
TARGET LIST: 
target index: 361  , change_value: catch_stmt@0_opt_3
target index: 363  , change_value: %NULL%
target index: 364  , change_value: %NULL%

catch_stmt  :  'catch'  ID  catch_stmt@0_opt_3  %MARK%  ENDL  
 index is: 361, term type: shift, before: catch_stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 362  , change_value: ENDL

catch_stmt  :  'catch'  ID  catch_stmt@0_opt_3  ENDL  %MARK%  
 index is: 362, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

catch_stmt@0_opt_3  :  %MARK%  
 index is: 363, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

catch_stmt@0_opt_3  :  %MARK%  ':'  visit_expr  
 index is: 364, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 365  , change_value: ':'

catch_stmt@0_opt_3  :  ':'  %MARK%  visit_expr  
 index is: 365, term type: to_deduce, before: ':', after: visit_expr
TARGET LIST: 
target index: 366  , change_value: visit_expr
target index: 641  , change_value: %NULL%

catch_stmt@0_opt_3  :  ':'  visit_expr  %MARK%  
 index is: 366, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

throw_stmt  :  'throw'  %MARK%  throw_stmt@0_opt_2  endline  
 index is: 368, term type: to_deduce, before: 'throw', after: throw_stmt@0_opt_2
TARGET LIST: 
target index: 369  , change_value: throw_stmt@0_opt_2
target index: 371  , change_value: %NULL%
target index: 372  , change_value: %NULL%

throw_stmt  :  'throw'  throw_stmt@0_opt_2  %MARK%  endline  
 index is: 369, term type: to_deduce, before: throw_stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 370  , change_value: endline

throw_stmt  :  'throw'  throw_stmt@0_opt_2  endline  %MARK%  
 index is: 370, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

throw_stmt@0_opt_2  :  %MARK%  
 index is: 371, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

throw_stmt@0_opt_2  :  %MARK%  expr  
 index is: 372, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 373  , change_value: expr
target index: 403  , change_value: %NULL%

throw_stmt@0_opt_2  :  expr  %MARK%  
 index is: 373, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

class_stmt  :  class_stmt@0_decl_1  %MARK%  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 375, term type: shift, before: class_stmt@0_decl_1, after: ID
TARGET LIST: 
target index: 376  , change_value: ID

class_stmt  :  class_stmt@0_decl_1  ID  %MARK%  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 376, term type: to_deduce, before: ID, after: class_stmt@0_opt_3
TARGET LIST: 
target index: 377  , change_value: class_stmt@0_opt_3
target index: 382  , change_value: %NULL%
target index: 383  , change_value: %NULL%

class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  %MARK%  ENDL  decl_stmts  'end'  ENDL  
 index is: 377, term type: shift, before: class_stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 378  , change_value: ENDL

class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  %MARK%  decl_stmts  'end'  ENDL  
 index is: 378, term type: to_deduce, before: ENDL, after: decl_stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 379  , change_value: decl_stmts

class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  %MARK%  'end'  ENDL  
 index is: 379, term type: shift, before: decl_stmts, after: 'end'
TARGET LIST: 
target index: 380  , change_value: 'end'

class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  %MARK%  ENDL  
 index is: 380, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 381  , change_value: ENDL

class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  %MARK%  
 index is: 381, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

class_stmt@0_opt_3  :  %MARK%  
 index is: 382, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

class_stmt@0_opt_3  :  %MARK%  'extends'  visit_expr  
 index is: 383, term type: shift, before: %NULL%, after: 'extends'
TARGET LIST: 
target index: 384  , change_value: 'extends'

class_stmt@0_opt_3  :  'extends'  %MARK%  visit_expr  
 index is: 384, term type: to_deduce, before: 'extends', after: visit_expr
TARGET LIST: 
target index: 385  , change_value: visit_expr
target index: 641  , change_value: %NULL%

class_stmt@0_opt_3  :  'extends'  visit_expr  %MARK%  
 index is: 385, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  'struct'  %MARK%  
 index is: 387, term type: deduce, before: 'struct', after: %NULL%
TARGET LIST: 

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

class_stmt@0_decl_1  :  'class'  %MARK%  
 index is: 389, term type: deduce, before: 'class', after: %NULL%
TARGET LIST: 

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

control_stmt  :  control_stmt@0_decl_1  %MARK%  endline  
 index is: 391, term type: to_deduce, before: control_stmt@0_decl_1, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 392  , change_value: endline

control_stmt  :  control_stmt@0_decl_1  endline  %MARK%  
 index is: 392, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  'continue'  %MARK%  
 index is: 394, term type: deduce, before: 'continue', after: %NULL%
TARGET LIST: 

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

control_stmt@0_decl_1  :  'break'  %MARK%  
 index is: 396, term type: deduce, before: 'break', after: %NULL%
TARGET LIST: 

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

expr_stmt  :  expr  %MARK%  endline  
 index is: 398, term type: to_deduce, before: expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 399  , change_value: endline

expr_stmt  :  expr  endline  %MARK%  
 index is: 399, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

end_stmt  :  %MARK%  'end'  ENDL  
 index is: 400, term type: shift, before: %NULL%, after: 'end'
TARGET LIST: 
target index: 401  , change_value: 'end'

end_stmt  :  'end'  %MARK%  ENDL  
 index is: 401, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 402  , change_value: ENDL

end_stmt  :  'end'  ENDL  %MARK%  
 index is: 402, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

expr  :  single_expr  %MARK%  expr@0_opt_2  
 index is: 404, term type: to_deduce, before: single_expr, after: expr@0_opt_2
TARGET LIST: 
target index: 405  , change_value: expr@0_opt_2
target index: 406  , change_value: %NULL%
target index: 407  , change_value: %NULL%

expr  :  single_expr  expr@0_opt_2  %MARK%  
 index is: 405, term type: deduce, before: expr@0_opt_2, after: %NULL%
TARGET LIST: 

expr@0_opt_2  :  %MARK%  
 index is: 406, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

expr@0_opt_2  :  %MARK%  ','  expr  
 index is: 407, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 408  , change_value: ','

expr@0_opt_2  :  ','  %MARK%  expr  
 index is: 408, term type: to_deduce, before: ',', after: expr
TARGET LIST: 
target index: 403  , change_value: %NULL%
target index: 409  , change_value: expr

expr@0_opt_2  :  ','  expr  %MARK%  
 index is: 409, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  basic_expr  %MARK%  
 index is: 411, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

single_expr  :  lambda_expr  %MARK%  
 index is: 413, term type: deduce, before: lambda_expr, after: %NULL%
TARGET LIST: 

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  cond_expr  %MARK%  basic_expr@1_opt_2  
 index is: 415, term type: to_deduce, before: cond_expr, after: basic_expr@1_opt_2
TARGET LIST: 
target index: 416  , change_value: basic_expr@1_opt_2
target index: 421  , change_value: %NULL%
target index: 422  , change_value: %NULL%

basic_expr  :  cond_expr  basic_expr@1_opt_2  %MARK%  
 index is: 416, term type: deduce, before: basic_expr@1_opt_2, after: %NULL%
TARGET LIST: 

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

basic_expr  :  var_bind  %MARK%  '='  cond_expr  
 index is: 418, term type: shift, before: var_bind, after: '='
TARGET LIST: 
target index: 419  , change_value: '='

basic_expr  :  var_bind  '='  %MARK%  cond_expr  
 index is: 419, term type: to_deduce, before: '=', after: cond_expr
TARGET LIST: 
target index: 420  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  var_bind  '='  cond_expr  %MARK%  
 index is: 420, term type: deduce, before: cond_expr, after: %NULL%
TARGET LIST: 

basic_expr@1_opt_2  :  %MARK%  
 index is: 421, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

basic_expr@1_opt_2  :  %MARK%  asi_op  single_expr  
 index is: 422, term type: to_deduce, before: %NULL%, after: asi_op
TARGET LIST: 
target index: 423  , change_value: asi_op
target index: 425  , change_value: %NULL%
target index: 427  , change_value: %NULL%
target index: 429  , change_value: %NULL%
target index: 431  , change_value: %NULL%
target index: 433  , change_value: %NULL%
target index: 435  , change_value: %NULL%
target index: 437  , change_value: %NULL%
target index: 439  , change_value: %NULL%

basic_expr@1_opt_2  :  asi_op  %MARK%  single_expr  
 index is: 423, term type: to_deduce, before: asi_op, after: single_expr
TARGET LIST: 
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%
target index: 424  , change_value: single_expr

basic_expr@1_opt_2  :  asi_op  single_expr  %MARK%  
 index is: 424, term type: deduce, before: single_expr, after: %NULL%
TARGET LIST: 

asi_op  :  %MARK%  '^='  
 index is: 425, term type: shift, before: %NULL%, after: '^='
TARGET LIST: 
target index: 426  , change_value: '^='

asi_op  :  '^='  %MARK%  
 index is: 426, term type: deduce, before: '^=', after: %NULL%
TARGET LIST: 

asi_op  :  %MARK%  '%='  
 index is: 427, term type: shift, before: %NULL%, after: '%='
TARGET LIST: 
target index: 428  , change_value: '%='

asi_op  :  '%='  %MARK%  
 index is: 428, term type: deduce, before: '%=', after: %NULL%
TARGET LIST: 

asi_op  :  %MARK%  '/='  
 index is: 429, term type: shift, before: %NULL%, after: '/='
TARGET LIST: 
target index: 430  , change_value: '/='

asi_op  :  '/='  %MARK%  
 index is: 430, term type: deduce, before: '/=', after: %NULL%
TARGET LIST: 

asi_op  :  %MARK%  '*='  
 index is: 431, term type: shift, before: %NULL%, after: '*='
TARGET LIST: 
target index: 432  , change_value: '*='

asi_op  :  '*='  %MARK%  
 index is: 432, term type: deduce, before: '*=', after: %NULL%
TARGET LIST: 

asi_op  :  %MARK%  '-='  
 index is: 433, term type: shift, before: %NULL%, after: '-='
TARGET LIST: 
target index: 434  , change_value: '-='

asi_op  :  '-='  %MARK%  
 index is: 434, term type: deduce, before: '-=', after: %NULL%
TARGET LIST: 

asi_op  :  %MARK%  '+='  
 index is: 435, term type: shift, before: %NULL%, after: '+='
TARGET LIST: 
target index: 436  , change_value: '+='

asi_op  :  '+='  %MARK%  
 index is: 436, term type: deduce, before: '+=', after: %NULL%
TARGET LIST: 

asi_op  :  %MARK%  ':='  
 index is: 437, term type: shift, before: %NULL%, after: ':='
TARGET LIST: 
target index: 438  , change_value: ':='

asi_op  :  ':='  %MARK%  
 index is: 438, term type: deduce, before: ':=', after: %NULL%
TARGET LIST: 

asi_op  :  %MARK%  '='  
 index is: 439, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 440  , change_value: '='

asi_op  :  '='  %MARK%  
 index is: 440, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

lambda_expr  :  '['  %MARK%  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 442, term type: to_deduce, before: '[', after: lambda_expr@0_opt_2
TARGET LIST: 
target index: 443  , change_value: lambda_expr@0_opt_2
target index: 452  , change_value: %NULL%
target index: 453  , change_value: %NULL%

lambda_expr  :  '['  lambda_expr@0_opt_2  %MARK%  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 443, term type: shift, before: lambda_expr@0_opt_2, after: ']'
TARGET LIST: 
target index: 444  , change_value: ']'

lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  %MARK%  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 444, term type: shift, before: ']', after: '('
TARGET LIST: 
target index: 445  , change_value: '('

lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  %MARK%  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 445, term type: to_deduce, before: '(', after: lambda_expr@0_opt_5
TARGET LIST: 
target index: 446  , change_value: lambda_expr@0_opt_5
target index: 449  , change_value: %NULL%
target index: 450  , change_value: %NULL%

lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  %MARK%  ')'  lambda_body  
 index is: 446, term type: shift, before: lambda_expr@0_opt_5, after: ')'
TARGET LIST: 
target index: 447  , change_value: ')'

lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  %MARK%  lambda_body  
 index is: 447, term type: to_deduce, before: ')', after: lambda_body
TARGET LIST: 
target index: 448  , change_value: lambda_body
target index: 487  , change_value: %NULL%
target index: 490  , change_value: %NULL%

lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  %MARK%  
 index is: 448, term type: deduce, before: lambda_body, after: %NULL%
TARGET LIST: 

lambda_expr@0_opt_5  :  %MARK%  
 index is: 449, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_expr@0_opt_5  :  %MARK%  argument_list  
 index is: 450, term type: to_deduce, before: %NULL%, after: argument_list
TARGET LIST: 
target index: 451  , change_value: argument_list
target index: 467  , change_value: %NULL%
target index: 473  , change_value: %NULL%

lambda_expr@0_opt_5  :  argument_list  %MARK%  
 index is: 451, term type: deduce, before: argument_list, after: %NULL%
TARGET LIST: 

lambda_expr@0_opt_2  :  %MARK%  
 index is: 452, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_expr@0_opt_2  :  %MARK%  capture_list  
 index is: 453, term type: to_deduce, before: %NULL%, after: capture_list
TARGET LIST: 
target index: 454  , change_value: capture_list
target index: 455  , change_value: %NULL%

lambda_expr@0_opt_2  :  capture_list  %MARK%  
 index is: 454, term type: deduce, before: capture_list, after: %NULL%
TARGET LIST: 

capture_list  :  %MARK%  capture_list@0_opt_1  ID  capture_list@0_rep_3  
 index is: 455, term type: to_deduce, before: %NULL%, after: capture_list@0_opt_1
TARGET LIST: 
target index: 456  , change_value: capture_list@0_opt_1
target index: 464  , change_value: %NULL%
target index: 465  , change_value: %NULL%

capture_list  :  capture_list@0_opt_1  %MARK%  ID  capture_list@0_rep_3  
 index is: 456, term type: shift, before: capture_list@0_opt_1, after: ID
TARGET LIST: 
target index: 457  , change_value: ID

capture_list  :  capture_list@0_opt_1  ID  %MARK%  capture_list@0_rep_3  
 index is: 457, term type: to_deduce, before: ID, after: capture_list@0_rep_3
TARGET LIST: 
target index: 458  , change_value: capture_list@0_rep_3
target index: 459  , change_value: %NULL%
target index: 460  , change_value: %NULL%

capture_list  :  capture_list@0_opt_1  ID  capture_list@0_rep_3  %MARK%  
 index is: 458, term type: deduce, before: capture_list@0_rep_3, after: %NULL%
TARGET LIST: 

capture_list@0_rep_3  :  %MARK%  
 index is: 459, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture_list@0_rep_3  :  %MARK%  ','  capture_list  capture_list@0_rep_3  
 index is: 460, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 461  , change_value: ','

capture_list@0_rep_3  :  ','  %MARK%  capture_list  capture_list@0_rep_3  
 index is: 461, term type: to_deduce, before: ',', after: capture_list
TARGET LIST: 
target index: 455  , change_value: %NULL%
target index: 462  , change_value: capture_list

capture_list@0_rep_3  :  ','  capture_list  %MARK%  capture_list@0_rep_3  
 index is: 462, term type: to_deduce, before: capture_list, after: capture_list@0_rep_3
TARGET LIST: 
target index: 459  , change_value: %NULL%
target index: 460  , change_value: %NULL%
target index: 463  , change_value: capture_list@0_rep_3

capture_list@0_rep_3  :  ','  capture_list  capture_list@0_rep_3  %MARK%  
 index is: 463, term type: deduce, before: capture_list@0_rep_3, after: %NULL%
TARGET LIST: 

capture_list@0_opt_1  :  %MARK%  
 index is: 464, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture_list@0_opt_1  :  %MARK%  '='  
 index is: 465, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 466  , change_value: '='

capture_list@0_opt_1  :  '='  %MARK%  
 index is: 466, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

argument_list  :  %MARK%  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 467, term type: to_deduce, before: %NULL%, after: argument_list@1_opt_1
TARGET LIST: 
target index: 468  , change_value: argument_list@1_opt_1
target index: 484  , change_value: %NULL%
target index: 485  , change_value: %NULL%

argument_list  :  argument_list@1_opt_1  %MARK%  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 468, term type: shift, before: argument_list@1_opt_1, after: ID
TARGET LIST: 
target index: 469  , change_value: ID

argument_list  :  argument_list@1_opt_1  ID  %MARK%  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 469, term type: to_deduce, before: ID, after: argument_list@1_opt_3
TARGET LIST: 
target index: 470  , change_value: argument_list@1_opt_3
target index: 481  , change_value: %NULL%
target index: 482  , change_value: %NULL%

argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  %MARK%  visit_expr  argument_list@1_rep_5  
 index is: 470, term type: to_deduce, before: argument_list@1_opt_3, after: visit_expr
TARGET LIST: 
target index: 471  , change_value: visit_expr
target index: 641  , change_value: %NULL%

argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  %MARK%  argument_list@1_rep_5  
 index is: 471, term type: to_deduce, before: visit_expr, after: argument_list@1_rep_5
TARGET LIST: 
target index: 472  , change_value: argument_list@1_rep_5
target index: 476  , change_value: %NULL%
target index: 477  , change_value: %NULL%

argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  %MARK%  
 index is: 472, term type: deduce, before: argument_list@1_rep_5, after: %NULL%
TARGET LIST: 

argument_list  :  %MARK%  '...'  ID  
 index is: 473, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 474  , change_value: '...'

argument_list  :  '...'  %MARK%  ID  
 index is: 474, term type: shift, before: '...', after: ID
TARGET LIST: 
target index: 475  , change_value: ID

argument_list  :  '...'  ID  %MARK%  
 index is: 475, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

argument_list@1_rep_5  :  %MARK%  
 index is: 476, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument_list@1_rep_5  :  %MARK%  ','  argument_list  argument_list@1_rep_5  
 index is: 477, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 478  , change_value: ','

argument_list@1_rep_5  :  ','  %MARK%  argument_list  argument_list@1_rep_5  
 index is: 478, term type: to_deduce, before: ',', after: argument_list
TARGET LIST: 
target index: 467  , change_value: %NULL%
target index: 473  , change_value: %NULL%
target index: 479  , change_value: argument_list

argument_list@1_rep_5  :  ','  argument_list  %MARK%  argument_list@1_rep_5  
 index is: 479, term type: to_deduce, before: argument_list, after: argument_list@1_rep_5
TARGET LIST: 
target index: 476  , change_value: %NULL%
target index: 477  , change_value: %NULL%
target index: 480  , change_value: argument_list@1_rep_5

argument_list@1_rep_5  :  ','  argument_list  argument_list@1_rep_5  %MARK%  
 index is: 480, term type: deduce, before: argument_list@1_rep_5, after: %NULL%
TARGET LIST: 

argument_list@1_opt_3  :  %MARK%  
 index is: 481, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument_list@1_opt_3  :  %MARK%  ':'  
 index is: 482, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 483  , change_value: ':'

argument_list@1_opt_3  :  ':'  %MARK%  
 index is: 483, term type: deduce, before: ':', after: %NULL%
TARGET LIST: 

argument_list@1_opt_1  :  %MARK%  
 index is: 484, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument_list@1_opt_1  :  %MARK%  '='  
 index is: 485, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 486  , change_value: '='

argument_list@1_opt_1  :  '='  %MARK%  
 index is: 486, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

lambda_body  :  %MARK%  '->'  cond_expr  
 index is: 487, term type: shift, before: %NULL%, after: '->'
TARGET LIST: 
target index: 488  , change_value: '->'

lambda_body  :  '->'  %MARK%  cond_expr  
 index is: 488, term type: to_deduce, before: '->', after: cond_expr
TARGET LIST: 
target index: 489  , change_value: cond_expr
target index: 503  , change_value: %NULL%

lambda_body  :  '->'  cond_expr  %MARK%  
 index is: 489, term type: deduce, before: cond_expr, after: %NULL%
TARGET LIST: 

lambda_body  :  %MARK%  '{'  lambda_body@0_rep_2  '}'  
 index is: 490, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 491  , change_value: '{'

lambda_body  :  '{'  %MARK%  lambda_body@0_rep_2  '}'  
 index is: 491, term type: to_deduce, before: '{', after: lambda_body@0_rep_2
TARGET LIST: 
target index: 492  , change_value: lambda_body@0_rep_2
target index: 494  , change_value: %NULL%
target index: 495  , change_value: %NULL%

lambda_body  :  '{'  lambda_body@0_rep_2  %MARK%  '}'  
 index is: 492, term type: shift, before: lambda_body@0_rep_2, after: '}'
TARGET LIST: 
target index: 493  , change_value: '}'

lambda_body  :  '{'  lambda_body@0_rep_2  '}'  %MARK%  
 index is: 493, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

lambda_body@0_rep_2  :  %MARK%  
 index is: 494, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_body@0_rep_2  :  %MARK%  statement  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  
 index is: 495, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%
target index: 496  , change_value: statement

lambda_body@0_rep_2  :  statement  %MARK%  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  
 index is: 496, term type: to_deduce, before: statement, after: lambda_body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 497  , change_value: lambda_body@0_rep_2@0_rep_2
target index: 499  , change_value: %NULL%
target index: 500  , change_value: %NULL%

lambda_body@0_rep_2  :  statement  lambda_body@0_rep_2@0_rep_2  %MARK%  lambda_body@0_rep_2  
 index is: 497, term type: to_deduce, before: lambda_body@0_rep_2@0_rep_2, after: lambda_body@0_rep_2
TARGET LIST: 
target index: 494  , change_value: %NULL%
target index: 495  , change_value: %NULL%
target index: 498  , change_value: lambda_body@0_rep_2

lambda_body@0_rep_2  :  statement  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  %MARK%  
 index is: 498, term type: deduce, before: lambda_body@0_rep_2, after: %NULL%
TARGET LIST: 

lambda_body@0_rep_2@0_rep_2  :  %MARK%  
 index is: 499, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_body@0_rep_2@0_rep_2  :  %MARK%  ENDL  lambda_body@0_rep_2@0_rep_2  
 index is: 500, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 501  , change_value: ENDL

lambda_body@0_rep_2@0_rep_2  :  ENDL  %MARK%  lambda_body@0_rep_2@0_rep_2  
 index is: 501, term type: to_deduce, before: ENDL, after: lambda_body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 499  , change_value: %NULL%
target index: 500  , change_value: %NULL%
target index: 502  , change_value: lambda_body@0_rep_2@0_rep_2

lambda_body@0_rep_2@0_rep_2  :  ENDL  lambda_body@0_rep_2@0_rep_2  %MARK%  
 index is: 502, term type: deduce, before: lambda_body@0_rep_2@0_rep_2, after: %NULL%
TARGET LIST: 

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

cond_expr  :  logic_or_expr  %MARK%  cond_expr@0_opt_2  
 index is: 504, term type: to_deduce, before: logic_or_expr, after: cond_expr@0_opt_2
TARGET LIST: 
target index: 505  , change_value: cond_expr@0_opt_2
target index: 506  , change_value: %NULL%
target index: 507  , change_value: %NULL%

cond_expr  :  logic_or_expr  cond_expr@0_opt_2  %MARK%  
 index is: 505, term type: deduce, before: cond_expr@0_opt_2, after: %NULL%
TARGET LIST: 

cond_expr@0_opt_2  :  %MARK%  
 index is: 506, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

cond_expr@0_opt_2  :  %MARK%  cond_postfix  
 index is: 507, term type: to_deduce, before: %NULL%, after: cond_postfix
TARGET LIST: 
target index: 508  , change_value: cond_postfix
target index: 509  , change_value: %NULL%
target index: 512  , change_value: %NULL%

cond_expr@0_opt_2  :  cond_postfix  %MARK%  
 index is: 508, term type: deduce, before: cond_postfix, after: %NULL%
TARGET LIST: 

cond_postfix  :  %MARK%  ':'  logic_or_expr  
 index is: 509, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 510  , change_value: ':'

cond_postfix  :  ':'  %MARK%  logic_or_expr  
 index is: 510, term type: to_deduce, before: ':', after: logic_or_expr
TARGET LIST: 
target index: 511  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

cond_postfix  :  ':'  logic_or_expr  %MARK%  
 index is: 511, term type: deduce, before: logic_or_expr, after: %NULL%
TARGET LIST: 

cond_postfix  :  %MARK%  '?'  logic_or_expr  ':'  cond_expr  
 index is: 512, term type: shift, before: %NULL%, after: '?'
TARGET LIST: 
target index: 513  , change_value: '?'

cond_postfix  :  '?'  %MARK%  logic_or_expr  ':'  cond_expr  
 index is: 513, term type: to_deduce, before: '?', after: logic_or_expr
TARGET LIST: 
target index: 514  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

cond_postfix  :  '?'  logic_or_expr  %MARK%  ':'  cond_expr  
 index is: 514, term type: shift, before: logic_or_expr, after: ':'
TARGET LIST: 
target index: 515  , change_value: ':'

cond_postfix  :  '?'  logic_or_expr  ':'  %MARK%  cond_expr  
 index is: 515, term type: to_deduce, before: ':', after: cond_expr
TARGET LIST: 
target index: 503  , change_value: %NULL%
target index: 516  , change_value: cond_expr

cond_postfix  :  '?'  logic_or_expr  ':'  cond_expr  %MARK%  
 index is: 516, term type: deduce, before: cond_expr, after: %NULL%
TARGET LIST: 

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_or_expr  :  logic_and_expr  %MARK%  logic_or_expr@0_opt_2  
 index is: 518, term type: to_deduce, before: logic_and_expr, after: logic_or_expr@0_opt_2
TARGET LIST: 
target index: 519  , change_value: logic_or_expr@0_opt_2
target index: 520  , change_value: %NULL%
target index: 521  , change_value: %NULL%

logic_or_expr  :  logic_and_expr  logic_or_expr@0_opt_2  %MARK%  
 index is: 519, term type: deduce, before: logic_or_expr@0_opt_2, after: %NULL%
TARGET LIST: 

logic_or_expr@0_opt_2  :  %MARK%  
 index is: 520, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

logic_or_expr@0_opt_2  :  %MARK%  logic_or_expr@0_opt_2@0_decl_1  logic_or_expr  
 index is: 521, term type: to_deduce, before: %NULL%, after: logic_or_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 522  , change_value: logic_or_expr@0_opt_2@0_decl_1
target index: 524  , change_value: %NULL%
target index: 526  , change_value: %NULL%

logic_or_expr@0_opt_2  :  logic_or_expr@0_opt_2@0_decl_1  %MARK%  logic_or_expr  
 index is: 522, term type: to_deduce, before: logic_or_expr@0_opt_2@0_decl_1, after: logic_or_expr
TARGET LIST: 
target index: 517  , change_value: %NULL%
target index: 523  , change_value: logic_or_expr

logic_or_expr@0_opt_2  :  logic_or_expr@0_opt_2@0_decl_1  logic_or_expr  %MARK%  
 index is: 523, term type: deduce, before: logic_or_expr, after: %NULL%
TARGET LIST: 

logic_or_expr@0_opt_2@0_decl_1  :  %MARK%  'or'  
 index is: 524, term type: shift, before: %NULL%, after: 'or'
TARGET LIST: 
target index: 525  , change_value: 'or'

logic_or_expr@0_opt_2@0_decl_1  :  'or'  %MARK%  
 index is: 525, term type: deduce, before: 'or', after: %NULL%
TARGET LIST: 

logic_or_expr@0_opt_2@0_decl_1  :  %MARK%  '||'  
 index is: 526, term type: shift, before: %NULL%, after: '||'
TARGET LIST: 
target index: 527  , change_value: '||'

logic_or_expr@0_opt_2@0_decl_1  :  '||'  %MARK%  
 index is: 527, term type: deduce, before: '||', after: %NULL%
TARGET LIST: 

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

logic_and_expr  :  equal_expr  %MARK%  logic_and_expr@0_opt_2  
 index is: 529, term type: to_deduce, before: equal_expr, after: logic_and_expr@0_opt_2
TARGET LIST: 
target index: 530  , change_value: logic_and_expr@0_opt_2
target index: 531  , change_value: %NULL%
target index: 532  , change_value: %NULL%

logic_and_expr  :  equal_expr  logic_and_expr@0_opt_2  %MARK%  
 index is: 530, term type: deduce, before: logic_and_expr@0_opt_2, after: %NULL%
TARGET LIST: 

logic_and_expr@0_opt_2  :  %MARK%  
 index is: 531, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

logic_and_expr@0_opt_2  :  %MARK%  logic_and_expr@0_opt_2@0_decl_1  logic_and_expr  
 index is: 532, term type: to_deduce, before: %NULL%, after: logic_and_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 533  , change_value: logic_and_expr@0_opt_2@0_decl_1
target index: 535  , change_value: %NULL%
target index: 537  , change_value: %NULL%

logic_and_expr@0_opt_2  :  logic_and_expr@0_opt_2@0_decl_1  %MARK%  logic_and_expr  
 index is: 533, term type: to_deduce, before: logic_and_expr@0_opt_2@0_decl_1, after: logic_and_expr
TARGET LIST: 
target index: 528  , change_value: %NULL%
target index: 534  , change_value: logic_and_expr

logic_and_expr@0_opt_2  :  logic_and_expr@0_opt_2@0_decl_1  logic_and_expr  %MARK%  
 index is: 534, term type: deduce, before: logic_and_expr, after: %NULL%
TARGET LIST: 

logic_and_expr@0_opt_2@0_decl_1  :  %MARK%  'and'  
 index is: 535, term type: shift, before: %NULL%, after: 'and'
TARGET LIST: 
target index: 536  , change_value: 'and'

logic_and_expr@0_opt_2@0_decl_1  :  'and'  %MARK%  
 index is: 536, term type: deduce, before: 'and', after: %NULL%
TARGET LIST: 

logic_and_expr@0_opt_2@0_decl_1  :  %MARK%  '&&'  
 index is: 537, term type: shift, before: %NULL%, after: '&&'
TARGET LIST: 
target index: 538  , change_value: '&&'

logic_and_expr@0_opt_2@0_decl_1  :  '&&'  %MARK%  
 index is: 538, term type: deduce, before: '&&', after: %NULL%
TARGET LIST: 

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

equal_expr  :  relat_expr  %MARK%  equal_expr@0_opt_2  
 index is: 540, term type: to_deduce, before: relat_expr, after: equal_expr@0_opt_2
TARGET LIST: 
target index: 541  , change_value: equal_expr@0_opt_2
target index: 542  , change_value: %NULL%
target index: 543  , change_value: %NULL%

equal_expr  :  relat_expr  equal_expr@0_opt_2  %MARK%  
 index is: 541, term type: deduce, before: equal_expr@0_opt_2, after: %NULL%
TARGET LIST: 

equal_expr@0_opt_2  :  %MARK%  
 index is: 542, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

equal_expr@0_opt_2  :  %MARK%  equal_expr@0_opt_2@0_decl_1  equal_expr  
 index is: 543, term type: to_deduce, before: %NULL%, after: equal_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 544  , change_value: equal_expr@0_opt_2@0_decl_1
target index: 546  , change_value: %NULL%
target index: 548  , change_value: %NULL%

equal_expr@0_opt_2  :  equal_expr@0_opt_2@0_decl_1  %MARK%  equal_expr  
 index is: 544, term type: to_deduce, before: equal_expr@0_opt_2@0_decl_1, after: equal_expr
TARGET LIST: 
target index: 539  , change_value: %NULL%
target index: 545  , change_value: equal_expr

equal_expr@0_opt_2  :  equal_expr@0_opt_2@0_decl_1  equal_expr  %MARK%  
 index is: 545, term type: deduce, before: equal_expr, after: %NULL%
TARGET LIST: 

equal_expr@0_opt_2@0_decl_1  :  %MARK%  '!='  
 index is: 546, term type: shift, before: %NULL%, after: '!='
TARGET LIST: 
target index: 547  , change_value: '!='

equal_expr@0_opt_2@0_decl_1  :  '!='  %MARK%  
 index is: 547, term type: deduce, before: '!=', after: %NULL%
TARGET LIST: 

equal_expr@0_opt_2@0_decl_1  :  %MARK%  '=='  
 index is: 548, term type: shift, before: %NULL%, after: '=='
TARGET LIST: 
target index: 549  , change_value: '=='

equal_expr@0_opt_2@0_decl_1  :  '=='  %MARK%  
 index is: 549, term type: deduce, before: '==', after: %NULL%
TARGET LIST: 

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

relat_expr  :  add_expr  %MARK%  relat_expr@0_opt_2  
 index is: 551, term type: to_deduce, before: add_expr, after: relat_expr@0_opt_2
TARGET LIST: 
target index: 552  , change_value: relat_expr@0_opt_2
target index: 553  , change_value: %NULL%
target index: 554  , change_value: %NULL%

relat_expr  :  add_expr  relat_expr@0_opt_2  %MARK%  
 index is: 552, term type: deduce, before: relat_expr@0_opt_2, after: %NULL%
TARGET LIST: 

relat_expr@0_opt_2  :  %MARK%  
 index is: 553, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

relat_expr@0_opt_2  :  %MARK%  relat_expr@0_opt_2@0_decl_1  relat_expr  
 index is: 554, term type: to_deduce, before: %NULL%, after: relat_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 555  , change_value: relat_expr@0_opt_2@0_decl_1
target index: 557  , change_value: %NULL%
target index: 559  , change_value: %NULL%
target index: 561  , change_value: %NULL%
target index: 563  , change_value: %NULL%

relat_expr@0_opt_2  :  relat_expr@0_opt_2@0_decl_1  %MARK%  relat_expr  
 index is: 555, term type: to_deduce, before: relat_expr@0_opt_2@0_decl_1, after: relat_expr
TARGET LIST: 
target index: 550  , change_value: %NULL%
target index: 556  , change_value: relat_expr

relat_expr@0_opt_2  :  relat_expr@0_opt_2@0_decl_1  relat_expr  %MARK%  
 index is: 556, term type: deduce, before: relat_expr, after: %NULL%
TARGET LIST: 

relat_expr@0_opt_2@0_decl_1  :  %MARK%  '<='  
 index is: 557, term type: shift, before: %NULL%, after: '<='
TARGET LIST: 
target index: 558  , change_value: '<='

relat_expr@0_opt_2@0_decl_1  :  '<='  %MARK%  
 index is: 558, term type: deduce, before: '<=', after: %NULL%
TARGET LIST: 

relat_expr@0_opt_2@0_decl_1  :  %MARK%  '>='  
 index is: 559, term type: shift, before: %NULL%, after: '>='
TARGET LIST: 
target index: 560  , change_value: '>='

relat_expr@0_opt_2@0_decl_1  :  '>='  %MARK%  
 index is: 560, term type: deduce, before: '>=', after: %NULL%
TARGET LIST: 

relat_expr@0_opt_2@0_decl_1  :  %MARK%  '<'  
 index is: 561, term type: shift, before: %NULL%, after: '<'
TARGET LIST: 
target index: 562  , change_value: '<'

relat_expr@0_opt_2@0_decl_1  :  '<'  %MARK%  
 index is: 562, term type: deduce, before: '<', after: %NULL%
TARGET LIST: 

relat_expr@0_opt_2@0_decl_1  :  %MARK%  '>'  
 index is: 563, term type: shift, before: %NULL%, after: '>'
TARGET LIST: 
target index: 564  , change_value: '>'

relat_expr@0_opt_2@0_decl_1  :  '>'  %MARK%  
 index is: 564, term type: deduce, before: '>', after: %NULL%
TARGET LIST: 

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

add_expr  :  mul_expr  %MARK%  add_expr@0_opt_2  
 index is: 566, term type: to_deduce, before: mul_expr, after: add_expr@0_opt_2
TARGET LIST: 
target index: 567  , change_value: add_expr@0_opt_2
target index: 568  , change_value: %NULL%
target index: 569  , change_value: %NULL%

add_expr  :  mul_expr  add_expr@0_opt_2  %MARK%  
 index is: 567, term type: deduce, before: add_expr@0_opt_2, after: %NULL%
TARGET LIST: 

add_expr@0_opt_2  :  %MARK%  
 index is: 568, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

add_expr@0_opt_2  :  %MARK%  add_expr@0_opt_2@0_decl_1  add_expr  
 index is: 569, term type: to_deduce, before: %NULL%, after: add_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 570  , change_value: add_expr@0_opt_2@0_decl_1
target index: 572  , change_value: %NULL%
target index: 574  , change_value: %NULL%

add_expr@0_opt_2  :  add_expr@0_opt_2@0_decl_1  %MARK%  add_expr  
 index is: 570, term type: to_deduce, before: add_expr@0_opt_2@0_decl_1, after: add_expr
TARGET LIST: 
target index: 565  , change_value: %NULL%
target index: 571  , change_value: add_expr

add_expr@0_opt_2  :  add_expr@0_opt_2@0_decl_1  add_expr  %MARK%  
 index is: 571, term type: deduce, before: add_expr, after: %NULL%
TARGET LIST: 

add_expr@0_opt_2@0_decl_1  :  %MARK%  '-'  
 index is: 572, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 573  , change_value: '-'

add_expr@0_opt_2@0_decl_1  :  '-'  %MARK%  
 index is: 573, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

add_expr@0_opt_2@0_decl_1  :  %MARK%  '+'  
 index is: 574, term type: shift, before: %NULL%, after: '+'
TARGET LIST: 
target index: 575  , change_value: '+'

add_expr@0_opt_2@0_decl_1  :  '+'  %MARK%  
 index is: 575, term type: deduce, before: '+', after: %NULL%
TARGET LIST: 

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

mul_expr  :  unary_expr  %MARK%  mul_expr@0_opt_2  
 index is: 577, term type: to_deduce, before: unary_expr, after: mul_expr@0_opt_2
TARGET LIST: 
target index: 578  , change_value: mul_expr@0_opt_2
target index: 579  , change_value: %NULL%
target index: 580  , change_value: %NULL%

mul_expr  :  unary_expr  mul_expr@0_opt_2  %MARK%  
 index is: 578, term type: deduce, before: mul_expr@0_opt_2, after: %NULL%
TARGET LIST: 

mul_expr@0_opt_2  :  %MARK%  
 index is: 579, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

mul_expr@0_opt_2  :  %MARK%  mul_expr@0_opt_2@0_decl_1  mul_expr  
 index is: 580, term type: to_deduce, before: %NULL%, after: mul_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 581  , change_value: mul_expr@0_opt_2@0_decl_1
target index: 583  , change_value: %NULL%
target index: 585  , change_value: %NULL%
target index: 587  , change_value: %NULL%
target index: 589  , change_value: %NULL%

mul_expr@0_opt_2  :  mul_expr@0_opt_2@0_decl_1  %MARK%  mul_expr  
 index is: 581, term type: to_deduce, before: mul_expr@0_opt_2@0_decl_1, after: mul_expr
TARGET LIST: 
target index: 576  , change_value: %NULL%
target index: 582  , change_value: mul_expr

mul_expr@0_opt_2  :  mul_expr@0_opt_2@0_decl_1  mul_expr  %MARK%  
 index is: 582, term type: deduce, before: mul_expr, after: %NULL%
TARGET LIST: 

mul_expr@0_opt_2@0_decl_1  :  %MARK%  '^'  
 index is: 583, term type: shift, before: %NULL%, after: '^'
TARGET LIST: 
target index: 584  , change_value: '^'

mul_expr@0_opt_2@0_decl_1  :  '^'  %MARK%  
 index is: 584, term type: deduce, before: '^', after: %NULL%
TARGET LIST: 

mul_expr@0_opt_2@0_decl_1  :  %MARK%  '%'  
 index is: 585, term type: shift, before: %NULL%, after: '%'
TARGET LIST: 
target index: 586  , change_value: '%'

mul_expr@0_opt_2@0_decl_1  :  '%'  %MARK%  
 index is: 586, term type: deduce, before: '%', after: %NULL%
TARGET LIST: 

mul_expr@0_opt_2@0_decl_1  :  %MARK%  '/'  
 index is: 587, term type: shift, before: %NULL%, after: '/'
TARGET LIST: 
target index: 588  , change_value: '/'

mul_expr@0_opt_2@0_decl_1  :  '/'  %MARK%  
 index is: 588, term type: deduce, before: '/', after: %NULL%
TARGET LIST: 

mul_expr@0_opt_2@0_decl_1  :  %MARK%  '*'  
 index is: 589, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 590  , change_value: '*'

mul_expr@0_opt_2@0_decl_1  :  '*'  %MARK%  
 index is: 590, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  prim_expr  %MARK%  unary_expr@2_opt_2  
 index is: 592, term type: to_deduce, before: prim_expr, after: unary_expr@2_opt_2
TARGET LIST: 
target index: 593  , change_value: unary_expr@2_opt_2
target index: 601  , change_value: %NULL%
target index: 602  , change_value: %NULL%

unary_expr  :  prim_expr  unary_expr@2_opt_2  %MARK%  
 index is: 593, term type: deduce, before: unary_expr@2_opt_2, after: %NULL%
TARGET LIST: 

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  unary_expr@1_decl_1  %MARK%  unary_expr  unary_expr@1_opt_3  
 index is: 595, term type: to_deduce, before: unary_expr@1_decl_1, after: unary_expr
TARGET LIST: 
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 596  , change_value: unary_expr
target index: 598  , change_value: %NULL%

unary_expr  :  unary_expr@1_decl_1  unary_expr  %MARK%  unary_expr@1_opt_3  
 index is: 596, term type: to_deduce, before: unary_expr, after: unary_expr@1_opt_3
TARGET LIST: 
target index: 597  , change_value: unary_expr@1_opt_3
target index: 604  , change_value: %NULL%
target index: 605  , change_value: %NULL%

unary_expr  :  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  %MARK%  
 index is: 597, term type: deduce, before: unary_expr@1_opt_3, after: %NULL%
TARGET LIST: 

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

unary_expr  :  unary_op  %MARK%  unary_expr  
 index is: 599, term type: to_deduce, before: unary_op, after: unary_expr
TARGET LIST: 
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%
target index: 600  , change_value: unary_expr

unary_expr  :  unary_op  unary_expr  %MARK%  
 index is: 600, term type: deduce, before: unary_expr, after: %NULL%
TARGET LIST: 

unary_expr@2_opt_2  :  %MARK%  
 index is: 601, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

unary_expr@2_opt_2  :  %MARK%  postfix_expr  
 index is: 602, term type: to_deduce, before: %NULL%, after: postfix_expr
TARGET LIST: 
target index: 603  , change_value: postfix_expr
target index: 625  , change_value: %NULL%

unary_expr@2_opt_2  :  postfix_expr  %MARK%  
 index is: 603, term type: deduce, before: postfix_expr, after: %NULL%
TARGET LIST: 

unary_expr@1_opt_3  :  %MARK%  
 index is: 604, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

unary_expr@1_opt_3  :  %MARK%  array  
 index is: 605, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 606  , change_value: array
target index: 696  , change_value: %NULL%

unary_expr@1_opt_3  :  array  %MARK%  
 index is: 606, term type: deduce, before: array, after: %NULL%
TARGET LIST: 

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  'gcnew'  %MARK%  
 index is: 608, term type: deduce, before: 'gcnew', after: %NULL%
TARGET LIST: 

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_expr@1_decl_1  :  'new'  %MARK%  
 index is: 610, term type: deduce, before: 'new', after: %NULL%
TARGET LIST: 

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  '!'  %MARK%  
 index is: 612, term type: deduce, before: '!', after: %NULL%
TARGET LIST: 

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  '-'  %MARK%  
 index is: 614, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  '&'  %MARK%  
 index is: 616, term type: deduce, before: '&', after: %NULL%
TARGET LIST: 

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  '*'  %MARK%  
 index is: 618, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  '--'  %MARK%  
 index is: 620, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  '++'  %MARK%  
 index is: 622, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

unary_op  :  'typeid'  %MARK%  
 index is: 624, term type: deduce, before: 'typeid', after: %NULL%
TARGET LIST: 

postfix_expr  :  %MARK%  postfix_expr@0_decl_1  postfix_expr@0_opt_2  
 index is: 625, term type: to_deduce, before: %NULL%, after: postfix_expr@0_decl_1
TARGET LIST: 
target index: 626  , change_value: postfix_expr@0_decl_1
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%

postfix_expr  :  postfix_expr@0_decl_1  %MARK%  postfix_expr@0_opt_2  
 index is: 626, term type: to_deduce, before: postfix_expr@0_decl_1, after: postfix_expr@0_opt_2
TARGET LIST: 
target index: 627  , change_value: postfix_expr@0_opt_2
target index: 628  , change_value: %NULL%
target index: 629  , change_value: %NULL%

postfix_expr  :  postfix_expr@0_decl_1  postfix_expr@0_opt_2  %MARK%  
 index is: 627, term type: deduce, before: postfix_expr@0_opt_2, after: %NULL%
TARGET LIST: 

postfix_expr@0_opt_2  :  %MARK%  
 index is: 628, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_expr@0_opt_2  :  %MARK%  postfix_expr  
 index is: 629, term type: to_deduce, before: %NULL%, after: postfix_expr
TARGET LIST: 
target index: 625  , change_value: %NULL%
target index: 630  , change_value: postfix_expr

postfix_expr@0_opt_2  :  postfix_expr  %MARK%  
 index is: 630, term type: deduce, before: postfix_expr, after: %NULL%
TARGET LIST: 

postfix_expr@0_decl_1  :  %MARK%  '...'  
 index is: 631, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 632  , change_value: '...'

postfix_expr@0_decl_1  :  '...'  %MARK%  
 index is: 632, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

postfix_expr@0_decl_1  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

postfix_expr@0_decl_1  :  '--'  %MARK%  
 index is: 634, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

postfix_expr@0_decl_1  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

postfix_expr@0_decl_1  :  '++'  %MARK%  
 index is: 636, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  constant  %MARK%  
 index is: 638, term type: deduce, before: constant, after: %NULL%
TARGET LIST: 

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

prim_expr  :  visit_expr  %MARK%  
 index is: 640, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

visit_expr  :  object  %MARK%  visit_expr@0_opt_2  
 index is: 642, term type: to_deduce, before: object, after: visit_expr@0_opt_2
TARGET LIST: 
target index: 643  , change_value: visit_expr@0_opt_2
target index: 644  , change_value: %NULL%
target index: 645  , change_value: %NULL%

visit_expr  :  object  visit_expr@0_opt_2  %MARK%  
 index is: 643, term type: deduce, before: visit_expr@0_opt_2, after: %NULL%
TARGET LIST: 

visit_expr@0_opt_2  :  %MARK%  
 index is: 644, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

visit_expr@0_opt_2  :  %MARK%  visit_expr@0_opt_2@0_decl_1  visit_expr  
 index is: 645, term type: to_deduce, before: %NULL%, after: visit_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 646  , change_value: visit_expr@0_opt_2@0_decl_1
target index: 648  , change_value: %NULL%
target index: 650  , change_value: %NULL%

visit_expr@0_opt_2  :  visit_expr@0_opt_2@0_decl_1  %MARK%  visit_expr  
 index is: 646, term type: to_deduce, before: visit_expr@0_opt_2@0_decl_1, after: visit_expr
TARGET LIST: 
target index: 641  , change_value: %NULL%
target index: 647  , change_value: visit_expr

visit_expr@0_opt_2  :  visit_expr@0_opt_2@0_decl_1  visit_expr  %MARK%  
 index is: 647, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

visit_expr@0_opt_2@0_decl_1  :  %MARK%  '.'  
 index is: 648, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 649  , change_value: '.'

visit_expr@0_opt_2@0_decl_1  :  '.'  %MARK%  
 index is: 649, term type: deduce, before: '.', after: %NULL%
TARGET LIST: 

visit_expr@0_opt_2@0_decl_1  :  %MARK%  '->'  
 index is: 650, term type: shift, before: %NULL%, after: '->'
TARGET LIST: 
target index: 651  , change_value: '->'

visit_expr@0_opt_2@0_decl_1  :  '->'  %MARK%  
 index is: 651, term type: deduce, before: '->', after: %NULL%
TARGET LIST: 

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  CHAR  %MARK%  
 index is: 653, term type: deduce, before: CHAR, after: %NULL%
TARGET LIST: 

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  element  %MARK%  
 index is: 655, term type: deduce, before: element, after: %NULL%
TARGET LIST: 

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  'global'  %MARK%  
 index is: 657, term type: deduce, before: 'global', after: %NULL%
TARGET LIST: 

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  'local'  %MARK%  
 index is: 659, term type: deduce, before: 'local', after: %NULL%
TARGET LIST: 

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  STR  %MARK%  object@1_opt_2  
 index is: 661, term type: to_deduce, before: STR, after: object@1_opt_2
TARGET LIST: 
target index: 662  , change_value: object@1_opt_2
target index: 666  , change_value: %NULL%
target index: 667  , change_value: %NULL%

object  :  STR  object@1_opt_2  %MARK%  
 index is: 662, term type: deduce, before: object@1_opt_2, after: %NULL%
TARGET LIST: 

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

object  :  array  %MARK%  object@0_opt_2  
 index is: 664, term type: to_deduce, before: array, after: object@0_opt_2
TARGET LIST: 
target index: 665  , change_value: object@0_opt_2
target index: 669  , change_value: %NULL%
target index: 670  , change_value: %NULL%

object  :  array  object@0_opt_2  %MARK%  
 index is: 665, term type: deduce, before: object@0_opt_2, after: %NULL%
TARGET LIST: 

object@1_opt_2  :  %MARK%  
 index is: 666, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

object@1_opt_2  :  %MARK%  index  
 index is: 667, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 668  , change_value: index
target index: 710  , change_value: %NULL%

object@1_opt_2  :  index  %MARK%  
 index is: 668, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

object@0_opt_2  :  %MARK%  
 index is: 669, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

object@0_opt_2  :  %MARK%  index  
 index is: 670, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 671  , change_value: index
target index: 710  , change_value: %NULL%

object@0_opt_2  :  index  %MARK%  
 index is: 671, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

element  :  element@0_decl_1  %MARK%  element@0_rep_2  
 index is: 673, term type: to_deduce, before: element@0_decl_1, after: element@0_rep_2
TARGET LIST: 
target index: 674  , change_value: element@0_rep_2
target index: 675  , change_value: %NULL%
target index: 676  , change_value: %NULL%
target index: 679  , change_value: %NULL%

element  :  element@0_decl_1  element@0_rep_2  %MARK%  
 index is: 674, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  
 index is: 675, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 676, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 677  , change_value: index
target index: 710  , change_value: %NULL%

element@0_rep_2  :  index  %MARK%  element@0_rep_2  
 index is: 677, term type: to_deduce, before: index, after: element@0_rep_2
TARGET LIST: 
target index: 675  , change_value: %NULL%
target index: 676  , change_value: %NULL%
target index: 678  , change_value: element@0_rep_2
target index: 679  , change_value: %NULL%

element@0_rep_2  :  index  element@0_rep_2  %MARK%  
 index is: 678, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 679, term type: to_deduce, before: %NULL%, after: fcall
TARGET LIST: 
target index: 680  , change_value: fcall
target index: 703  , change_value: %NULL%

element@0_rep_2  :  fcall  %MARK%  element@0_rep_2  
 index is: 680, term type: to_deduce, before: fcall, after: element@0_rep_2
TARGET LIST: 
target index: 675  , change_value: %NULL%
target index: 676  , change_value: %NULL%
target index: 679  , change_value: %NULL%
target index: 681  , change_value: element@0_rep_2

element@0_rep_2  :  fcall  element@0_rep_2  %MARK%  
 index is: 681, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  '('  %MARK%  single_expr  ')'  
 index is: 683, term type: to_deduce, before: '(', after: single_expr
TARGET LIST: 
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%
target index: 684  , change_value: single_expr

element@0_decl_1  :  '('  single_expr  %MARK%  ')'  
 index is: 684, term type: shift, before: single_expr, after: ')'
TARGET LIST: 
target index: 685  , change_value: ')'

element@0_decl_1  :  '('  single_expr  ')'  %MARK%  
 index is: 685, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

element@0_decl_1  :  ID  %MARK%  
 index is: 687, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  'false'  %MARK%  
 index is: 689, term type: deduce, before: 'false', after: %NULL%
TARGET LIST: 

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  'true'  %MARK%  
 index is: 691, term type: deduce, before: 'true', after: %NULL%
TARGET LIST: 

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  'null'  %MARK%  
 index is: 693, term type: deduce, before: 'null', after: %NULL%
TARGET LIST: 

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

constant  :  NUM  %MARK%  
 index is: 695, term type: deduce, before: NUM, after: %NULL%
TARGET LIST: 

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

array  :  '{'  %MARK%  array@0_opt_2  '}'  
 index is: 697, term type: to_deduce, before: '{', after: array@0_opt_2
TARGET LIST: 
target index: 698  , change_value: array@0_opt_2
target index: 700  , change_value: %NULL%
target index: 701  , change_value: %NULL%

array  :  '{'  array@0_opt_2  %MARK%  '}'  
 index is: 698, term type: shift, before: array@0_opt_2, after: '}'
TARGET LIST: 
target index: 699  , change_value: '}'

array  :  '{'  array@0_opt_2  '}'  %MARK%  
 index is: 699, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

array@0_opt_2  :  %MARK%  
 index is: 700, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

array@0_opt_2  :  %MARK%  expr  
 index is: 701, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 403  , change_value: %NULL%
target index: 702  , change_value: expr

array@0_opt_2  :  expr  %MARK%  
 index is: 702, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 703, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 704  , change_value: '('

fcall  :  '('  %MARK%  fcall@0_opt_2  ')'  
 index is: 704, term type: to_deduce, before: '(', after: fcall@0_opt_2
TARGET LIST: 
target index: 705  , change_value: fcall@0_opt_2
target index: 707  , change_value: %NULL%
target index: 708  , change_value: %NULL%

fcall  :  '('  fcall@0_opt_2  %MARK%  ')'  
 index is: 705, term type: shift, before: fcall@0_opt_2, after: ')'
TARGET LIST: 
target index: 706  , change_value: ')'

fcall  :  '('  fcall@0_opt_2  ')'  %MARK%  
 index is: 706, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

fcall@0_opt_2  :  %MARK%  
 index is: 707, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

fcall@0_opt_2  :  %MARK%  expr  
 index is: 708, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 403  , change_value: %NULL%
target index: 709  , change_value: expr

fcall@0_opt_2  :  expr  %MARK%  
 index is: 709, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

index  :  %MARK%  '['  basic_expr  ']'  
 index is: 710, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 711  , change_value: '['

index  :  '['  %MARK%  basic_expr  ']'  
 index is: 711, term type: to_deduce, before: '[', after: basic_expr
TARGET LIST: 
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%
target index: 712  , change_value: basic_expr

index  :  '['  basic_expr  %MARK%  ']'  
 index is: 712, term type: shift, before: basic_expr, after: ']'
TARGET LIST: 
target index: 713  , change_value: ']'

index  :  '['  basic_expr  ']'  %MARK%  
 index is: 713, term type: deduce, before: ']', after: %NULL%
TARGET LIST: 

#####
#DFA#
#####
#########
#0  TERM#
#########


##########
#FROM SET#
##########
%start%  :  %MARK%  begin  
 index is: 0, term type: to_deduce, before: %NULL%, after: begin
TARGET LIST: 
target index: 1  , change_value: begin
target index: 2  , change_value: %NULL%

########
#SUBSET#
########
%start%  :  %MARK%  begin  
 index is: 0, term type: to_deduce, before: %NULL%, after: begin
TARGET LIST: 
target index: 1  , change_value: begin
target index: 2  , change_value: %NULL%

begin  :  %MARK%  stmts  
 index is: 2, term type: to_deduce, before: %NULL%, after: stmts
TARGET LIST: 
target index: 3  , change_value: stmts
target index: 14  , change_value: %NULL%

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 1, target_source: begin

index: 2, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



#########
#1  TERM#
#########


##########
#FROM SET#
##########
%start%  :  begin  %MARK%  
 index is: 1, term type: accept, before: begin, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
%start%  :  begin  %MARK%  
 index is: 1, term type: accept, before: begin, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#2  TERM#
#########


##########
#FROM SET#
##########
begin  :  stmts  %MARK%  
 index is: 3, term type: deduce, before: stmts, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
begin  :  stmts  %MARK%  
 index is: 3, term type: deduce, before: stmts, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#3  TERM#
#########


##########
#FROM SET#
##########
stmts  :  stmts@0_rep_1  %MARK%  
 index is: 15, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
stmts  :  stmts@0_rep_1  %MARK%  
 index is: 15, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#4  TERM#
#########


##########
#FROM SET#
##########
stmts@0_rep_1  :  statement  %MARK%  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 18, term type: to_deduce, before: statement, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 19  , change_value: stmts@0_rep_1@0_rep_2
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%

########
#SUBSET#
########
stmts@0_rep_1  :  statement  %MARK%  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 18, term type: to_deduce, before: statement, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 19  , change_value: stmts@0_rep_1@0_rep_2
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%

stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 21, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  stmts@0_rep_1@0_rep_2  
 index is: 22, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 23  , change_value: ENDL

########
#TO SET#
########
index: 5, target_source: stmts@0_rep_1@0_rep_2

index: 424, target_source: ENDL



#########
#5  TERM#
#########


##########
#FROM SET#
##########
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  %MARK%  stmts@0_rep_1  
 index is: 19, term type: to_deduce, before: stmts@0_rep_1@0_rep_2, after: stmts@0_rep_1
TARGET LIST: 
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%
target index: 20  , change_value: stmts@0_rep_1

########
#SUBSET#
########
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  %MARK%  stmts@0_rep_1  
 index is: 19, term type: to_deduce, before: stmts@0_rep_1@0_rep_2, after: stmts@0_rep_1
TARGET LIST: 
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%
target index: 20  , change_value: stmts@0_rep_1

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 6, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



#########
#6  TERM#
#########


##########
#FROM SET#
##########
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  %MARK%  
 index is: 20, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  %MARK%  
 index is: 20, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#7  TERM#
#########


##########
#FROM SET#
##########
statement  :  expr_stmt  %MARK%  
 index is: 45, term type: deduce, before: expr_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  expr_stmt  %MARK%  
 index is: 45, term type: deduce, before: expr_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#8  TERM#
#########


##########
#FROM SET#
##########
statement  :  class_stmt  %MARK%  
 index is: 47, term type: deduce, before: class_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  class_stmt  %MARK%  
 index is: 47, term type: deduce, before: class_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#9  TERM#
#########


##########
#FROM SET#
##########
statement  :  throw_stmt  %MARK%  
 index is: 49, term type: deduce, before: throw_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  throw_stmt  %MARK%  
 index is: 49, term type: deduce, before: throw_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#10  TERM#
##########


##########
#FROM SET#
##########
statement  :  try_stmt  %MARK%  
 index is: 51, term type: deduce, before: try_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  try_stmt  %MARK%  
 index is: 51, term type: deduce, before: try_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#11  TERM#
##########


##########
#FROM SET#
##########
statement  :  return_stmt  %MARK%  
 index is: 53, term type: deduce, before: return_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  return_stmt  %MARK%  
 index is: 53, term type: deduce, before: return_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#12  TERM#
##########


##########
#FROM SET#
##########
statement  :  function_stmt  %MARK%  
 index is: 55, term type: deduce, before: function_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  function_stmt  %MARK%  
 index is: 55, term type: deduce, before: function_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#13  TERM#
##########


##########
#FROM SET#
##########
statement  :  control_stmt  %MARK%  
 index is: 57, term type: deduce, before: control_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  control_stmt  %MARK%  
 index is: 57, term type: deduce, before: control_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#14  TERM#
##########


##########
#FROM SET#
##########
statement  :  foreach_stmt  %MARK%  
 index is: 59, term type: deduce, before: foreach_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  foreach_stmt  %MARK%  
 index is: 59, term type: deduce, before: foreach_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#15  TERM#
##########


##########
#FROM SET#
##########
statement  :  for_stmt  %MARK%  
 index is: 61, term type: deduce, before: for_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  for_stmt  %MARK%  
 index is: 61, term type: deduce, before: for_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#16  TERM#
##########


##########
#FROM SET#
##########
statement  :  loop_stmt  %MARK%  
 index is: 63, term type: deduce, before: loop_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  loop_stmt  %MARK%  
 index is: 63, term type: deduce, before: loop_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#17  TERM#
##########


##########
#FROM SET#
##########
statement  :  while_stmt  %MARK%  
 index is: 65, term type: deduce, before: while_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  while_stmt  %MARK%  
 index is: 65, term type: deduce, before: while_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#18  TERM#
##########


##########
#FROM SET#
##########
statement  :  switch_stmt  %MARK%  
 index is: 67, term type: deduce, before: switch_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  switch_stmt  %MARK%  
 index is: 67, term type: deduce, before: switch_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#19  TERM#
##########


##########
#FROM SET#
##########
statement  :  if_stmt  %MARK%  
 index is: 69, term type: deduce, before: if_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  if_stmt  %MARK%  
 index is: 69, term type: deduce, before: if_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#20  TERM#
##########


##########
#FROM SET#
##########
statement  :  using_stmt  %MARK%  
 index is: 71, term type: deduce, before: using_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  using_stmt  %MARK%  
 index is: 71, term type: deduce, before: using_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#21  TERM#
##########


##########
#FROM SET#
##########
statement  :  namespace_stmt  %MARK%  
 index is: 73, term type: deduce, before: namespace_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  namespace_stmt  %MARK%  
 index is: 73, term type: deduce, before: namespace_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#22  TERM#
##########


##########
#FROM SET#
##########
statement  :  block_stmt  %MARK%  
 index is: 75, term type: deduce, before: block_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  block_stmt  %MARK%  
 index is: 75, term type: deduce, before: block_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#23  TERM#
##########


##########
#FROM SET#
##########
statement  :  var_stmt  %MARK%  
 index is: 77, term type: deduce, before: var_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  var_stmt  %MARK%  
 index is: 77, term type: deduce, before: var_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#24  TERM#
##########


##########
#FROM SET#
##########
statement  :  import_stmt  %MARK%  
 index is: 79, term type: deduce, before: import_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  import_stmt  %MARK%  
 index is: 79, term type: deduce, before: import_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#25  TERM#
##########


##########
#FROM SET#
##########
statement  :  package_stmt  %MARK%  
 index is: 81, term type: deduce, before: package_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  package_stmt  %MARK%  
 index is: 81, term type: deduce, before: package_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#26  TERM#
##########


##########
#FROM SET#
##########
statement  :  prep_stmt  %MARK%  
 index is: 83, term type: deduce, before: prep_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  prep_stmt  %MARK%  
 index is: 83, term type: deduce, before: prep_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#27  TERM#
##########


##########
#FROM SET#
##########
expr_stmt  :  expr  %MARK%  endline  
 index is: 398, term type: to_deduce, before: expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 399  , change_value: endline

########
#SUBSET#
########
expr_stmt  :  expr  %MARK%  endline  
 index is: 398, term type: to_deduce, before: expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 399  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 28, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



##########
#28  TERM#
##########


##########
#FROM SET#
##########
expr_stmt  :  expr  endline  %MARK%  
 index is: 399, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expr_stmt  :  expr  endline  %MARK%  
 index is: 399, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#29  TERM#
##########


##########
#FROM SET#
##########
endline  :  ';'  %MARK%  
 index is: 11, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
endline  :  ';'  %MARK%  
 index is: 11, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#30  TERM#
##########


##########
#FROM SET#
##########
endline  :  ENDL  %MARK%  
 index is: 13, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
endline  :  ENDL  %MARK%  
 index is: 13, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#31  TERM#
##########


##########
#FROM SET#
##########
class_stmt  :  class_stmt@0_decl_1  %MARK%  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 375, term type: shift, before: class_stmt@0_decl_1, after: ID
TARGET LIST: 
target index: 376  , change_value: ID

########
#SUBSET#
########
class_stmt  :  class_stmt@0_decl_1  %MARK%  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 375, term type: shift, before: class_stmt@0_decl_1, after: ID
TARGET LIST: 
target index: 376  , change_value: ID

########
#TO SET#
########
index: 32, target_source: ID



##########
#32  TERM#
##########


##########
#FROM SET#
##########
class_stmt  :  class_stmt@0_decl_1  ID  %MARK%  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 376, term type: to_deduce, before: ID, after: class_stmt@0_opt_3
TARGET LIST: 
target index: 377  , change_value: class_stmt@0_opt_3
target index: 382  , change_value: %NULL%
target index: 383  , change_value: %NULL%

########
#SUBSET#
########
class_stmt  :  class_stmt@0_decl_1  ID  %MARK%  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 376, term type: to_deduce, before: ID, after: class_stmt@0_opt_3
TARGET LIST: 
target index: 377  , change_value: class_stmt@0_opt_3
target index: 382  , change_value: %NULL%
target index: 383  , change_value: %NULL%

class_stmt@0_opt_3  :  %MARK%  
 index is: 382, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

class_stmt@0_opt_3  :  %MARK%  'extends'  visit_expr  
 index is: 383, term type: shift, before: %NULL%, after: 'extends'
TARGET LIST: 
target index: 384  , change_value: 'extends'

########
#TO SET#
########
index: 33, target_source: class_stmt@0_opt_3

index: 422, target_source: 'extends'



##########
#33  TERM#
##########


##########
#FROM SET#
##########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  %MARK%  ENDL  decl_stmts  'end'  ENDL  
 index is: 377, term type: shift, before: class_stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 378  , change_value: ENDL

########
#SUBSET#
########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  %MARK%  ENDL  decl_stmts  'end'  ENDL  
 index is: 377, term type: shift, before: class_stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 378  , change_value: ENDL

########
#TO SET#
########
index: 34, target_source: ENDL



##########
#34  TERM#
##########


##########
#FROM SET#
##########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  %MARK%  decl_stmts  'end'  ENDL  
 index is: 378, term type: to_deduce, before: ENDL, after: decl_stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 379  , change_value: decl_stmts

########
#SUBSET#
########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  %MARK%  decl_stmts  'end'  ENDL  
 index is: 378, term type: to_deduce, before: ENDL, after: decl_stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 379  , change_value: decl_stmts

decl_stmts  :  %MARK%  decl_stmts@0_rep_1  
 index is: 25, term type: to_deduce, before: %NULL%, after: decl_stmts@0_rep_1
TARGET LIST: 
target index: 26  , change_value: decl_stmts@0_rep_1
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%

decl_stmts@0_rep_1  :  %MARK%  
 index is: 27, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl_stmts@0_rep_1  :  %MARK%  declaration  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  
 index is: 28, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 29  , change_value: declaration
target index: 84  , change_value: %NULL%
target index: 86  , change_value: %NULL%
target index: 88  , change_value: %NULL%
target index: 90  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 94  , change_value: %NULL%

declaration  :  %MARK%  class_stmt  
 index is: 84, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 85  , change_value: class_stmt
target index: 374  , change_value: %NULL%

declaration  :  %MARK%  function_stmt  
 index is: 86, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 87  , change_value: function_stmt
target index: 314  , change_value: %NULL%

declaration  :  %MARK%  using_stmt  
 index is: 88, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 89  , change_value: using_stmt
target index: 184  , change_value: %NULL%

declaration  :  %MARK%  var_stmt  
 index is: 90, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 91  , change_value: var_stmt
target index: 136  , change_value: %NULL%

declaration  :  %MARK%  namespace_stmt  
 index is: 92, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 93  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

declaration  :  %MARK%  prep_stmt  
 index is: 94, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 95  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

########
#TO SET#
########
index: 35, target_source: decl_stmts

index: 38, target_source: decl_stmts@0_rep_1

index: 39, target_source: declaration

index: 42, target_source: class_stmt

index: 43, target_source: function_stmt

index: 44, target_source: using_stmt

index: 45, target_source: var_stmt

index: 46, target_source: namespace_stmt

index: 47, target_source: prep_stmt

index: 31, target_source: class_stmt@0_decl_1

index: 48, target_source: 'function'

index: 309, target_source: 'using'

index: 328, target_source: var_stmt@0_decl_1

index: 322, target_source: 'namespace'

index: 331, target_source: PREP

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'



##########
#35  TERM#
##########


##########
#FROM SET#
##########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  %MARK%  'end'  ENDL  
 index is: 379, term type: shift, before: decl_stmts, after: 'end'
TARGET LIST: 
target index: 380  , change_value: 'end'

########
#SUBSET#
########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  %MARK%  'end'  ENDL  
 index is: 379, term type: shift, before: decl_stmts, after: 'end'
TARGET LIST: 
target index: 380  , change_value: 'end'

########
#TO SET#
########
index: 36, target_source: 'end'



##########
#36  TERM#
##########


##########
#FROM SET#
##########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  %MARK%  ENDL  
 index is: 380, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 381  , change_value: ENDL

########
#SUBSET#
########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  %MARK%  ENDL  
 index is: 380, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 381  , change_value: ENDL

########
#TO SET#
########
index: 37, target_source: ENDL



##########
#37  TERM#
##########


##########
#FROM SET#
##########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  %MARK%  
 index is: 381, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
class_stmt  :  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  %MARK%  
 index is: 381, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#38  TERM#
##########


##########
#FROM SET#
##########
decl_stmts  :  decl_stmts@0_rep_1  %MARK%  
 index is: 26, term type: deduce, before: decl_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
decl_stmts  :  decl_stmts@0_rep_1  %MARK%  
 index is: 26, term type: deduce, before: decl_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#39  TERM#
##########


##########
#FROM SET#
##########
decl_stmts@0_rep_1  :  declaration  %MARK%  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  
 index is: 29, term type: to_deduce, before: declaration, after: decl_stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 30  , change_value: decl_stmts@0_rep_1@0_rep_2
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%

########
#SUBSET#
########
decl_stmts@0_rep_1  :  declaration  %MARK%  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  
 index is: 29, term type: to_deduce, before: declaration, after: decl_stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 30  , change_value: decl_stmts@0_rep_1@0_rep_2
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%

decl_stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 32, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl_stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  decl_stmts@0_rep_1@0_rep_2  
 index is: 33, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 34  , change_value: ENDL

########
#TO SET#
########
index: 40, target_source: decl_stmts@0_rep_1@0_rep_2

index: 420, target_source: ENDL



##########
#40  TERM#
##########


##########
#FROM SET#
##########
decl_stmts@0_rep_1  :  declaration  decl_stmts@0_rep_1@0_rep_2  %MARK%  decl_stmts@0_rep_1  
 index is: 30, term type: to_deduce, before: decl_stmts@0_rep_1@0_rep_2, after: decl_stmts@0_rep_1
TARGET LIST: 
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%
target index: 31  , change_value: decl_stmts@0_rep_1

########
#SUBSET#
########
decl_stmts@0_rep_1  :  declaration  decl_stmts@0_rep_1@0_rep_2  %MARK%  decl_stmts@0_rep_1  
 index is: 30, term type: to_deduce, before: decl_stmts@0_rep_1@0_rep_2, after: decl_stmts@0_rep_1
TARGET LIST: 
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%
target index: 31  , change_value: decl_stmts@0_rep_1

decl_stmts@0_rep_1  :  %MARK%  
 index is: 27, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl_stmts@0_rep_1  :  %MARK%  declaration  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  
 index is: 28, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 29  , change_value: declaration
target index: 84  , change_value: %NULL%
target index: 86  , change_value: %NULL%
target index: 88  , change_value: %NULL%
target index: 90  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 94  , change_value: %NULL%

declaration  :  %MARK%  class_stmt  
 index is: 84, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 85  , change_value: class_stmt
target index: 374  , change_value: %NULL%

declaration  :  %MARK%  function_stmt  
 index is: 86, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 87  , change_value: function_stmt
target index: 314  , change_value: %NULL%

declaration  :  %MARK%  using_stmt  
 index is: 88, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 89  , change_value: using_stmt
target index: 184  , change_value: %NULL%

declaration  :  %MARK%  var_stmt  
 index is: 90, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 91  , change_value: var_stmt
target index: 136  , change_value: %NULL%

declaration  :  %MARK%  namespace_stmt  
 index is: 92, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 93  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

declaration  :  %MARK%  prep_stmt  
 index is: 94, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 95  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

########
#TO SET#
########
index: 41, target_source: decl_stmts@0_rep_1

index: 39, target_source: declaration

index: 42, target_source: class_stmt

index: 43, target_source: function_stmt

index: 44, target_source: using_stmt

index: 45, target_source: var_stmt

index: 46, target_source: namespace_stmt

index: 47, target_source: prep_stmt

index: 31, target_source: class_stmt@0_decl_1

index: 48, target_source: 'function'

index: 309, target_source: 'using'

index: 328, target_source: var_stmt@0_decl_1

index: 322, target_source: 'namespace'

index: 331, target_source: PREP

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'



##########
#41  TERM#
##########


##########
#FROM SET#
##########
decl_stmts@0_rep_1  :  declaration  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  %MARK%  
 index is: 31, term type: deduce, before: decl_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
decl_stmts@0_rep_1  :  declaration  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  %MARK%  
 index is: 31, term type: deduce, before: decl_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#42  TERM#
##########


##########
#FROM SET#
##########
declaration  :  class_stmt  %MARK%  
 index is: 85, term type: deduce, before: class_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  class_stmt  %MARK%  
 index is: 85, term type: deduce, before: class_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#43  TERM#
##########


##########
#FROM SET#
##########
declaration  :  function_stmt  %MARK%  
 index is: 87, term type: deduce, before: function_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  function_stmt  %MARK%  
 index is: 87, term type: deduce, before: function_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#44  TERM#
##########


##########
#FROM SET#
##########
declaration  :  using_stmt  %MARK%  
 index is: 89, term type: deduce, before: using_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  using_stmt  %MARK%  
 index is: 89, term type: deduce, before: using_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#45  TERM#
##########


##########
#FROM SET#
##########
declaration  :  var_stmt  %MARK%  
 index is: 91, term type: deduce, before: var_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  var_stmt  %MARK%  
 index is: 91, term type: deduce, before: var_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#46  TERM#
##########


##########
#FROM SET#
##########
declaration  :  namespace_stmt  %MARK%  
 index is: 93, term type: deduce, before: namespace_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  namespace_stmt  %MARK%  
 index is: 93, term type: deduce, before: namespace_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#47  TERM#
##########


##########
#FROM SET#
##########
declaration  :  prep_stmt  %MARK%  
 index is: 95, term type: deduce, before: prep_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  prep_stmt  %MARK%  
 index is: 95, term type: deduce, before: prep_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#48  TERM#
##########


##########
#FROM SET#
##########
function_stmt  :  'function'  %MARK%  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 315, term type: shift, before: 'function', after: ID
TARGET LIST: 
target index: 316  , change_value: ID

########
#SUBSET#
########
function_stmt  :  'function'  %MARK%  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 315, term type: shift, before: 'function', after: ID
TARGET LIST: 
target index: 316  , change_value: ID

########
#TO SET#
########
index: 49, target_source: ID



##########
#49  TERM#
##########


##########
#FROM SET#
##########
function_stmt  :  'function'  ID  %MARK%  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 316, term type: shift, before: ID, after: '('
TARGET LIST: 
target index: 317  , change_value: '('

########
#SUBSET#
########
function_stmt  :  'function'  ID  %MARK%  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 316, term type: shift, before: ID, after: '('
TARGET LIST: 
target index: 317  , change_value: '('

########
#TO SET#
########
index: 50, target_source: '('



##########
#50  TERM#
##########


##########
#FROM SET#
##########
function_stmt  :  'function'  ID  '('  %MARK%  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 317, term type: to_deduce, before: '(', after: function_stmt@0_opt_4
TARGET LIST: 
target index: 318  , change_value: function_stmt@0_opt_4
target index: 325  , change_value: %NULL%
target index: 326  , change_value: %NULL%

########
#SUBSET#
########
function_stmt  :  'function'  ID  '('  %MARK%  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 317, term type: to_deduce, before: '(', after: function_stmt@0_opt_4
TARGET LIST: 
target index: 318  , change_value: function_stmt@0_opt_4
target index: 325  , change_value: %NULL%
target index: 326  , change_value: %NULL%

function_stmt@0_opt_4  :  %MARK%  
 index is: 325, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function_stmt@0_opt_4  :  %MARK%  argument_list  
 index is: 326, term type: to_deduce, before: %NULL%, after: argument_list
TARGET LIST: 
target index: 327  , change_value: argument_list
target index: 467  , change_value: %NULL%
target index: 473  , change_value: %NULL%

argument_list  :  %MARK%  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 467, term type: to_deduce, before: %NULL%, after: argument_list@1_opt_1
TARGET LIST: 
target index: 468  , change_value: argument_list@1_opt_1
target index: 484  , change_value: %NULL%
target index: 485  , change_value: %NULL%

argument_list  :  %MARK%  '...'  ID  
 index is: 473, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 474  , change_value: '...'

argument_list@1_opt_1  :  %MARK%  
 index is: 484, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument_list@1_opt_1  :  %MARK%  '='  
 index is: 485, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 486  , change_value: '='

########
#TO SET#
########
index: 51, target_source: function_stmt@0_opt_4

index: 419, target_source: argument_list

index: 367, target_source: argument_list@1_opt_1

index: 375, target_source: '...'

index: 377, target_source: '='



##########
#51  TERM#
##########


##########
#FROM SET#
##########
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  %MARK%  ')'  function_stmt@0_opt_6  function_body  
 index is: 318, term type: shift, before: function_stmt@0_opt_4, after: ')'
TARGET LIST: 
target index: 319  , change_value: ')'

########
#SUBSET#
########
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  %MARK%  ')'  function_stmt@0_opt_6  function_body  
 index is: 318, term type: shift, before: function_stmt@0_opt_4, after: ')'
TARGET LIST: 
target index: 319  , change_value: ')'

########
#TO SET#
########
index: 52, target_source: ')'



##########
#52  TERM#
##########


##########
#FROM SET#
##########
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  %MARK%  function_stmt@0_opt_6  function_body  
 index is: 319, term type: to_deduce, before: ')', after: function_stmt@0_opt_6
TARGET LIST: 
target index: 320  , change_value: function_stmt@0_opt_6
target index: 322  , change_value: %NULL%
target index: 323  , change_value: %NULL%

########
#SUBSET#
########
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  %MARK%  function_stmt@0_opt_6  function_body  
 index is: 319, term type: to_deduce, before: ')', after: function_stmt@0_opt_6
TARGET LIST: 
target index: 320  , change_value: function_stmt@0_opt_6
target index: 322  , change_value: %NULL%
target index: 323  , change_value: %NULL%

function_stmt@0_opt_6  :  %MARK%  
 index is: 322, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function_stmt@0_opt_6  :  %MARK%  'override'  
 index is: 323, term type: shift, before: %NULL%, after: 'override'
TARGET LIST: 
target index: 324  , change_value: 'override'

########
#TO SET#
########
index: 53, target_source: function_stmt@0_opt_6

index: 418, target_source: 'override'



##########
#53  TERM#
##########


##########
#FROM SET#
##########
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  %MARK%  function_body  
 index is: 320, term type: to_deduce, before: function_stmt@0_opt_6, after: function_body
TARGET LIST: 
target index: 321  , change_value: function_body
target index: 328  , change_value: %NULL%

########
#SUBSET#
########
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  %MARK%  function_body  
 index is: 320, term type: to_deduce, before: function_stmt@0_opt_6, after: function_body
TARGET LIST: 
target index: 321  , change_value: function_body
target index: 328  , change_value: %NULL%

function_body  :  %MARK%  function_body@0_decl_1  
 index is: 328, term type: to_deduce, before: %NULL%, after: function_body@0_decl_1
TARGET LIST: 
target index: 329  , change_value: function_body@0_decl_1
target index: 330  , change_value: %NULL%
target index: 335  , change_value: %NULL%

function_body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 330, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 331  , change_value: ENDL

function_body@0_decl_1  :  %MARK%  '{'  stmts  '}'  
 index is: 335, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 336  , change_value: '{'

########
#TO SET#
########
index: 54, target_source: function_body

index: 55, target_source: function_body@0_decl_1

index: 56, target_source: ENDL

index: 415, target_source: '{'



##########
#54  TERM#
##########


##########
#FROM SET#
##########
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  %MARK%  
 index is: 321, term type: deduce, before: function_body, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function_stmt  :  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  %MARK%  
 index is: 321, term type: deduce, before: function_body, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#55  TERM#
##########


##########
#FROM SET#
##########
function_body  :  function_body@0_decl_1  %MARK%  
 index is: 329, term type: deduce, before: function_body@0_decl_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function_body  :  function_body@0_decl_1  %MARK%  
 index is: 329, term type: deduce, before: function_body@0_decl_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#56  TERM#
##########


##########
#FROM SET#
##########
function_body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 331, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 332  , change_value: stmts

########
#SUBSET#
########
function_body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 331, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 332  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 57, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



##########
#57  TERM#
##########


##########
#FROM SET#
##########
function_body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 332, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 333  , change_value: 'end'

########
#SUBSET#
########
function_body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 332, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 333  , change_value: 'end'

########
#TO SET#
########
index: 58, target_source: 'end'



##########
#58  TERM#
##########


##########
#FROM SET#
##########
function_body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 333, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 334  , change_value: ENDL

########
#SUBSET#
########
function_body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 333, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 334  , change_value: ENDL

########
#TO SET#
########
index: 59, target_source: ENDL



##########
#59  TERM#
##########


##########
#FROM SET#
##########
function_body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 334, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function_body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 334, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#60  TERM#
##########


##########
#FROM SET#
##########
throw_stmt  :  'throw'  %MARK%  throw_stmt@0_opt_2  endline  
 index is: 368, term type: to_deduce, before: 'throw', after: throw_stmt@0_opt_2
TARGET LIST: 
target index: 369  , change_value: throw_stmt@0_opt_2
target index: 371  , change_value: %NULL%
target index: 372  , change_value: %NULL%

########
#SUBSET#
########
throw_stmt  :  'throw'  %MARK%  throw_stmt@0_opt_2  endline  
 index is: 368, term type: to_deduce, before: 'throw', after: throw_stmt@0_opt_2
TARGET LIST: 
target index: 369  , change_value: throw_stmt@0_opt_2
target index: 371  , change_value: %NULL%
target index: 372  , change_value: %NULL%

throw_stmt@0_opt_2  :  %MARK%  
 index is: 371, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

throw_stmt@0_opt_2  :  %MARK%  expr  
 index is: 372, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 373  , change_value: expr
target index: 403  , change_value: %NULL%

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 61, target_source: throw_stmt@0_opt_2

index: 63, target_source: expr

index: 64, target_source: single_expr

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



##########
#61  TERM#
##########


##########
#FROM SET#
##########
throw_stmt  :  'throw'  throw_stmt@0_opt_2  %MARK%  endline  
 index is: 369, term type: to_deduce, before: throw_stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 370  , change_value: endline

########
#SUBSET#
########
throw_stmt  :  'throw'  throw_stmt@0_opt_2  %MARK%  endline  
 index is: 369, term type: to_deduce, before: throw_stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 370  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 62, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



##########
#62  TERM#
##########


##########
#FROM SET#
##########
throw_stmt  :  'throw'  throw_stmt@0_opt_2  endline  %MARK%  
 index is: 370, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
throw_stmt  :  'throw'  throw_stmt@0_opt_2  endline  %MARK%  
 index is: 370, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#63  TERM#
##########


##########
#FROM SET#
##########
throw_stmt@0_opt_2  :  expr  %MARK%  
 index is: 373, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
throw_stmt@0_opt_2  :  expr  %MARK%  
 index is: 373, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#64  TERM#
##########


##########
#FROM SET#
##########
expr  :  single_expr  %MARK%  expr@0_opt_2  
 index is: 404, term type: to_deduce, before: single_expr, after: expr@0_opt_2
TARGET LIST: 
target index: 405  , change_value: expr@0_opt_2
target index: 406  , change_value: %NULL%
target index: 407  , change_value: %NULL%

########
#SUBSET#
########
expr  :  single_expr  %MARK%  expr@0_opt_2  
 index is: 404, term type: to_deduce, before: single_expr, after: expr@0_opt_2
TARGET LIST: 
target index: 405  , change_value: expr@0_opt_2
target index: 406  , change_value: %NULL%
target index: 407  , change_value: %NULL%

expr@0_opt_2  :  %MARK%  
 index is: 406, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

expr@0_opt_2  :  %MARK%  ','  expr  
 index is: 407, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 408  , change_value: ','

########
#TO SET#
########
index: 65, target_source: expr@0_opt_2

index: 66, target_source: ','



##########
#65  TERM#
##########


##########
#FROM SET#
##########
expr  :  single_expr  expr@0_opt_2  %MARK%  
 index is: 405, term type: deduce, before: expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expr  :  single_expr  expr@0_opt_2  %MARK%  
 index is: 405, term type: deduce, before: expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#66  TERM#
##########


##########
#FROM SET#
##########
expr@0_opt_2  :  ','  %MARK%  expr  
 index is: 408, term type: to_deduce, before: ',', after: expr
TARGET LIST: 
target index: 403  , change_value: %NULL%
target index: 409  , change_value: expr

########
#SUBSET#
########
expr@0_opt_2  :  ','  %MARK%  expr  
 index is: 408, term type: to_deduce, before: ',', after: expr
TARGET LIST: 
target index: 403  , change_value: %NULL%
target index: 409  , change_value: expr

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 67, target_source: expr

index: 64, target_source: single_expr

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



##########
#67  TERM#
##########


##########
#FROM SET#
##########
expr@0_opt_2  :  ','  expr  %MARK%  
 index is: 409, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expr@0_opt_2  :  ','  expr  %MARK%  
 index is: 409, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#68  TERM#
##########


##########
#FROM SET#
##########
single_expr  :  basic_expr  %MARK%  
 index is: 411, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
single_expr  :  basic_expr  %MARK%  
 index is: 411, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#69  TERM#
##########


##########
#FROM SET#
##########
single_expr  :  lambda_expr  %MARK%  
 index is: 413, term type: deduce, before: lambda_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
single_expr  :  lambda_expr  %MARK%  
 index is: 413, term type: deduce, before: lambda_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#70  TERM#
##########


##########
#FROM SET#
##########
basic_expr  :  cond_expr  %MARK%  basic_expr@1_opt_2  
 index is: 415, term type: to_deduce, before: cond_expr, after: basic_expr@1_opt_2
TARGET LIST: 
target index: 416  , change_value: basic_expr@1_opt_2
target index: 421  , change_value: %NULL%
target index: 422  , change_value: %NULL%

########
#SUBSET#
########
basic_expr  :  cond_expr  %MARK%  basic_expr@1_opt_2  
 index is: 415, term type: to_deduce, before: cond_expr, after: basic_expr@1_opt_2
TARGET LIST: 
target index: 416  , change_value: basic_expr@1_opt_2
target index: 421  , change_value: %NULL%
target index: 422  , change_value: %NULL%

basic_expr@1_opt_2  :  %MARK%  
 index is: 421, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

basic_expr@1_opt_2  :  %MARK%  asi_op  single_expr  
 index is: 422, term type: to_deduce, before: %NULL%, after: asi_op
TARGET LIST: 
target index: 423  , change_value: asi_op
target index: 425  , change_value: %NULL%
target index: 427  , change_value: %NULL%
target index: 429  , change_value: %NULL%
target index: 431  , change_value: %NULL%
target index: 433  , change_value: %NULL%
target index: 435  , change_value: %NULL%
target index: 437  , change_value: %NULL%
target index: 439  , change_value: %NULL%

asi_op  :  %MARK%  '^='  
 index is: 425, term type: shift, before: %NULL%, after: '^='
TARGET LIST: 
target index: 426  , change_value: '^='

asi_op  :  %MARK%  '%='  
 index is: 427, term type: shift, before: %NULL%, after: '%='
TARGET LIST: 
target index: 428  , change_value: '%='

asi_op  :  %MARK%  '/='  
 index is: 429, term type: shift, before: %NULL%, after: '/='
TARGET LIST: 
target index: 430  , change_value: '/='

asi_op  :  %MARK%  '*='  
 index is: 431, term type: shift, before: %NULL%, after: '*='
TARGET LIST: 
target index: 432  , change_value: '*='

asi_op  :  %MARK%  '-='  
 index is: 433, term type: shift, before: %NULL%, after: '-='
TARGET LIST: 
target index: 434  , change_value: '-='

asi_op  :  %MARK%  '+='  
 index is: 435, term type: shift, before: %NULL%, after: '+='
TARGET LIST: 
target index: 436  , change_value: '+='

asi_op  :  %MARK%  ':='  
 index is: 437, term type: shift, before: %NULL%, after: ':='
TARGET LIST: 
target index: 438  , change_value: ':='

asi_op  :  %MARK%  '='  
 index is: 439, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 440  , change_value: '='

########
#TO SET#
########
index: 71, target_source: basic_expr@1_opt_2

index: 72, target_source: asi_op

index: 407, target_source: '^='

index: 408, target_source: '%='

index: 409, target_source: '/='

index: 410, target_source: '*='

index: 411, target_source: '-='

index: 412, target_source: '+='

index: 413, target_source: ':='

index: 414, target_source: '='



##########
#71  TERM#
##########


##########
#FROM SET#
##########
basic_expr  :  cond_expr  basic_expr@1_opt_2  %MARK%  
 index is: 416, term type: deduce, before: basic_expr@1_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
basic_expr  :  cond_expr  basic_expr@1_opt_2  %MARK%  
 index is: 416, term type: deduce, before: basic_expr@1_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#72  TERM#
##########


##########
#FROM SET#
##########
basic_expr@1_opt_2  :  asi_op  %MARK%  single_expr  
 index is: 423, term type: to_deduce, before: asi_op, after: single_expr
TARGET LIST: 
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%
target index: 424  , change_value: single_expr

########
#SUBSET#
########
basic_expr@1_opt_2  :  asi_op  %MARK%  single_expr  
 index is: 423, term type: to_deduce, before: asi_op, after: single_expr
TARGET LIST: 
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%
target index: 424  , change_value: single_expr

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 73, target_source: single_expr

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



##########
#73  TERM#
##########


##########
#FROM SET#
##########
basic_expr@1_opt_2  :  asi_op  single_expr  %MARK%  
 index is: 424, term type: deduce, before: single_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
basic_expr@1_opt_2  :  asi_op  single_expr  %MARK%  
 index is: 424, term type: deduce, before: single_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#74  TERM#
##########


##########
#FROM SET#
##########
basic_expr  :  var_bind  %MARK%  '='  cond_expr  
 index is: 418, term type: shift, before: var_bind, after: '='
TARGET LIST: 
target index: 419  , change_value: '='

########
#SUBSET#
########
basic_expr  :  var_bind  %MARK%  '='  cond_expr  
 index is: 418, term type: shift, before: var_bind, after: '='
TARGET LIST: 
target index: 419  , change_value: '='

########
#TO SET#
########
index: 75, target_source: '='



##########
#75  TERM#
##########


##########
#FROM SET#
##########
basic_expr  :  var_bind  '='  %MARK%  cond_expr  
 index is: 419, term type: to_deduce, before: '=', after: cond_expr
TARGET LIST: 
target index: 420  , change_value: cond_expr
target index: 503  , change_value: %NULL%

########
#SUBSET#
########
basic_expr  :  var_bind  '='  %MARK%  cond_expr  
 index is: 419, term type: to_deduce, before: '=', after: cond_expr
TARGET LIST: 
target index: 420  , change_value: cond_expr
target index: 503  , change_value: %NULL%

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 76, target_source: cond_expr

index: 77, target_source: logic_or_expr

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



##########
#76  TERM#
##########


##########
#FROM SET#
##########
basic_expr  :  var_bind  '='  cond_expr  %MARK%  
 index is: 420, term type: deduce, before: cond_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
basic_expr  :  var_bind  '='  cond_expr  %MARK%  
 index is: 420, term type: deduce, before: cond_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#77  TERM#
##########


##########
#FROM SET#
##########
cond_expr  :  logic_or_expr  %MARK%  cond_expr@0_opt_2  
 index is: 504, term type: to_deduce, before: logic_or_expr, after: cond_expr@0_opt_2
TARGET LIST: 
target index: 505  , change_value: cond_expr@0_opt_2
target index: 506  , change_value: %NULL%
target index: 507  , change_value: %NULL%

########
#SUBSET#
########
cond_expr  :  logic_or_expr  %MARK%  cond_expr@0_opt_2  
 index is: 504, term type: to_deduce, before: logic_or_expr, after: cond_expr@0_opt_2
TARGET LIST: 
target index: 505  , change_value: cond_expr@0_opt_2
target index: 506  , change_value: %NULL%
target index: 507  , change_value: %NULL%

cond_expr@0_opt_2  :  %MARK%  
 index is: 506, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

cond_expr@0_opt_2  :  %MARK%  cond_postfix  
 index is: 507, term type: to_deduce, before: %NULL%, after: cond_postfix
TARGET LIST: 
target index: 508  , change_value: cond_postfix
target index: 509  , change_value: %NULL%
target index: 512  , change_value: %NULL%

cond_postfix  :  %MARK%  ':'  logic_or_expr  
 index is: 509, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 510  , change_value: ':'

cond_postfix  :  %MARK%  '?'  logic_or_expr  ':'  cond_expr  
 index is: 512, term type: shift, before: %NULL%, after: '?'
TARGET LIST: 
target index: 513  , change_value: '?'

########
#TO SET#
########
index: 78, target_source: cond_expr@0_opt_2

index: 79, target_source: cond_postfix

index: 80, target_source: ':'

index: 403, target_source: '?'



##########
#78  TERM#
##########


##########
#FROM SET#
##########
cond_expr  :  logic_or_expr  cond_expr@0_opt_2  %MARK%  
 index is: 505, term type: deduce, before: cond_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
cond_expr  :  logic_or_expr  cond_expr@0_opt_2  %MARK%  
 index is: 505, term type: deduce, before: cond_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#79  TERM#
##########


##########
#FROM SET#
##########
cond_expr@0_opt_2  :  cond_postfix  %MARK%  
 index is: 508, term type: deduce, before: cond_postfix, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
cond_expr@0_opt_2  :  cond_postfix  %MARK%  
 index is: 508, term type: deduce, before: cond_postfix, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#80  TERM#
##########


##########
#FROM SET#
##########
cond_postfix  :  ':'  %MARK%  logic_or_expr  
 index is: 510, term type: to_deduce, before: ':', after: logic_or_expr
TARGET LIST: 
target index: 511  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

########
#SUBSET#
########
cond_postfix  :  ':'  %MARK%  logic_or_expr  
 index is: 510, term type: to_deduce, before: ':', after: logic_or_expr
TARGET LIST: 
target index: 511  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 81, target_source: logic_or_expr

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



##########
#81  TERM#
##########


##########
#FROM SET#
##########
cond_postfix  :  ':'  logic_or_expr  %MARK%  
 index is: 511, term type: deduce, before: logic_or_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
cond_postfix  :  ':'  logic_or_expr  %MARK%  
 index is: 511, term type: deduce, before: logic_or_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#82  TERM#
##########


##########
#FROM SET#
##########
logic_or_expr  :  logic_and_expr  %MARK%  logic_or_expr@0_opt_2  
 index is: 518, term type: to_deduce, before: logic_and_expr, after: logic_or_expr@0_opt_2
TARGET LIST: 
target index: 519  , change_value: logic_or_expr@0_opt_2
target index: 520  , change_value: %NULL%
target index: 521  , change_value: %NULL%

########
#SUBSET#
########
logic_or_expr  :  logic_and_expr  %MARK%  logic_or_expr@0_opt_2  
 index is: 518, term type: to_deduce, before: logic_and_expr, after: logic_or_expr@0_opt_2
TARGET LIST: 
target index: 519  , change_value: logic_or_expr@0_opt_2
target index: 520  , change_value: %NULL%
target index: 521  , change_value: %NULL%

logic_or_expr@0_opt_2  :  %MARK%  
 index is: 520, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

logic_or_expr@0_opt_2  :  %MARK%  logic_or_expr@0_opt_2@0_decl_1  logic_or_expr  
 index is: 521, term type: to_deduce, before: %NULL%, after: logic_or_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 522  , change_value: logic_or_expr@0_opt_2@0_decl_1
target index: 524  , change_value: %NULL%
target index: 526  , change_value: %NULL%

logic_or_expr@0_opt_2@0_decl_1  :  %MARK%  'or'  
 index is: 524, term type: shift, before: %NULL%, after: 'or'
TARGET LIST: 
target index: 525  , change_value: 'or'

logic_or_expr@0_opt_2@0_decl_1  :  %MARK%  '||'  
 index is: 526, term type: shift, before: %NULL%, after: '||'
TARGET LIST: 
target index: 527  , change_value: '||'

########
#TO SET#
########
index: 83, target_source: logic_or_expr@0_opt_2

index: 84, target_source: logic_or_expr@0_opt_2@0_decl_1

index: 401, target_source: 'or'

index: 402, target_source: '||'



##########
#83  TERM#
##########


##########
#FROM SET#
##########
logic_or_expr  :  logic_and_expr  logic_or_expr@0_opt_2  %MARK%  
 index is: 519, term type: deduce, before: logic_or_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic_or_expr  :  logic_and_expr  logic_or_expr@0_opt_2  %MARK%  
 index is: 519, term type: deduce, before: logic_or_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#84  TERM#
##########


##########
#FROM SET#
##########
logic_or_expr@0_opt_2  :  logic_or_expr@0_opt_2@0_decl_1  %MARK%  logic_or_expr  
 index is: 522, term type: to_deduce, before: logic_or_expr@0_opt_2@0_decl_1, after: logic_or_expr
TARGET LIST: 
target index: 517  , change_value: %NULL%
target index: 523  , change_value: logic_or_expr

########
#SUBSET#
########
logic_or_expr@0_opt_2  :  logic_or_expr@0_opt_2@0_decl_1  %MARK%  logic_or_expr  
 index is: 522, term type: to_deduce, before: logic_or_expr@0_opt_2@0_decl_1, after: logic_or_expr
TARGET LIST: 
target index: 517  , change_value: %NULL%
target index: 523  , change_value: logic_or_expr

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 85, target_source: logic_or_expr

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



##########
#85  TERM#
##########


##########
#FROM SET#
##########
logic_or_expr@0_opt_2  :  logic_or_expr@0_opt_2@0_decl_1  logic_or_expr  %MARK%  
 index is: 523, term type: deduce, before: logic_or_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic_or_expr@0_opt_2  :  logic_or_expr@0_opt_2@0_decl_1  logic_or_expr  %MARK%  
 index is: 523, term type: deduce, before: logic_or_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#86  TERM#
##########


##########
#FROM SET#
##########
logic_and_expr  :  equal_expr  %MARK%  logic_and_expr@0_opt_2  
 index is: 529, term type: to_deduce, before: equal_expr, after: logic_and_expr@0_opt_2
TARGET LIST: 
target index: 530  , change_value: logic_and_expr@0_opt_2
target index: 531  , change_value: %NULL%
target index: 532  , change_value: %NULL%

########
#SUBSET#
########
logic_and_expr  :  equal_expr  %MARK%  logic_and_expr@0_opt_2  
 index is: 529, term type: to_deduce, before: equal_expr, after: logic_and_expr@0_opt_2
TARGET LIST: 
target index: 530  , change_value: logic_and_expr@0_opt_2
target index: 531  , change_value: %NULL%
target index: 532  , change_value: %NULL%

logic_and_expr@0_opt_2  :  %MARK%  
 index is: 531, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

logic_and_expr@0_opt_2  :  %MARK%  logic_and_expr@0_opt_2@0_decl_1  logic_and_expr  
 index is: 532, term type: to_deduce, before: %NULL%, after: logic_and_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 533  , change_value: logic_and_expr@0_opt_2@0_decl_1
target index: 535  , change_value: %NULL%
target index: 537  , change_value: %NULL%

logic_and_expr@0_opt_2@0_decl_1  :  %MARK%  'and'  
 index is: 535, term type: shift, before: %NULL%, after: 'and'
TARGET LIST: 
target index: 536  , change_value: 'and'

logic_and_expr@0_opt_2@0_decl_1  :  %MARK%  '&&'  
 index is: 537, term type: shift, before: %NULL%, after: '&&'
TARGET LIST: 
target index: 538  , change_value: '&&'

########
#TO SET#
########
index: 87, target_source: logic_and_expr@0_opt_2

index: 88, target_source: logic_and_expr@0_opt_2@0_decl_1

index: 399, target_source: 'and'

index: 400, target_source: '&&'



##########
#87  TERM#
##########


##########
#FROM SET#
##########
logic_and_expr  :  equal_expr  logic_and_expr@0_opt_2  %MARK%  
 index is: 530, term type: deduce, before: logic_and_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic_and_expr  :  equal_expr  logic_and_expr@0_opt_2  %MARK%  
 index is: 530, term type: deduce, before: logic_and_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#88  TERM#
##########


##########
#FROM SET#
##########
logic_and_expr@0_opt_2  :  logic_and_expr@0_opt_2@0_decl_1  %MARK%  logic_and_expr  
 index is: 533, term type: to_deduce, before: logic_and_expr@0_opt_2@0_decl_1, after: logic_and_expr
TARGET LIST: 
target index: 528  , change_value: %NULL%
target index: 534  , change_value: logic_and_expr

########
#SUBSET#
########
logic_and_expr@0_opt_2  :  logic_and_expr@0_opt_2@0_decl_1  %MARK%  logic_and_expr  
 index is: 533, term type: to_deduce, before: logic_and_expr@0_opt_2@0_decl_1, after: logic_and_expr
TARGET LIST: 
target index: 528  , change_value: %NULL%
target index: 534  , change_value: logic_and_expr

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 89, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



##########
#89  TERM#
##########


##########
#FROM SET#
##########
logic_and_expr@0_opt_2  :  logic_and_expr@0_opt_2@0_decl_1  logic_and_expr  %MARK%  
 index is: 534, term type: deduce, before: logic_and_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic_and_expr@0_opt_2  :  logic_and_expr@0_opt_2@0_decl_1  logic_and_expr  %MARK%  
 index is: 534, term type: deduce, before: logic_and_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#90  TERM#
##########


##########
#FROM SET#
##########
equal_expr  :  relat_expr  %MARK%  equal_expr@0_opt_2  
 index is: 540, term type: to_deduce, before: relat_expr, after: equal_expr@0_opt_2
TARGET LIST: 
target index: 541  , change_value: equal_expr@0_opt_2
target index: 542  , change_value: %NULL%
target index: 543  , change_value: %NULL%

########
#SUBSET#
########
equal_expr  :  relat_expr  %MARK%  equal_expr@0_opt_2  
 index is: 540, term type: to_deduce, before: relat_expr, after: equal_expr@0_opt_2
TARGET LIST: 
target index: 541  , change_value: equal_expr@0_opt_2
target index: 542  , change_value: %NULL%
target index: 543  , change_value: %NULL%

equal_expr@0_opt_2  :  %MARK%  
 index is: 542, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

equal_expr@0_opt_2  :  %MARK%  equal_expr@0_opt_2@0_decl_1  equal_expr  
 index is: 543, term type: to_deduce, before: %NULL%, after: equal_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 544  , change_value: equal_expr@0_opt_2@0_decl_1
target index: 546  , change_value: %NULL%
target index: 548  , change_value: %NULL%

equal_expr@0_opt_2@0_decl_1  :  %MARK%  '!='  
 index is: 546, term type: shift, before: %NULL%, after: '!='
TARGET LIST: 
target index: 547  , change_value: '!='

equal_expr@0_opt_2@0_decl_1  :  %MARK%  '=='  
 index is: 548, term type: shift, before: %NULL%, after: '=='
TARGET LIST: 
target index: 549  , change_value: '=='

########
#TO SET#
########
index: 91, target_source: equal_expr@0_opt_2

index: 92, target_source: equal_expr@0_opt_2@0_decl_1

index: 397, target_source: '!='

index: 398, target_source: '=='



##########
#91  TERM#
##########


##########
#FROM SET#
##########
equal_expr  :  relat_expr  equal_expr@0_opt_2  %MARK%  
 index is: 541, term type: deduce, before: equal_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal_expr  :  relat_expr  equal_expr@0_opt_2  %MARK%  
 index is: 541, term type: deduce, before: equal_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#92  TERM#
##########


##########
#FROM SET#
##########
equal_expr@0_opt_2  :  equal_expr@0_opt_2@0_decl_1  %MARK%  equal_expr  
 index is: 544, term type: to_deduce, before: equal_expr@0_opt_2@0_decl_1, after: equal_expr
TARGET LIST: 
target index: 539  , change_value: %NULL%
target index: 545  , change_value: equal_expr

########
#SUBSET#
########
equal_expr@0_opt_2  :  equal_expr@0_opt_2@0_decl_1  %MARK%  equal_expr  
 index is: 544, term type: to_deduce, before: equal_expr@0_opt_2@0_decl_1, after: equal_expr
TARGET LIST: 
target index: 539  , change_value: %NULL%
target index: 545  , change_value: equal_expr

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 93, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



##########
#93  TERM#
##########


##########
#FROM SET#
##########
equal_expr@0_opt_2  :  equal_expr@0_opt_2@0_decl_1  equal_expr  %MARK%  
 index is: 545, term type: deduce, before: equal_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal_expr@0_opt_2  :  equal_expr@0_opt_2@0_decl_1  equal_expr  %MARK%  
 index is: 545, term type: deduce, before: equal_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#94  TERM#
##########


##########
#FROM SET#
##########
relat_expr  :  add_expr  %MARK%  relat_expr@0_opt_2  
 index is: 551, term type: to_deduce, before: add_expr, after: relat_expr@0_opt_2
TARGET LIST: 
target index: 552  , change_value: relat_expr@0_opt_2
target index: 553  , change_value: %NULL%
target index: 554  , change_value: %NULL%

########
#SUBSET#
########
relat_expr  :  add_expr  %MARK%  relat_expr@0_opt_2  
 index is: 551, term type: to_deduce, before: add_expr, after: relat_expr@0_opt_2
TARGET LIST: 
target index: 552  , change_value: relat_expr@0_opt_2
target index: 553  , change_value: %NULL%
target index: 554  , change_value: %NULL%

relat_expr@0_opt_2  :  %MARK%  
 index is: 553, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

relat_expr@0_opt_2  :  %MARK%  relat_expr@0_opt_2@0_decl_1  relat_expr  
 index is: 554, term type: to_deduce, before: %NULL%, after: relat_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 555  , change_value: relat_expr@0_opt_2@0_decl_1
target index: 557  , change_value: %NULL%
target index: 559  , change_value: %NULL%
target index: 561  , change_value: %NULL%
target index: 563  , change_value: %NULL%

relat_expr@0_opt_2@0_decl_1  :  %MARK%  '<='  
 index is: 557, term type: shift, before: %NULL%, after: '<='
TARGET LIST: 
target index: 558  , change_value: '<='

relat_expr@0_opt_2@0_decl_1  :  %MARK%  '>='  
 index is: 559, term type: shift, before: %NULL%, after: '>='
TARGET LIST: 
target index: 560  , change_value: '>='

relat_expr@0_opt_2@0_decl_1  :  %MARK%  '<'  
 index is: 561, term type: shift, before: %NULL%, after: '<'
TARGET LIST: 
target index: 562  , change_value: '<'

relat_expr@0_opt_2@0_decl_1  :  %MARK%  '>'  
 index is: 563, term type: shift, before: %NULL%, after: '>'
TARGET LIST: 
target index: 564  , change_value: '>'

########
#TO SET#
########
index: 95, target_source: relat_expr@0_opt_2

index: 96, target_source: relat_expr@0_opt_2@0_decl_1

index: 393, target_source: '<='

index: 394, target_source: '>='

index: 395, target_source: '<'

index: 396, target_source: '>'



##########
#95  TERM#
##########


##########
#FROM SET#
##########
relat_expr  :  add_expr  relat_expr@0_opt_2  %MARK%  
 index is: 552, term type: deduce, before: relat_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_expr  :  add_expr  relat_expr@0_opt_2  %MARK%  
 index is: 552, term type: deduce, before: relat_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#96  TERM#
##########


##########
#FROM SET#
##########
relat_expr@0_opt_2  :  relat_expr@0_opt_2@0_decl_1  %MARK%  relat_expr  
 index is: 555, term type: to_deduce, before: relat_expr@0_opt_2@0_decl_1, after: relat_expr
TARGET LIST: 
target index: 550  , change_value: %NULL%
target index: 556  , change_value: relat_expr

########
#SUBSET#
########
relat_expr@0_opt_2  :  relat_expr@0_opt_2@0_decl_1  %MARK%  relat_expr  
 index is: 555, term type: to_deduce, before: relat_expr@0_opt_2@0_decl_1, after: relat_expr
TARGET LIST: 
target index: 550  , change_value: %NULL%
target index: 556  , change_value: relat_expr

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 97, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



##########
#97  TERM#
##########


##########
#FROM SET#
##########
relat_expr@0_opt_2  :  relat_expr@0_opt_2@0_decl_1  relat_expr  %MARK%  
 index is: 556, term type: deduce, before: relat_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_expr@0_opt_2  :  relat_expr@0_opt_2@0_decl_1  relat_expr  %MARK%  
 index is: 556, term type: deduce, before: relat_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#98  TERM#
##########


##########
#FROM SET#
##########
add_expr  :  mul_expr  %MARK%  add_expr@0_opt_2  
 index is: 566, term type: to_deduce, before: mul_expr, after: add_expr@0_opt_2
TARGET LIST: 
target index: 567  , change_value: add_expr@0_opt_2
target index: 568  , change_value: %NULL%
target index: 569  , change_value: %NULL%

########
#SUBSET#
########
add_expr  :  mul_expr  %MARK%  add_expr@0_opt_2  
 index is: 566, term type: to_deduce, before: mul_expr, after: add_expr@0_opt_2
TARGET LIST: 
target index: 567  , change_value: add_expr@0_opt_2
target index: 568  , change_value: %NULL%
target index: 569  , change_value: %NULL%

add_expr@0_opt_2  :  %MARK%  
 index is: 568, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

add_expr@0_opt_2  :  %MARK%  add_expr@0_opt_2@0_decl_1  add_expr  
 index is: 569, term type: to_deduce, before: %NULL%, after: add_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 570  , change_value: add_expr@0_opt_2@0_decl_1
target index: 572  , change_value: %NULL%
target index: 574  , change_value: %NULL%

add_expr@0_opt_2@0_decl_1  :  %MARK%  '-'  
 index is: 572, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 573  , change_value: '-'

add_expr@0_opt_2@0_decl_1  :  %MARK%  '+'  
 index is: 574, term type: shift, before: %NULL%, after: '+'
TARGET LIST: 
target index: 575  , change_value: '+'

########
#TO SET#
########
index: 99, target_source: add_expr@0_opt_2

index: 100, target_source: add_expr@0_opt_2@0_decl_1

index: 391, target_source: '-'

index: 392, target_source: '+'



##########
#99  TERM#
##########


##########
#FROM SET#
##########
add_expr  :  mul_expr  add_expr@0_opt_2  %MARK%  
 index is: 567, term type: deduce, before: add_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add_expr  :  mul_expr  add_expr@0_opt_2  %MARK%  
 index is: 567, term type: deduce, before: add_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#100  TERM#
###########


##########
#FROM SET#
##########
add_expr@0_opt_2  :  add_expr@0_opt_2@0_decl_1  %MARK%  add_expr  
 index is: 570, term type: to_deduce, before: add_expr@0_opt_2@0_decl_1, after: add_expr
TARGET LIST: 
target index: 565  , change_value: %NULL%
target index: 571  , change_value: add_expr

########
#SUBSET#
########
add_expr@0_opt_2  :  add_expr@0_opt_2@0_decl_1  %MARK%  add_expr  
 index is: 570, term type: to_deduce, before: add_expr@0_opt_2@0_decl_1, after: add_expr
TARGET LIST: 
target index: 565  , change_value: %NULL%
target index: 571  , change_value: add_expr

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 101, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#101  TERM#
###########


##########
#FROM SET#
##########
add_expr@0_opt_2  :  add_expr@0_opt_2@0_decl_1  add_expr  %MARK%  
 index is: 571, term type: deduce, before: add_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add_expr@0_opt_2  :  add_expr@0_opt_2@0_decl_1  add_expr  %MARK%  
 index is: 571, term type: deduce, before: add_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#102  TERM#
###########


##########
#FROM SET#
##########
mul_expr  :  unary_expr  %MARK%  mul_expr@0_opt_2  
 index is: 577, term type: to_deduce, before: unary_expr, after: mul_expr@0_opt_2
TARGET LIST: 
target index: 578  , change_value: mul_expr@0_opt_2
target index: 579  , change_value: %NULL%
target index: 580  , change_value: %NULL%

########
#SUBSET#
########
mul_expr  :  unary_expr  %MARK%  mul_expr@0_opt_2  
 index is: 577, term type: to_deduce, before: unary_expr, after: mul_expr@0_opt_2
TARGET LIST: 
target index: 578  , change_value: mul_expr@0_opt_2
target index: 579  , change_value: %NULL%
target index: 580  , change_value: %NULL%

mul_expr@0_opt_2  :  %MARK%  
 index is: 579, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

mul_expr@0_opt_2  :  %MARK%  mul_expr@0_opt_2@0_decl_1  mul_expr  
 index is: 580, term type: to_deduce, before: %NULL%, after: mul_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 581  , change_value: mul_expr@0_opt_2@0_decl_1
target index: 583  , change_value: %NULL%
target index: 585  , change_value: %NULL%
target index: 587  , change_value: %NULL%
target index: 589  , change_value: %NULL%

mul_expr@0_opt_2@0_decl_1  :  %MARK%  '^'  
 index is: 583, term type: shift, before: %NULL%, after: '^'
TARGET LIST: 
target index: 584  , change_value: '^'

mul_expr@0_opt_2@0_decl_1  :  %MARK%  '%'  
 index is: 585, term type: shift, before: %NULL%, after: '%'
TARGET LIST: 
target index: 586  , change_value: '%'

mul_expr@0_opt_2@0_decl_1  :  %MARK%  '/'  
 index is: 587, term type: shift, before: %NULL%, after: '/'
TARGET LIST: 
target index: 588  , change_value: '/'

mul_expr@0_opt_2@0_decl_1  :  %MARK%  '*'  
 index is: 589, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 590  , change_value: '*'

########
#TO SET#
########
index: 103, target_source: mul_expr@0_opt_2

index: 104, target_source: mul_expr@0_opt_2@0_decl_1

index: 387, target_source: '^'

index: 388, target_source: '%'

index: 389, target_source: '/'

index: 390, target_source: '*'



###########
#103  TERM#
###########


##########
#FROM SET#
##########
mul_expr  :  unary_expr  mul_expr@0_opt_2  %MARK%  
 index is: 578, term type: deduce, before: mul_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul_expr  :  unary_expr  mul_expr@0_opt_2  %MARK%  
 index is: 578, term type: deduce, before: mul_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#104  TERM#
###########


##########
#FROM SET#
##########
mul_expr@0_opt_2  :  mul_expr@0_opt_2@0_decl_1  %MARK%  mul_expr  
 index is: 581, term type: to_deduce, before: mul_expr@0_opt_2@0_decl_1, after: mul_expr
TARGET LIST: 
target index: 576  , change_value: %NULL%
target index: 582  , change_value: mul_expr

########
#SUBSET#
########
mul_expr@0_opt_2  :  mul_expr@0_opt_2@0_decl_1  %MARK%  mul_expr  
 index is: 581, term type: to_deduce, before: mul_expr@0_opt_2@0_decl_1, after: mul_expr
TARGET LIST: 
target index: 576  , change_value: %NULL%
target index: 582  , change_value: mul_expr

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 105, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#105  TERM#
###########


##########
#FROM SET#
##########
mul_expr@0_opt_2  :  mul_expr@0_opt_2@0_decl_1  mul_expr  %MARK%  
 index is: 582, term type: deduce, before: mul_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul_expr@0_opt_2  :  mul_expr@0_opt_2@0_decl_1  mul_expr  %MARK%  
 index is: 582, term type: deduce, before: mul_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#106  TERM#
###########


##########
#FROM SET#
##########
unary_expr  :  prim_expr  %MARK%  unary_expr@2_opt_2  
 index is: 592, term type: to_deduce, before: prim_expr, after: unary_expr@2_opt_2
TARGET LIST: 
target index: 593  , change_value: unary_expr@2_opt_2
target index: 601  , change_value: %NULL%
target index: 602  , change_value: %NULL%

########
#SUBSET#
########
unary_expr  :  prim_expr  %MARK%  unary_expr@2_opt_2  
 index is: 592, term type: to_deduce, before: prim_expr, after: unary_expr@2_opt_2
TARGET LIST: 
target index: 593  , change_value: unary_expr@2_opt_2
target index: 601  , change_value: %NULL%
target index: 602  , change_value: %NULL%

unary_expr@2_opt_2  :  %MARK%  
 index is: 601, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

unary_expr@2_opt_2  :  %MARK%  postfix_expr  
 index is: 602, term type: to_deduce, before: %NULL%, after: postfix_expr
TARGET LIST: 
target index: 603  , change_value: postfix_expr
target index: 625  , change_value: %NULL%

postfix_expr  :  %MARK%  postfix_expr@0_decl_1  postfix_expr@0_opt_2  
 index is: 625, term type: to_deduce, before: %NULL%, after: postfix_expr@0_decl_1
TARGET LIST: 
target index: 626  , change_value: postfix_expr@0_decl_1
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%

postfix_expr@0_decl_1  :  %MARK%  '...'  
 index is: 631, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 632  , change_value: '...'

postfix_expr@0_decl_1  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

postfix_expr@0_decl_1  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

########
#TO SET#
########
index: 107, target_source: unary_expr@2_opt_2

index: 108, target_source: postfix_expr

index: 109, target_source: postfix_expr@0_decl_1

index: 112, target_source: '...'

index: 113, target_source: '--'

index: 114, target_source: '++'



###########
#107  TERM#
###########


##########
#FROM SET#
##########
unary_expr  :  prim_expr  unary_expr@2_opt_2  %MARK%  
 index is: 593, term type: deduce, before: unary_expr@2_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_expr  :  prim_expr  unary_expr@2_opt_2  %MARK%  
 index is: 593, term type: deduce, before: unary_expr@2_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#108  TERM#
###########


##########
#FROM SET#
##########
unary_expr@2_opt_2  :  postfix_expr  %MARK%  
 index is: 603, term type: deduce, before: postfix_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_expr@2_opt_2  :  postfix_expr  %MARK%  
 index is: 603, term type: deduce, before: postfix_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#109  TERM#
###########


##########
#FROM SET#
##########
postfix_expr  :  postfix_expr@0_decl_1  %MARK%  postfix_expr@0_opt_2  
 index is: 626, term type: to_deduce, before: postfix_expr@0_decl_1, after: postfix_expr@0_opt_2
TARGET LIST: 
target index: 627  , change_value: postfix_expr@0_opt_2
target index: 628  , change_value: %NULL%
target index: 629  , change_value: %NULL%

########
#SUBSET#
########
postfix_expr  :  postfix_expr@0_decl_1  %MARK%  postfix_expr@0_opt_2  
 index is: 626, term type: to_deduce, before: postfix_expr@0_decl_1, after: postfix_expr@0_opt_2
TARGET LIST: 
target index: 627  , change_value: postfix_expr@0_opt_2
target index: 628  , change_value: %NULL%
target index: 629  , change_value: %NULL%

postfix_expr@0_opt_2  :  %MARK%  
 index is: 628, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix_expr@0_opt_2  :  %MARK%  postfix_expr  
 index is: 629, term type: to_deduce, before: %NULL%, after: postfix_expr
TARGET LIST: 
target index: 625  , change_value: %NULL%
target index: 630  , change_value: postfix_expr

postfix_expr  :  %MARK%  postfix_expr@0_decl_1  postfix_expr@0_opt_2  
 index is: 625, term type: to_deduce, before: %NULL%, after: postfix_expr@0_decl_1
TARGET LIST: 
target index: 626  , change_value: postfix_expr@0_decl_1
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%

postfix_expr@0_decl_1  :  %MARK%  '...'  
 index is: 631, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 632  , change_value: '...'

postfix_expr@0_decl_1  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

postfix_expr@0_decl_1  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

########
#TO SET#
########
index: 110, target_source: postfix_expr@0_opt_2

index: 111, target_source: postfix_expr

index: 109, target_source: postfix_expr@0_decl_1

index: 112, target_source: '...'

index: 113, target_source: '--'

index: 114, target_source: '++'



###########
#110  TERM#
###########


##########
#FROM SET#
##########
postfix_expr  :  postfix_expr@0_decl_1  postfix_expr@0_opt_2  %MARK%  
 index is: 627, term type: deduce, before: postfix_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_expr  :  postfix_expr@0_decl_1  postfix_expr@0_opt_2  %MARK%  
 index is: 627, term type: deduce, before: postfix_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#111  TERM#
###########


##########
#FROM SET#
##########
postfix_expr@0_opt_2  :  postfix_expr  %MARK%  
 index is: 630, term type: deduce, before: postfix_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_expr@0_opt_2  :  postfix_expr  %MARK%  
 index is: 630, term type: deduce, before: postfix_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#112  TERM#
###########


##########
#FROM SET#
##########
postfix_expr@0_decl_1  :  '...'  %MARK%  
 index is: 632, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_expr@0_decl_1  :  '...'  %MARK%  
 index is: 632, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#113  TERM#
###########


##########
#FROM SET#
##########
postfix_expr@0_decl_1  :  '--'  %MARK%  
 index is: 634, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_expr@0_decl_1  :  '--'  %MARK%  
 index is: 634, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#114  TERM#
###########


##########
#FROM SET#
##########
postfix_expr@0_decl_1  :  '++'  %MARK%  
 index is: 636, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix_expr@0_decl_1  :  '++'  %MARK%  
 index is: 636, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#115  TERM#
###########


##########
#FROM SET#
##########
unary_expr  :  unary_expr@1_decl_1  %MARK%  unary_expr  unary_expr@1_opt_3  
 index is: 595, term type: to_deduce, before: unary_expr@1_decl_1, after: unary_expr
TARGET LIST: 
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 596  , change_value: unary_expr
target index: 598  , change_value: %NULL%

########
#SUBSET#
########
unary_expr  :  unary_expr@1_decl_1  %MARK%  unary_expr  unary_expr@1_opt_3  
 index is: 595, term type: to_deduce, before: unary_expr@1_decl_1, after: unary_expr
TARGET LIST: 
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 596  , change_value: unary_expr
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 116, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#116  TERM#
###########


##########
#FROM SET#
##########
unary_expr  :  unary_expr@1_decl_1  unary_expr  %MARK%  unary_expr@1_opt_3  
 index is: 596, term type: to_deduce, before: unary_expr, after: unary_expr@1_opt_3
TARGET LIST: 
target index: 597  , change_value: unary_expr@1_opt_3
target index: 604  , change_value: %NULL%
target index: 605  , change_value: %NULL%

########
#SUBSET#
########
unary_expr  :  unary_expr@1_decl_1  unary_expr  %MARK%  unary_expr@1_opt_3  
 index is: 596, term type: to_deduce, before: unary_expr, after: unary_expr@1_opt_3
TARGET LIST: 
target index: 597  , change_value: unary_expr@1_opt_3
target index: 604  , change_value: %NULL%
target index: 605  , change_value: %NULL%

unary_expr@1_opt_3  :  %MARK%  
 index is: 604, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

unary_expr@1_opt_3  :  %MARK%  array  
 index is: 605, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 606  , change_value: array
target index: 696  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

########
#TO SET#
########
index: 117, target_source: unary_expr@1_opt_3

index: 118, target_source: array

index: 119, target_source: '{'



###########
#117  TERM#
###########


##########
#FROM SET#
##########
unary_expr  :  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  %MARK%  
 index is: 597, term type: deduce, before: unary_expr@1_opt_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_expr  :  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  %MARK%  
 index is: 597, term type: deduce, before: unary_expr@1_opt_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#118  TERM#
###########


##########
#FROM SET#
##########
unary_expr@1_opt_3  :  array  %MARK%  
 index is: 606, term type: deduce, before: array, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_expr@1_opt_3  :  array  %MARK%  
 index is: 606, term type: deduce, before: array, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#119  TERM#
###########


##########
#FROM SET#
##########
array  :  '{'  %MARK%  array@0_opt_2  '}'  
 index is: 697, term type: to_deduce, before: '{', after: array@0_opt_2
TARGET LIST: 
target index: 698  , change_value: array@0_opt_2
target index: 700  , change_value: %NULL%
target index: 701  , change_value: %NULL%

########
#SUBSET#
########
array  :  '{'  %MARK%  array@0_opt_2  '}'  
 index is: 697, term type: to_deduce, before: '{', after: array@0_opt_2
TARGET LIST: 
target index: 698  , change_value: array@0_opt_2
target index: 700  , change_value: %NULL%
target index: 701  , change_value: %NULL%

array@0_opt_2  :  %MARK%  
 index is: 700, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

array@0_opt_2  :  %MARK%  expr  
 index is: 701, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 403  , change_value: %NULL%
target index: 702  , change_value: expr

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 120, target_source: array@0_opt_2

index: 122, target_source: expr

index: 64, target_source: single_expr

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#120  TERM#
###########


##########
#FROM SET#
##########
array  :  '{'  array@0_opt_2  %MARK%  '}'  
 index is: 698, term type: shift, before: array@0_opt_2, after: '}'
TARGET LIST: 
target index: 699  , change_value: '}'

########
#SUBSET#
########
array  :  '{'  array@0_opt_2  %MARK%  '}'  
 index is: 698, term type: shift, before: array@0_opt_2, after: '}'
TARGET LIST: 
target index: 699  , change_value: '}'

########
#TO SET#
########
index: 121, target_source: '}'



###########
#121  TERM#
###########


##########
#FROM SET#
##########
array  :  '{'  array@0_opt_2  '}'  %MARK%  
 index is: 699, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
array  :  '{'  array@0_opt_2  '}'  %MARK%  
 index is: 699, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#122  TERM#
###########


##########
#FROM SET#
##########
array@0_opt_2  :  expr  %MARK%  
 index is: 702, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
array@0_opt_2  :  expr  %MARK%  
 index is: 702, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#123  TERM#
###########


##########
#FROM SET#
##########
lambda_expr  :  '['  %MARK%  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 442, term type: to_deduce, before: '[', after: lambda_expr@0_opt_2
TARGET LIST: 
target index: 443  , change_value: lambda_expr@0_opt_2
target index: 452  , change_value: %NULL%
target index: 453  , change_value: %NULL%

########
#SUBSET#
########
lambda_expr  :  '['  %MARK%  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 442, term type: to_deduce, before: '[', after: lambda_expr@0_opt_2
TARGET LIST: 
target index: 443  , change_value: lambda_expr@0_opt_2
target index: 452  , change_value: %NULL%
target index: 453  , change_value: %NULL%

lambda_expr@0_opt_2  :  %MARK%  
 index is: 452, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_expr@0_opt_2  :  %MARK%  capture_list  
 index is: 453, term type: to_deduce, before: %NULL%, after: capture_list
TARGET LIST: 
target index: 454  , change_value: capture_list
target index: 455  , change_value: %NULL%

capture_list  :  %MARK%  capture_list@0_opt_1  ID  capture_list@0_rep_3  
 index is: 455, term type: to_deduce, before: %NULL%, after: capture_list@0_opt_1
TARGET LIST: 
target index: 456  , change_value: capture_list@0_opt_1
target index: 464  , change_value: %NULL%
target index: 465  , change_value: %NULL%

capture_list@0_opt_1  :  %MARK%  
 index is: 464, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture_list@0_opt_1  :  %MARK%  '='  
 index is: 465, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 466  , change_value: '='

########
#TO SET#
########
index: 124, target_source: lambda_expr@0_opt_2

index: 379, target_source: capture_list

index: 380, target_source: capture_list@0_opt_1

index: 386, target_source: '='



###########
#124  TERM#
###########


##########
#FROM SET#
##########
lambda_expr  :  '['  lambda_expr@0_opt_2  %MARK%  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 443, term type: shift, before: lambda_expr@0_opt_2, after: ']'
TARGET LIST: 
target index: 444  , change_value: ']'

########
#SUBSET#
########
lambda_expr  :  '['  lambda_expr@0_opt_2  %MARK%  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 443, term type: shift, before: lambda_expr@0_opt_2, after: ']'
TARGET LIST: 
target index: 444  , change_value: ']'

########
#TO SET#
########
index: 125, target_source: ']'



###########
#125  TERM#
###########


##########
#FROM SET#
##########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  %MARK%  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 444, term type: shift, before: ']', after: '('
TARGET LIST: 
target index: 445  , change_value: '('

########
#SUBSET#
########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  %MARK%  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 444, term type: shift, before: ']', after: '('
TARGET LIST: 
target index: 445  , change_value: '('

########
#TO SET#
########
index: 126, target_source: '('



###########
#126  TERM#
###########


##########
#FROM SET#
##########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  %MARK%  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 445, term type: to_deduce, before: '(', after: lambda_expr@0_opt_5
TARGET LIST: 
target index: 446  , change_value: lambda_expr@0_opt_5
target index: 449  , change_value: %NULL%
target index: 450  , change_value: %NULL%

########
#SUBSET#
########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  %MARK%  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 445, term type: to_deduce, before: '(', after: lambda_expr@0_opt_5
TARGET LIST: 
target index: 446  , change_value: lambda_expr@0_opt_5
target index: 449  , change_value: %NULL%
target index: 450  , change_value: %NULL%

lambda_expr@0_opt_5  :  %MARK%  
 index is: 449, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_expr@0_opt_5  :  %MARK%  argument_list  
 index is: 450, term type: to_deduce, before: %NULL%, after: argument_list
TARGET LIST: 
target index: 451  , change_value: argument_list
target index: 467  , change_value: %NULL%
target index: 473  , change_value: %NULL%

argument_list  :  %MARK%  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 467, term type: to_deduce, before: %NULL%, after: argument_list@1_opt_1
TARGET LIST: 
target index: 468  , change_value: argument_list@1_opt_1
target index: 484  , change_value: %NULL%
target index: 485  , change_value: %NULL%

argument_list  :  %MARK%  '...'  ID  
 index is: 473, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 474  , change_value: '...'

argument_list@1_opt_1  :  %MARK%  
 index is: 484, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument_list@1_opt_1  :  %MARK%  '='  
 index is: 485, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 486  , change_value: '='

########
#TO SET#
########
index: 127, target_source: lambda_expr@0_opt_5

index: 366, target_source: argument_list

index: 367, target_source: argument_list@1_opt_1

index: 375, target_source: '...'

index: 377, target_source: '='



###########
#127  TERM#
###########


##########
#FROM SET#
##########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  %MARK%  ')'  lambda_body  
 index is: 446, term type: shift, before: lambda_expr@0_opt_5, after: ')'
TARGET LIST: 
target index: 447  , change_value: ')'

########
#SUBSET#
########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  %MARK%  ')'  lambda_body  
 index is: 446, term type: shift, before: lambda_expr@0_opt_5, after: ')'
TARGET LIST: 
target index: 447  , change_value: ')'

########
#TO SET#
########
index: 128, target_source: ')'



###########
#128  TERM#
###########


##########
#FROM SET#
##########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  %MARK%  lambda_body  
 index is: 447, term type: to_deduce, before: ')', after: lambda_body
TARGET LIST: 
target index: 448  , change_value: lambda_body
target index: 487  , change_value: %NULL%
target index: 490  , change_value: %NULL%

########
#SUBSET#
########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  %MARK%  lambda_body  
 index is: 447, term type: to_deduce, before: ')', after: lambda_body
TARGET LIST: 
target index: 448  , change_value: lambda_body
target index: 487  , change_value: %NULL%
target index: 490  , change_value: %NULL%

lambda_body  :  %MARK%  '->'  cond_expr  
 index is: 487, term type: shift, before: %NULL%, after: '->'
TARGET LIST: 
target index: 488  , change_value: '->'

lambda_body  :  %MARK%  '{'  lambda_body@0_rep_2  '}'  
 index is: 490, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 491  , change_value: '{'

########
#TO SET#
########
index: 129, target_source: lambda_body

index: 130, target_source: '->'

index: 195, target_source: '{'



###########
#129  TERM#
###########


##########
#FROM SET#
##########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  %MARK%  
 index is: 448, term type: deduce, before: lambda_body, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda_expr  :  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  %MARK%  
 index is: 448, term type: deduce, before: lambda_body, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#130  TERM#
###########


##########
#FROM SET#
##########
lambda_body  :  '->'  %MARK%  cond_expr  
 index is: 488, term type: to_deduce, before: '->', after: cond_expr
TARGET LIST: 
target index: 489  , change_value: cond_expr
target index: 503  , change_value: %NULL%

########
#SUBSET#
########
lambda_body  :  '->'  %MARK%  cond_expr  
 index is: 488, term type: to_deduce, before: '->', after: cond_expr
TARGET LIST: 
target index: 489  , change_value: cond_expr
target index: 503  , change_value: %NULL%

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 131, target_source: cond_expr

index: 77, target_source: logic_or_expr

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#131  TERM#
###########


##########
#FROM SET#
##########
lambda_body  :  '->'  cond_expr  %MARK%  
 index is: 489, term type: deduce, before: cond_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda_body  :  '->'  cond_expr  %MARK%  
 index is: 489, term type: deduce, before: cond_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#132  TERM#
###########


##########
#FROM SET#
##########
unary_expr  :  unary_op  %MARK%  unary_expr  
 index is: 599, term type: to_deduce, before: unary_op, after: unary_expr
TARGET LIST: 
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%
target index: 600  , change_value: unary_expr

########
#SUBSET#
########
unary_expr  :  unary_op  %MARK%  unary_expr  
 index is: 599, term type: to_deduce, before: unary_op, after: unary_expr
TARGET LIST: 
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%
target index: 600  , change_value: unary_expr

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 133, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#133  TERM#
###########


##########
#FROM SET#
##########
unary_expr  :  unary_op  unary_expr  %MARK%  
 index is: 600, term type: deduce, before: unary_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_expr  :  unary_op  unary_expr  %MARK%  
 index is: 600, term type: deduce, before: unary_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#134  TERM#
###########


##########
#FROM SET#
##########
prim_expr  :  constant  %MARK%  
 index is: 638, term type: deduce, before: constant, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
prim_expr  :  constant  %MARK%  
 index is: 638, term type: deduce, before: constant, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#135  TERM#
###########


##########
#FROM SET#
##########
prim_expr  :  visit_expr  %MARK%  
 index is: 640, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
prim_expr  :  visit_expr  %MARK%  
 index is: 640, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#136  TERM#
###########


##########
#FROM SET#
##########
unary_expr@1_decl_1  :  'gcnew'  %MARK%  
 index is: 608, term type: deduce, before: 'gcnew', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_expr@1_decl_1  :  'gcnew'  %MARK%  
 index is: 608, term type: deduce, before: 'gcnew', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#137  TERM#
###########


##########
#FROM SET#
##########
unary_expr@1_decl_1  :  'new'  %MARK%  
 index is: 610, term type: deduce, before: 'new', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_expr@1_decl_1  :  'new'  %MARK%  
 index is: 610, term type: deduce, before: 'new', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#138  TERM#
###########


##########
#FROM SET#
##########
unary_op  :  '!'  %MARK%  
 index is: 612, term type: deduce, before: '!', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_op  :  '!'  %MARK%  
 index is: 612, term type: deduce, before: '!', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#139  TERM#
###########


##########
#FROM SET#
##########
unary_op  :  '-'  %MARK%  
 index is: 614, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_op  :  '-'  %MARK%  
 index is: 614, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#140  TERM#
###########


##########
#FROM SET#
##########
unary_op  :  '&'  %MARK%  
 index is: 616, term type: deduce, before: '&', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_op  :  '&'  %MARK%  
 index is: 616, term type: deduce, before: '&', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#141  TERM#
###########


##########
#FROM SET#
##########
unary_op  :  '*'  %MARK%  
 index is: 618, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_op  :  '*'  %MARK%  
 index is: 618, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#142  TERM#
###########


##########
#FROM SET#
##########
unary_op  :  '--'  %MARK%  
 index is: 620, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_op  :  '--'  %MARK%  
 index is: 620, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#143  TERM#
###########


##########
#FROM SET#
##########
unary_op  :  '++'  %MARK%  
 index is: 622, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_op  :  '++'  %MARK%  
 index is: 622, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#144  TERM#
###########


##########
#FROM SET#
##########
unary_op  :  'typeid'  %MARK%  
 index is: 624, term type: deduce, before: 'typeid', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary_op  :  'typeid'  %MARK%  
 index is: 624, term type: deduce, before: 'typeid', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#145  TERM#
###########


##########
#FROM SET#
##########
constant  :  'false'  %MARK%  
 index is: 689, term type: deduce, before: 'false', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
constant  :  'false'  %MARK%  
 index is: 689, term type: deduce, before: 'false', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#146  TERM#
###########


##########
#FROM SET#
##########
constant  :  'true'  %MARK%  
 index is: 691, term type: deduce, before: 'true', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
constant  :  'true'  %MARK%  
 index is: 691, term type: deduce, before: 'true', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#147  TERM#
###########


##########
#FROM SET#
##########
constant  :  'null'  %MARK%  
 index is: 693, term type: deduce, before: 'null', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
constant  :  'null'  %MARK%  
 index is: 693, term type: deduce, before: 'null', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#148  TERM#
###########


##########
#FROM SET#
##########
constant  :  NUM  %MARK%  
 index is: 695, term type: deduce, before: NUM, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
constant  :  NUM  %MARK%  
 index is: 695, term type: deduce, before: NUM, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#149  TERM#
###########


##########
#FROM SET#
##########
visit_expr  :  object  %MARK%  visit_expr@0_opt_2  
 index is: 642, term type: to_deduce, before: object, after: visit_expr@0_opt_2
TARGET LIST: 
target index: 643  , change_value: visit_expr@0_opt_2
target index: 644  , change_value: %NULL%
target index: 645  , change_value: %NULL%

########
#SUBSET#
########
visit_expr  :  object  %MARK%  visit_expr@0_opt_2  
 index is: 642, term type: to_deduce, before: object, after: visit_expr@0_opt_2
TARGET LIST: 
target index: 643  , change_value: visit_expr@0_opt_2
target index: 644  , change_value: %NULL%
target index: 645  , change_value: %NULL%

visit_expr@0_opt_2  :  %MARK%  
 index is: 644, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

visit_expr@0_opt_2  :  %MARK%  visit_expr@0_opt_2@0_decl_1  visit_expr  
 index is: 645, term type: to_deduce, before: %NULL%, after: visit_expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 646  , change_value: visit_expr@0_opt_2@0_decl_1
target index: 648  , change_value: %NULL%
target index: 650  , change_value: %NULL%

visit_expr@0_opt_2@0_decl_1  :  %MARK%  '.'  
 index is: 648, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 649  , change_value: '.'

visit_expr@0_opt_2@0_decl_1  :  %MARK%  '->'  
 index is: 650, term type: shift, before: %NULL%, after: '->'
TARGET LIST: 
target index: 651  , change_value: '->'

########
#TO SET#
########
index: 150, target_source: visit_expr@0_opt_2

index: 151, target_source: visit_expr@0_opt_2@0_decl_1

index: 193, target_source: '.'

index: 194, target_source: '->'



###########
#150  TERM#
###########


##########
#FROM SET#
##########
visit_expr  :  object  visit_expr@0_opt_2  %MARK%  
 index is: 643, term type: deduce, before: visit_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
visit_expr  :  object  visit_expr@0_opt_2  %MARK%  
 index is: 643, term type: deduce, before: visit_expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#151  TERM#
###########


##########
#FROM SET#
##########
visit_expr@0_opt_2  :  visit_expr@0_opt_2@0_decl_1  %MARK%  visit_expr  
 index is: 646, term type: to_deduce, before: visit_expr@0_opt_2@0_decl_1, after: visit_expr
TARGET LIST: 
target index: 641  , change_value: %NULL%
target index: 647  , change_value: visit_expr

########
#SUBSET#
########
visit_expr@0_opt_2  :  visit_expr@0_opt_2@0_decl_1  %MARK%  visit_expr  
 index is: 646, term type: to_deduce, before: visit_expr@0_opt_2@0_decl_1, after: visit_expr
TARGET LIST: 
target index: 641  , change_value: %NULL%
target index: 647  , change_value: visit_expr

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 152, target_source: visit_expr

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#152  TERM#
###########


##########
#FROM SET#
##########
visit_expr@0_opt_2  :  visit_expr@0_opt_2@0_decl_1  visit_expr  %MARK%  
 index is: 647, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
visit_expr@0_opt_2  :  visit_expr@0_opt_2@0_decl_1  visit_expr  %MARK%  
 index is: 647, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#153  TERM#
###########


##########
#FROM SET#
##########
object  :  CHAR  %MARK%  
 index is: 653, term type: deduce, before: CHAR, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  CHAR  %MARK%  
 index is: 653, term type: deduce, before: CHAR, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#154  TERM#
###########


##########
#FROM SET#
##########
object  :  element  %MARK%  
 index is: 655, term type: deduce, before: element, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  element  %MARK%  
 index is: 655, term type: deduce, before: element, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#155  TERM#
###########


##########
#FROM SET#
##########
object  :  'global'  %MARK%  
 index is: 657, term type: deduce, before: 'global', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  'global'  %MARK%  
 index is: 657, term type: deduce, before: 'global', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#156  TERM#
###########


##########
#FROM SET#
##########
object  :  'local'  %MARK%  
 index is: 659, term type: deduce, before: 'local', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  'local'  %MARK%  
 index is: 659, term type: deduce, before: 'local', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#157  TERM#
###########


##########
#FROM SET#
##########
object  :  STR  %MARK%  object@1_opt_2  
 index is: 661, term type: to_deduce, before: STR, after: object@1_opt_2
TARGET LIST: 
target index: 662  , change_value: object@1_opt_2
target index: 666  , change_value: %NULL%
target index: 667  , change_value: %NULL%

########
#SUBSET#
########
object  :  STR  %MARK%  object@1_opt_2  
 index is: 661, term type: to_deduce, before: STR, after: object@1_opt_2
TARGET LIST: 
target index: 662  , change_value: object@1_opt_2
target index: 666  , change_value: %NULL%
target index: 667  , change_value: %NULL%

object@1_opt_2  :  %MARK%  
 index is: 666, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

object@1_opt_2  :  %MARK%  index  
 index is: 667, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 668  , change_value: index
target index: 710  , change_value: %NULL%

index  :  %MARK%  '['  basic_expr  ']'  
 index is: 710, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 711  , change_value: '['

########
#TO SET#
########
index: 158, target_source: object@1_opt_2

index: 159, target_source: index

index: 160, target_source: '['



###########
#158  TERM#
###########


##########
#FROM SET#
##########
object  :  STR  object@1_opt_2  %MARK%  
 index is: 662, term type: deduce, before: object@1_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  STR  object@1_opt_2  %MARK%  
 index is: 662, term type: deduce, before: object@1_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#159  TERM#
###########


##########
#FROM SET#
##########
object@1_opt_2  :  index  %MARK%  
 index is: 668, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object@1_opt_2  :  index  %MARK%  
 index is: 668, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#160  TERM#
###########


##########
#FROM SET#
##########
index  :  '['  %MARK%  basic_expr  ']'  
 index is: 711, term type: to_deduce, before: '[', after: basic_expr
TARGET LIST: 
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%
target index: 712  , change_value: basic_expr

########
#SUBSET#
########
index  :  '['  %MARK%  basic_expr  ']'  
 index is: 711, term type: to_deduce, before: '[', after: basic_expr
TARGET LIST: 
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%
target index: 712  , change_value: basic_expr

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 161, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#161  TERM#
###########


##########
#FROM SET#
##########
index  :  '['  basic_expr  %MARK%  ']'  
 index is: 712, term type: shift, before: basic_expr, after: ']'
TARGET LIST: 
target index: 713  , change_value: ']'

########
#SUBSET#
########
index  :  '['  basic_expr  %MARK%  ']'  
 index is: 712, term type: shift, before: basic_expr, after: ']'
TARGET LIST: 
target index: 713  , change_value: ']'

########
#TO SET#
########
index: 162, target_source: ']'



###########
#162  TERM#
###########


##########
#FROM SET#
##########
index  :  '['  basic_expr  ']'  %MARK%  
 index is: 713, term type: deduce, before: ']', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
index  :  '['  basic_expr  ']'  %MARK%  
 index is: 713, term type: deduce, before: ']', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#163  TERM#
###########


##########
#FROM SET#
##########
var_bind  :  '('  %MARK%  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var_bind_list
TARGET LIST: 
target index: 148  , change_value: var_bind_list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

element@0_decl_1  :  '('  %MARK%  single_expr  ')'  
 index is: 683, term type: to_deduce, before: '(', after: single_expr
TARGET LIST: 
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%
target index: 684  , change_value: single_expr

########
#SUBSET#
########
var_bind  :  '('  %MARK%  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var_bind_list
TARGET LIST: 
target index: 148  , change_value: var_bind_list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

element@0_decl_1  :  '('  %MARK%  single_expr  ')'  
 index is: 683, term type: to_deduce, before: '(', after: single_expr
TARGET LIST: 
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%
target index: 684  , change_value: single_expr

var_bind_list  :  %MARK%  var_bind  
 index is: 156, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 157  , change_value: var_bind

var_bind_list  :  %MARK%  '...'  
 index is: 158, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 159  , change_value: '...'

var_bind_list  :  %MARK%  ID  
 index is: 160, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 161  , change_value: ID

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 164, target_source: var_bind_list

index: 174, target_source: single_expr

index: 176, target_source: var_bind

index: 171, target_source: '...'

index: 177, target_source: ID

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 163, target_source: '('

index: 70, target_source: cond_expr

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'



###########
#164  TERM#
###########


##########
#FROM SET#
##########
var_bind  :  '('  var_bind_list  %MARK%  var_bind@0_rep_3  ')'  
 index is: 148, term type: to_deduce, before: var_bind_list, after: var_bind@0_rep_3
TARGET LIST: 
target index: 149  , change_value: var_bind@0_rep_3
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%

########
#SUBSET#
########
var_bind  :  '('  var_bind_list  %MARK%  var_bind@0_rep_3  ')'  
 index is: 148, term type: to_deduce, before: var_bind_list, after: var_bind@0_rep_3
TARGET LIST: 
target index: 149  , change_value: var_bind@0_rep_3
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%

var_bind@0_rep_3  :  %MARK%  
 index is: 151, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var_bind@0_rep_3  :  %MARK%  ','  var_bind_list  var_bind@0_rep_3  
 index is: 152, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 153  , change_value: ','

########
#TO SET#
########
index: 165, target_source: var_bind@0_rep_3

index: 167, target_source: ','



###########
#165  TERM#
###########


##########
#FROM SET#
##########
var_bind  :  '('  var_bind_list  var_bind@0_rep_3  %MARK%  ')'  
 index is: 149, term type: shift, before: var_bind@0_rep_3, after: ')'
TARGET LIST: 
target index: 150  , change_value: ')'

########
#SUBSET#
########
var_bind  :  '('  var_bind_list  var_bind@0_rep_3  %MARK%  ')'  
 index is: 149, term type: shift, before: var_bind@0_rep_3, after: ')'
TARGET LIST: 
target index: 150  , change_value: ')'

########
#TO SET#
########
index: 166, target_source: ')'



###########
#166  TERM#
###########


##########
#FROM SET#
##########
var_bind  :  '('  var_bind_list  var_bind@0_rep_3  ')'  %MARK%  
 index is: 150, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_bind  :  '('  var_bind_list  var_bind@0_rep_3  ')'  %MARK%  
 index is: 150, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#167  TERM#
###########


##########
#FROM SET#
##########
var_bind@0_rep_3  :  ','  %MARK%  var_bind_list  var_bind@0_rep_3  
 index is: 153, term type: to_deduce, before: ',', after: var_bind_list
TARGET LIST: 
target index: 154  , change_value: var_bind_list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

########
#SUBSET#
########
var_bind@0_rep_3  :  ','  %MARK%  var_bind_list  var_bind@0_rep_3  
 index is: 153, term type: to_deduce, before: ',', after: var_bind_list
TARGET LIST: 
target index: 154  , change_value: var_bind_list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

var_bind_list  :  %MARK%  var_bind  
 index is: 156, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 157  , change_value: var_bind

var_bind_list  :  %MARK%  '...'  
 index is: 158, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 159  , change_value: '...'

var_bind_list  :  %MARK%  ID  
 index is: 160, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 161  , change_value: ID

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

########
#TO SET#
########
index: 168, target_source: var_bind_list

index: 170, target_source: var_bind

index: 171, target_source: '...'

index: 172, target_source: ID

index: 173, target_source: '('



###########
#168  TERM#
###########


##########
#FROM SET#
##########
var_bind@0_rep_3  :  ','  var_bind_list  %MARK%  var_bind@0_rep_3  
 index is: 154, term type: to_deduce, before: var_bind_list, after: var_bind@0_rep_3
TARGET LIST: 
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%
target index: 155  , change_value: var_bind@0_rep_3

########
#SUBSET#
########
var_bind@0_rep_3  :  ','  var_bind_list  %MARK%  var_bind@0_rep_3  
 index is: 154, term type: to_deduce, before: var_bind_list, after: var_bind@0_rep_3
TARGET LIST: 
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%
target index: 155  , change_value: var_bind@0_rep_3

var_bind@0_rep_3  :  %MARK%  
 index is: 151, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var_bind@0_rep_3  :  %MARK%  ','  var_bind_list  var_bind@0_rep_3  
 index is: 152, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 153  , change_value: ','

########
#TO SET#
########
index: 169, target_source: var_bind@0_rep_3

index: 167, target_source: ','



###########
#169  TERM#
###########


##########
#FROM SET#
##########
var_bind@0_rep_3  :  ','  var_bind_list  var_bind@0_rep_3  %MARK%  
 index is: 155, term type: deduce, before: var_bind@0_rep_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_bind@0_rep_3  :  ','  var_bind_list  var_bind@0_rep_3  %MARK%  
 index is: 155, term type: deduce, before: var_bind@0_rep_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#170  TERM#
###########


##########
#FROM SET#
##########
var_bind_list  :  var_bind  %MARK%  
 index is: 157, term type: deduce, before: var_bind, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_bind_list  :  var_bind  %MARK%  
 index is: 157, term type: deduce, before: var_bind, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#171  TERM#
###########


##########
#FROM SET#
##########
var_bind_list  :  '...'  %MARK%  
 index is: 159, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_bind_list  :  '...'  %MARK%  
 index is: 159, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#172  TERM#
###########


##########
#FROM SET#
##########
var_bind_list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_bind_list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#173  TERM#
###########


##########
#FROM SET#
##########
var_bind  :  '('  %MARK%  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var_bind_list
TARGET LIST: 
target index: 148  , change_value: var_bind_list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

########
#SUBSET#
########
var_bind  :  '('  %MARK%  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var_bind_list
TARGET LIST: 
target index: 148  , change_value: var_bind_list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

var_bind_list  :  %MARK%  var_bind  
 index is: 156, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 157  , change_value: var_bind

var_bind_list  :  %MARK%  '...'  
 index is: 158, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 159  , change_value: '...'

var_bind_list  :  %MARK%  ID  
 index is: 160, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 161  , change_value: ID

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

########
#TO SET#
########
index: 164, target_source: var_bind_list

index: 170, target_source: var_bind

index: 171, target_source: '...'

index: 172, target_source: ID

index: 173, target_source: '('



###########
#174  TERM#
###########


##########
#FROM SET#
##########
element@0_decl_1  :  '('  single_expr  %MARK%  ')'  
 index is: 684, term type: shift, before: single_expr, after: ')'
TARGET LIST: 
target index: 685  , change_value: ')'

########
#SUBSET#
########
element@0_decl_1  :  '('  single_expr  %MARK%  ')'  
 index is: 684, term type: shift, before: single_expr, after: ')'
TARGET LIST: 
target index: 685  , change_value: ')'

########
#TO SET#
########
index: 175, target_source: ')'



###########
#175  TERM#
###########


##########
#FROM SET#
##########
element@0_decl_1  :  '('  single_expr  ')'  %MARK%  
 index is: 685, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element@0_decl_1  :  '('  single_expr  ')'  %MARK%  
 index is: 685, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#176  TERM#
###########


##########
#FROM SET#
##########
var_bind_list  :  var_bind  %MARK%  
 index is: 157, term type: deduce, before: var_bind, after: %NULL%
TARGET LIST: 

basic_expr  :  var_bind  %MARK%  '='  cond_expr  
 index is: 418, term type: shift, before: var_bind, after: '='
TARGET LIST: 
target index: 419  , change_value: '='

########
#SUBSET#
########
var_bind_list  :  var_bind  %MARK%  
 index is: 157, term type: deduce, before: var_bind, after: %NULL%
TARGET LIST: 

basic_expr  :  var_bind  %MARK%  '='  cond_expr  
 index is: 418, term type: shift, before: var_bind, after: '='
TARGET LIST: 
target index: 419  , change_value: '='

########
#TO SET#
########
index: 75, target_source: '='



###########
#177  TERM#
###########


##########
#FROM SET#
##########
var_bind_list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

element@0_decl_1  :  ID  %MARK%  
 index is: 687, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_bind_list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

element@0_decl_1  :  ID  %MARK%  
 index is: 687, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#178  TERM#
###########


##########
#FROM SET#
##########
object  :  array  %MARK%  object@0_opt_2  
 index is: 664, term type: to_deduce, before: array, after: object@0_opt_2
TARGET LIST: 
target index: 665  , change_value: object@0_opt_2
target index: 669  , change_value: %NULL%
target index: 670  , change_value: %NULL%

########
#SUBSET#
########
object  :  array  %MARK%  object@0_opt_2  
 index is: 664, term type: to_deduce, before: array, after: object@0_opt_2
TARGET LIST: 
target index: 665  , change_value: object@0_opt_2
target index: 669  , change_value: %NULL%
target index: 670  , change_value: %NULL%

object@0_opt_2  :  %MARK%  
 index is: 669, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

object@0_opt_2  :  %MARK%  index  
 index is: 670, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 671  , change_value: index
target index: 710  , change_value: %NULL%

index  :  %MARK%  '['  basic_expr  ']'  
 index is: 710, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 711  , change_value: '['

########
#TO SET#
########
index: 179, target_source: object@0_opt_2

index: 180, target_source: index

index: 160, target_source: '['



###########
#179  TERM#
###########


##########
#FROM SET#
##########
object  :  array  object@0_opt_2  %MARK%  
 index is: 665, term type: deduce, before: object@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  array  object@0_opt_2  %MARK%  
 index is: 665, term type: deduce, before: object@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#180  TERM#
###########


##########
#FROM SET#
##########
object@0_opt_2  :  index  %MARK%  
 index is: 671, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object@0_opt_2  :  index  %MARK%  
 index is: 671, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#181  TERM#
###########


##########
#FROM SET#
##########
element  :  element@0_decl_1  %MARK%  element@0_rep_2  
 index is: 673, term type: to_deduce, before: element@0_decl_1, after: element@0_rep_2
TARGET LIST: 
target index: 674  , change_value: element@0_rep_2
target index: 675  , change_value: %NULL%
target index: 676  , change_value: %NULL%
target index: 679  , change_value: %NULL%

########
#SUBSET#
########
element  :  element@0_decl_1  %MARK%  element@0_rep_2  
 index is: 673, term type: to_deduce, before: element@0_decl_1, after: element@0_rep_2
TARGET LIST: 
target index: 674  , change_value: element@0_rep_2
target index: 675  , change_value: %NULL%
target index: 676  , change_value: %NULL%
target index: 679  , change_value: %NULL%

element@0_rep_2  :  %MARK%  
 index is: 675, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 676, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 677  , change_value: index
target index: 710  , change_value: %NULL%

element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 679, term type: to_deduce, before: %NULL%, after: fcall
TARGET LIST: 
target index: 680  , change_value: fcall
target index: 703  , change_value: %NULL%

index  :  %MARK%  '['  basic_expr  ']'  
 index is: 710, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 711  , change_value: '['

fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 703, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 704  , change_value: '('

########
#TO SET#
########
index: 182, target_source: element@0_rep_2

index: 183, target_source: index

index: 185, target_source: fcall

index: 160, target_source: '['

index: 187, target_source: '('



###########
#182  TERM#
###########


##########
#FROM SET#
##########
element  :  element@0_decl_1  element@0_rep_2  %MARK%  
 index is: 674, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element  :  element@0_decl_1  element@0_rep_2  %MARK%  
 index is: 674, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#183  TERM#
###########


##########
#FROM SET#
##########
element@0_rep_2  :  index  %MARK%  element@0_rep_2  
 index is: 677, term type: to_deduce, before: index, after: element@0_rep_2
TARGET LIST: 
target index: 675  , change_value: %NULL%
target index: 676  , change_value: %NULL%
target index: 678  , change_value: element@0_rep_2
target index: 679  , change_value: %NULL%

########
#SUBSET#
########
element@0_rep_2  :  index  %MARK%  element@0_rep_2  
 index is: 677, term type: to_deduce, before: index, after: element@0_rep_2
TARGET LIST: 
target index: 675  , change_value: %NULL%
target index: 676  , change_value: %NULL%
target index: 678  , change_value: element@0_rep_2
target index: 679  , change_value: %NULL%

element@0_rep_2  :  %MARK%  
 index is: 675, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 676, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 677  , change_value: index
target index: 710  , change_value: %NULL%

element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 679, term type: to_deduce, before: %NULL%, after: fcall
TARGET LIST: 
target index: 680  , change_value: fcall
target index: 703  , change_value: %NULL%

index  :  %MARK%  '['  basic_expr  ']'  
 index is: 710, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 711  , change_value: '['

fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 703, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 704  , change_value: '('

########
#TO SET#
########
index: 184, target_source: element@0_rep_2

index: 183, target_source: index

index: 185, target_source: fcall

index: 160, target_source: '['

index: 187, target_source: '('



###########
#184  TERM#
###########


##########
#FROM SET#
##########
element@0_rep_2  :  index  element@0_rep_2  %MARK%  
 index is: 678, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element@0_rep_2  :  index  element@0_rep_2  %MARK%  
 index is: 678, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#185  TERM#
###########


##########
#FROM SET#
##########
element@0_rep_2  :  fcall  %MARK%  element@0_rep_2  
 index is: 680, term type: to_deduce, before: fcall, after: element@0_rep_2
TARGET LIST: 
target index: 675  , change_value: %NULL%
target index: 676  , change_value: %NULL%
target index: 679  , change_value: %NULL%
target index: 681  , change_value: element@0_rep_2

########
#SUBSET#
########
element@0_rep_2  :  fcall  %MARK%  element@0_rep_2  
 index is: 680, term type: to_deduce, before: fcall, after: element@0_rep_2
TARGET LIST: 
target index: 675  , change_value: %NULL%
target index: 676  , change_value: %NULL%
target index: 679  , change_value: %NULL%
target index: 681  , change_value: element@0_rep_2

element@0_rep_2  :  %MARK%  
 index is: 675, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 676, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 677  , change_value: index
target index: 710  , change_value: %NULL%

element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 679, term type: to_deduce, before: %NULL%, after: fcall
TARGET LIST: 
target index: 680  , change_value: fcall
target index: 703  , change_value: %NULL%

index  :  %MARK%  '['  basic_expr  ']'  
 index is: 710, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 711  , change_value: '['

fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 703, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 704  , change_value: '('

########
#TO SET#
########
index: 186, target_source: element@0_rep_2

index: 183, target_source: index

index: 185, target_source: fcall

index: 160, target_source: '['

index: 187, target_source: '('



###########
#186  TERM#
###########


##########
#FROM SET#
##########
element@0_rep_2  :  fcall  element@0_rep_2  %MARK%  
 index is: 681, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element@0_rep_2  :  fcall  element@0_rep_2  %MARK%  
 index is: 681, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#187  TERM#
###########


##########
#FROM SET#
##########
fcall  :  '('  %MARK%  fcall@0_opt_2  ')'  
 index is: 704, term type: to_deduce, before: '(', after: fcall@0_opt_2
TARGET LIST: 
target index: 705  , change_value: fcall@0_opt_2
target index: 707  , change_value: %NULL%
target index: 708  , change_value: %NULL%

########
#SUBSET#
########
fcall  :  '('  %MARK%  fcall@0_opt_2  ')'  
 index is: 704, term type: to_deduce, before: '(', after: fcall@0_opt_2
TARGET LIST: 
target index: 705  , change_value: fcall@0_opt_2
target index: 707  , change_value: %NULL%
target index: 708  , change_value: %NULL%

fcall@0_opt_2  :  %MARK%  
 index is: 707, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

fcall@0_opt_2  :  %MARK%  expr  
 index is: 708, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 403  , change_value: %NULL%
target index: 709  , change_value: expr

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 188, target_source: fcall@0_opt_2

index: 190, target_source: expr

index: 64, target_source: single_expr

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#188  TERM#
###########


##########
#FROM SET#
##########
fcall  :  '('  fcall@0_opt_2  %MARK%  ')'  
 index is: 705, term type: shift, before: fcall@0_opt_2, after: ')'
TARGET LIST: 
target index: 706  , change_value: ')'

########
#SUBSET#
########
fcall  :  '('  fcall@0_opt_2  %MARK%  ')'  
 index is: 705, term type: shift, before: fcall@0_opt_2, after: ')'
TARGET LIST: 
target index: 706  , change_value: ')'

########
#TO SET#
########
index: 189, target_source: ')'



###########
#189  TERM#
###########


##########
#FROM SET#
##########
fcall  :  '('  fcall@0_opt_2  ')'  %MARK%  
 index is: 706, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
fcall  :  '('  fcall@0_opt_2  ')'  %MARK%  
 index is: 706, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#190  TERM#
###########


##########
#FROM SET#
##########
fcall@0_opt_2  :  expr  %MARK%  
 index is: 709, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
fcall@0_opt_2  :  expr  %MARK%  
 index is: 709, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#191  TERM#
###########


##########
#FROM SET#
##########
element@0_decl_1  :  ID  %MARK%  
 index is: 687, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element@0_decl_1  :  ID  %MARK%  
 index is: 687, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#192  TERM#
###########


##########
#FROM SET#
##########
element@0_decl_1  :  '('  %MARK%  single_expr  ')'  
 index is: 683, term type: to_deduce, before: '(', after: single_expr
TARGET LIST: 
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%
target index: 684  , change_value: single_expr

########
#SUBSET#
########
element@0_decl_1  :  '('  %MARK%  single_expr  ')'  
 index is: 683, term type: to_deduce, before: '(', after: single_expr
TARGET LIST: 
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%
target index: 684  , change_value: single_expr

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 174, target_source: single_expr

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#193  TERM#
###########


##########
#FROM SET#
##########
visit_expr@0_opt_2@0_decl_1  :  '.'  %MARK%  
 index is: 649, term type: deduce, before: '.', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
visit_expr@0_opt_2@0_decl_1  :  '.'  %MARK%  
 index is: 649, term type: deduce, before: '.', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#194  TERM#
###########


##########
#FROM SET#
##########
visit_expr@0_opt_2@0_decl_1  :  '->'  %MARK%  
 index is: 651, term type: deduce, before: '->', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
visit_expr@0_opt_2@0_decl_1  :  '->'  %MARK%  
 index is: 651, term type: deduce, before: '->', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#195  TERM#
###########


##########
#FROM SET#
##########
lambda_body  :  '{'  %MARK%  lambda_body@0_rep_2  '}'  
 index is: 491, term type: to_deduce, before: '{', after: lambda_body@0_rep_2
TARGET LIST: 
target index: 492  , change_value: lambda_body@0_rep_2
target index: 494  , change_value: %NULL%
target index: 495  , change_value: %NULL%

########
#SUBSET#
########
lambda_body  :  '{'  %MARK%  lambda_body@0_rep_2  '}'  
 index is: 491, term type: to_deduce, before: '{', after: lambda_body@0_rep_2
TARGET LIST: 
target index: 492  , change_value: lambda_body@0_rep_2
target index: 494  , change_value: %NULL%
target index: 495  , change_value: %NULL%

lambda_body@0_rep_2  :  %MARK%  
 index is: 494, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_body@0_rep_2  :  %MARK%  statement  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  
 index is: 495, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%
target index: 496  , change_value: statement

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 196, target_source: lambda_body@0_rep_2

index: 198, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#196  TERM#
###########


##########
#FROM SET#
##########
lambda_body  :  '{'  lambda_body@0_rep_2  %MARK%  '}'  
 index is: 492, term type: shift, before: lambda_body@0_rep_2, after: '}'
TARGET LIST: 
target index: 493  , change_value: '}'

########
#SUBSET#
########
lambda_body  :  '{'  lambda_body@0_rep_2  %MARK%  '}'  
 index is: 492, term type: shift, before: lambda_body@0_rep_2, after: '}'
TARGET LIST: 
target index: 493  , change_value: '}'

########
#TO SET#
########
index: 197, target_source: '}'



###########
#197  TERM#
###########


##########
#FROM SET#
##########
lambda_body  :  '{'  lambda_body@0_rep_2  '}'  %MARK%  
 index is: 493, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda_body  :  '{'  lambda_body@0_rep_2  '}'  %MARK%  
 index is: 493, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#198  TERM#
###########


##########
#FROM SET#
##########
lambda_body@0_rep_2  :  statement  %MARK%  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  
 index is: 496, term type: to_deduce, before: statement, after: lambda_body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 497  , change_value: lambda_body@0_rep_2@0_rep_2
target index: 499  , change_value: %NULL%
target index: 500  , change_value: %NULL%

########
#SUBSET#
########
lambda_body@0_rep_2  :  statement  %MARK%  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  
 index is: 496, term type: to_deduce, before: statement, after: lambda_body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 497  , change_value: lambda_body@0_rep_2@0_rep_2
target index: 499  , change_value: %NULL%
target index: 500  , change_value: %NULL%

lambda_body@0_rep_2@0_rep_2  :  %MARK%  
 index is: 499, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_body@0_rep_2@0_rep_2  :  %MARK%  ENDL  lambda_body@0_rep_2@0_rep_2  
 index is: 500, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 501  , change_value: ENDL

########
#TO SET#
########
index: 199, target_source: lambda_body@0_rep_2@0_rep_2

index: 364, target_source: ENDL



###########
#199  TERM#
###########


##########
#FROM SET#
##########
lambda_body@0_rep_2  :  statement  lambda_body@0_rep_2@0_rep_2  %MARK%  lambda_body@0_rep_2  
 index is: 497, term type: to_deduce, before: lambda_body@0_rep_2@0_rep_2, after: lambda_body@0_rep_2
TARGET LIST: 
target index: 494  , change_value: %NULL%
target index: 495  , change_value: %NULL%
target index: 498  , change_value: lambda_body@0_rep_2

########
#SUBSET#
########
lambda_body@0_rep_2  :  statement  lambda_body@0_rep_2@0_rep_2  %MARK%  lambda_body@0_rep_2  
 index is: 497, term type: to_deduce, before: lambda_body@0_rep_2@0_rep_2, after: lambda_body@0_rep_2
TARGET LIST: 
target index: 494  , change_value: %NULL%
target index: 495  , change_value: %NULL%
target index: 498  , change_value: lambda_body@0_rep_2

lambda_body@0_rep_2  :  %MARK%  
 index is: 494, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_body@0_rep_2  :  %MARK%  statement  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  
 index is: 495, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%
target index: 496  , change_value: statement

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 200, target_source: lambda_body@0_rep_2

index: 198, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#200  TERM#
###########


##########
#FROM SET#
##########
lambda_body@0_rep_2  :  statement  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  %MARK%  
 index is: 498, term type: deduce, before: lambda_body@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda_body@0_rep_2  :  statement  lambda_body@0_rep_2@0_rep_2  lambda_body@0_rep_2  %MARK%  
 index is: 498, term type: deduce, before: lambda_body@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#201  TERM#
###########


##########
#FROM SET#
##########
try_stmt  :  'try'  %MARK%  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 347, term type: shift, before: 'try', after: ENDL
TARGET LIST: 
target index: 348  , change_value: ENDL

########
#SUBSET#
########
try_stmt  :  'try'  %MARK%  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 347, term type: shift, before: 'try', after: ENDL
TARGET LIST: 
target index: 348  , change_value: ENDL

########
#TO SET#
########
index: 202, target_source: ENDL



###########
#202  TERM#
###########


##########
#FROM SET#
##########
try_stmt  :  'try'  ENDL  %MARK%  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 348, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 349  , change_value: stmts

########
#SUBSET#
########
try_stmt  :  'try'  ENDL  %MARK%  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 348, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 349  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 203, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#203  TERM#
###########


##########
#FROM SET#
##########
try_stmt  :  'try'  ENDL  stmts  %MARK%  try_stmt@0_rep_4  'end'  ENDL  
 index is: 349, term type: to_deduce, before: stmts, after: try_stmt@0_rep_4
TARGET LIST: 
target index: 350  , change_value: try_stmt@0_rep_4
target index: 353  , change_value: %NULL%
target index: 354  , change_value: %NULL%

########
#SUBSET#
########
try_stmt  :  'try'  ENDL  stmts  %MARK%  try_stmt@0_rep_4  'end'  ENDL  
 index is: 349, term type: to_deduce, before: stmts, after: try_stmt@0_rep_4
TARGET LIST: 
target index: 350  , change_value: try_stmt@0_rep_4
target index: 353  , change_value: %NULL%
target index: 354  , change_value: %NULL%

try_stmt@0_rep_4  :  %MARK%  
 index is: 353, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

try_stmt@0_rep_4  :  %MARK%  catch_stmt  stmts  try_stmt@0_rep_4  
 index is: 354, term type: to_deduce, before: %NULL%, after: catch_stmt
TARGET LIST: 
target index: 355  , change_value: catch_stmt
target index: 358  , change_value: %NULL%

catch_stmt  :  %MARK%  'catch'  ID  catch_stmt@0_opt_3  ENDL  
 index is: 358, term type: shift, before: %NULL%, after: 'catch'
TARGET LIST: 
target index: 359  , change_value: 'catch'

########
#TO SET#
########
index: 204, target_source: try_stmt@0_rep_4

index: 207, target_source: catch_stmt

index: 210, target_source: 'catch'



###########
#204  TERM#
###########


##########
#FROM SET#
##########
try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  %MARK%  'end'  ENDL  
 index is: 350, term type: shift, before: try_stmt@0_rep_4, after: 'end'
TARGET LIST: 
target index: 351  , change_value: 'end'

########
#SUBSET#
########
try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  %MARK%  'end'  ENDL  
 index is: 350, term type: shift, before: try_stmt@0_rep_4, after: 'end'
TARGET LIST: 
target index: 351  , change_value: 'end'

########
#TO SET#
########
index: 205, target_source: 'end'



###########
#205  TERM#
###########


##########
#FROM SET#
##########
try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  %MARK%  ENDL  
 index is: 351, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 352  , change_value: ENDL

########
#SUBSET#
########
try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  %MARK%  ENDL  
 index is: 351, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 352  , change_value: ENDL

########
#TO SET#
########
index: 206, target_source: ENDL



###########
#206  TERM#
###########


##########
#FROM SET#
##########
try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  %MARK%  
 index is: 352, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
try_stmt  :  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  %MARK%  
 index is: 352, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#207  TERM#
###########


##########
#FROM SET#
##########
try_stmt@0_rep_4  :  catch_stmt  %MARK%  stmts  try_stmt@0_rep_4  
 index is: 355, term type: to_deduce, before: catch_stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 356  , change_value: stmts

########
#SUBSET#
########
try_stmt@0_rep_4  :  catch_stmt  %MARK%  stmts  try_stmt@0_rep_4  
 index is: 355, term type: to_deduce, before: catch_stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 356  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 208, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#208  TERM#
###########


##########
#FROM SET#
##########
try_stmt@0_rep_4  :  catch_stmt  stmts  %MARK%  try_stmt@0_rep_4  
 index is: 356, term type: to_deduce, before: stmts, after: try_stmt@0_rep_4
TARGET LIST: 
target index: 353  , change_value: %NULL%
target index: 354  , change_value: %NULL%
target index: 357  , change_value: try_stmt@0_rep_4

########
#SUBSET#
########
try_stmt@0_rep_4  :  catch_stmt  stmts  %MARK%  try_stmt@0_rep_4  
 index is: 356, term type: to_deduce, before: stmts, after: try_stmt@0_rep_4
TARGET LIST: 
target index: 353  , change_value: %NULL%
target index: 354  , change_value: %NULL%
target index: 357  , change_value: try_stmt@0_rep_4

try_stmt@0_rep_4  :  %MARK%  
 index is: 353, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

try_stmt@0_rep_4  :  %MARK%  catch_stmt  stmts  try_stmt@0_rep_4  
 index is: 354, term type: to_deduce, before: %NULL%, after: catch_stmt
TARGET LIST: 
target index: 355  , change_value: catch_stmt
target index: 358  , change_value: %NULL%

catch_stmt  :  %MARK%  'catch'  ID  catch_stmt@0_opt_3  ENDL  
 index is: 358, term type: shift, before: %NULL%, after: 'catch'
TARGET LIST: 
target index: 359  , change_value: 'catch'

########
#TO SET#
########
index: 209, target_source: try_stmt@0_rep_4

index: 207, target_source: catch_stmt

index: 210, target_source: 'catch'



###########
#209  TERM#
###########


##########
#FROM SET#
##########
try_stmt@0_rep_4  :  catch_stmt  stmts  try_stmt@0_rep_4  %MARK%  
 index is: 357, term type: deduce, before: try_stmt@0_rep_4, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
try_stmt@0_rep_4  :  catch_stmt  stmts  try_stmt@0_rep_4  %MARK%  
 index is: 357, term type: deduce, before: try_stmt@0_rep_4, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#210  TERM#
###########


##########
#FROM SET#
##########
catch_stmt  :  'catch'  %MARK%  ID  catch_stmt@0_opt_3  ENDL  
 index is: 359, term type: shift, before: 'catch', after: ID
TARGET LIST: 
target index: 360  , change_value: ID

########
#SUBSET#
########
catch_stmt  :  'catch'  %MARK%  ID  catch_stmt@0_opt_3  ENDL  
 index is: 359, term type: shift, before: 'catch', after: ID
TARGET LIST: 
target index: 360  , change_value: ID

########
#TO SET#
########
index: 211, target_source: ID



###########
#211  TERM#
###########


##########
#FROM SET#
##########
catch_stmt  :  'catch'  ID  %MARK%  catch_stmt@0_opt_3  ENDL  
 index is: 360, term type: to_deduce, before: ID, after: catch_stmt@0_opt_3
TARGET LIST: 
target index: 361  , change_value: catch_stmt@0_opt_3
target index: 363  , change_value: %NULL%
target index: 364  , change_value: %NULL%

########
#SUBSET#
########
catch_stmt  :  'catch'  ID  %MARK%  catch_stmt@0_opt_3  ENDL  
 index is: 360, term type: to_deduce, before: ID, after: catch_stmt@0_opt_3
TARGET LIST: 
target index: 361  , change_value: catch_stmt@0_opt_3
target index: 363  , change_value: %NULL%
target index: 364  , change_value: %NULL%

catch_stmt@0_opt_3  :  %MARK%  
 index is: 363, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

catch_stmt@0_opt_3  :  %MARK%  ':'  visit_expr  
 index is: 364, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 365  , change_value: ':'

########
#TO SET#
########
index: 212, target_source: catch_stmt@0_opt_3

index: 214, target_source: ':'



###########
#212  TERM#
###########


##########
#FROM SET#
##########
catch_stmt  :  'catch'  ID  catch_stmt@0_opt_3  %MARK%  ENDL  
 index is: 361, term type: shift, before: catch_stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 362  , change_value: ENDL

########
#SUBSET#
########
catch_stmt  :  'catch'  ID  catch_stmt@0_opt_3  %MARK%  ENDL  
 index is: 361, term type: shift, before: catch_stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 362  , change_value: ENDL

########
#TO SET#
########
index: 213, target_source: ENDL



###########
#213  TERM#
###########


##########
#FROM SET#
##########
catch_stmt  :  'catch'  ID  catch_stmt@0_opt_3  ENDL  %MARK%  
 index is: 362, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
catch_stmt  :  'catch'  ID  catch_stmt@0_opt_3  ENDL  %MARK%  
 index is: 362, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#214  TERM#
###########


##########
#FROM SET#
##########
catch_stmt@0_opt_3  :  ':'  %MARK%  visit_expr  
 index is: 365, term type: to_deduce, before: ':', after: visit_expr
TARGET LIST: 
target index: 366  , change_value: visit_expr
target index: 641  , change_value: %NULL%

########
#SUBSET#
########
catch_stmt@0_opt_3  :  ':'  %MARK%  visit_expr  
 index is: 365, term type: to_deduce, before: ':', after: visit_expr
TARGET LIST: 
target index: 366  , change_value: visit_expr
target index: 641  , change_value: %NULL%

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 215, target_source: visit_expr

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#215  TERM#
###########


##########
#FROM SET#
##########
catch_stmt@0_opt_3  :  ':'  visit_expr  %MARK%  
 index is: 366, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
catch_stmt@0_opt_3  :  ':'  visit_expr  %MARK%  
 index is: 366, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#216  TERM#
###########


##########
#FROM SET#
##########
return_stmt  :  'return'  %MARK%  return_stmt@0_opt_2  endline  
 index is: 340, term type: to_deduce, before: 'return', after: return_stmt@0_opt_2
TARGET LIST: 
target index: 341  , change_value: return_stmt@0_opt_2
target index: 343  , change_value: %NULL%
target index: 344  , change_value: %NULL%

########
#SUBSET#
########
return_stmt  :  'return'  %MARK%  return_stmt@0_opt_2  endline  
 index is: 340, term type: to_deduce, before: 'return', after: return_stmt@0_opt_2
TARGET LIST: 
target index: 341  , change_value: return_stmt@0_opt_2
target index: 343  , change_value: %NULL%
target index: 344  , change_value: %NULL%

return_stmt@0_opt_2  :  %MARK%  
 index is: 343, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

return_stmt@0_opt_2  :  %MARK%  expr  
 index is: 344, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 345  , change_value: expr
target index: 403  , change_value: %NULL%

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 217, target_source: return_stmt@0_opt_2

index: 219, target_source: expr

index: 64, target_source: single_expr

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#217  TERM#
###########


##########
#FROM SET#
##########
return_stmt  :  'return'  return_stmt@0_opt_2  %MARK%  endline  
 index is: 341, term type: to_deduce, before: return_stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 342  , change_value: endline

########
#SUBSET#
########
return_stmt  :  'return'  return_stmt@0_opt_2  %MARK%  endline  
 index is: 341, term type: to_deduce, before: return_stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 342  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 218, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#218  TERM#
###########


##########
#FROM SET#
##########
return_stmt  :  'return'  return_stmt@0_opt_2  endline  %MARK%  
 index is: 342, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
return_stmt  :  'return'  return_stmt@0_opt_2  endline  %MARK%  
 index is: 342, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#219  TERM#
###########


##########
#FROM SET#
##########
return_stmt@0_opt_2  :  expr  %MARK%  
 index is: 345, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
return_stmt@0_opt_2  :  expr  %MARK%  
 index is: 345, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#220  TERM#
###########


##########
#FROM SET#
##########
control_stmt  :  control_stmt@0_decl_1  %MARK%  endline  
 index is: 391, term type: to_deduce, before: control_stmt@0_decl_1, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 392  , change_value: endline

########
#SUBSET#
########
control_stmt  :  control_stmt@0_decl_1  %MARK%  endline  
 index is: 391, term type: to_deduce, before: control_stmt@0_decl_1, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 392  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 221, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#221  TERM#
###########


##########
#FROM SET#
##########
control_stmt  :  control_stmt@0_decl_1  endline  %MARK%  
 index is: 392, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
control_stmt  :  control_stmt@0_decl_1  endline  %MARK%  
 index is: 392, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#222  TERM#
###########


##########
#FROM SET#
##########
foreach_stmt  :  'foreach'  %MARK%  ID  'in'  basic_expr  for_body  
 index is: 298, term type: shift, before: 'foreach', after: ID
TARGET LIST: 
target index: 299  , change_value: ID

########
#SUBSET#
########
foreach_stmt  :  'foreach'  %MARK%  ID  'in'  basic_expr  for_body  
 index is: 298, term type: shift, before: 'foreach', after: ID
TARGET LIST: 
target index: 299  , change_value: ID

########
#TO SET#
########
index: 223, target_source: ID



###########
#223  TERM#
###########


##########
#FROM SET#
##########
foreach_stmt  :  'foreach'  ID  %MARK%  'in'  basic_expr  for_body  
 index is: 299, term type: shift, before: ID, after: 'in'
TARGET LIST: 
target index: 300  , change_value: 'in'

########
#SUBSET#
########
foreach_stmt  :  'foreach'  ID  %MARK%  'in'  basic_expr  for_body  
 index is: 299, term type: shift, before: ID, after: 'in'
TARGET LIST: 
target index: 300  , change_value: 'in'

########
#TO SET#
########
index: 224, target_source: 'in'



###########
#224  TERM#
###########


##########
#FROM SET#
##########
foreach_stmt  :  'foreach'  ID  'in'  %MARK%  basic_expr  for_body  
 index is: 300, term type: to_deduce, before: 'in', after: basic_expr
TARGET LIST: 
target index: 301  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

########
#SUBSET#
########
foreach_stmt  :  'foreach'  ID  'in'  %MARK%  basic_expr  for_body  
 index is: 300, term type: to_deduce, before: 'in', after: basic_expr
TARGET LIST: 
target index: 301  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 225, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#225  TERM#
###########


##########
#FROM SET#
##########
foreach_stmt  :  'foreach'  ID  'in'  basic_expr  %MARK%  for_body  
 index is: 301, term type: to_deduce, before: basic_expr, after: for_body
TARGET LIST: 
target index: 302  , change_value: for_body
target index: 303  , change_value: %NULL%

########
#SUBSET#
########
foreach_stmt  :  'foreach'  ID  'in'  basic_expr  %MARK%  for_body  
 index is: 301, term type: to_deduce, before: basic_expr, after: for_body
TARGET LIST: 
target index: 302  , change_value: for_body
target index: 303  , change_value: %NULL%

for_body  :  %MARK%  for_body@0_decl_1  
 index is: 303, term type: to_deduce, before: %NULL%, after: for_body@0_decl_1
TARGET LIST: 
target index: 304  , change_value: for_body@0_decl_1
target index: 305  , change_value: %NULL%
target index: 310  , change_value: %NULL%

for_body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 305, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 306  , change_value: ENDL

for_body@0_decl_1  :  %MARK%  'do'  basic_expr  endline  
 index is: 310, term type: shift, before: %NULL%, after: 'do'
TARGET LIST: 
target index: 311  , change_value: 'do'

########
#TO SET#
########
index: 226, target_source: for_body

index: 227, target_source: for_body@0_decl_1

index: 228, target_source: ENDL

index: 239, target_source: 'do'



###########
#226  TERM#
###########


##########
#FROM SET#
##########
foreach_stmt  :  'foreach'  ID  'in'  basic_expr  for_body  %MARK%  
 index is: 302, term type: deduce, before: for_body, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
foreach_stmt  :  'foreach'  ID  'in'  basic_expr  for_body  %MARK%  
 index is: 302, term type: deduce, before: for_body, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#227  TERM#
###########


##########
#FROM SET#
##########
for_body  :  for_body@0_decl_1  %MARK%  
 index is: 304, term type: deduce, before: for_body@0_decl_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_body  :  for_body@0_decl_1  %MARK%  
 index is: 304, term type: deduce, before: for_body@0_decl_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#228  TERM#
###########


##########
#FROM SET#
##########
for_body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 306, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 307  , change_value: stmts

########
#SUBSET#
########
for_body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 306, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 307  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 229, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#229  TERM#
###########


##########
#FROM SET#
##########
for_body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 307, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 308  , change_value: 'end'

########
#SUBSET#
########
for_body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 307, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 308  , change_value: 'end'

########
#TO SET#
########
index: 230, target_source: 'end'



###########
#230  TERM#
###########


##########
#FROM SET#
##########
for_body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 308, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 309  , change_value: ENDL

########
#SUBSET#
########
for_body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 308, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 309  , change_value: ENDL

########
#TO SET#
########
index: 231, target_source: ENDL



###########
#231  TERM#
###########


##########
#FROM SET#
##########
for_body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 309, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 309, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#232  TERM#
###########


##########
#FROM SET#
##########
for_stmt  :  'for'  %MARK%  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 273, term type: to_deduce, before: 'for', after: for_stmt@0_opt_2
TARGET LIST: 
target index: 274  , change_value: for_stmt@0_opt_2
target index: 294  , change_value: %NULL%
target index: 295  , change_value: %NULL%

########
#SUBSET#
########
for_stmt  :  'for'  %MARK%  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 273, term type: to_deduce, before: 'for', after: for_stmt@0_opt_2
TARGET LIST: 
target index: 274  , change_value: for_stmt@0_opt_2
target index: 294  , change_value: %NULL%
target index: 295  , change_value: %NULL%

for_stmt@0_opt_2  :  %MARK%  
 index is: 294, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for_stmt@0_opt_2  :  %MARK%  var_def  
 index is: 295, term type: to_deduce, before: %NULL%, after: var_def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 296  , change_value: var_def

var_def  :  %MARK%  var_list  
 index is: 130, term type: to_deduce, before: %NULL%, after: var_list
TARGET LIST: 
target index: 131  , change_value: var_list
target index: 162  , change_value: %NULL%

var_def  :  %MARK%  var_bind  '='  basic_expr  
 index is: 132, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 133  , change_value: var_bind
target index: 146  , change_value: %NULL%

var_list  :  %MARK%  ID  '='  single_expr  var_list@0_opt_4  
 index is: 162, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 163  , change_value: ID

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

########
#TO SET#
########
index: 233, target_source: for_stmt@0_opt_2

index: 248, target_source: var_def

index: 249, target_source: var_list

index: 250, target_source: var_bind

index: 253, target_source: ID

index: 173, target_source: '('



###########
#233  TERM#
###########


##########
#FROM SET#
##########
for_stmt  :  'for'  for_stmt@0_opt_2  %MARK%  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 274, term type: to_deduce, before: for_stmt@0_opt_2, after: for_stmt@0_decl_3
TARGET LIST: 
target index: 275  , change_value: for_stmt@0_decl_3
target index: 290  , change_value: %NULL%
target index: 292  , change_value: %NULL%

########
#SUBSET#
########
for_stmt  :  'for'  for_stmt@0_opt_2  %MARK%  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 274, term type: to_deduce, before: for_stmt@0_opt_2, after: for_stmt@0_decl_3
TARGET LIST: 
target index: 275  , change_value: for_stmt@0_decl_3
target index: 290  , change_value: %NULL%
target index: 292  , change_value: %NULL%

for_stmt@0_decl_3  :  %MARK%  ','  
 index is: 290, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 291  , change_value: ','

for_stmt@0_decl_3  :  %MARK%  ';'  
 index is: 292, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 293  , change_value: ';'

########
#TO SET#
########
index: 234, target_source: for_stmt@0_decl_3

index: 246, target_source: ','

index: 247, target_source: ';'



###########
#234  TERM#
###########


##########
#FROM SET#
##########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  %MARK%  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 275, term type: to_deduce, before: for_stmt@0_decl_3, after: for_stmt@0_opt_4
TARGET LIST: 
target index: 276  , change_value: for_stmt@0_opt_4
target index: 287  , change_value: %NULL%
target index: 288  , change_value: %NULL%

########
#SUBSET#
########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  %MARK%  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 275, term type: to_deduce, before: for_stmt@0_decl_3, after: for_stmt@0_opt_4
TARGET LIST: 
target index: 276  , change_value: for_stmt@0_opt_4
target index: 287  , change_value: %NULL%
target index: 288  , change_value: %NULL%

for_stmt@0_opt_4  :  %MARK%  
 index is: 287, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for_stmt@0_opt_4  :  %MARK%  basic_expr  
 index is: 288, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 289  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 235, target_source: for_stmt@0_opt_4

index: 245, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#235  TERM#
###########


##########
#FROM SET#
##########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  %MARK%  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 276, term type: to_deduce, before: for_stmt@0_opt_4, after: for_stmt@0_decl_5
TARGET LIST: 
target index: 277  , change_value: for_stmt@0_decl_5
target index: 283  , change_value: %NULL%
target index: 285  , change_value: %NULL%

########
#SUBSET#
########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  %MARK%  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 276, term type: to_deduce, before: for_stmt@0_opt_4, after: for_stmt@0_decl_5
TARGET LIST: 
target index: 277  , change_value: for_stmt@0_decl_5
target index: 283  , change_value: %NULL%
target index: 285  , change_value: %NULL%

for_stmt@0_decl_5  :  %MARK%  ','  
 index is: 283, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 284  , change_value: ','

for_stmt@0_decl_5  :  %MARK%  ';'  
 index is: 285, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 286  , change_value: ';'

########
#TO SET#
########
index: 236, target_source: for_stmt@0_decl_5

index: 243, target_source: ','

index: 244, target_source: ';'



###########
#236  TERM#
###########


##########
#FROM SET#
##########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  %MARK%  for_stmt@0_opt_6  for_body  
 index is: 277, term type: to_deduce, before: for_stmt@0_decl_5, after: for_stmt@0_opt_6
TARGET LIST: 
target index: 278  , change_value: for_stmt@0_opt_6
target index: 280  , change_value: %NULL%
target index: 281  , change_value: %NULL%

########
#SUBSET#
########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  %MARK%  for_stmt@0_opt_6  for_body  
 index is: 277, term type: to_deduce, before: for_stmt@0_decl_5, after: for_stmt@0_opt_6
TARGET LIST: 
target index: 278  , change_value: for_stmt@0_opt_6
target index: 280  , change_value: %NULL%
target index: 281  , change_value: %NULL%

for_stmt@0_opt_6  :  %MARK%  
 index is: 280, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for_stmt@0_opt_6  :  %MARK%  basic_expr  
 index is: 281, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 282  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 237, target_source: for_stmt@0_opt_6

index: 242, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#237  TERM#
###########


##########
#FROM SET#
##########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  %MARK%  for_body  
 index is: 278, term type: to_deduce, before: for_stmt@0_opt_6, after: for_body
TARGET LIST: 
target index: 279  , change_value: for_body
target index: 303  , change_value: %NULL%

########
#SUBSET#
########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  %MARK%  for_body  
 index is: 278, term type: to_deduce, before: for_stmt@0_opt_6, after: for_body
TARGET LIST: 
target index: 279  , change_value: for_body
target index: 303  , change_value: %NULL%

for_body  :  %MARK%  for_body@0_decl_1  
 index is: 303, term type: to_deduce, before: %NULL%, after: for_body@0_decl_1
TARGET LIST: 
target index: 304  , change_value: for_body@0_decl_1
target index: 305  , change_value: %NULL%
target index: 310  , change_value: %NULL%

for_body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 305, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 306  , change_value: ENDL

for_body@0_decl_1  :  %MARK%  'do'  basic_expr  endline  
 index is: 310, term type: shift, before: %NULL%, after: 'do'
TARGET LIST: 
target index: 311  , change_value: 'do'

########
#TO SET#
########
index: 238, target_source: for_body

index: 227, target_source: for_body@0_decl_1

index: 228, target_source: ENDL

index: 239, target_source: 'do'



###########
#238  TERM#
###########


##########
#FROM SET#
##########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  %MARK%  
 index is: 279, term type: deduce, before: for_body, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_stmt  :  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  %MARK%  
 index is: 279, term type: deduce, before: for_body, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#239  TERM#
###########


##########
#FROM SET#
##########
for_body@0_decl_1  :  'do'  %MARK%  basic_expr  endline  
 index is: 311, term type: to_deduce, before: 'do', after: basic_expr
TARGET LIST: 
target index: 312  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

########
#SUBSET#
########
for_body@0_decl_1  :  'do'  %MARK%  basic_expr  endline  
 index is: 311, term type: to_deduce, before: 'do', after: basic_expr
TARGET LIST: 
target index: 312  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 240, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#240  TERM#
###########


##########
#FROM SET#
##########
for_body@0_decl_1  :  'do'  basic_expr  %MARK%  endline  
 index is: 312, term type: to_deduce, before: basic_expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 313  , change_value: endline

########
#SUBSET#
########
for_body@0_decl_1  :  'do'  basic_expr  %MARK%  endline  
 index is: 312, term type: to_deduce, before: basic_expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 313  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 241, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#241  TERM#
###########


##########
#FROM SET#
##########
for_body@0_decl_1  :  'do'  basic_expr  endline  %MARK%  
 index is: 313, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_body@0_decl_1  :  'do'  basic_expr  endline  %MARK%  
 index is: 313, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#242  TERM#
###########


##########
#FROM SET#
##########
for_stmt@0_opt_6  :  basic_expr  %MARK%  
 index is: 282, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_stmt@0_opt_6  :  basic_expr  %MARK%  
 index is: 282, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#243  TERM#
###########


##########
#FROM SET#
##########
for_stmt@0_decl_5  :  ','  %MARK%  
 index is: 284, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_stmt@0_decl_5  :  ','  %MARK%  
 index is: 284, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#244  TERM#
###########


##########
#FROM SET#
##########
for_stmt@0_decl_5  :  ';'  %MARK%  
 index is: 286, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_stmt@0_decl_5  :  ';'  %MARK%  
 index is: 286, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#245  TERM#
###########


##########
#FROM SET#
##########
for_stmt@0_opt_4  :  basic_expr  %MARK%  
 index is: 289, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_stmt@0_opt_4  :  basic_expr  %MARK%  
 index is: 289, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#246  TERM#
###########


##########
#FROM SET#
##########
for_stmt@0_decl_3  :  ','  %MARK%  
 index is: 291, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_stmt@0_decl_3  :  ','  %MARK%  
 index is: 291, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#247  TERM#
###########


##########
#FROM SET#
##########
for_stmt@0_decl_3  :  ';'  %MARK%  
 index is: 293, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_stmt@0_decl_3  :  ';'  %MARK%  
 index is: 293, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#248  TERM#
###########


##########
#FROM SET#
##########
for_stmt@0_opt_2  :  var_def  %MARK%  
 index is: 296, term type: deduce, before: var_def, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for_stmt@0_opt_2  :  var_def  %MARK%  
 index is: 296, term type: deduce, before: var_def, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#249  TERM#
###########


##########
#FROM SET#
##########
var_def  :  var_list  %MARK%  
 index is: 131, term type: deduce, before: var_list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_def  :  var_list  %MARK%  
 index is: 131, term type: deduce, before: var_list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#250  TERM#
###########


##########
#FROM SET#
##########
var_def  :  var_bind  %MARK%  '='  basic_expr  
 index is: 133, term type: shift, before: var_bind, after: '='
TARGET LIST: 
target index: 134  , change_value: '='

########
#SUBSET#
########
var_def  :  var_bind  %MARK%  '='  basic_expr  
 index is: 133, term type: shift, before: var_bind, after: '='
TARGET LIST: 
target index: 134  , change_value: '='

########
#TO SET#
########
index: 251, target_source: '='



###########
#251  TERM#
###########


##########
#FROM SET#
##########
var_def  :  var_bind  '='  %MARK%  basic_expr  
 index is: 134, term type: to_deduce, before: '=', after: basic_expr
TARGET LIST: 
target index: 135  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

########
#SUBSET#
########
var_def  :  var_bind  '='  %MARK%  basic_expr  
 index is: 134, term type: to_deduce, before: '=', after: basic_expr
TARGET LIST: 
target index: 135  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 252, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#252  TERM#
###########


##########
#FROM SET#
##########
var_def  :  var_bind  '='  basic_expr  %MARK%  
 index is: 135, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_def  :  var_bind  '='  basic_expr  %MARK%  
 index is: 135, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#253  TERM#
###########


##########
#FROM SET#
##########
var_list  :  ID  %MARK%  '='  single_expr  var_list@0_opt_4  
 index is: 163, term type: shift, before: ID, after: '='
TARGET LIST: 
target index: 164  , change_value: '='

########
#SUBSET#
########
var_list  :  ID  %MARK%  '='  single_expr  var_list@0_opt_4  
 index is: 163, term type: shift, before: ID, after: '='
TARGET LIST: 
target index: 164  , change_value: '='

########
#TO SET#
########
index: 254, target_source: '='



###########
#254  TERM#
###########


##########
#FROM SET#
##########
var_list  :  ID  '='  %MARK%  single_expr  var_list@0_opt_4  
 index is: 164, term type: to_deduce, before: '=', after: single_expr
TARGET LIST: 
target index: 165  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

########
#SUBSET#
########
var_list  :  ID  '='  %MARK%  single_expr  var_list@0_opt_4  
 index is: 164, term type: to_deduce, before: '=', after: single_expr
TARGET LIST: 
target index: 165  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 255, target_source: single_expr

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#255  TERM#
###########


##########
#FROM SET#
##########
var_list  :  ID  '='  single_expr  %MARK%  var_list@0_opt_4  
 index is: 165, term type: to_deduce, before: single_expr, after: var_list@0_opt_4
TARGET LIST: 
target index: 166  , change_value: var_list@0_opt_4
target index: 167  , change_value: %NULL%
target index: 168  , change_value: %NULL%

########
#SUBSET#
########
var_list  :  ID  '='  single_expr  %MARK%  var_list@0_opt_4  
 index is: 165, term type: to_deduce, before: single_expr, after: var_list@0_opt_4
TARGET LIST: 
target index: 166  , change_value: var_list@0_opt_4
target index: 167  , change_value: %NULL%
target index: 168  , change_value: %NULL%

var_list@0_opt_4  :  %MARK%  
 index is: 167, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var_list@0_opt_4  :  %MARK%  ','  var_list  
 index is: 168, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 169  , change_value: ','

########
#TO SET#
########
index: 256, target_source: var_list@0_opt_4

index: 257, target_source: ','



###########
#256  TERM#
###########


##########
#FROM SET#
##########
var_list  :  ID  '='  single_expr  var_list@0_opt_4  %MARK%  
 index is: 166, term type: deduce, before: var_list@0_opt_4, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_list  :  ID  '='  single_expr  var_list@0_opt_4  %MARK%  
 index is: 166, term type: deduce, before: var_list@0_opt_4, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#257  TERM#
###########


##########
#FROM SET#
##########
var_list@0_opt_4  :  ','  %MARK%  var_list  
 index is: 169, term type: to_deduce, before: ',', after: var_list
TARGET LIST: 
target index: 162  , change_value: %NULL%
target index: 170  , change_value: var_list

########
#SUBSET#
########
var_list@0_opt_4  :  ','  %MARK%  var_list  
 index is: 169, term type: to_deduce, before: ',', after: var_list
TARGET LIST: 
target index: 162  , change_value: %NULL%
target index: 170  , change_value: var_list

var_list  :  %MARK%  ID  '='  single_expr  var_list@0_opt_4  
 index is: 162, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 163  , change_value: ID

########
#TO SET#
########
index: 258, target_source: var_list

index: 253, target_source: ID



###########
#258  TERM#
###########


##########
#FROM SET#
##########
var_list@0_opt_4  :  ','  var_list  %MARK%  
 index is: 170, term type: deduce, before: var_list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_list@0_opt_4  :  ','  var_list  %MARK%  
 index is: 170, term type: deduce, before: var_list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#259  TERM#
###########


##########
#FROM SET#
##########
loop_stmt  :  'loop'  %MARK%  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 258, term type: shift, before: 'loop', after: ENDL
TARGET LIST: 
target index: 259  , change_value: ENDL

########
#SUBSET#
########
loop_stmt  :  'loop'  %MARK%  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 258, term type: shift, before: 'loop', after: ENDL
TARGET LIST: 
target index: 259  , change_value: ENDL

########
#TO SET#
########
index: 260, target_source: ENDL



###########
#260  TERM#
###########


##########
#FROM SET#
##########
loop_stmt  :  'loop'  ENDL  %MARK%  stmts  loop_stmt@0_decl_4  
 index is: 259, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 260  , change_value: stmts

########
#SUBSET#
########
loop_stmt  :  'loop'  ENDL  %MARK%  stmts  loop_stmt@0_decl_4  
 index is: 259, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 260  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 261, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#261  TERM#
###########


##########
#FROM SET#
##########
loop_stmt  :  'loop'  ENDL  stmts  %MARK%  loop_stmt@0_decl_4  
 index is: 260, term type: to_deduce, before: stmts, after: loop_stmt@0_decl_4
TARGET LIST: 
target index: 261  , change_value: loop_stmt@0_decl_4
target index: 262  , change_value: %NULL%
target index: 264  , change_value: %NULL%
target index: 266  , change_value: %NULL%

########
#SUBSET#
########
loop_stmt  :  'loop'  ENDL  stmts  %MARK%  loop_stmt@0_decl_4  
 index is: 260, term type: to_deduce, before: stmts, after: loop_stmt@0_decl_4
TARGET LIST: 
target index: 261  , change_value: loop_stmt@0_decl_4
target index: 262  , change_value: %NULL%
target index: 264  , change_value: %NULL%
target index: 266  , change_value: %NULL%

loop_stmt@0_decl_4  :  %MARK%  ENDL  
 index is: 262, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 263  , change_value: ENDL

loop_stmt@0_decl_4  :  %MARK%  'end'  
 index is: 264, term type: shift, before: %NULL%, after: 'end'
TARGET LIST: 
target index: 265  , change_value: 'end'

loop_stmt@0_decl_4  :  %MARK%  until_stmt  
 index is: 266, term type: to_deduce, before: %NULL%, after: until_stmt
TARGET LIST: 
target index: 267  , change_value: until_stmt
target index: 268  , change_value: %NULL%

until_stmt  :  %MARK%  'until'  basic_expr  ENDL  
 index is: 268, term type: shift, before: %NULL%, after: 'until'
TARGET LIST: 
target index: 269  , change_value: 'until'

########
#TO SET#
########
index: 262, target_source: loop_stmt@0_decl_4

index: 263, target_source: ENDL

index: 264, target_source: 'end'

index: 265, target_source: until_stmt

index: 266, target_source: 'until'



###########
#262  TERM#
###########


##########
#FROM SET#
##########
loop_stmt  :  'loop'  ENDL  stmts  loop_stmt@0_decl_4  %MARK%  
 index is: 261, term type: deduce, before: loop_stmt@0_decl_4, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
loop_stmt  :  'loop'  ENDL  stmts  loop_stmt@0_decl_4  %MARK%  
 index is: 261, term type: deduce, before: loop_stmt@0_decl_4, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#263  TERM#
###########


##########
#FROM SET#
##########
loop_stmt@0_decl_4  :  ENDL  %MARK%  
 index is: 263, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
loop_stmt@0_decl_4  :  ENDL  %MARK%  
 index is: 263, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#264  TERM#
###########


##########
#FROM SET#
##########
loop_stmt@0_decl_4  :  'end'  %MARK%  
 index is: 265, term type: deduce, before: 'end', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
loop_stmt@0_decl_4  :  'end'  %MARK%  
 index is: 265, term type: deduce, before: 'end', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#265  TERM#
###########


##########
#FROM SET#
##########
loop_stmt@0_decl_4  :  until_stmt  %MARK%  
 index is: 267, term type: deduce, before: until_stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
loop_stmt@0_decl_4  :  until_stmt  %MARK%  
 index is: 267, term type: deduce, before: until_stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#266  TERM#
###########


##########
#FROM SET#
##########
until_stmt  :  'until'  %MARK%  basic_expr  ENDL  
 index is: 269, term type: to_deduce, before: 'until', after: basic_expr
TARGET LIST: 
target index: 270  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

########
#SUBSET#
########
until_stmt  :  'until'  %MARK%  basic_expr  ENDL  
 index is: 269, term type: to_deduce, before: 'until', after: basic_expr
TARGET LIST: 
target index: 270  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 267, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#267  TERM#
###########


##########
#FROM SET#
##########
until_stmt  :  'until'  basic_expr  %MARK%  ENDL  
 index is: 270, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 271  , change_value: ENDL

########
#SUBSET#
########
until_stmt  :  'until'  basic_expr  %MARK%  ENDL  
 index is: 270, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 271  , change_value: ENDL

########
#TO SET#
########
index: 268, target_source: ENDL



###########
#268  TERM#
###########


##########
#FROM SET#
##########
until_stmt  :  'until'  basic_expr  ENDL  %MARK%  
 index is: 271, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
until_stmt  :  'until'  basic_expr  ENDL  %MARK%  
 index is: 271, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#269  TERM#
###########


##########
#FROM SET#
##########
while_stmt  :  'while'  %MARK%  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 251, term type: to_deduce, before: 'while', after: basic_expr
TARGET LIST: 
target index: 252  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

########
#SUBSET#
########
while_stmt  :  'while'  %MARK%  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 251, term type: to_deduce, before: 'while', after: basic_expr
TARGET LIST: 
target index: 252  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 270, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#270  TERM#
###########


##########
#FROM SET#
##########
while_stmt  :  'while'  basic_expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 252, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 253  , change_value: ENDL

########
#SUBSET#
########
while_stmt  :  'while'  basic_expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 252, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 253  , change_value: ENDL

########
#TO SET#
########
index: 271, target_source: ENDL



###########
#271  TERM#
###########


##########
#FROM SET#
##########
while_stmt  :  'while'  basic_expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 253, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 254  , change_value: stmts

########
#SUBSET#
########
while_stmt  :  'while'  basic_expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 253, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 254  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 272, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#272  TERM#
###########


##########
#FROM SET#
##########
while_stmt  :  'while'  basic_expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 254, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 255  , change_value: 'end'

########
#SUBSET#
########
while_stmt  :  'while'  basic_expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 254, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 255  , change_value: 'end'

########
#TO SET#
########
index: 273, target_source: 'end'



###########
#273  TERM#
###########


##########
#FROM SET#
##########
while_stmt  :  'while'  basic_expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 255, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 256  , change_value: ENDL

########
#SUBSET#
########
while_stmt  :  'while'  basic_expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 255, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 256  , change_value: ENDL

########
#TO SET#
########
index: 274, target_source: ENDL



###########
#274  TERM#
###########


##########
#FROM SET#
##########
while_stmt  :  'while'  basic_expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 256, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
while_stmt  :  'while'  basic_expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 256, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#275  TERM#
###########


##########
#FROM SET#
##########
switch_stmt  :  'switch'  %MARK%  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 217, term type: to_deduce, before: 'switch', after: basic_expr
TARGET LIST: 
target index: 218  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

########
#SUBSET#
########
switch_stmt  :  'switch'  %MARK%  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 217, term type: to_deduce, before: 'switch', after: basic_expr
TARGET LIST: 
target index: 218  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 276, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#276  TERM#
###########


##########
#FROM SET#
##########
switch_stmt  :  'switch'  basic_expr  %MARK%  ENDL  switch_stmts  'end'  ENDL  
 index is: 218, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 219  , change_value: ENDL

########
#SUBSET#
########
switch_stmt  :  'switch'  basic_expr  %MARK%  ENDL  switch_stmts  'end'  ENDL  
 index is: 218, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 219  , change_value: ENDL

########
#TO SET#
########
index: 277, target_source: ENDL



###########
#277  TERM#
###########


##########
#FROM SET#
##########
switch_stmt  :  'switch'  basic_expr  ENDL  %MARK%  switch_stmts  'end'  ENDL  
 index is: 219, term type: to_deduce, before: ENDL, after: switch_stmts
TARGET LIST: 
target index: 220  , change_value: switch_stmts
target index: 223  , change_value: %NULL%

########
#SUBSET#
########
switch_stmt  :  'switch'  basic_expr  ENDL  %MARK%  switch_stmts  'end'  ENDL  
 index is: 219, term type: to_deduce, before: ENDL, after: switch_stmts
TARGET LIST: 
target index: 220  , change_value: switch_stmts
target index: 223  , change_value: %NULL%

switch_stmts  :  %MARK%  switch_stmts@0_rep_1  switch_stmts@0_rep_2  
 index is: 223, term type: to_deduce, before: %NULL%, after: switch_stmts@0_rep_1
TARGET LIST: 
target index: 224  , change_value: switch_stmts@0_rep_1
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%

switch_stmts@0_rep_1  :  %MARK%  
 index is: 230, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_1  :  %MARK%  switch_default  switch_stmts@0_rep_1  
 index is: 231, term type: to_deduce, before: %NULL%, after: switch_default
TARGET LIST: 
target index: 232  , change_value: switch_default
target index: 244  , change_value: %NULL%

switch_stmts@0_rep_1  :  %MARK%  switch_case  switch_stmts@0_rep_1  
 index is: 234, term type: to_deduce, before: %NULL%, after: switch_case
TARGET LIST: 
target index: 235  , change_value: switch_case
target index: 237  , change_value: %NULL%

switch_default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, term type: shift, before: %NULL%, after: 'default'
TARGET LIST: 
target index: 245  , change_value: 'default'

switch_case  :  %MARK%  'case'  logic_or_expr  ENDL  stmts  'end'  ENDL  
 index is: 237, term type: shift, before: %NULL%, after: 'case'
TARGET LIST: 
target index: 238  , change_value: 'case'

########
#TO SET#
########
index: 278, target_source: switch_stmts

index: 281, target_source: switch_stmts@0_rep_1

index: 285, target_source: switch_default

index: 287, target_source: switch_case

index: 289, target_source: 'default'

index: 358, target_source: 'case'



###########
#278  TERM#
###########


##########
#FROM SET#
##########
switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  %MARK%  'end'  ENDL  
 index is: 220, term type: shift, before: switch_stmts, after: 'end'
TARGET LIST: 
target index: 221  , change_value: 'end'

########
#SUBSET#
########
switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  %MARK%  'end'  ENDL  
 index is: 220, term type: shift, before: switch_stmts, after: 'end'
TARGET LIST: 
target index: 221  , change_value: 'end'

########
#TO SET#
########
index: 279, target_source: 'end'



###########
#279  TERM#
###########


##########
#FROM SET#
##########
switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  'end'  %MARK%  ENDL  
 index is: 221, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 222  , change_value: ENDL

########
#SUBSET#
########
switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  'end'  %MARK%  ENDL  
 index is: 221, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 222  , change_value: ENDL

########
#TO SET#
########
index: 280, target_source: ENDL



###########
#280  TERM#
###########


##########
#FROM SET#
##########
switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  %MARK%  
 index is: 222, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch_stmt  :  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  %MARK%  
 index is: 222, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#281  TERM#
###########


##########
#FROM SET#
##########
switch_stmts  :  switch_stmts@0_rep_1  %MARK%  switch_stmts@0_rep_2  
 index is: 224, term type: to_deduce, before: switch_stmts@0_rep_1, after: switch_stmts@0_rep_2
TARGET LIST: 
target index: 225  , change_value: switch_stmts@0_rep_2
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%

########
#SUBSET#
########
switch_stmts  :  switch_stmts@0_rep_1  %MARK%  switch_stmts@0_rep_2  
 index is: 224, term type: to_deduce, before: switch_stmts@0_rep_1, after: switch_stmts@0_rep_2
TARGET LIST: 
target index: 225  , change_value: switch_stmts@0_rep_2
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%

switch_stmts@0_rep_2  :  %MARK%  
 index is: 226, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_2  :  %MARK%  ENDL  switch_stmts@0_rep_2  
 index is: 227, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 228  , change_value: ENDL

########
#TO SET#
########
index: 282, target_source: switch_stmts@0_rep_2

index: 283, target_source: ENDL



###########
#282  TERM#
###########


##########
#FROM SET#
##########
switch_stmts  :  switch_stmts@0_rep_1  switch_stmts@0_rep_2  %MARK%  
 index is: 225, term type: deduce, before: switch_stmts@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch_stmts  :  switch_stmts@0_rep_1  switch_stmts@0_rep_2  %MARK%  
 index is: 225, term type: deduce, before: switch_stmts@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#283  TERM#
###########


##########
#FROM SET#
##########
switch_stmts@0_rep_2  :  ENDL  %MARK%  switch_stmts@0_rep_2  
 index is: 228, term type: to_deduce, before: ENDL, after: switch_stmts@0_rep_2
TARGET LIST: 
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%
target index: 229  , change_value: switch_stmts@0_rep_2

########
#SUBSET#
########
switch_stmts@0_rep_2  :  ENDL  %MARK%  switch_stmts@0_rep_2  
 index is: 228, term type: to_deduce, before: ENDL, after: switch_stmts@0_rep_2
TARGET LIST: 
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%
target index: 229  , change_value: switch_stmts@0_rep_2

switch_stmts@0_rep_2  :  %MARK%  
 index is: 226, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_2  :  %MARK%  ENDL  switch_stmts@0_rep_2  
 index is: 227, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 228  , change_value: ENDL

########
#TO SET#
########
index: 284, target_source: switch_stmts@0_rep_2

index: 283, target_source: ENDL



###########
#284  TERM#
###########


##########
#FROM SET#
##########
switch_stmts@0_rep_2  :  ENDL  switch_stmts@0_rep_2  %MARK%  
 index is: 229, term type: deduce, before: switch_stmts@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch_stmts@0_rep_2  :  ENDL  switch_stmts@0_rep_2  %MARK%  
 index is: 229, term type: deduce, before: switch_stmts@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#285  TERM#
###########


##########
#FROM SET#
##########
switch_stmts@0_rep_1  :  switch_default  %MARK%  switch_stmts@0_rep_1  
 index is: 232, term type: to_deduce, before: switch_default, after: switch_stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 233  , change_value: switch_stmts@0_rep_1
target index: 234  , change_value: %NULL%

########
#SUBSET#
########
switch_stmts@0_rep_1  :  switch_default  %MARK%  switch_stmts@0_rep_1  
 index is: 232, term type: to_deduce, before: switch_default, after: switch_stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 233  , change_value: switch_stmts@0_rep_1
target index: 234  , change_value: %NULL%

switch_stmts@0_rep_1  :  %MARK%  
 index is: 230, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_1  :  %MARK%  switch_default  switch_stmts@0_rep_1  
 index is: 231, term type: to_deduce, before: %NULL%, after: switch_default
TARGET LIST: 
target index: 232  , change_value: switch_default
target index: 244  , change_value: %NULL%

switch_stmts@0_rep_1  :  %MARK%  switch_case  switch_stmts@0_rep_1  
 index is: 234, term type: to_deduce, before: %NULL%, after: switch_case
TARGET LIST: 
target index: 235  , change_value: switch_case
target index: 237  , change_value: %NULL%

switch_default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, term type: shift, before: %NULL%, after: 'default'
TARGET LIST: 
target index: 245  , change_value: 'default'

switch_case  :  %MARK%  'case'  logic_or_expr  ENDL  stmts  'end'  ENDL  
 index is: 237, term type: shift, before: %NULL%, after: 'case'
TARGET LIST: 
target index: 238  , change_value: 'case'

########
#TO SET#
########
index: 286, target_source: switch_stmts@0_rep_1

index: 285, target_source: switch_default

index: 287, target_source: switch_case

index: 289, target_source: 'default'

index: 358, target_source: 'case'



###########
#286  TERM#
###########


##########
#FROM SET#
##########
switch_stmts@0_rep_1  :  switch_default  switch_stmts@0_rep_1  %MARK%  
 index is: 233, term type: deduce, before: switch_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch_stmts@0_rep_1  :  switch_default  switch_stmts@0_rep_1  %MARK%  
 index is: 233, term type: deduce, before: switch_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#287  TERM#
###########


##########
#FROM SET#
##########
switch_stmts@0_rep_1  :  switch_case  %MARK%  switch_stmts@0_rep_1  
 index is: 235, term type: to_deduce, before: switch_case, after: switch_stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%
target index: 236  , change_value: switch_stmts@0_rep_1

########
#SUBSET#
########
switch_stmts@0_rep_1  :  switch_case  %MARK%  switch_stmts@0_rep_1  
 index is: 235, term type: to_deduce, before: switch_case, after: switch_stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%
target index: 236  , change_value: switch_stmts@0_rep_1

switch_stmts@0_rep_1  :  %MARK%  
 index is: 230, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch_stmts@0_rep_1  :  %MARK%  switch_default  switch_stmts@0_rep_1  
 index is: 231, term type: to_deduce, before: %NULL%, after: switch_default
TARGET LIST: 
target index: 232  , change_value: switch_default
target index: 244  , change_value: %NULL%

switch_stmts@0_rep_1  :  %MARK%  switch_case  switch_stmts@0_rep_1  
 index is: 234, term type: to_deduce, before: %NULL%, after: switch_case
TARGET LIST: 
target index: 235  , change_value: switch_case
target index: 237  , change_value: %NULL%

switch_default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, term type: shift, before: %NULL%, after: 'default'
TARGET LIST: 
target index: 245  , change_value: 'default'

switch_case  :  %MARK%  'case'  logic_or_expr  ENDL  stmts  'end'  ENDL  
 index is: 237, term type: shift, before: %NULL%, after: 'case'
TARGET LIST: 
target index: 238  , change_value: 'case'

########
#TO SET#
########
index: 288, target_source: switch_stmts@0_rep_1

index: 285, target_source: switch_default

index: 287, target_source: switch_case

index: 289, target_source: 'default'

index: 358, target_source: 'case'



###########
#288  TERM#
###########


##########
#FROM SET#
##########
switch_stmts@0_rep_1  :  switch_case  switch_stmts@0_rep_1  %MARK%  
 index is: 236, term type: deduce, before: switch_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch_stmts@0_rep_1  :  switch_case  switch_stmts@0_rep_1  %MARK%  
 index is: 236, term type: deduce, before: switch_stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#289  TERM#
###########


##########
#FROM SET#
##########
switch_default  :  'default'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 245, term type: shift, before: 'default', after: ENDL
TARGET LIST: 
target index: 246  , change_value: ENDL

########
#SUBSET#
########
switch_default  :  'default'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 245, term type: shift, before: 'default', after: ENDL
TARGET LIST: 
target index: 246  , change_value: ENDL

########
#TO SET#
########
index: 290, target_source: ENDL



###########
#290  TERM#
###########


##########
#FROM SET#
##########
switch_default  :  'default'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 246, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 247  , change_value: stmts

########
#SUBSET#
########
switch_default  :  'default'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 246, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 247  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 291, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#291  TERM#
###########


##########
#FROM SET#
##########
switch_default  :  'default'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 247, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 248  , change_value: 'end'

########
#SUBSET#
########
switch_default  :  'default'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 247, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 248  , change_value: 'end'

########
#TO SET#
########
index: 292, target_source: 'end'



###########
#292  TERM#
###########


##########
#FROM SET#
##########
switch_default  :  'default'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 248, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 249  , change_value: ENDL

########
#SUBSET#
########
switch_default  :  'default'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 248, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 249  , change_value: ENDL

########
#TO SET#
########
index: 293, target_source: ENDL



###########
#293  TERM#
###########


##########
#FROM SET#
##########
switch_default  :  'default'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 249, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch_default  :  'default'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 249, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#294  TERM#
###########


##########
#FROM SET#
##########
if_stmt  :  'if'  %MARK%  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 196, term type: to_deduce, before: 'if', after: basic_expr
TARGET LIST: 
target index: 197  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

########
#SUBSET#
########
if_stmt  :  'if'  %MARK%  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 196, term type: to_deduce, before: 'if', after: basic_expr
TARGET LIST: 
target index: 197  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 295, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#295  TERM#
###########


##########
#FROM SET#
##########
if_stmt  :  'if'  basic_expr  %MARK%  ENDL  stmts  if_stmt@0_rep_5  
 index is: 197, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 198  , change_value: ENDL

########
#SUBSET#
########
if_stmt  :  'if'  basic_expr  %MARK%  ENDL  stmts  if_stmt@0_rep_5  
 index is: 197, term type: shift, before: basic_expr, after: ENDL
TARGET LIST: 
target index: 198  , change_value: ENDL

########
#TO SET#
########
index: 296, target_source: ENDL



###########
#296  TERM#
###########


##########
#FROM SET#
##########
if_stmt  :  'if'  basic_expr  ENDL  %MARK%  stmts  if_stmt@0_rep_5  
 index is: 198, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 199  , change_value: stmts

########
#SUBSET#
########
if_stmt  :  'if'  basic_expr  ENDL  %MARK%  stmts  if_stmt@0_rep_5  
 index is: 198, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 199  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 297, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#297  TERM#
###########


##########
#FROM SET#
##########
if_stmt  :  'if'  basic_expr  ENDL  stmts  %MARK%  if_stmt@0_rep_5  
 index is: 199, term type: to_deduce, before: stmts, after: if_stmt@0_rep_5
TARGET LIST: 
target index: 200  , change_value: if_stmt@0_rep_5
target index: 201  , change_value: %NULL%
target index: 202  , change_value: %NULL%

########
#SUBSET#
########
if_stmt  :  'if'  basic_expr  ENDL  stmts  %MARK%  if_stmt@0_rep_5  
 index is: 199, term type: to_deduce, before: stmts, after: if_stmt@0_rep_5
TARGET LIST: 
target index: 200  , change_value: if_stmt@0_rep_5
target index: 201  , change_value: %NULL%
target index: 202  , change_value: %NULL%

if_stmt@0_rep_5  :  %MARK%  
 index is: 201, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

if_stmt@0_rep_5  :  %MARK%  else_stmt  stmts  'end'  ENDL  if_stmt@0_rep_5  
 index is: 202, term type: to_deduce, before: %NULL%, after: else_stmt
TARGET LIST: 
target index: 203  , change_value: else_stmt
target index: 208  , change_value: %NULL%

else_stmt  :  %MARK%  'else'  else_stmt@0_opt_2  ENDL  
 index is: 208, term type: shift, before: %NULL%, after: 'else'
TARGET LIST: 
target index: 209  , change_value: 'else'

########
#TO SET#
########
index: 298, target_source: if_stmt@0_rep_5

index: 299, target_source: else_stmt

index: 304, target_source: 'else'



###########
#298  TERM#
###########


##########
#FROM SET#
##########
if_stmt  :  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  %MARK%  
 index is: 200, term type: deduce, before: if_stmt@0_rep_5, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
if_stmt  :  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  %MARK%  
 index is: 200, term type: deduce, before: if_stmt@0_rep_5, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#299  TERM#
###########


##########
#FROM SET#
##########
if_stmt@0_rep_5  :  else_stmt  %MARK%  stmts  'end'  ENDL  if_stmt@0_rep_5  
 index is: 203, term type: to_deduce, before: else_stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 204  , change_value: stmts

########
#SUBSET#
########
if_stmt@0_rep_5  :  else_stmt  %MARK%  stmts  'end'  ENDL  if_stmt@0_rep_5  
 index is: 203, term type: to_deduce, before: else_stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 204  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 300, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#300  TERM#
###########


##########
#FROM SET#
##########
if_stmt@0_rep_5  :  else_stmt  stmts  %MARK%  'end'  ENDL  if_stmt@0_rep_5  
 index is: 204, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 205  , change_value: 'end'

########
#SUBSET#
########
if_stmt@0_rep_5  :  else_stmt  stmts  %MARK%  'end'  ENDL  if_stmt@0_rep_5  
 index is: 204, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 205  , change_value: 'end'

########
#TO SET#
########
index: 301, target_source: 'end'



###########
#301  TERM#
###########


##########
#FROM SET#
##########
if_stmt@0_rep_5  :  else_stmt  stmts  'end'  %MARK%  ENDL  if_stmt@0_rep_5  
 index is: 205, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 206  , change_value: ENDL

########
#SUBSET#
########
if_stmt@0_rep_5  :  else_stmt  stmts  'end'  %MARK%  ENDL  if_stmt@0_rep_5  
 index is: 205, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 206  , change_value: ENDL

########
#TO SET#
########
index: 302, target_source: ENDL



###########
#302  TERM#
###########


##########
#FROM SET#
##########
if_stmt@0_rep_5  :  else_stmt  stmts  'end'  ENDL  %MARK%  if_stmt@0_rep_5  
 index is: 206, term type: to_deduce, before: ENDL, after: if_stmt@0_rep_5
TARGET LIST: 
target index: 201  , change_value: %NULL%
target index: 202  , change_value: %NULL%
target index: 207  , change_value: if_stmt@0_rep_5

########
#SUBSET#
########
if_stmt@0_rep_5  :  else_stmt  stmts  'end'  ENDL  %MARK%  if_stmt@0_rep_5  
 index is: 206, term type: to_deduce, before: ENDL, after: if_stmt@0_rep_5
TARGET LIST: 
target index: 201  , change_value: %NULL%
target index: 202  , change_value: %NULL%
target index: 207  , change_value: if_stmt@0_rep_5

if_stmt@0_rep_5  :  %MARK%  
 index is: 201, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

if_stmt@0_rep_5  :  %MARK%  else_stmt  stmts  'end'  ENDL  if_stmt@0_rep_5  
 index is: 202, term type: to_deduce, before: %NULL%, after: else_stmt
TARGET LIST: 
target index: 203  , change_value: else_stmt
target index: 208  , change_value: %NULL%

else_stmt  :  %MARK%  'else'  else_stmt@0_opt_2  ENDL  
 index is: 208, term type: shift, before: %NULL%, after: 'else'
TARGET LIST: 
target index: 209  , change_value: 'else'

########
#TO SET#
########
index: 303, target_source: if_stmt@0_rep_5

index: 299, target_source: else_stmt

index: 304, target_source: 'else'



###########
#303  TERM#
###########


##########
#FROM SET#
##########
if_stmt@0_rep_5  :  else_stmt  stmts  'end'  ENDL  if_stmt@0_rep_5  %MARK%  
 index is: 207, term type: deduce, before: if_stmt@0_rep_5, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
if_stmt@0_rep_5  :  else_stmt  stmts  'end'  ENDL  if_stmt@0_rep_5  %MARK%  
 index is: 207, term type: deduce, before: if_stmt@0_rep_5, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#304  TERM#
###########


##########
#FROM SET#
##########
else_stmt  :  'else'  %MARK%  else_stmt@0_opt_2  ENDL  
 index is: 209, term type: to_deduce, before: 'else', after: else_stmt@0_opt_2
TARGET LIST: 
target index: 210  , change_value: else_stmt@0_opt_2
target index: 212  , change_value: %NULL%
target index: 213  , change_value: %NULL%

########
#SUBSET#
########
else_stmt  :  'else'  %MARK%  else_stmt@0_opt_2  ENDL  
 index is: 209, term type: to_deduce, before: 'else', after: else_stmt@0_opt_2
TARGET LIST: 
target index: 210  , change_value: else_stmt@0_opt_2
target index: 212  , change_value: %NULL%
target index: 213  , change_value: %NULL%

else_stmt@0_opt_2  :  %MARK%  
 index is: 212, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

else_stmt@0_opt_2  :  %MARK%  'if'  basic_expr  
 index is: 213, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 214  , change_value: 'if'

########
#TO SET#
########
index: 305, target_source: else_stmt@0_opt_2

index: 307, target_source: 'if'



###########
#305  TERM#
###########


##########
#FROM SET#
##########
else_stmt  :  'else'  else_stmt@0_opt_2  %MARK%  ENDL  
 index is: 210, term type: shift, before: else_stmt@0_opt_2, after: ENDL
TARGET LIST: 
target index: 211  , change_value: ENDL

########
#SUBSET#
########
else_stmt  :  'else'  else_stmt@0_opt_2  %MARK%  ENDL  
 index is: 210, term type: shift, before: else_stmt@0_opt_2, after: ENDL
TARGET LIST: 
target index: 211  , change_value: ENDL

########
#TO SET#
########
index: 306, target_source: ENDL



###########
#306  TERM#
###########


##########
#FROM SET#
##########
else_stmt  :  'else'  else_stmt@0_opt_2  ENDL  %MARK%  
 index is: 211, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
else_stmt  :  'else'  else_stmt@0_opt_2  ENDL  %MARK%  
 index is: 211, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#307  TERM#
###########


##########
#FROM SET#
##########
else_stmt@0_opt_2  :  'if'  %MARK%  basic_expr  
 index is: 214, term type: to_deduce, before: 'if', after: basic_expr
TARGET LIST: 
target index: 215  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

########
#SUBSET#
########
else_stmt@0_opt_2  :  'if'  %MARK%  basic_expr  
 index is: 214, term type: to_deduce, before: 'if', after: basic_expr
TARGET LIST: 
target index: 215  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 308, target_source: basic_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#308  TERM#
###########


##########
#FROM SET#
##########
else_stmt@0_opt_2  :  'if'  basic_expr  %MARK%  
 index is: 215, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
else_stmt@0_opt_2  :  'if'  basic_expr  %MARK%  
 index is: 215, term type: deduce, before: basic_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#309  TERM#
###########


##########
#FROM SET#
##########
using_stmt  :  'using'  %MARK%  using_list  endline  
 index is: 185, term type: to_deduce, before: 'using', after: using_list
TARGET LIST: 
target index: 186  , change_value: using_list
target index: 188  , change_value: %NULL%

########
#SUBSET#
########
using_stmt  :  'using'  %MARK%  using_list  endline  
 index is: 185, term type: to_deduce, before: 'using', after: using_list
TARGET LIST: 
target index: 186  , change_value: using_list
target index: 188  , change_value: %NULL%

using_list  :  %MARK%  module_list  using_list@0_opt_2  
 index is: 188, term type: to_deduce, before: %NULL%, after: module_list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 189  , change_value: module_list

module_list  :  %MARK%  ID  module_list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 310, target_source: using_list

index: 312, target_source: module_list

index: 316, target_source: ID



###########
#310  TERM#
###########


##########
#FROM SET#
##########
using_stmt  :  'using'  using_list  %MARK%  endline  
 index is: 186, term type: to_deduce, before: using_list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 187  , change_value: endline

########
#SUBSET#
########
using_stmt  :  'using'  using_list  %MARK%  endline  
 index is: 186, term type: to_deduce, before: using_list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 187  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 311, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#311  TERM#
###########


##########
#FROM SET#
##########
using_stmt  :  'using'  using_list  endline  %MARK%  
 index is: 187, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
using_stmt  :  'using'  using_list  endline  %MARK%  
 index is: 187, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#312  TERM#
###########


##########
#FROM SET#
##########
using_list  :  module_list  %MARK%  using_list@0_opt_2  
 index is: 189, term type: to_deduce, before: module_list, after: using_list@0_opt_2
TARGET LIST: 
target index: 190  , change_value: using_list@0_opt_2
target index: 191  , change_value: %NULL%
target index: 192  , change_value: %NULL%

########
#SUBSET#
########
using_list  :  module_list  %MARK%  using_list@0_opt_2  
 index is: 189, term type: to_deduce, before: module_list, after: using_list@0_opt_2
TARGET LIST: 
target index: 190  , change_value: using_list@0_opt_2
target index: 191  , change_value: %NULL%
target index: 192  , change_value: %NULL%

using_list@0_opt_2  :  %MARK%  
 index is: 191, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

using_list@0_opt_2  :  %MARK%  ','  using_list  
 index is: 192, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 193  , change_value: ','

########
#TO SET#
########
index: 313, target_source: using_list@0_opt_2

index: 314, target_source: ','



###########
#313  TERM#
###########


##########
#FROM SET#
##########
using_list  :  module_list  using_list@0_opt_2  %MARK%  
 index is: 190, term type: deduce, before: using_list@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
using_list  :  module_list  using_list@0_opt_2  %MARK%  
 index is: 190, term type: deduce, before: using_list@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#314  TERM#
###########


##########
#FROM SET#
##########
using_list@0_opt_2  :  ','  %MARK%  using_list  
 index is: 193, term type: to_deduce, before: ',', after: using_list
TARGET LIST: 
target index: 188  , change_value: %NULL%
target index: 194  , change_value: using_list

########
#SUBSET#
########
using_list@0_opt_2  :  ','  %MARK%  using_list  
 index is: 193, term type: to_deduce, before: ',', after: using_list
TARGET LIST: 
target index: 188  , change_value: %NULL%
target index: 194  , change_value: using_list

using_list  :  %MARK%  module_list  using_list@0_opt_2  
 index is: 188, term type: to_deduce, before: %NULL%, after: module_list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 189  , change_value: module_list

module_list  :  %MARK%  ID  module_list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 315, target_source: using_list

index: 312, target_source: module_list

index: 316, target_source: ID



###########
#315  TERM#
###########


##########
#FROM SET#
##########
using_list@0_opt_2  :  ','  using_list  %MARK%  
 index is: 194, term type: deduce, before: using_list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
using_list@0_opt_2  :  ','  using_list  %MARK%  
 index is: 194, term type: deduce, before: using_list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#316  TERM#
###########


##########
#FROM SET#
##########
module_list  :  ID  %MARK%  module_list@0_opt_2  
 index is: 108, term type: to_deduce, before: ID, after: module_list@0_opt_2
TARGET LIST: 
target index: 109  , change_value: module_list@0_opt_2
target index: 110  , change_value: %NULL%
target index: 111  , change_value: %NULL%

########
#SUBSET#
########
module_list  :  ID  %MARK%  module_list@0_opt_2  
 index is: 108, term type: to_deduce, before: ID, after: module_list@0_opt_2
TARGET LIST: 
target index: 109  , change_value: module_list@0_opt_2
target index: 110  , change_value: %NULL%
target index: 111  , change_value: %NULL%

module_list@0_opt_2  :  %MARK%  
 index is: 110, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

module_list@0_opt_2  :  %MARK%  '.'  module_list@0_opt_2@0_decl_2  
 index is: 111, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 112  , change_value: '.'

########
#TO SET#
########
index: 317, target_source: module_list@0_opt_2

index: 318, target_source: '.'



###########
#317  TERM#
###########


##########
#FROM SET#
##########
module_list  :  ID  module_list@0_opt_2  %MARK%  
 index is: 109, term type: deduce, before: module_list@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
module_list  :  ID  module_list@0_opt_2  %MARK%  
 index is: 109, term type: deduce, before: module_list@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#318  TERM#
###########


##########
#FROM SET#
##########
module_list@0_opt_2  :  '.'  %MARK%  module_list@0_opt_2@0_decl_2  
 index is: 112, term type: to_deduce, before: '.', after: module_list@0_opt_2@0_decl_2
TARGET LIST: 
target index: 113  , change_value: module_list@0_opt_2@0_decl_2
target index: 114  , change_value: %NULL%
target index: 116  , change_value: %NULL%

########
#SUBSET#
########
module_list@0_opt_2  :  '.'  %MARK%  module_list@0_opt_2@0_decl_2  
 index is: 112, term type: to_deduce, before: '.', after: module_list@0_opt_2@0_decl_2
TARGET LIST: 
target index: 113  , change_value: module_list@0_opt_2@0_decl_2
target index: 114  , change_value: %NULL%
target index: 116  , change_value: %NULL%

module_list@0_opt_2@0_decl_2  :  %MARK%  module_list  
 index is: 114, term type: to_deduce, before: %NULL%, after: module_list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 115  , change_value: module_list

module_list@0_opt_2@0_decl_2  :  %MARK%  '*'  
 index is: 116, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 117  , change_value: '*'

module_list  :  %MARK%  ID  module_list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 319, target_source: module_list@0_opt_2@0_decl_2

index: 320, target_source: module_list

index: 321, target_source: '*'

index: 316, target_source: ID



###########
#319  TERM#
###########


##########
#FROM SET#
##########
module_list@0_opt_2  :  '.'  module_list@0_opt_2@0_decl_2  %MARK%  
 index is: 113, term type: deduce, before: module_list@0_opt_2@0_decl_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
module_list@0_opt_2  :  '.'  module_list@0_opt_2@0_decl_2  %MARK%  
 index is: 113, term type: deduce, before: module_list@0_opt_2@0_decl_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#320  TERM#
###########


##########
#FROM SET#
##########
module_list@0_opt_2@0_decl_2  :  module_list  %MARK%  
 index is: 115, term type: deduce, before: module_list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
module_list@0_opt_2@0_decl_2  :  module_list  %MARK%  
 index is: 115, term type: deduce, before: module_list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#321  TERM#
###########


##########
#FROM SET#
##########
module_list@0_opt_2@0_decl_2  :  '*'  %MARK%  
 index is: 117, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
module_list@0_opt_2@0_decl_2  :  '*'  %MARK%  
 index is: 117, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#322  TERM#
###########


##########
#FROM SET#
##########
namespace_stmt  :  'namespace'  %MARK%  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 178, term type: shift, before: 'namespace', after: ID
TARGET LIST: 
target index: 179  , change_value: ID

########
#SUBSET#
########
namespace_stmt  :  'namespace'  %MARK%  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 178, term type: shift, before: 'namespace', after: ID
TARGET LIST: 
target index: 179  , change_value: ID

########
#TO SET#
########
index: 323, target_source: ID



###########
#323  TERM#
###########


##########
#FROM SET#
##########
namespace_stmt  :  'namespace'  ID  %MARK%  ENDL  decl_stmts  'end'  ENDL  
 index is: 179, term type: shift, before: ID, after: ENDL
TARGET LIST: 
target index: 180  , change_value: ENDL

########
#SUBSET#
########
namespace_stmt  :  'namespace'  ID  %MARK%  ENDL  decl_stmts  'end'  ENDL  
 index is: 179, term type: shift, before: ID, after: ENDL
TARGET LIST: 
target index: 180  , change_value: ENDL

########
#TO SET#
########
index: 324, target_source: ENDL



###########
#324  TERM#
###########


##########
#FROM SET#
##########
namespace_stmt  :  'namespace'  ID  ENDL  %MARK%  decl_stmts  'end'  ENDL  
 index is: 180, term type: to_deduce, before: ENDL, after: decl_stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 181  , change_value: decl_stmts

########
#SUBSET#
########
namespace_stmt  :  'namespace'  ID  ENDL  %MARK%  decl_stmts  'end'  ENDL  
 index is: 180, term type: to_deduce, before: ENDL, after: decl_stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 181  , change_value: decl_stmts

decl_stmts  :  %MARK%  decl_stmts@0_rep_1  
 index is: 25, term type: to_deduce, before: %NULL%, after: decl_stmts@0_rep_1
TARGET LIST: 
target index: 26  , change_value: decl_stmts@0_rep_1
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%

decl_stmts@0_rep_1  :  %MARK%  
 index is: 27, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl_stmts@0_rep_1  :  %MARK%  declaration  decl_stmts@0_rep_1@0_rep_2  decl_stmts@0_rep_1  
 index is: 28, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 29  , change_value: declaration
target index: 84  , change_value: %NULL%
target index: 86  , change_value: %NULL%
target index: 88  , change_value: %NULL%
target index: 90  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 94  , change_value: %NULL%

declaration  :  %MARK%  class_stmt  
 index is: 84, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 85  , change_value: class_stmt
target index: 374  , change_value: %NULL%

declaration  :  %MARK%  function_stmt  
 index is: 86, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 87  , change_value: function_stmt
target index: 314  , change_value: %NULL%

declaration  :  %MARK%  using_stmt  
 index is: 88, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 89  , change_value: using_stmt
target index: 184  , change_value: %NULL%

declaration  :  %MARK%  var_stmt  
 index is: 90, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 91  , change_value: var_stmt
target index: 136  , change_value: %NULL%

declaration  :  %MARK%  namespace_stmt  
 index is: 92, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 93  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

declaration  :  %MARK%  prep_stmt  
 index is: 94, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 95  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

########
#TO SET#
########
index: 325, target_source: decl_stmts

index: 38, target_source: decl_stmts@0_rep_1

index: 39, target_source: declaration

index: 42, target_source: class_stmt

index: 43, target_source: function_stmt

index: 44, target_source: using_stmt

index: 45, target_source: var_stmt

index: 46, target_source: namespace_stmt

index: 47, target_source: prep_stmt

index: 31, target_source: class_stmt@0_decl_1

index: 48, target_source: 'function'

index: 309, target_source: 'using'

index: 328, target_source: var_stmt@0_decl_1

index: 322, target_source: 'namespace'

index: 331, target_source: PREP

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'



###########
#325  TERM#
###########


##########
#FROM SET#
##########
namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  %MARK%  'end'  ENDL  
 index is: 181, term type: shift, before: decl_stmts, after: 'end'
TARGET LIST: 
target index: 182  , change_value: 'end'

########
#SUBSET#
########
namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  %MARK%  'end'  ENDL  
 index is: 181, term type: shift, before: decl_stmts, after: 'end'
TARGET LIST: 
target index: 182  , change_value: 'end'

########
#TO SET#
########
index: 326, target_source: 'end'



###########
#326  TERM#
###########


##########
#FROM SET#
##########
namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  'end'  %MARK%  ENDL  
 index is: 182, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 183  , change_value: ENDL

########
#SUBSET#
########
namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  'end'  %MARK%  ENDL  
 index is: 182, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 183  , change_value: ENDL

########
#TO SET#
########
index: 327, target_source: ENDL



###########
#327  TERM#
###########


##########
#FROM SET#
##########
namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  %MARK%  
 index is: 183, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
namespace_stmt  :  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  %MARK%  
 index is: 183, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#328  TERM#
###########


##########
#FROM SET#
##########
var_stmt  :  var_stmt@0_decl_1  %MARK%  var_def  endline  
 index is: 137, term type: to_deduce, before: var_stmt@0_decl_1, after: var_def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 138  , change_value: var_def

########
#SUBSET#
########
var_stmt  :  var_stmt@0_decl_1  %MARK%  var_def  endline  
 index is: 137, term type: to_deduce, before: var_stmt@0_decl_1, after: var_def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 138  , change_value: var_def

var_def  :  %MARK%  var_list  
 index is: 130, term type: to_deduce, before: %NULL%, after: var_list
TARGET LIST: 
target index: 131  , change_value: var_list
target index: 162  , change_value: %NULL%

var_def  :  %MARK%  var_bind  '='  basic_expr  
 index is: 132, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 133  , change_value: var_bind
target index: 146  , change_value: %NULL%

var_list  :  %MARK%  ID  '='  single_expr  var_list@0_opt_4  
 index is: 162, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 163  , change_value: ID

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

########
#TO SET#
########
index: 329, target_source: var_def

index: 249, target_source: var_list

index: 250, target_source: var_bind

index: 253, target_source: ID

index: 173, target_source: '('



###########
#329  TERM#
###########


##########
#FROM SET#
##########
var_stmt  :  var_stmt@0_decl_1  var_def  %MARK%  endline  
 index is: 138, term type: to_deduce, before: var_def, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 139  , change_value: endline

########
#SUBSET#
########
var_stmt  :  var_stmt@0_decl_1  var_def  %MARK%  endline  
 index is: 138, term type: to_deduce, before: var_def, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 139  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 330, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#330  TERM#
###########


##########
#FROM SET#
##########
var_stmt  :  var_stmt@0_decl_1  var_def  endline  %MARK%  
 index is: 139, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_stmt  :  var_stmt@0_decl_1  var_def  endline  %MARK%  
 index is: 139, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#331  TERM#
###########


##########
#FROM SET#
##########
prep_stmt  :  PREP  %MARK%  ENDL  
 index is: 97, term type: shift, before: PREP, after: ENDL
TARGET LIST: 
target index: 98  , change_value: ENDL

########
#SUBSET#
########
prep_stmt  :  PREP  %MARK%  ENDL  
 index is: 97, term type: shift, before: PREP, after: ENDL
TARGET LIST: 
target index: 98  , change_value: ENDL

########
#TO SET#
########
index: 332, target_source: ENDL



###########
#332  TERM#
###########


##########
#FROM SET#
##########
prep_stmt  :  PREP  ENDL  %MARK%  
 index is: 98, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
prep_stmt  :  PREP  ENDL  %MARK%  
 index is: 98, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#333  TERM#
###########


##########
#FROM SET#
##########
class_stmt@0_decl_1  :  'struct'  %MARK%  
 index is: 387, term type: deduce, before: 'struct', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
class_stmt@0_decl_1  :  'struct'  %MARK%  
 index is: 387, term type: deduce, before: 'struct', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#334  TERM#
###########


##########
#FROM SET#
##########
class_stmt@0_decl_1  :  'class'  %MARK%  
 index is: 389, term type: deduce, before: 'class', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
class_stmt@0_decl_1  :  'class'  %MARK%  
 index is: 389, term type: deduce, before: 'class', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#335  TERM#
###########


##########
#FROM SET#
##########
var_stmt@0_decl_1  :  'constant'  %MARK%  
 index is: 141, term type: deduce, before: 'constant', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_stmt@0_decl_1  :  'constant'  %MARK%  
 index is: 141, term type: deduce, before: 'constant', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#336  TERM#
###########


##########
#FROM SET#
##########
var_stmt@0_decl_1  :  'link'  %MARK%  
 index is: 143, term type: deduce, before: 'link', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_stmt@0_decl_1  :  'link'  %MARK%  
 index is: 143, term type: deduce, before: 'link', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#337  TERM#
###########


##########
#FROM SET#
##########
var_stmt@0_decl_1  :  'var'  %MARK%  
 index is: 145, term type: deduce, before: 'var', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var_stmt@0_decl_1  :  'var'  %MARK%  
 index is: 145, term type: deduce, before: 'var', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#338  TERM#
###########


##########
#FROM SET#
##########
block_stmt  :  'block'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 172, term type: shift, before: 'block', after: ENDL
TARGET LIST: 
target index: 173  , change_value: ENDL

########
#SUBSET#
########
block_stmt  :  'block'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 172, term type: shift, before: 'block', after: ENDL
TARGET LIST: 
target index: 173  , change_value: ENDL

########
#TO SET#
########
index: 339, target_source: ENDL



###########
#339  TERM#
###########


##########
#FROM SET#
##########
block_stmt  :  'block'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 173, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 174  , change_value: stmts

########
#SUBSET#
########
block_stmt  :  'block'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 173, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 174  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 340, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#340  TERM#
###########


##########
#FROM SET#
##########
block_stmt  :  'block'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 174, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 175  , change_value: 'end'

########
#SUBSET#
########
block_stmt  :  'block'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 174, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 175  , change_value: 'end'

########
#TO SET#
########
index: 341, target_source: 'end'



###########
#341  TERM#
###########


##########
#FROM SET#
##########
block_stmt  :  'block'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 175, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 176  , change_value: ENDL

########
#SUBSET#
########
block_stmt  :  'block'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 175, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 176  , change_value: ENDL

########
#TO SET#
########
index: 342, target_source: ENDL



###########
#342  TERM#
###########


##########
#FROM SET#
##########
block_stmt  :  'block'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 176, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
block_stmt  :  'block'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 176, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#343  TERM#
###########


##########
#FROM SET#
##########
import_stmt  :  'import'  %MARK%  import_list  endline  
 index is: 104, term type: to_deduce, before: 'import', after: import_list
TARGET LIST: 
target index: 105  , change_value: import_list
target index: 118  , change_value: %NULL%

########
#SUBSET#
########
import_stmt  :  'import'  %MARK%  import_list  endline  
 index is: 104, term type: to_deduce, before: 'import', after: import_list
TARGET LIST: 
target index: 105  , change_value: import_list
target index: 118  , change_value: %NULL%

import_list  :  %MARK%  module_list  import_list@0_opt_2  import_list@0_opt_3  
 index is: 118, term type: to_deduce, before: %NULL%, after: module_list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 119  , change_value: module_list

module_list  :  %MARK%  ID  module_list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 344, target_source: import_list

index: 346, target_source: module_list

index: 316, target_source: ID



###########
#344  TERM#
###########


##########
#FROM SET#
##########
import_stmt  :  'import'  import_list  %MARK%  endline  
 index is: 105, term type: to_deduce, before: import_list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 106  , change_value: endline

########
#SUBSET#
########
import_stmt  :  'import'  import_list  %MARK%  endline  
 index is: 105, term type: to_deduce, before: import_list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 106  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 345, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#345  TERM#
###########


##########
#FROM SET#
##########
import_stmt  :  'import'  import_list  endline  %MARK%  
 index is: 106, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
import_stmt  :  'import'  import_list  endline  %MARK%  
 index is: 106, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#346  TERM#
###########


##########
#FROM SET#
##########
import_list  :  module_list  %MARK%  import_list@0_opt_2  import_list@0_opt_3  
 index is: 119, term type: to_deduce, before: module_list, after: import_list@0_opt_2
TARGET LIST: 
target index: 120  , change_value: import_list@0_opt_2
target index: 126  , change_value: %NULL%
target index: 127  , change_value: %NULL%

########
#SUBSET#
########
import_list  :  module_list  %MARK%  import_list@0_opt_2  import_list@0_opt_3  
 index is: 119, term type: to_deduce, before: module_list, after: import_list@0_opt_2
TARGET LIST: 
target index: 120  , change_value: import_list@0_opt_2
target index: 126  , change_value: %NULL%
target index: 127  , change_value: %NULL%

import_list@0_opt_2  :  %MARK%  
 index is: 126, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

import_list@0_opt_2  :  %MARK%  'as'  ID  
 index is: 127, term type: shift, before: %NULL%, after: 'as'
TARGET LIST: 
target index: 128  , change_value: 'as'

########
#TO SET#
########
index: 347, target_source: import_list@0_opt_2

index: 351, target_source: 'as'



###########
#347  TERM#
###########


##########
#FROM SET#
##########
import_list  :  module_list  import_list@0_opt_2  %MARK%  import_list@0_opt_3  
 index is: 120, term type: to_deduce, before: import_list@0_opt_2, after: import_list@0_opt_3
TARGET LIST: 
target index: 121  , change_value: import_list@0_opt_3
target index: 122  , change_value: %NULL%
target index: 123  , change_value: %NULL%

########
#SUBSET#
########
import_list  :  module_list  import_list@0_opt_2  %MARK%  import_list@0_opt_3  
 index is: 120, term type: to_deduce, before: import_list@0_opt_2, after: import_list@0_opt_3
TARGET LIST: 
target index: 121  , change_value: import_list@0_opt_3
target index: 122  , change_value: %NULL%
target index: 123  , change_value: %NULL%

import_list@0_opt_3  :  %MARK%  
 index is: 122, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

import_list@0_opt_3  :  %MARK%  ','  import_list  
 index is: 123, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 124  , change_value: ','

########
#TO SET#
########
index: 348, target_source: import_list@0_opt_3

index: 349, target_source: ','



###########
#348  TERM#
###########


##########
#FROM SET#
##########
import_list  :  module_list  import_list@0_opt_2  import_list@0_opt_3  %MARK%  
 index is: 121, term type: deduce, before: import_list@0_opt_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
import_list  :  module_list  import_list@0_opt_2  import_list@0_opt_3  %MARK%  
 index is: 121, term type: deduce, before: import_list@0_opt_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#349  TERM#
###########


##########
#FROM SET#
##########
import_list@0_opt_3  :  ','  %MARK%  import_list  
 index is: 124, term type: to_deduce, before: ',', after: import_list
TARGET LIST: 
target index: 118  , change_value: %NULL%
target index: 125  , change_value: import_list

########
#SUBSET#
########
import_list@0_opt_3  :  ','  %MARK%  import_list  
 index is: 124, term type: to_deduce, before: ',', after: import_list
TARGET LIST: 
target index: 118  , change_value: %NULL%
target index: 125  , change_value: import_list

import_list  :  %MARK%  module_list  import_list@0_opt_2  import_list@0_opt_3  
 index is: 118, term type: to_deduce, before: %NULL%, after: module_list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 119  , change_value: module_list

module_list  :  %MARK%  ID  module_list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 350, target_source: import_list

index: 346, target_source: module_list

index: 316, target_source: ID



###########
#350  TERM#
###########


##########
#FROM SET#
##########
import_list@0_opt_3  :  ','  import_list  %MARK%  
 index is: 125, term type: deduce, before: import_list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
import_list@0_opt_3  :  ','  import_list  %MARK%  
 index is: 125, term type: deduce, before: import_list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#351  TERM#
###########


##########
#FROM SET#
##########
import_list@0_opt_2  :  'as'  %MARK%  ID  
 index is: 128, term type: shift, before: 'as', after: ID
TARGET LIST: 
target index: 129  , change_value: ID

########
#SUBSET#
########
import_list@0_opt_2  :  'as'  %MARK%  ID  
 index is: 128, term type: shift, before: 'as', after: ID
TARGET LIST: 
target index: 129  , change_value: ID

########
#TO SET#
########
index: 352, target_source: ID



###########
#352  TERM#
###########


##########
#FROM SET#
##########
import_list@0_opt_2  :  'as'  ID  %MARK%  
 index is: 129, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
import_list@0_opt_2  :  'as'  ID  %MARK%  
 index is: 129, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#353  TERM#
###########


##########
#FROM SET#
##########
package_stmt  :  'package'  %MARK%  ID  endline  
 index is: 100, term type: shift, before: 'package', after: ID
TARGET LIST: 
target index: 101  , change_value: ID

########
#SUBSET#
########
package_stmt  :  'package'  %MARK%  ID  endline  
 index is: 100, term type: shift, before: 'package', after: ID
TARGET LIST: 
target index: 101  , change_value: ID

########
#TO SET#
########
index: 354, target_source: ID



###########
#354  TERM#
###########


##########
#FROM SET#
##########
package_stmt  :  'package'  ID  %MARK%  endline  
 index is: 101, term type: to_deduce, before: ID, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 102  , change_value: endline

########
#SUBSET#
########
package_stmt  :  'package'  ID  %MARK%  endline  
 index is: 101, term type: to_deduce, before: ID, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 102  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 355, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#355  TERM#
###########


##########
#FROM SET#
##########
package_stmt  :  'package'  ID  endline  %MARK%  
 index is: 102, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
package_stmt  :  'package'  ID  endline  %MARK%  
 index is: 102, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#356  TERM#
###########


##########
#FROM SET#
##########
control_stmt@0_decl_1  :  'continue'  %MARK%  
 index is: 394, term type: deduce, before: 'continue', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
control_stmt@0_decl_1  :  'continue'  %MARK%  
 index is: 394, term type: deduce, before: 'continue', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#357  TERM#
###########


##########
#FROM SET#
##########
control_stmt@0_decl_1  :  'break'  %MARK%  
 index is: 396, term type: deduce, before: 'break', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
control_stmt@0_decl_1  :  'break'  %MARK%  
 index is: 396, term type: deduce, before: 'break', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#358  TERM#
###########


##########
#FROM SET#
##########
switch_case  :  'case'  %MARK%  logic_or_expr  ENDL  stmts  'end'  ENDL  
 index is: 238, term type: to_deduce, before: 'case', after: logic_or_expr
TARGET LIST: 
target index: 239  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

########
#SUBSET#
########
switch_case  :  'case'  %MARK%  logic_or_expr  ENDL  stmts  'end'  ENDL  
 index is: 238, term type: to_deduce, before: 'case', after: logic_or_expr
TARGET LIST: 
target index: 239  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 359, target_source: logic_or_expr

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#359  TERM#
###########


##########
#FROM SET#
##########
switch_case  :  'case'  logic_or_expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 239, term type: shift, before: logic_or_expr, after: ENDL
TARGET LIST: 
target index: 240  , change_value: ENDL

########
#SUBSET#
########
switch_case  :  'case'  logic_or_expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 239, term type: shift, before: logic_or_expr, after: ENDL
TARGET LIST: 
target index: 240  , change_value: ENDL

########
#TO SET#
########
index: 360, target_source: ENDL



###########
#360  TERM#
###########


##########
#FROM SET#
##########
switch_case  :  'case'  logic_or_expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 240, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 241  , change_value: stmts

########
#SUBSET#
########
switch_case  :  'case'  logic_or_expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 240, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 241  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 361, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#361  TERM#
###########


##########
#FROM SET#
##########
switch_case  :  'case'  logic_or_expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 241, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 242  , change_value: 'end'

########
#SUBSET#
########
switch_case  :  'case'  logic_or_expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 241, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 242  , change_value: 'end'

########
#TO SET#
########
index: 362, target_source: 'end'



###########
#362  TERM#
###########


##########
#FROM SET#
##########
switch_case  :  'case'  logic_or_expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 242, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 243  , change_value: ENDL

########
#SUBSET#
########
switch_case  :  'case'  logic_or_expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 242, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 243  , change_value: ENDL

########
#TO SET#
########
index: 363, target_source: ENDL



###########
#363  TERM#
###########


##########
#FROM SET#
##########
switch_case  :  'case'  logic_or_expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 243, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch_case  :  'case'  logic_or_expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 243, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#364  TERM#
###########


##########
#FROM SET#
##########
lambda_body@0_rep_2@0_rep_2  :  ENDL  %MARK%  lambda_body@0_rep_2@0_rep_2  
 index is: 501, term type: to_deduce, before: ENDL, after: lambda_body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 499  , change_value: %NULL%
target index: 500  , change_value: %NULL%
target index: 502  , change_value: lambda_body@0_rep_2@0_rep_2

########
#SUBSET#
########
lambda_body@0_rep_2@0_rep_2  :  ENDL  %MARK%  lambda_body@0_rep_2@0_rep_2  
 index is: 501, term type: to_deduce, before: ENDL, after: lambda_body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 499  , change_value: %NULL%
target index: 500  , change_value: %NULL%
target index: 502  , change_value: lambda_body@0_rep_2@0_rep_2

lambda_body@0_rep_2@0_rep_2  :  %MARK%  
 index is: 499, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda_body@0_rep_2@0_rep_2  :  %MARK%  ENDL  lambda_body@0_rep_2@0_rep_2  
 index is: 500, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 501  , change_value: ENDL

########
#TO SET#
########
index: 365, target_source: lambda_body@0_rep_2@0_rep_2

index: 364, target_source: ENDL



###########
#365  TERM#
###########


##########
#FROM SET#
##########
lambda_body@0_rep_2@0_rep_2  :  ENDL  lambda_body@0_rep_2@0_rep_2  %MARK%  
 index is: 502, term type: deduce, before: lambda_body@0_rep_2@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda_body@0_rep_2@0_rep_2  :  ENDL  lambda_body@0_rep_2@0_rep_2  %MARK%  
 index is: 502, term type: deduce, before: lambda_body@0_rep_2@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#366  TERM#
###########


##########
#FROM SET#
##########
lambda_expr@0_opt_5  :  argument_list  %MARK%  
 index is: 451, term type: deduce, before: argument_list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda_expr@0_opt_5  :  argument_list  %MARK%  
 index is: 451, term type: deduce, before: argument_list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#367  TERM#
###########


##########
#FROM SET#
##########
argument_list  :  argument_list@1_opt_1  %MARK%  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 468, term type: shift, before: argument_list@1_opt_1, after: ID
TARGET LIST: 
target index: 469  , change_value: ID

########
#SUBSET#
########
argument_list  :  argument_list@1_opt_1  %MARK%  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 468, term type: shift, before: argument_list@1_opt_1, after: ID
TARGET LIST: 
target index: 469  , change_value: ID

########
#TO SET#
########
index: 368, target_source: ID



###########
#368  TERM#
###########


##########
#FROM SET#
##########
argument_list  :  argument_list@1_opt_1  ID  %MARK%  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 469, term type: to_deduce, before: ID, after: argument_list@1_opt_3
TARGET LIST: 
target index: 470  , change_value: argument_list@1_opt_3
target index: 481  , change_value: %NULL%
target index: 482  , change_value: %NULL%

########
#SUBSET#
########
argument_list  :  argument_list@1_opt_1  ID  %MARK%  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 469, term type: to_deduce, before: ID, after: argument_list@1_opt_3
TARGET LIST: 
target index: 470  , change_value: argument_list@1_opt_3
target index: 481  , change_value: %NULL%
target index: 482  , change_value: %NULL%

argument_list@1_opt_3  :  %MARK%  
 index is: 481, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument_list@1_opt_3  :  %MARK%  ':'  
 index is: 482, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 483  , change_value: ':'

########
#TO SET#
########
index: 369, target_source: argument_list@1_opt_3

index: 378, target_source: ':'



###########
#369  TERM#
###########


##########
#FROM SET#
##########
argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  %MARK%  visit_expr  argument_list@1_rep_5  
 index is: 470, term type: to_deduce, before: argument_list@1_opt_3, after: visit_expr
TARGET LIST: 
target index: 471  , change_value: visit_expr
target index: 641  , change_value: %NULL%

########
#SUBSET#
########
argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  %MARK%  visit_expr  argument_list@1_rep_5  
 index is: 470, term type: to_deduce, before: argument_list@1_opt_3, after: visit_expr
TARGET LIST: 
target index: 471  , change_value: visit_expr
target index: 641  , change_value: %NULL%

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 370, target_source: visit_expr

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#370  TERM#
###########


##########
#FROM SET#
##########
argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  %MARK%  argument_list@1_rep_5  
 index is: 471, term type: to_deduce, before: visit_expr, after: argument_list@1_rep_5
TARGET LIST: 
target index: 472  , change_value: argument_list@1_rep_5
target index: 476  , change_value: %NULL%
target index: 477  , change_value: %NULL%

########
#SUBSET#
########
argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  %MARK%  argument_list@1_rep_5  
 index is: 471, term type: to_deduce, before: visit_expr, after: argument_list@1_rep_5
TARGET LIST: 
target index: 472  , change_value: argument_list@1_rep_5
target index: 476  , change_value: %NULL%
target index: 477  , change_value: %NULL%

argument_list@1_rep_5  :  %MARK%  
 index is: 476, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument_list@1_rep_5  :  %MARK%  ','  argument_list  argument_list@1_rep_5  
 index is: 477, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 478  , change_value: ','

########
#TO SET#
########
index: 371, target_source: argument_list@1_rep_5

index: 372, target_source: ','



###########
#371  TERM#
###########


##########
#FROM SET#
##########
argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  %MARK%  
 index is: 472, term type: deduce, before: argument_list@1_rep_5, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument_list  :  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  %MARK%  
 index is: 472, term type: deduce, before: argument_list@1_rep_5, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#372  TERM#
###########


##########
#FROM SET#
##########
argument_list@1_rep_5  :  ','  %MARK%  argument_list  argument_list@1_rep_5  
 index is: 478, term type: to_deduce, before: ',', after: argument_list
TARGET LIST: 
target index: 467  , change_value: %NULL%
target index: 473  , change_value: %NULL%
target index: 479  , change_value: argument_list

########
#SUBSET#
########
argument_list@1_rep_5  :  ','  %MARK%  argument_list  argument_list@1_rep_5  
 index is: 478, term type: to_deduce, before: ',', after: argument_list
TARGET LIST: 
target index: 467  , change_value: %NULL%
target index: 473  , change_value: %NULL%
target index: 479  , change_value: argument_list

argument_list  :  %MARK%  argument_list@1_opt_1  ID  argument_list@1_opt_3  visit_expr  argument_list@1_rep_5  
 index is: 467, term type: to_deduce, before: %NULL%, after: argument_list@1_opt_1
TARGET LIST: 
target index: 468  , change_value: argument_list@1_opt_1
target index: 484  , change_value: %NULL%
target index: 485  , change_value: %NULL%

argument_list  :  %MARK%  '...'  ID  
 index is: 473, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 474  , change_value: '...'

argument_list@1_opt_1  :  %MARK%  
 index is: 484, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument_list@1_opt_1  :  %MARK%  '='  
 index is: 485, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 486  , change_value: '='

########
#TO SET#
########
index: 373, target_source: argument_list

index: 367, target_source: argument_list@1_opt_1

index: 375, target_source: '...'

index: 377, target_source: '='



###########
#373  TERM#
###########


##########
#FROM SET#
##########
argument_list@1_rep_5  :  ','  argument_list  %MARK%  argument_list@1_rep_5  
 index is: 479, term type: to_deduce, before: argument_list, after: argument_list@1_rep_5
TARGET LIST: 
target index: 476  , change_value: %NULL%
target index: 477  , change_value: %NULL%
target index: 480  , change_value: argument_list@1_rep_5

########
#SUBSET#
########
argument_list@1_rep_5  :  ','  argument_list  %MARK%  argument_list@1_rep_5  
 index is: 479, term type: to_deduce, before: argument_list, after: argument_list@1_rep_5
TARGET LIST: 
target index: 476  , change_value: %NULL%
target index: 477  , change_value: %NULL%
target index: 480  , change_value: argument_list@1_rep_5

argument_list@1_rep_5  :  %MARK%  
 index is: 476, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument_list@1_rep_5  :  %MARK%  ','  argument_list  argument_list@1_rep_5  
 index is: 477, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 478  , change_value: ','

########
#TO SET#
########
index: 374, target_source: argument_list@1_rep_5

index: 372, target_source: ','



###########
#374  TERM#
###########


##########
#FROM SET#
##########
argument_list@1_rep_5  :  ','  argument_list  argument_list@1_rep_5  %MARK%  
 index is: 480, term type: deduce, before: argument_list@1_rep_5, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument_list@1_rep_5  :  ','  argument_list  argument_list@1_rep_5  %MARK%  
 index is: 480, term type: deduce, before: argument_list@1_rep_5, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#375  TERM#
###########


##########
#FROM SET#
##########
argument_list  :  '...'  %MARK%  ID  
 index is: 474, term type: shift, before: '...', after: ID
TARGET LIST: 
target index: 475  , change_value: ID

########
#SUBSET#
########
argument_list  :  '...'  %MARK%  ID  
 index is: 474, term type: shift, before: '...', after: ID
TARGET LIST: 
target index: 475  , change_value: ID

########
#TO SET#
########
index: 376, target_source: ID



###########
#376  TERM#
###########


##########
#FROM SET#
##########
argument_list  :  '...'  ID  %MARK%  
 index is: 475, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument_list  :  '...'  ID  %MARK%  
 index is: 475, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#377  TERM#
###########


##########
#FROM SET#
##########
argument_list@1_opt_1  :  '='  %MARK%  
 index is: 486, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument_list@1_opt_1  :  '='  %MARK%  
 index is: 486, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#378  TERM#
###########


##########
#FROM SET#
##########
argument_list@1_opt_3  :  ':'  %MARK%  
 index is: 483, term type: deduce, before: ':', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument_list@1_opt_3  :  ':'  %MARK%  
 index is: 483, term type: deduce, before: ':', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#379  TERM#
###########


##########
#FROM SET#
##########
lambda_expr@0_opt_2  :  capture_list  %MARK%  
 index is: 454, term type: deduce, before: capture_list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda_expr@0_opt_2  :  capture_list  %MARK%  
 index is: 454, term type: deduce, before: capture_list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#380  TERM#
###########


##########
#FROM SET#
##########
capture_list  :  capture_list@0_opt_1  %MARK%  ID  capture_list@0_rep_3  
 index is: 456, term type: shift, before: capture_list@0_opt_1, after: ID
TARGET LIST: 
target index: 457  , change_value: ID

########
#SUBSET#
########
capture_list  :  capture_list@0_opt_1  %MARK%  ID  capture_list@0_rep_3  
 index is: 456, term type: shift, before: capture_list@0_opt_1, after: ID
TARGET LIST: 
target index: 457  , change_value: ID

########
#TO SET#
########
index: 381, target_source: ID



###########
#381  TERM#
###########


##########
#FROM SET#
##########
capture_list  :  capture_list@0_opt_1  ID  %MARK%  capture_list@0_rep_3  
 index is: 457, term type: to_deduce, before: ID, after: capture_list@0_rep_3
TARGET LIST: 
target index: 458  , change_value: capture_list@0_rep_3
target index: 459  , change_value: %NULL%
target index: 460  , change_value: %NULL%

########
#SUBSET#
########
capture_list  :  capture_list@0_opt_1  ID  %MARK%  capture_list@0_rep_3  
 index is: 457, term type: to_deduce, before: ID, after: capture_list@0_rep_3
TARGET LIST: 
target index: 458  , change_value: capture_list@0_rep_3
target index: 459  , change_value: %NULL%
target index: 460  , change_value: %NULL%

capture_list@0_rep_3  :  %MARK%  
 index is: 459, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture_list@0_rep_3  :  %MARK%  ','  capture_list  capture_list@0_rep_3  
 index is: 460, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 461  , change_value: ','

########
#TO SET#
########
index: 382, target_source: capture_list@0_rep_3

index: 383, target_source: ','



###########
#382  TERM#
###########


##########
#FROM SET#
##########
capture_list  :  capture_list@0_opt_1  ID  capture_list@0_rep_3  %MARK%  
 index is: 458, term type: deduce, before: capture_list@0_rep_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
capture_list  :  capture_list@0_opt_1  ID  capture_list@0_rep_3  %MARK%  
 index is: 458, term type: deduce, before: capture_list@0_rep_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#383  TERM#
###########


##########
#FROM SET#
##########
capture_list@0_rep_3  :  ','  %MARK%  capture_list  capture_list@0_rep_3  
 index is: 461, term type: to_deduce, before: ',', after: capture_list
TARGET LIST: 
target index: 455  , change_value: %NULL%
target index: 462  , change_value: capture_list

########
#SUBSET#
########
capture_list@0_rep_3  :  ','  %MARK%  capture_list  capture_list@0_rep_3  
 index is: 461, term type: to_deduce, before: ',', after: capture_list
TARGET LIST: 
target index: 455  , change_value: %NULL%
target index: 462  , change_value: capture_list

capture_list  :  %MARK%  capture_list@0_opt_1  ID  capture_list@0_rep_3  
 index is: 455, term type: to_deduce, before: %NULL%, after: capture_list@0_opt_1
TARGET LIST: 
target index: 456  , change_value: capture_list@0_opt_1
target index: 464  , change_value: %NULL%
target index: 465  , change_value: %NULL%

capture_list@0_opt_1  :  %MARK%  
 index is: 464, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture_list@0_opt_1  :  %MARK%  '='  
 index is: 465, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 466  , change_value: '='

########
#TO SET#
########
index: 384, target_source: capture_list

index: 380, target_source: capture_list@0_opt_1

index: 386, target_source: '='



###########
#384  TERM#
###########


##########
#FROM SET#
##########
capture_list@0_rep_3  :  ','  capture_list  %MARK%  capture_list@0_rep_3  
 index is: 462, term type: to_deduce, before: capture_list, after: capture_list@0_rep_3
TARGET LIST: 
target index: 459  , change_value: %NULL%
target index: 460  , change_value: %NULL%
target index: 463  , change_value: capture_list@0_rep_3

########
#SUBSET#
########
capture_list@0_rep_3  :  ','  capture_list  %MARK%  capture_list@0_rep_3  
 index is: 462, term type: to_deduce, before: capture_list, after: capture_list@0_rep_3
TARGET LIST: 
target index: 459  , change_value: %NULL%
target index: 460  , change_value: %NULL%
target index: 463  , change_value: capture_list@0_rep_3

capture_list@0_rep_3  :  %MARK%  
 index is: 459, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture_list@0_rep_3  :  %MARK%  ','  capture_list  capture_list@0_rep_3  
 index is: 460, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 461  , change_value: ','

########
#TO SET#
########
index: 385, target_source: capture_list@0_rep_3

index: 383, target_source: ','



###########
#385  TERM#
###########


##########
#FROM SET#
##########
capture_list@0_rep_3  :  ','  capture_list  capture_list@0_rep_3  %MARK%  
 index is: 463, term type: deduce, before: capture_list@0_rep_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
capture_list@0_rep_3  :  ','  capture_list  capture_list@0_rep_3  %MARK%  
 index is: 463, term type: deduce, before: capture_list@0_rep_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#386  TERM#
###########


##########
#FROM SET#
##########
capture_list@0_opt_1  :  '='  %MARK%  
 index is: 466, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
capture_list@0_opt_1  :  '='  %MARK%  
 index is: 466, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#387  TERM#
###########


##########
#FROM SET#
##########
mul_expr@0_opt_2@0_decl_1  :  '^'  %MARK%  
 index is: 584, term type: deduce, before: '^', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul_expr@0_opt_2@0_decl_1  :  '^'  %MARK%  
 index is: 584, term type: deduce, before: '^', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#388  TERM#
###########


##########
#FROM SET#
##########
mul_expr@0_opt_2@0_decl_1  :  '%'  %MARK%  
 index is: 586, term type: deduce, before: '%', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul_expr@0_opt_2@0_decl_1  :  '%'  %MARK%  
 index is: 586, term type: deduce, before: '%', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#389  TERM#
###########


##########
#FROM SET#
##########
mul_expr@0_opt_2@0_decl_1  :  '/'  %MARK%  
 index is: 588, term type: deduce, before: '/', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul_expr@0_opt_2@0_decl_1  :  '/'  %MARK%  
 index is: 588, term type: deduce, before: '/', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#390  TERM#
###########


##########
#FROM SET#
##########
mul_expr@0_opt_2@0_decl_1  :  '*'  %MARK%  
 index is: 590, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul_expr@0_opt_2@0_decl_1  :  '*'  %MARK%  
 index is: 590, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#391  TERM#
###########


##########
#FROM SET#
##########
add_expr@0_opt_2@0_decl_1  :  '-'  %MARK%  
 index is: 573, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add_expr@0_opt_2@0_decl_1  :  '-'  %MARK%  
 index is: 573, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#392  TERM#
###########


##########
#FROM SET#
##########
add_expr@0_opt_2@0_decl_1  :  '+'  %MARK%  
 index is: 575, term type: deduce, before: '+', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add_expr@0_opt_2@0_decl_1  :  '+'  %MARK%  
 index is: 575, term type: deduce, before: '+', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#393  TERM#
###########


##########
#FROM SET#
##########
relat_expr@0_opt_2@0_decl_1  :  '<='  %MARK%  
 index is: 558, term type: deduce, before: '<=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_expr@0_opt_2@0_decl_1  :  '<='  %MARK%  
 index is: 558, term type: deduce, before: '<=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#394  TERM#
###########


##########
#FROM SET#
##########
relat_expr@0_opt_2@0_decl_1  :  '>='  %MARK%  
 index is: 560, term type: deduce, before: '>=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_expr@0_opt_2@0_decl_1  :  '>='  %MARK%  
 index is: 560, term type: deduce, before: '>=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#395  TERM#
###########


##########
#FROM SET#
##########
relat_expr@0_opt_2@0_decl_1  :  '<'  %MARK%  
 index is: 562, term type: deduce, before: '<', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_expr@0_opt_2@0_decl_1  :  '<'  %MARK%  
 index is: 562, term type: deduce, before: '<', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#396  TERM#
###########


##########
#FROM SET#
##########
relat_expr@0_opt_2@0_decl_1  :  '>'  %MARK%  
 index is: 564, term type: deduce, before: '>', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat_expr@0_opt_2@0_decl_1  :  '>'  %MARK%  
 index is: 564, term type: deduce, before: '>', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#397  TERM#
###########


##########
#FROM SET#
##########
equal_expr@0_opt_2@0_decl_1  :  '!='  %MARK%  
 index is: 547, term type: deduce, before: '!=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal_expr@0_opt_2@0_decl_1  :  '!='  %MARK%  
 index is: 547, term type: deduce, before: '!=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#398  TERM#
###########


##########
#FROM SET#
##########
equal_expr@0_opt_2@0_decl_1  :  '=='  %MARK%  
 index is: 549, term type: deduce, before: '==', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal_expr@0_opt_2@0_decl_1  :  '=='  %MARK%  
 index is: 549, term type: deduce, before: '==', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#399  TERM#
###########


##########
#FROM SET#
##########
logic_and_expr@0_opt_2@0_decl_1  :  'and'  %MARK%  
 index is: 536, term type: deduce, before: 'and', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic_and_expr@0_opt_2@0_decl_1  :  'and'  %MARK%  
 index is: 536, term type: deduce, before: 'and', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#400  TERM#
###########


##########
#FROM SET#
##########
logic_and_expr@0_opt_2@0_decl_1  :  '&&'  %MARK%  
 index is: 538, term type: deduce, before: '&&', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic_and_expr@0_opt_2@0_decl_1  :  '&&'  %MARK%  
 index is: 538, term type: deduce, before: '&&', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#401  TERM#
###########


##########
#FROM SET#
##########
logic_or_expr@0_opt_2@0_decl_1  :  'or'  %MARK%  
 index is: 525, term type: deduce, before: 'or', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic_or_expr@0_opt_2@0_decl_1  :  'or'  %MARK%  
 index is: 525, term type: deduce, before: 'or', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#402  TERM#
###########


##########
#FROM SET#
##########
logic_or_expr@0_opt_2@0_decl_1  :  '||'  %MARK%  
 index is: 527, term type: deduce, before: '||', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic_or_expr@0_opt_2@0_decl_1  :  '||'  %MARK%  
 index is: 527, term type: deduce, before: '||', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#403  TERM#
###########


##########
#FROM SET#
##########
cond_postfix  :  '?'  %MARK%  logic_or_expr  ':'  cond_expr  
 index is: 513, term type: to_deduce, before: '?', after: logic_or_expr
TARGET LIST: 
target index: 514  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

########
#SUBSET#
########
cond_postfix  :  '?'  %MARK%  logic_or_expr  ':'  cond_expr  
 index is: 513, term type: to_deduce, before: '?', after: logic_or_expr
TARGET LIST: 
target index: 514  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 404, target_source: logic_or_expr

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#404  TERM#
###########


##########
#FROM SET#
##########
cond_postfix  :  '?'  logic_or_expr  %MARK%  ':'  cond_expr  
 index is: 514, term type: shift, before: logic_or_expr, after: ':'
TARGET LIST: 
target index: 515  , change_value: ':'

########
#SUBSET#
########
cond_postfix  :  '?'  logic_or_expr  %MARK%  ':'  cond_expr  
 index is: 514, term type: shift, before: logic_or_expr, after: ':'
TARGET LIST: 
target index: 515  , change_value: ':'

########
#TO SET#
########
index: 405, target_source: ':'



###########
#405  TERM#
###########


##########
#FROM SET#
##########
cond_postfix  :  '?'  logic_or_expr  ':'  %MARK%  cond_expr  
 index is: 515, term type: to_deduce, before: ':', after: cond_expr
TARGET LIST: 
target index: 503  , change_value: %NULL%
target index: 516  , change_value: cond_expr

########
#SUBSET#
########
cond_postfix  :  '?'  logic_or_expr  ':'  %MARK%  cond_expr  
 index is: 515, term type: to_deduce, before: ':', after: cond_expr
TARGET LIST: 
target index: 503  , change_value: %NULL%
target index: 516  , change_value: cond_expr

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 406, target_source: cond_expr

index: 77, target_source: logic_or_expr

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#406  TERM#
###########


##########
#FROM SET#
##########
cond_postfix  :  '?'  logic_or_expr  ':'  cond_expr  %MARK%  
 index is: 516, term type: deduce, before: cond_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
cond_postfix  :  '?'  logic_or_expr  ':'  cond_expr  %MARK%  
 index is: 516, term type: deduce, before: cond_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#407  TERM#
###########


##########
#FROM SET#
##########
asi_op  :  '^='  %MARK%  
 index is: 426, term type: deduce, before: '^=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi_op  :  '^='  %MARK%  
 index is: 426, term type: deduce, before: '^=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#408  TERM#
###########


##########
#FROM SET#
##########
asi_op  :  '%='  %MARK%  
 index is: 428, term type: deduce, before: '%=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi_op  :  '%='  %MARK%  
 index is: 428, term type: deduce, before: '%=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#409  TERM#
###########


##########
#FROM SET#
##########
asi_op  :  '/='  %MARK%  
 index is: 430, term type: deduce, before: '/=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi_op  :  '/='  %MARK%  
 index is: 430, term type: deduce, before: '/=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#410  TERM#
###########


##########
#FROM SET#
##########
asi_op  :  '*='  %MARK%  
 index is: 432, term type: deduce, before: '*=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi_op  :  '*='  %MARK%  
 index is: 432, term type: deduce, before: '*=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#411  TERM#
###########


##########
#FROM SET#
##########
asi_op  :  '-='  %MARK%  
 index is: 434, term type: deduce, before: '-=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi_op  :  '-='  %MARK%  
 index is: 434, term type: deduce, before: '-=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#412  TERM#
###########


##########
#FROM SET#
##########
asi_op  :  '+='  %MARK%  
 index is: 436, term type: deduce, before: '+=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi_op  :  '+='  %MARK%  
 index is: 436, term type: deduce, before: '+=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#413  TERM#
###########


##########
#FROM SET#
##########
asi_op  :  ':='  %MARK%  
 index is: 438, term type: deduce, before: ':=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi_op  :  ':='  %MARK%  
 index is: 438, term type: deduce, before: ':=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#414  TERM#
###########


##########
#FROM SET#
##########
asi_op  :  '='  %MARK%  
 index is: 440, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi_op  :  '='  %MARK%  
 index is: 440, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#415  TERM#
###########


##########
#FROM SET#
##########
function_body@0_decl_1  :  '{'  %MARK%  stmts  '}'  
 index is: 336, term type: to_deduce, before: '{', after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 337  , change_value: stmts

########
#SUBSET#
########
function_body@0_decl_1  :  '{'  %MARK%  stmts  '}'  
 index is: 336, term type: to_deduce, before: '{', after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 337  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr_stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr_stmt
TARGET LIST: 
target index: 45  , change_value: expr_stmt
target index: 397  , change_value: %NULL%

statement  :  %MARK%  class_stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class_stmt
TARGET LIST: 
target index: 47  , change_value: class_stmt
target index: 374  , change_value: %NULL%

statement  :  %MARK%  throw_stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw_stmt
TARGET LIST: 
target index: 49  , change_value: throw_stmt
target index: 367  , change_value: %NULL%

statement  :  %MARK%  try_stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try_stmt
TARGET LIST: 
target index: 51  , change_value: try_stmt
target index: 346  , change_value: %NULL%

statement  :  %MARK%  return_stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return_stmt
TARGET LIST: 
target index: 53  , change_value: return_stmt
target index: 339  , change_value: %NULL%

statement  :  %MARK%  function_stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function_stmt
TARGET LIST: 
target index: 55  , change_value: function_stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control_stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control_stmt
TARGET LIST: 
target index: 57  , change_value: control_stmt
target index: 390  , change_value: %NULL%

statement  :  %MARK%  foreach_stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach_stmt
TARGET LIST: 
target index: 59  , change_value: foreach_stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for_stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for_stmt
TARGET LIST: 
target index: 61  , change_value: for_stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop_stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop_stmt
TARGET LIST: 
target index: 63  , change_value: loop_stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while_stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while_stmt
TARGET LIST: 
target index: 65  , change_value: while_stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch_stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch_stmt
TARGET LIST: 
target index: 67  , change_value: switch_stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if_stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if_stmt
TARGET LIST: 
target index: 69  , change_value: if_stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using_stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using_stmt
TARGET LIST: 
target index: 71  , change_value: using_stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace_stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace_stmt
TARGET LIST: 
target index: 73  , change_value: namespace_stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block_stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block_stmt
TARGET LIST: 
target index: 75  , change_value: block_stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var_stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var_stmt
TARGET LIST: 
target index: 77  , change_value: var_stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import_stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import_stmt
TARGET LIST: 
target index: 79  , change_value: import_stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package_stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package_stmt
TARGET LIST: 
target index: 81  , change_value: package_stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep_stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep_stmt
TARGET LIST: 
target index: 83  , change_value: prep_stmt
target index: 96  , change_value: %NULL%

expr_stmt  :  %MARK%  expr  endline  
 index is: 397, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 398  , change_value: expr
target index: 403  , change_value: %NULL%

class_stmt  :  %MARK%  class_stmt@0_decl_1  ID  class_stmt@0_opt_3  ENDL  decl_stmts  'end'  ENDL  
 index is: 374, term type: to_deduce, before: %NULL%, after: class_stmt@0_decl_1
TARGET LIST: 
target index: 375  , change_value: class_stmt@0_decl_1
target index: 386  , change_value: %NULL%
target index: 388  , change_value: %NULL%

throw_stmt  :  %MARK%  'throw'  throw_stmt@0_opt_2  endline  
 index is: 367, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 368  , change_value: 'throw'

try_stmt  :  %MARK%  'try'  ENDL  stmts  try_stmt@0_rep_4  'end'  ENDL  
 index is: 346, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 347  , change_value: 'try'

return_stmt  :  %MARK%  'return'  return_stmt@0_opt_2  endline  
 index is: 339, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 340  , change_value: 'return'

function_stmt  :  %MARK%  'function'  ID  '('  function_stmt@0_opt_4  ')'  function_stmt@0_opt_6  function_body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control_stmt  :  %MARK%  control_stmt@0_decl_1  endline  
 index is: 390, term type: to_deduce, before: %NULL%, after: control_stmt@0_decl_1
TARGET LIST: 
target index: 391  , change_value: control_stmt@0_decl_1
target index: 393  , change_value: %NULL%
target index: 395  , change_value: %NULL%

foreach_stmt  :  %MARK%  'foreach'  ID  'in'  basic_expr  for_body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for_stmt  :  %MARK%  'for'  for_stmt@0_opt_2  for_stmt@0_decl_3  for_stmt@0_opt_4  for_stmt@0_decl_5  for_stmt@0_opt_6  for_body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop_stmt  :  %MARK%  'loop'  ENDL  stmts  loop_stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while_stmt  :  %MARK%  'while'  basic_expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch_stmt  :  %MARK%  'switch'  basic_expr  ENDL  switch_stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if_stmt  :  %MARK%  'if'  basic_expr  ENDL  stmts  if_stmt@0_rep_5  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using_stmt  :  %MARK%  'using'  using_list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace_stmt  :  %MARK%  'namespace'  ID  ENDL  decl_stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block_stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var_stmt  :  %MARK%  var_stmt@0_decl_1  var_def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var_stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var_stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import_stmt  :  %MARK%  'import'  import_list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package_stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep_stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single_expr  expr@0_opt_2  
 index is: 403, term type: to_deduce, before: %NULL%, after: single_expr
TARGET LIST: 
target index: 404  , change_value: single_expr
target index: 410  , change_value: %NULL%
target index: 412  , change_value: %NULL%

class_stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 386, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 387  , change_value: 'struct'

class_stmt@0_decl_1  :  %MARK%  'class'  
 index is: 388, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 389  , change_value: 'class'

control_stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 393, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 394  , change_value: 'continue'

control_stmt@0_decl_1  :  %MARK%  'break'  
 index is: 395, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 396  , change_value: 'break'

var_stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var_stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var_stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single_expr  :  %MARK%  basic_expr  
 index is: 410, term type: to_deduce, before: %NULL%, after: basic_expr
TARGET LIST: 
target index: 411  , change_value: basic_expr
target index: 414  , change_value: %NULL%
target index: 417  , change_value: %NULL%

single_expr  :  %MARK%  lambda_expr  
 index is: 412, term type: to_deduce, before: %NULL%, after: lambda_expr
TARGET LIST: 
target index: 413  , change_value: lambda_expr
target index: 441  , change_value: %NULL%

basic_expr  :  %MARK%  cond_expr  basic_expr@1_opt_2  
 index is: 414, term type: to_deduce, before: %NULL%, after: cond_expr
TARGET LIST: 
target index: 415  , change_value: cond_expr
target index: 503  , change_value: %NULL%

basic_expr  :  %MARK%  var_bind  '='  cond_expr  
 index is: 417, term type: to_deduce, before: %NULL%, after: var_bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 418  , change_value: var_bind

lambda_expr  :  %MARK%  '['  lambda_expr@0_opt_2  ']'  '('  lambda_expr@0_opt_5  ')'  lambda_body  
 index is: 441, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 442  , change_value: '['

cond_expr  :  %MARK%  logic_or_expr  cond_expr@0_opt_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: logic_or_expr
TARGET LIST: 
target index: 504  , change_value: logic_or_expr
target index: 517  , change_value: %NULL%

var_bind  :  %MARK%  '('  var_bind_list  var_bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic_or_expr  :  %MARK%  logic_and_expr  logic_or_expr@0_opt_2  
 index is: 517, term type: to_deduce, before: %NULL%, after: logic_and_expr
TARGET LIST: 
target index: 518  , change_value: logic_and_expr
target index: 528  , change_value: %NULL%

logic_and_expr  :  %MARK%  equal_expr  logic_and_expr@0_opt_2  
 index is: 528, term type: to_deduce, before: %NULL%, after: equal_expr
TARGET LIST: 
target index: 529  , change_value: equal_expr
target index: 539  , change_value: %NULL%

equal_expr  :  %MARK%  relat_expr  equal_expr@0_opt_2  
 index is: 539, term type: to_deduce, before: %NULL%, after: relat_expr
TARGET LIST: 
target index: 540  , change_value: relat_expr
target index: 550  , change_value: %NULL%

relat_expr  :  %MARK%  add_expr  relat_expr@0_opt_2  
 index is: 550, term type: to_deduce, before: %NULL%, after: add_expr
TARGET LIST: 
target index: 551  , change_value: add_expr
target index: 565  , change_value: %NULL%

add_expr  :  %MARK%  mul_expr  add_expr@0_opt_2  
 index is: 565, term type: to_deduce, before: %NULL%, after: mul_expr
TARGET LIST: 
target index: 566  , change_value: mul_expr
target index: 576  , change_value: %NULL%

mul_expr  :  %MARK%  unary_expr  mul_expr@0_opt_2  
 index is: 576, term type: to_deduce, before: %NULL%, after: unary_expr
TARGET LIST: 
target index: 577  , change_value: unary_expr
target index: 591  , change_value: %NULL%
target index: 594  , change_value: %NULL%
target index: 598  , change_value: %NULL%

unary_expr  :  %MARK%  prim_expr  unary_expr@2_opt_2  
 index is: 591, term type: to_deduce, before: %NULL%, after: prim_expr
TARGET LIST: 
target index: 592  , change_value: prim_expr
target index: 637  , change_value: %NULL%
target index: 639  , change_value: %NULL%

unary_expr  :  %MARK%  unary_expr@1_decl_1  unary_expr  unary_expr@1_opt_3  
 index is: 594, term type: to_deduce, before: %NULL%, after: unary_expr@1_decl_1
TARGET LIST: 
target index: 595  , change_value: unary_expr@1_decl_1
target index: 607  , change_value: %NULL%
target index: 609  , change_value: %NULL%

unary_expr  :  %MARK%  unary_op  unary_expr  
 index is: 598, term type: to_deduce, before: %NULL%, after: unary_op
TARGET LIST: 
target index: 599  , change_value: unary_op
target index: 611  , change_value: %NULL%
target index: 613  , change_value: %NULL%
target index: 615  , change_value: %NULL%
target index: 617  , change_value: %NULL%
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%
target index: 623  , change_value: %NULL%

prim_expr  :  %MARK%  constant  
 index is: 637, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 638  , change_value: constant
target index: 688  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: %NULL%
target index: 694  , change_value: %NULL%

prim_expr  :  %MARK%  visit_expr  
 index is: 639, term type: to_deduce, before: %NULL%, after: visit_expr
TARGET LIST: 
target index: 640  , change_value: visit_expr
target index: 641  , change_value: %NULL%

unary_expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 607, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 608  , change_value: 'gcnew'

unary_expr@1_decl_1  :  %MARK%  'new'  
 index is: 609, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 610  , change_value: 'new'

unary_op  :  %MARK%  '!'  
 index is: 611, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 612  , change_value: '!'

unary_op  :  %MARK%  '-'  
 index is: 613, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 614  , change_value: '-'

unary_op  :  %MARK%  '&'  
 index is: 615, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 616  , change_value: '&'

unary_op  :  %MARK%  '*'  
 index is: 617, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 618  , change_value: '*'

unary_op  :  %MARK%  '--'  
 index is: 619, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 620  , change_value: '--'

unary_op  :  %MARK%  '++'  
 index is: 621, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 622  , change_value: '++'

unary_op  :  %MARK%  'typeid'  
 index is: 623, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 624  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 688, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 689  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 690, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 691  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 692, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 693  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 694, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 695  , change_value: NUM

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 416, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr_stmt

index: 8, target_source: class_stmt

index: 9, target_source: throw_stmt

index: 10, target_source: try_stmt

index: 11, target_source: return_stmt

index: 12, target_source: function_stmt

index: 13, target_source: control_stmt

index: 14, target_source: foreach_stmt

index: 15, target_source: for_stmt

index: 16, target_source: loop_stmt

index: 17, target_source: while_stmt

index: 18, target_source: switch_stmt

index: 19, target_source: if_stmt

index: 20, target_source: using_stmt

index: 21, target_source: namespace_stmt

index: 22, target_source: block_stmt

index: 23, target_source: var_stmt

index: 24, target_source: import_stmt

index: 25, target_source: package_stmt

index: 26, target_source: prep_stmt

index: 27, target_source: expr

index: 31, target_source: class_stmt@0_decl_1

index: 60, target_source: 'throw'

index: 201, target_source: 'try'

index: 216, target_source: 'return'

index: 48, target_source: 'function'

index: 220, target_source: control_stmt@0_decl_1

index: 222, target_source: 'foreach'

index: 232, target_source: 'for'

index: 259, target_source: 'loop'

index: 269, target_source: 'while'

index: 275, target_source: 'switch'

index: 294, target_source: 'if'

index: 309, target_source: 'using'

index: 322, target_source: 'namespace'

index: 338, target_source: 'block'

index: 328, target_source: var_stmt@0_decl_1

index: 343, target_source: 'import'

index: 353, target_source: 'package'

index: 331, target_source: PREP

index: 64, target_source: single_expr

index: 333, target_source: 'struct'

index: 334, target_source: 'class'

index: 356, target_source: 'continue'

index: 357, target_source: 'break'

index: 335, target_source: 'constant'

index: 336, target_source: 'link'

index: 337, target_source: 'var'

index: 68, target_source: basic_expr

index: 69, target_source: lambda_expr

index: 70, target_source: cond_expr

index: 74, target_source: var_bind

index: 123, target_source: '['

index: 77, target_source: logic_or_expr

index: 163, target_source: '('

index: 82, target_source: logic_and_expr

index: 86, target_source: equal_expr

index: 90, target_source: relat_expr

index: 94, target_source: add_expr

index: 98, target_source: mul_expr

index: 102, target_source: unary_expr

index: 106, target_source: prim_expr

index: 115, target_source: unary_expr@1_decl_1

index: 132, target_source: unary_op

index: 134, target_source: constant

index: 135, target_source: visit_expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: '!'

index: 139, target_source: '-'

index: 140, target_source: '&'

index: 141, target_source: '*'

index: 142, target_source: '--'

index: 143, target_source: '++'

index: 144, target_source: 'typeid'

index: 145, target_source: 'false'

index: 146, target_source: 'true'

index: 147, target_source: 'null'

index: 148, target_source: NUM

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 191, target_source: ID



###########
#416  TERM#
###########


##########
#FROM SET#
##########
function_body@0_decl_1  :  '{'  stmts  %MARK%  '}'  
 index is: 337, term type: shift, before: stmts, after: '}'
TARGET LIST: 
target index: 338  , change_value: '}'

########
#SUBSET#
########
function_body@0_decl_1  :  '{'  stmts  %MARK%  '}'  
 index is: 337, term type: shift, before: stmts, after: '}'
TARGET LIST: 
target index: 338  , change_value: '}'

########
#TO SET#
########
index: 417, target_source: '}'



###########
#417  TERM#
###########


##########
#FROM SET#
##########
function_body@0_decl_1  :  '{'  stmts  '}'  %MARK%  
 index is: 338, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function_body@0_decl_1  :  '{'  stmts  '}'  %MARK%  
 index is: 338, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#418  TERM#
###########


##########
#FROM SET#
##########
function_stmt@0_opt_6  :  'override'  %MARK%  
 index is: 324, term type: deduce, before: 'override', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function_stmt@0_opt_6  :  'override'  %MARK%  
 index is: 324, term type: deduce, before: 'override', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#419  TERM#
###########


##########
#FROM SET#
##########
function_stmt@0_opt_4  :  argument_list  %MARK%  
 index is: 327, term type: deduce, before: argument_list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function_stmt@0_opt_4  :  argument_list  %MARK%  
 index is: 327, term type: deduce, before: argument_list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#420  TERM#
###########


##########
#FROM SET#
##########
decl_stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  decl_stmts@0_rep_1@0_rep_2  
 index is: 34, term type: to_deduce, before: ENDL, after: decl_stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%
target index: 35  , change_value: decl_stmts@0_rep_1@0_rep_2

########
#SUBSET#
########
decl_stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  decl_stmts@0_rep_1@0_rep_2  
 index is: 34, term type: to_deduce, before: ENDL, after: decl_stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%
target index: 35  , change_value: decl_stmts@0_rep_1@0_rep_2

decl_stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 32, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl_stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  decl_stmts@0_rep_1@0_rep_2  
 index is: 33, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 34  , change_value: ENDL

########
#TO SET#
########
index: 421, target_source: decl_stmts@0_rep_1@0_rep_2

index: 420, target_source: ENDL



###########
#421  TERM#
###########


##########
#FROM SET#
##########
decl_stmts@0_rep_1@0_rep_2  :  ENDL  decl_stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 35, term type: deduce, before: decl_stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
decl_stmts@0_rep_1@0_rep_2  :  ENDL  decl_stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 35, term type: deduce, before: decl_stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#422  TERM#
###########


##########
#FROM SET#
##########
class_stmt@0_opt_3  :  'extends'  %MARK%  visit_expr  
 index is: 384, term type: to_deduce, before: 'extends', after: visit_expr
TARGET LIST: 
target index: 385  , change_value: visit_expr
target index: 641  , change_value: %NULL%

########
#SUBSET#
########
class_stmt@0_opt_3  :  'extends'  %MARK%  visit_expr  
 index is: 384, term type: to_deduce, before: 'extends', after: visit_expr
TARGET LIST: 
target index: 385  , change_value: visit_expr
target index: 641  , change_value: %NULL%

visit_expr  :  %MARK%  object  visit_expr@0_opt_2  
 index is: 641, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 642  , change_value: object
target index: 652  , change_value: %NULL%
target index: 654  , change_value: %NULL%
target index: 656  , change_value: %NULL%
target index: 658  , change_value: %NULL%
target index: 660  , change_value: %NULL%
target index: 663  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 652, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 653  , change_value: CHAR

object  :  %MARK%  element  
 index is: 654, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 655  , change_value: element
target index: 672  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 656, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 657  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 658, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 659  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 660, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 661  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 663, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 664  , change_value: array
target index: 696  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 672, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 673  , change_value: element@0_decl_1
target index: 682  , change_value: %NULL%
target index: 686  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 696, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 697  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single_expr  ')'  
 index is: 682, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 683  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 686, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 687  , change_value: ID

########
#TO SET#
########
index: 423, target_source: visit_expr

index: 149, target_source: object

index: 153, target_source: CHAR

index: 154, target_source: element

index: 155, target_source: 'global'

index: 156, target_source: 'local'

index: 157, target_source: STR

index: 178, target_source: array

index: 181, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: '('

index: 191, target_source: ID



###########
#423  TERM#
###########


##########
#FROM SET#
##########
class_stmt@0_opt_3  :  'extends'  visit_expr  %MARK%  
 index is: 385, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
class_stmt@0_opt_3  :  'extends'  visit_expr  %MARK%  
 index is: 385, term type: deduce, before: visit_expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#424  TERM#
###########


##########
#FROM SET#
##########
stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  stmts@0_rep_1@0_rep_2  
 index is: 23, term type: to_deduce, before: ENDL, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%
target index: 24  , change_value: stmts@0_rep_1@0_rep_2

########
#SUBSET#
########
stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  stmts@0_rep_1@0_rep_2  
 index is: 23, term type: to_deduce, before: ENDL, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%
target index: 24  , change_value: stmts@0_rep_1@0_rep_2

stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 21, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  stmts@0_rep_1@0_rep_2  
 index is: 22, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 23  , change_value: ENDL

########
#TO SET#
########
index: 425, target_source: stmts@0_rep_1@0_rep_2

index: 424, target_source: ENDL



###########
#425  TERM#
###########


##########
#FROM SET#
##########
stmts@0_rep_1@0_rep_2  :  ENDL  stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 24, term type: deduce, before: stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
stmts@0_rep_1@0_rep_2  :  ENDL  stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 24, term type: deduce, before: stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########





########
LOG INFO
########
0  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
4  has shift-deduce conflict(MAY HAVE CONFILICT)
stmts@0_rep_1@0_rep_2   stmts@0_rep_1@0_rep_2 shift-deduce conflict
5  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
32  has shift-deduce conflict(MAY HAVE CONFILICT)
class_stmt@0_opt_3   class_stmt@0_opt_3 shift-deduce(NOT CONFLICT)
34  has shift-deduce conflict(MAY HAVE CONFILICT)
function_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
using_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
namespace_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
prep_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
39  has shift-deduce conflict(MAY HAVE CONFILICT)
decl_stmts@0_rep_1@0_rep_2   decl_stmts@0_rep_1@0_rep_2 shift-deduce(NOT CONFLICT)
40  has shift-deduce conflict(MAY HAVE CONFILICT)
function_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
using_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
namespace_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
prep_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
50  has deduce-deduce conflict(MAY HAVE CONFILICT)
	function_stmt@0_opt_4   argument_list@1_opt_1 deduce-deduce (NOT CONFLICT)
50  has shift-deduce conflict(MAY HAVE CONFILICT)
argument_list   function_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
argument_list   argument_list@1_opt_1 shift-deduce(NOT CONFLICT)
argument_list@1_opt_1   function_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
argument_list@1_opt_1   argument_list@1_opt_1 shift-deduce(NOT CONFLICT)
52  has shift-deduce conflict(MAY HAVE CONFILICT)
function_stmt@0_opt_6   function_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
56  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
60  has shift-deduce conflict(MAY HAVE CONFILICT)
lambda_expr   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
var_bind   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
constant   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
constant   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
constant   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
constant   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
object   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
object   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
object   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
object   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
array   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   throw_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
64  has shift-deduce conflict(MAY HAVE CONFILICT)
expr@0_opt_2   expr@0_opt_2 shift-deduce(NOT CONFLICT)
70  has shift-deduce conflict(MAY HAVE CONFILICT)
asi_op   basic_expr@1_opt_2 shift-deduce(NOT CONFLICT)
asi_op   basic_expr@1_opt_2 shift-deduce(NOT CONFLICT)
asi_op   basic_expr@1_opt_2 shift-deduce(NOT CONFLICT)
asi_op   basic_expr@1_opt_2 shift-deduce(NOT CONFLICT)
asi_op   basic_expr@1_opt_2 shift-deduce(NOT CONFLICT)
asi_op   basic_expr@1_opt_2 shift-deduce(NOT CONFLICT)
asi_op   basic_expr@1_opt_2 shift-deduce(NOT CONFLICT)
asi_op   basic_expr@1_opt_2 shift-deduce(NOT CONFLICT)
77  has shift-deduce conflict(MAY HAVE CONFILICT)
cond_postfix   cond_expr@0_opt_2 shift-deduce(NOT CONFLICT)
cond_postfix   cond_expr@0_opt_2 shift-deduce(NOT CONFLICT)
82  has shift-deduce conflict(MAY HAVE CONFILICT)
logic_or_expr@0_opt_2@0_decl_1   logic_or_expr@0_opt_2 shift-deduce(NOT CONFLICT)
logic_or_expr@0_opt_2@0_decl_1   logic_or_expr@0_opt_2 shift-deduce(NOT CONFLICT)
86  has shift-deduce conflict(MAY HAVE CONFILICT)
logic_and_expr@0_opt_2@0_decl_1   logic_and_expr@0_opt_2 shift-deduce(NOT CONFLICT)
logic_and_expr@0_opt_2@0_decl_1   logic_and_expr@0_opt_2 shift-deduce(NOT CONFLICT)
90  has shift-deduce conflict(MAY HAVE CONFILICT)
equal_expr@0_opt_2@0_decl_1   equal_expr@0_opt_2 shift-deduce(NOT CONFLICT)
equal_expr@0_opt_2@0_decl_1   equal_expr@0_opt_2 shift-deduce(NOT CONFLICT)
94  has shift-deduce conflict(MAY HAVE CONFILICT)
relat_expr@0_opt_2@0_decl_1   relat_expr@0_opt_2 shift-deduce(NOT CONFLICT)
relat_expr@0_opt_2@0_decl_1   relat_expr@0_opt_2 shift-deduce(NOT CONFLICT)
relat_expr@0_opt_2@0_decl_1   relat_expr@0_opt_2 shift-deduce(NOT CONFLICT)
relat_expr@0_opt_2@0_decl_1   relat_expr@0_opt_2 shift-deduce(NOT CONFLICT)
98  has shift-deduce conflict(MAY HAVE CONFILICT)
add_expr@0_opt_2@0_decl_1   add_expr@0_opt_2 shift-deduce(NOT CONFLICT)
add_expr@0_opt_2@0_decl_1   add_expr@0_opt_2 shift-deduce(NOT CONFLICT)
102  has shift-deduce conflict(MAY HAVE CONFILICT)
mul_expr@0_opt_2@0_decl_1   mul_expr@0_opt_2 shift-deduce(NOT CONFLICT)
mul_expr@0_opt_2@0_decl_1   mul_expr@0_opt_2 shift-deduce(NOT CONFLICT)
mul_expr@0_opt_2@0_decl_1   mul_expr@0_opt_2 shift-deduce(NOT CONFLICT)
mul_expr@0_opt_2@0_decl_1   mul_expr@0_opt_2 shift-deduce(NOT CONFLICT)
106  has shift-deduce conflict(MAY HAVE CONFILICT)
postfix_expr@0_decl_1   unary_expr@2_opt_2 shift-deduce(NOT CONFLICT)
postfix_expr@0_decl_1   unary_expr@2_opt_2 shift-deduce(NOT CONFLICT)
postfix_expr@0_decl_1   unary_expr@2_opt_2 shift-deduce(NOT CONFLICT)
109  has shift-deduce conflict(MAY HAVE CONFILICT)
postfix_expr@0_decl_1   postfix_expr@0_opt_2 shift-deduce(NOT CONFLICT)
postfix_expr@0_decl_1   postfix_expr@0_opt_2 shift-deduce(NOT CONFLICT)
postfix_expr@0_decl_1   postfix_expr@0_opt_2 shift-deduce(NOT CONFLICT)
116  has shift-deduce conflict(MAY HAVE CONFILICT)
array   unary_expr@1_opt_3 shift-deduce conflict
119  has shift-deduce conflict(MAY HAVE CONFILICT)
lambda_expr   array@0_opt_2 shift-deduce(NOT CONFLICT)
var_bind   array@0_opt_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   array@0_opt_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   array@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   array@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   array@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   array@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   array@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   array@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   array@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   array@0_opt_2 shift-deduce(NOT CONFLICT)
constant   array@0_opt_2 shift-deduce(NOT CONFLICT)
constant   array@0_opt_2 shift-deduce(NOT CONFLICT)
constant   array@0_opt_2 shift-deduce(NOT CONFLICT)
constant   array@0_opt_2 shift-deduce(NOT CONFLICT)
object   array@0_opt_2 shift-deduce(NOT CONFLICT)
object   array@0_opt_2 shift-deduce(NOT CONFLICT)
object   array@0_opt_2 shift-deduce(NOT CONFLICT)
object   array@0_opt_2 shift-deduce(NOT CONFLICT)
array   array@0_opt_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   array@0_opt_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   array@0_opt_2 shift-deduce(NOT CONFLICT)
123  has deduce-deduce conflict(MAY HAVE CONFILICT)
	lambda_expr@0_opt_2   capture_list@0_opt_1 deduce-deduce (NOT CONFLICT)
123  has shift-deduce conflict(MAY HAVE CONFILICT)
capture_list@0_opt_1   lambda_expr@0_opt_2 shift-deduce(NOT CONFLICT)
capture_list@0_opt_1   capture_list@0_opt_1 shift-deduce(NOT CONFLICT)
126  has deduce-deduce conflict(MAY HAVE CONFILICT)
	lambda_expr@0_opt_5   argument_list@1_opt_1 deduce-deduce (NOT CONFLICT)
126  has shift-deduce conflict(MAY HAVE CONFILICT)
argument_list   lambda_expr@0_opt_5 shift-deduce(NOT CONFLICT)
argument_list   argument_list@1_opt_1 shift-deduce(NOT CONFLICT)
argument_list@1_opt_1   lambda_expr@0_opt_5 shift-deduce(NOT CONFLICT)
argument_list@1_opt_1   argument_list@1_opt_1 shift-deduce(NOT CONFLICT)
149  has shift-deduce conflict(MAY HAVE CONFILICT)
visit_expr@0_opt_2@0_decl_1   visit_expr@0_opt_2 shift-deduce(NOT CONFLICT)
visit_expr@0_opt_2@0_decl_1   visit_expr@0_opt_2 shift-deduce(NOT CONFLICT)
157  has shift-deduce conflict(MAY HAVE CONFILICT)
index   object@1_opt_2 shift-deduce(NOT CONFLICT)
164  has shift-deduce conflict(MAY HAVE CONFILICT)
var_bind@0_rep_3   var_bind@0_rep_3 shift-deduce(NOT CONFLICT)
168  has shift-deduce conflict(MAY HAVE CONFILICT)
var_bind@0_rep_3   var_bind@0_rep_3 shift-deduce(NOT CONFLICT)
176  has shift-deduce conflict(MAY HAVE CONFILICT)
basic_expr   var_bind_list shift-deduce(NOT CONFLICT)
177  has deduce-deduce conflict(MAY HAVE CONFILICT)
	var_bind_list   element@0_decl_1 deduce-deduce conflict
178  has shift-deduce conflict(MAY HAVE CONFILICT)
index   object@0_opt_2 shift-deduce(NOT CONFLICT)
181  has shift-deduce conflict(MAY HAVE CONFILICT)
index   element@0_rep_2 shift-deduce(NOT CONFLICT)
fcall   element@0_rep_2 shift-deduce(NOT CONFLICT)
183  has shift-deduce conflict(MAY HAVE CONFILICT)
index   element@0_rep_2 shift-deduce(NOT CONFLICT)
fcall   element@0_rep_2 shift-deduce(NOT CONFLICT)
185  has shift-deduce conflict(MAY HAVE CONFILICT)
index   element@0_rep_2 shift-deduce(NOT CONFLICT)
fcall   element@0_rep_2 shift-deduce(NOT CONFLICT)
187  has shift-deduce conflict(MAY HAVE CONFILICT)
lambda_expr   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
var_bind   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
constant   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
constant   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
constant   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
constant   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
object   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
object   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
object   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
object   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
array   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   fcall@0_opt_2 shift-deduce(NOT CONFLICT)
195  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
try_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
return_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
function_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
foreach_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
for_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
loop_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
while_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
switch_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
if_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
using_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
namespace_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
block_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
import_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
package_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
prep_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
control_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
control_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
lambda_expr   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
var_bind   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
constant   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
constant   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
constant   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
constant   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
object   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
object   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
object   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
object   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
array   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
198  has shift-deduce conflict(MAY HAVE CONFILICT)
lambda_body@0_rep_2@0_rep_2   lambda_body@0_rep_2@0_rep_2 shift-deduce(NOT CONFLICT)
199  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
try_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
return_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
function_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
foreach_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
for_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
loop_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
while_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
switch_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
if_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
using_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
namespace_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
block_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
import_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
package_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
prep_stmt   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
control_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
control_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
lambda_expr   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
var_bind   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
unary_op   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
constant   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
constant   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
constant   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
constant   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
object   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
object   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
object   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
object   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
array   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   lambda_body@0_rep_2 shift-deduce(NOT CONFLICT)
202  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
203  has shift-deduce conflict(MAY HAVE CONFILICT)
catch_stmt   try_stmt@0_rep_4 shift-deduce(NOT CONFLICT)
207  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
208  has shift-deduce conflict(MAY HAVE CONFILICT)
catch_stmt   try_stmt@0_rep_4 shift-deduce(NOT CONFLICT)
211  has shift-deduce conflict(MAY HAVE CONFILICT)
catch_stmt@0_opt_3   catch_stmt@0_opt_3 shift-deduce(NOT CONFLICT)
216  has shift-deduce conflict(MAY HAVE CONFILICT)
lambda_expr   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
var_bind   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
unary_op   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
constant   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
constant   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
constant   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
constant   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
object   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
object   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
object   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
object   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
array   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
element@0_decl_1   return_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
228  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
232  has shift-deduce conflict(MAY HAVE CONFILICT)
var_list   for_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
var_bind   for_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
234  has shift-deduce conflict(MAY HAVE CONFILICT)
var_bind   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
constant   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
constant   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
constant   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
constant   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
object   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
object   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
object   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
object   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
array   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
element@0_decl_1   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
element@0_decl_1   for_stmt@0_opt_4 shift-deduce(NOT CONFLICT)
236  has shift-deduce conflict(MAY HAVE CONFILICT)
var_bind   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
unary_expr@1_decl_1   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
unary_op   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
constant   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
constant   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
constant   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
constant   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
object   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
object   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
object   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
object   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
array   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
element@0_decl_1   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
element@0_decl_1   for_stmt@0_opt_6 shift-deduce(NOT CONFLICT)
255  has shift-deduce conflict(MAY HAVE CONFILICT)
var_list@0_opt_4   var_list@0_opt_4 shift-deduce conflict
260  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
271  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
277  has shift-deduce conflict(MAY HAVE CONFILICT)
switch_default   switch_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
switch_case   switch_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
281  has shift-deduce conflict(MAY HAVE CONFILICT)
switch_stmts@0_rep_2   switch_stmts@0_rep_2 shift-deduce(NOT CONFLICT)
283  has shift-deduce conflict(MAY HAVE CONFILICT)
switch_stmts@0_rep_2   switch_stmts@0_rep_2 shift-deduce(NOT CONFLICT)
285  has shift-deduce conflict(MAY HAVE CONFILICT)
switch_default   switch_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
switch_case   switch_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
287  has shift-deduce conflict(MAY HAVE CONFILICT)
switch_default   switch_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
switch_case   switch_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
290  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
296  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
297  has shift-deduce conflict(MAY HAVE CONFILICT)
else_stmt   if_stmt@0_rep_5 shift-deduce conflict
299  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
302  has shift-deduce conflict(MAY HAVE CONFILICT)
else_stmt   if_stmt@0_rep_5 shift-deduce conflict
304  has shift-deduce conflict(MAY HAVE CONFILICT)
else_stmt@0_opt_2   else_stmt@0_opt_2 shift-deduce(NOT CONFLICT)
312  has shift-deduce conflict(MAY HAVE CONFILICT)
using_list@0_opt_2   using_list@0_opt_2 shift-deduce(NOT CONFLICT)
316  has shift-deduce conflict(MAY HAVE CONFILICT)
module_list@0_opt_2   module_list@0_opt_2 shift-deduce(NOT CONFLICT)
324  has shift-deduce conflict(MAY HAVE CONFILICT)
function_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
using_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
namespace_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
prep_stmt   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
class_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
var_stmt@0_decl_1   decl_stmts@0_rep_1 shift-deduce(NOT CONFLICT)
339  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
346  has shift-deduce conflict(MAY HAVE CONFILICT)
import_list@0_opt_2   import_list@0_opt_2 shift-deduce(NOT CONFLICT)
347  has shift-deduce conflict(MAY HAVE CONFILICT)
import_list@0_opt_3   import_list@0_opt_3 shift-deduce(NOT CONFLICT)
360  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
364  has shift-deduce conflict(MAY HAVE CONFILICT)
lambda_body@0_rep_2@0_rep_2   lambda_body@0_rep_2@0_rep_2 shift-deduce(NOT CONFLICT)
368  has shift-deduce conflict(MAY HAVE CONFILICT)
argument_list@1_opt_3   argument_list@1_opt_3 shift-deduce(NOT CONFLICT)
370  has shift-deduce conflict(MAY HAVE CONFILICT)
argument_list@1_rep_5   argument_list@1_rep_5 shift-deduce conflict
372  has shift-deduce conflict(MAY HAVE CONFILICT)
argument_list   argument_list@1_opt_1 shift-deduce(NOT CONFLICT)
argument_list@1_opt_1   argument_list@1_opt_1 shift-deduce(NOT CONFLICT)
373  has shift-deduce conflict(MAY HAVE CONFILICT)
argument_list@1_rep_5   argument_list@1_rep_5 shift-deduce conflict
381  has shift-deduce conflict(MAY HAVE CONFILICT)
capture_list@0_rep_3   capture_list@0_rep_3 shift-deduce conflict
383  has shift-deduce conflict(MAY HAVE CONFILICT)
capture_list@0_opt_1   capture_list@0_opt_1 shift-deduce(NOT CONFLICT)
384  has shift-deduce conflict(MAY HAVE CONFILICT)
capture_list@0_rep_3   capture_list@0_rep_3 shift-deduce conflict
415  has shift-deduce conflict(MAY HAVE CONFILICT)
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
420  has shift-deduce conflict(MAY HAVE CONFILICT)
decl_stmts@0_rep_1@0_rep_2   decl_stmts@0_rep_1@0_rep_2 shift-deduce(NOT CONFLICT)
424  has shift-deduce conflict(MAY HAVE CONFILICT)
stmts@0_rep_1@0_rep_2   stmts@0_rep_1@0_rep_2 shift-deduce conflict



##########
ERROR INFO
##########
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
stmts@0_rep_1@0_rep_2   stmts@0_rep_1@0_rep_2 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
array   unary_expr@1_opt_3 shift-deduce conflict
177    var_bind_list   element@0_decl_1 deduce-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_list@0_opt_4   var_list@0_opt_4 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
else_stmt   if_stmt@0_rep_5 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
else_stmt   if_stmt@0_rep_5 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
argument_list@1_rep_5   argument_list@1_rep_5 shift-deduce conflict
argument_list@1_rep_5   argument_list@1_rep_5 shift-deduce conflict
capture_list@0_rep_3   capture_list@0_rep_3 shift-deduce conflict
capture_list@0_rep_3   capture_list@0_rep_3 shift-deduce conflict
throw_stmt   stmts@0_rep_1 shift-deduce conflict
try_stmt   stmts@0_rep_1 shift-deduce conflict
return_stmt   stmts@0_rep_1 shift-deduce conflict
function_stmt   stmts@0_rep_1 shift-deduce conflict
foreach_stmt   stmts@0_rep_1 shift-deduce conflict
for_stmt   stmts@0_rep_1 shift-deduce conflict
loop_stmt   stmts@0_rep_1 shift-deduce conflict
while_stmt   stmts@0_rep_1 shift-deduce conflict
switch_stmt   stmts@0_rep_1 shift-deduce conflict
if_stmt   stmts@0_rep_1 shift-deduce conflict
using_stmt   stmts@0_rep_1 shift-deduce conflict
namespace_stmt   stmts@0_rep_1 shift-deduce conflict
block_stmt   stmts@0_rep_1 shift-deduce conflict
import_stmt   stmts@0_rep_1 shift-deduce conflict
package_stmt   stmts@0_rep_1 shift-deduce conflict
prep_stmt   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
class_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
control_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
var_stmt@0_decl_1   stmts@0_rep_1 shift-deduce conflict
lambda_expr   stmts@0_rep_1 shift-deduce conflict
var_bind   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_expr@1_decl_1   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
unary_op   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
constant   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
object   stmts@0_rep_1 shift-deduce conflict
array   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
element@0_decl_1   stmts@0_rep_1 shift-deduce conflict
stmts@0_rep_1@0_rep_2   stmts@0_rep_1@0_rep_2 shift-deduce conflict



####################
CREATE PREDICT TABLE
####################



##################
SHOW PREDICT TABLE
##################
State 0 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	begin :  1;
	stmts :  2;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	'if' :  294;
	'(' :  163;
	class_stmt :  8;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 1 : 
	%END% :  -1;

State 2 : 
	%END% : begin ::=  stmts;

State 3 : 
	'(' : stmts ::=  stmts@0_rep_1;
	CHAR : stmts ::=  stmts@0_rep_1;
	'gcnew' : stmts ::=  stmts@0_rep_1;
	'return' : stmts ::=  stmts@0_rep_1;
	'*' : stmts ::=  stmts@0_rep_1;
	'using' : stmts ::=  stmts@0_rep_1;
	NUM : stmts ::=  stmts@0_rep_1;
	'for' : stmts ::=  stmts@0_rep_1;
	%END% : stmts ::=  stmts@0_rep_1;
	'null' : stmts ::=  stmts@0_rep_1;
	'foreach' : stmts ::=  stmts@0_rep_1;
	'false' : stmts ::=  stmts@0_rep_1;
	'while' : stmts ::=  stmts@0_rep_1;
	ENDL : stmts ::=  stmts@0_rep_1;
	'local' : stmts ::=  stmts@0_rep_1;
	STR : stmts ::=  stmts@0_rep_1;
	'}' : stmts ::=  stmts@0_rep_1;
	'{' : stmts ::=  stmts@0_rep_1;
	'package' : stmts ::=  stmts@0_rep_1;
	'-' : stmts ::=  stmts@0_rep_1;
	'end' : stmts ::=  stmts@0_rep_1;
	'block' : stmts ::=  stmts@0_rep_1;
	'function' : stmts ::=  stmts@0_rep_1;
	'import' : stmts ::=  stmts@0_rep_1;
	PREP : stmts ::=  stmts@0_rep_1;
	'catch' : stmts ::=  stmts@0_rep_1;
	'until' : stmts ::=  stmts@0_rep_1;
	'--' : stmts ::=  stmts@0_rep_1;
	'[' : stmts ::=  stmts@0_rep_1;
	'switch' : stmts ::=  stmts@0_rep_1;
	'true' : stmts ::=  stmts@0_rep_1;
	'global' : stmts ::=  stmts@0_rep_1;
	'namespace' : stmts ::=  stmts@0_rep_1;
	'new' : stmts ::=  stmts@0_rep_1;
	'++' : stmts ::=  stmts@0_rep_1;
	'link' : stmts ::=  stmts@0_rep_1;
	'break' : stmts ::=  stmts@0_rep_1;
	'continue' : stmts ::=  stmts@0_rep_1;
	'typeid' : stmts ::=  stmts@0_rep_1;
	'struct' : stmts ::=  stmts@0_rep_1;
	'try' : stmts ::=  stmts@0_rep_1;
	'!' : stmts ::=  stmts@0_rep_1;
	ID : stmts ::=  stmts@0_rep_1;
	'var' : stmts ::=  stmts@0_rep_1;
	'&' : stmts ::=  stmts@0_rep_1;
	'class' : stmts ::=  stmts@0_rep_1;
	'else' : stmts ::=  stmts@0_rep_1;
	'loop' : stmts ::=  stmts@0_rep_1;
	'constant' : stmts ::=  stmts@0_rep_1;
	'throw' : stmts ::=  stmts@0_rep_1;
	'if' : stmts ::=  stmts@0_rep_1;

State 4 : 
	CHAR : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'(' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'gcnew' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'return' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'*' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'using' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'false' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	NUM : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'null' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'foreach' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'for' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	%END% : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'local' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'while' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	ENDL :  424;
	STR : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'}' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'{' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'package' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'-' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'function' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'block' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'end' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'import' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	PREP : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'until' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'[' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'--' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'switch' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'true' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'global' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'catch' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'namespace' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'new' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'++' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'break' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'link' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'continue' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'typeid' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'struct' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'try' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'else' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'!' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	ID : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'&' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'var' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'class' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'loop' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	stmts@0_rep_1@0_rep_2 :  5;
	'throw' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'constant' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'if' : stmts@0_rep_1@0_rep_2 ::=  NULL;

State 5 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  6;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 6 : 
	'(' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	CHAR : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'gcnew' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'return' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'*' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'using' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	NUM : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'for' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	%END% : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'null' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'foreach' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'false' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'while' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	ENDL : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'local' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	STR : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'}' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'{' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'package' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'-' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'end' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'block' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'function' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'import' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	PREP : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'catch' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'until' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'--' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'[' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'switch' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'true' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'global' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'namespace' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'new' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'++' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'link' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'break' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'continue' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'typeid' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'struct' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'try' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'!' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	ID : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'var' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'&' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'class' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'else' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'loop' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'constant' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'throw' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;
	'if' : stmts@0_rep_1 ::=  statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1;

State 7 : 
	'(' : statement ::=  expr_stmt;
	CHAR : statement ::=  expr_stmt;
	'gcnew' : statement ::=  expr_stmt;
	'return' : statement ::=  expr_stmt;
	'*' : statement ::=  expr_stmt;
	'using' : statement ::=  expr_stmt;
	NUM : statement ::=  expr_stmt;
	'for' : statement ::=  expr_stmt;
	'null' : statement ::=  expr_stmt;
	'foreach' : statement ::=  expr_stmt;
	'false' : statement ::=  expr_stmt;
	%END% : statement ::=  expr_stmt;
	'while' : statement ::=  expr_stmt;
	'local' : statement ::=  expr_stmt;
	ENDL : statement ::=  expr_stmt;
	STR : statement ::=  expr_stmt;
	'}' : statement ::=  expr_stmt;
	'{' : statement ::=  expr_stmt;
	'package' : statement ::=  expr_stmt;
	'-' : statement ::=  expr_stmt;
	'block' : statement ::=  expr_stmt;
	'function' : statement ::=  expr_stmt;
	'end' : statement ::=  expr_stmt;
	'import' : statement ::=  expr_stmt;
	PREP : statement ::=  expr_stmt;
	'catch' : statement ::=  expr_stmt;
	'--' : statement ::=  expr_stmt;
	'[' : statement ::=  expr_stmt;
	'switch' : statement ::=  expr_stmt;
	'true' : statement ::=  expr_stmt;
	'global' : statement ::=  expr_stmt;
	'until' : statement ::=  expr_stmt;
	'namespace' : statement ::=  expr_stmt;
	'new' : statement ::=  expr_stmt;
	'++' : statement ::=  expr_stmt;
	'link' : statement ::=  expr_stmt;
	'break' : statement ::=  expr_stmt;
	'continue' : statement ::=  expr_stmt;
	'typeid' : statement ::=  expr_stmt;
	'struct' : statement ::=  expr_stmt;
	'try' : statement ::=  expr_stmt;
	'!' : statement ::=  expr_stmt;
	ID : statement ::=  expr_stmt;
	'var' : statement ::=  expr_stmt;
	'&' : statement ::=  expr_stmt;
	'class' : statement ::=  expr_stmt;
	'else' : statement ::=  expr_stmt;
	'loop' : statement ::=  expr_stmt;
	'constant' : statement ::=  expr_stmt;
	'throw' : statement ::=  expr_stmt;
	'if' : statement ::=  expr_stmt;

State 8 : 
	'(' : statement ::=  class_stmt;
	CHAR : statement ::=  class_stmt;
	'gcnew' : statement ::=  class_stmt;
	'return' : statement ::=  class_stmt;
	'*' : statement ::=  class_stmt;
	'using' : statement ::=  class_stmt;
	NUM : statement ::=  class_stmt;
	'for' : statement ::=  class_stmt;
	'null' : statement ::=  class_stmt;
	'foreach' : statement ::=  class_stmt;
	'false' : statement ::=  class_stmt;
	%END% : statement ::=  class_stmt;
	'while' : statement ::=  class_stmt;
	'local' : statement ::=  class_stmt;
	ENDL : statement ::=  class_stmt;
	STR : statement ::=  class_stmt;
	'}' : statement ::=  class_stmt;
	'{' : statement ::=  class_stmt;
	'package' : statement ::=  class_stmt;
	'-' : statement ::=  class_stmt;
	'block' : statement ::=  class_stmt;
	'function' : statement ::=  class_stmt;
	'end' : statement ::=  class_stmt;
	'import' : statement ::=  class_stmt;
	PREP : statement ::=  class_stmt;
	'catch' : statement ::=  class_stmt;
	'--' : statement ::=  class_stmt;
	'[' : statement ::=  class_stmt;
	'switch' : statement ::=  class_stmt;
	'true' : statement ::=  class_stmt;
	'global' : statement ::=  class_stmt;
	'until' : statement ::=  class_stmt;
	'namespace' : statement ::=  class_stmt;
	'new' : statement ::=  class_stmt;
	'++' : statement ::=  class_stmt;
	'link' : statement ::=  class_stmt;
	'break' : statement ::=  class_stmt;
	'continue' : statement ::=  class_stmt;
	'typeid' : statement ::=  class_stmt;
	'struct' : statement ::=  class_stmt;
	'try' : statement ::=  class_stmt;
	'!' : statement ::=  class_stmt;
	ID : statement ::=  class_stmt;
	'var' : statement ::=  class_stmt;
	'&' : statement ::=  class_stmt;
	'class' : statement ::=  class_stmt;
	'else' : statement ::=  class_stmt;
	'loop' : statement ::=  class_stmt;
	'constant' : statement ::=  class_stmt;
	'throw' : statement ::=  class_stmt;
	'if' : statement ::=  class_stmt;

State 9 : 
	'(' : statement ::=  throw_stmt;
	CHAR : statement ::=  throw_stmt;
	'gcnew' : statement ::=  throw_stmt;
	'return' : statement ::=  throw_stmt;
	'*' : statement ::=  throw_stmt;
	'using' : statement ::=  throw_stmt;
	NUM : statement ::=  throw_stmt;
	'for' : statement ::=  throw_stmt;
	'null' : statement ::=  throw_stmt;
	'foreach' : statement ::=  throw_stmt;
	'false' : statement ::=  throw_stmt;
	%END% : statement ::=  throw_stmt;
	'while' : statement ::=  throw_stmt;
	'local' : statement ::=  throw_stmt;
	ENDL : statement ::=  throw_stmt;
	STR : statement ::=  throw_stmt;
	'}' : statement ::=  throw_stmt;
	'{' : statement ::=  throw_stmt;
	'package' : statement ::=  throw_stmt;
	'-' : statement ::=  throw_stmt;
	'block' : statement ::=  throw_stmt;
	'function' : statement ::=  throw_stmt;
	'end' : statement ::=  throw_stmt;
	'import' : statement ::=  throw_stmt;
	PREP : statement ::=  throw_stmt;
	'catch' : statement ::=  throw_stmt;
	'--' : statement ::=  throw_stmt;
	'[' : statement ::=  throw_stmt;
	'switch' : statement ::=  throw_stmt;
	'true' : statement ::=  throw_stmt;
	'global' : statement ::=  throw_stmt;
	'until' : statement ::=  throw_stmt;
	'namespace' : statement ::=  throw_stmt;
	'new' : statement ::=  throw_stmt;
	'++' : statement ::=  throw_stmt;
	'link' : statement ::=  throw_stmt;
	'break' : statement ::=  throw_stmt;
	'continue' : statement ::=  throw_stmt;
	'typeid' : statement ::=  throw_stmt;
	'struct' : statement ::=  throw_stmt;
	'try' : statement ::=  throw_stmt;
	'!' : statement ::=  throw_stmt;
	ID : statement ::=  throw_stmt;
	'var' : statement ::=  throw_stmt;
	'&' : statement ::=  throw_stmt;
	'class' : statement ::=  throw_stmt;
	'else' : statement ::=  throw_stmt;
	'loop' : statement ::=  throw_stmt;
	'constant' : statement ::=  throw_stmt;
	'throw' : statement ::=  throw_stmt;
	'if' : statement ::=  throw_stmt;

State 10 : 
	'(' : statement ::=  try_stmt;
	CHAR : statement ::=  try_stmt;
	'gcnew' : statement ::=  try_stmt;
	'return' : statement ::=  try_stmt;
	'*' : statement ::=  try_stmt;
	'using' : statement ::=  try_stmt;
	NUM : statement ::=  try_stmt;
	'for' : statement ::=  try_stmt;
	'null' : statement ::=  try_stmt;
	'foreach' : statement ::=  try_stmt;
	'false' : statement ::=  try_stmt;
	%END% : statement ::=  try_stmt;
	'while' : statement ::=  try_stmt;
	'local' : statement ::=  try_stmt;
	ENDL : statement ::=  try_stmt;
	STR : statement ::=  try_stmt;
	'}' : statement ::=  try_stmt;
	'{' : statement ::=  try_stmt;
	'package' : statement ::=  try_stmt;
	'-' : statement ::=  try_stmt;
	'block' : statement ::=  try_stmt;
	'function' : statement ::=  try_stmt;
	'end' : statement ::=  try_stmt;
	'import' : statement ::=  try_stmt;
	PREP : statement ::=  try_stmt;
	'catch' : statement ::=  try_stmt;
	'--' : statement ::=  try_stmt;
	'[' : statement ::=  try_stmt;
	'switch' : statement ::=  try_stmt;
	'true' : statement ::=  try_stmt;
	'global' : statement ::=  try_stmt;
	'until' : statement ::=  try_stmt;
	'namespace' : statement ::=  try_stmt;
	'new' : statement ::=  try_stmt;
	'++' : statement ::=  try_stmt;
	'link' : statement ::=  try_stmt;
	'break' : statement ::=  try_stmt;
	'continue' : statement ::=  try_stmt;
	'typeid' : statement ::=  try_stmt;
	'struct' : statement ::=  try_stmt;
	'try' : statement ::=  try_stmt;
	'!' : statement ::=  try_stmt;
	ID : statement ::=  try_stmt;
	'var' : statement ::=  try_stmt;
	'&' : statement ::=  try_stmt;
	'class' : statement ::=  try_stmt;
	'else' : statement ::=  try_stmt;
	'loop' : statement ::=  try_stmt;
	'constant' : statement ::=  try_stmt;
	'throw' : statement ::=  try_stmt;
	'if' : statement ::=  try_stmt;

State 11 : 
	'(' : statement ::=  return_stmt;
	CHAR : statement ::=  return_stmt;
	'gcnew' : statement ::=  return_stmt;
	'return' : statement ::=  return_stmt;
	'*' : statement ::=  return_stmt;
	'using' : statement ::=  return_stmt;
	NUM : statement ::=  return_stmt;
	'for' : statement ::=  return_stmt;
	'null' : statement ::=  return_stmt;
	'foreach' : statement ::=  return_stmt;
	'false' : statement ::=  return_stmt;
	%END% : statement ::=  return_stmt;
	'while' : statement ::=  return_stmt;
	'local' : statement ::=  return_stmt;
	ENDL : statement ::=  return_stmt;
	STR : statement ::=  return_stmt;
	'}' : statement ::=  return_stmt;
	'{' : statement ::=  return_stmt;
	'package' : statement ::=  return_stmt;
	'-' : statement ::=  return_stmt;
	'block' : statement ::=  return_stmt;
	'function' : statement ::=  return_stmt;
	'end' : statement ::=  return_stmt;
	'import' : statement ::=  return_stmt;
	PREP : statement ::=  return_stmt;
	'catch' : statement ::=  return_stmt;
	'--' : statement ::=  return_stmt;
	'[' : statement ::=  return_stmt;
	'switch' : statement ::=  return_stmt;
	'true' : statement ::=  return_stmt;
	'global' : statement ::=  return_stmt;
	'until' : statement ::=  return_stmt;
	'namespace' : statement ::=  return_stmt;
	'new' : statement ::=  return_stmt;
	'++' : statement ::=  return_stmt;
	'link' : statement ::=  return_stmt;
	'break' : statement ::=  return_stmt;
	'continue' : statement ::=  return_stmt;
	'typeid' : statement ::=  return_stmt;
	'struct' : statement ::=  return_stmt;
	'try' : statement ::=  return_stmt;
	'!' : statement ::=  return_stmt;
	ID : statement ::=  return_stmt;
	'var' : statement ::=  return_stmt;
	'&' : statement ::=  return_stmt;
	'class' : statement ::=  return_stmt;
	'else' : statement ::=  return_stmt;
	'loop' : statement ::=  return_stmt;
	'constant' : statement ::=  return_stmt;
	'throw' : statement ::=  return_stmt;
	'if' : statement ::=  return_stmt;

State 12 : 
	'(' : statement ::=  function_stmt;
	CHAR : statement ::=  function_stmt;
	'gcnew' : statement ::=  function_stmt;
	'return' : statement ::=  function_stmt;
	'*' : statement ::=  function_stmt;
	'using' : statement ::=  function_stmt;
	NUM : statement ::=  function_stmt;
	'for' : statement ::=  function_stmt;
	'null' : statement ::=  function_stmt;
	'foreach' : statement ::=  function_stmt;
	'false' : statement ::=  function_stmt;
	%END% : statement ::=  function_stmt;
	'while' : statement ::=  function_stmt;
	'local' : statement ::=  function_stmt;
	ENDL : statement ::=  function_stmt;
	STR : statement ::=  function_stmt;
	'}' : statement ::=  function_stmt;
	'{' : statement ::=  function_stmt;
	'package' : statement ::=  function_stmt;
	'-' : statement ::=  function_stmt;
	'block' : statement ::=  function_stmt;
	'function' : statement ::=  function_stmt;
	'end' : statement ::=  function_stmt;
	'import' : statement ::=  function_stmt;
	PREP : statement ::=  function_stmt;
	'catch' : statement ::=  function_stmt;
	'--' : statement ::=  function_stmt;
	'[' : statement ::=  function_stmt;
	'switch' : statement ::=  function_stmt;
	'true' : statement ::=  function_stmt;
	'global' : statement ::=  function_stmt;
	'until' : statement ::=  function_stmt;
	'namespace' : statement ::=  function_stmt;
	'new' : statement ::=  function_stmt;
	'++' : statement ::=  function_stmt;
	'link' : statement ::=  function_stmt;
	'break' : statement ::=  function_stmt;
	'continue' : statement ::=  function_stmt;
	'typeid' : statement ::=  function_stmt;
	'struct' : statement ::=  function_stmt;
	'try' : statement ::=  function_stmt;
	'!' : statement ::=  function_stmt;
	ID : statement ::=  function_stmt;
	'var' : statement ::=  function_stmt;
	'&' : statement ::=  function_stmt;
	'class' : statement ::=  function_stmt;
	'else' : statement ::=  function_stmt;
	'loop' : statement ::=  function_stmt;
	'constant' : statement ::=  function_stmt;
	'throw' : statement ::=  function_stmt;
	'if' : statement ::=  function_stmt;

State 13 : 
	'(' : statement ::=  control_stmt;
	CHAR : statement ::=  control_stmt;
	'gcnew' : statement ::=  control_stmt;
	'return' : statement ::=  control_stmt;
	'*' : statement ::=  control_stmt;
	'using' : statement ::=  control_stmt;
	NUM : statement ::=  control_stmt;
	'for' : statement ::=  control_stmt;
	'null' : statement ::=  control_stmt;
	'foreach' : statement ::=  control_stmt;
	'false' : statement ::=  control_stmt;
	%END% : statement ::=  control_stmt;
	'while' : statement ::=  control_stmt;
	'local' : statement ::=  control_stmt;
	ENDL : statement ::=  control_stmt;
	STR : statement ::=  control_stmt;
	'}' : statement ::=  control_stmt;
	'{' : statement ::=  control_stmt;
	'package' : statement ::=  control_stmt;
	'-' : statement ::=  control_stmt;
	'block' : statement ::=  control_stmt;
	'function' : statement ::=  control_stmt;
	'end' : statement ::=  control_stmt;
	'import' : statement ::=  control_stmt;
	PREP : statement ::=  control_stmt;
	'catch' : statement ::=  control_stmt;
	'--' : statement ::=  control_stmt;
	'[' : statement ::=  control_stmt;
	'switch' : statement ::=  control_stmt;
	'true' : statement ::=  control_stmt;
	'global' : statement ::=  control_stmt;
	'until' : statement ::=  control_stmt;
	'namespace' : statement ::=  control_stmt;
	'new' : statement ::=  control_stmt;
	'++' : statement ::=  control_stmt;
	'link' : statement ::=  control_stmt;
	'break' : statement ::=  control_stmt;
	'continue' : statement ::=  control_stmt;
	'typeid' : statement ::=  control_stmt;
	'struct' : statement ::=  control_stmt;
	'try' : statement ::=  control_stmt;
	'!' : statement ::=  control_stmt;
	ID : statement ::=  control_stmt;
	'var' : statement ::=  control_stmt;
	'&' : statement ::=  control_stmt;
	'class' : statement ::=  control_stmt;
	'else' : statement ::=  control_stmt;
	'loop' : statement ::=  control_stmt;
	'constant' : statement ::=  control_stmt;
	'throw' : statement ::=  control_stmt;
	'if' : statement ::=  control_stmt;

State 14 : 
	'(' : statement ::=  foreach_stmt;
	CHAR : statement ::=  foreach_stmt;
	'gcnew' : statement ::=  foreach_stmt;
	'return' : statement ::=  foreach_stmt;
	'*' : statement ::=  foreach_stmt;
	'using' : statement ::=  foreach_stmt;
	NUM : statement ::=  foreach_stmt;
	'for' : statement ::=  foreach_stmt;
	'null' : statement ::=  foreach_stmt;
	'foreach' : statement ::=  foreach_stmt;
	'false' : statement ::=  foreach_stmt;
	%END% : statement ::=  foreach_stmt;
	'while' : statement ::=  foreach_stmt;
	'local' : statement ::=  foreach_stmt;
	ENDL : statement ::=  foreach_stmt;
	STR : statement ::=  foreach_stmt;
	'}' : statement ::=  foreach_stmt;
	'{' : statement ::=  foreach_stmt;
	'package' : statement ::=  foreach_stmt;
	'-' : statement ::=  foreach_stmt;
	'block' : statement ::=  foreach_stmt;
	'function' : statement ::=  foreach_stmt;
	'end' : statement ::=  foreach_stmt;
	'import' : statement ::=  foreach_stmt;
	PREP : statement ::=  foreach_stmt;
	'catch' : statement ::=  foreach_stmt;
	'--' : statement ::=  foreach_stmt;
	'[' : statement ::=  foreach_stmt;
	'switch' : statement ::=  foreach_stmt;
	'true' : statement ::=  foreach_stmt;
	'global' : statement ::=  foreach_stmt;
	'until' : statement ::=  foreach_stmt;
	'namespace' : statement ::=  foreach_stmt;
	'new' : statement ::=  foreach_stmt;
	'++' : statement ::=  foreach_stmt;
	'link' : statement ::=  foreach_stmt;
	'break' : statement ::=  foreach_stmt;
	'continue' : statement ::=  foreach_stmt;
	'typeid' : statement ::=  foreach_stmt;
	'struct' : statement ::=  foreach_stmt;
	'try' : statement ::=  foreach_stmt;
	'!' : statement ::=  foreach_stmt;
	ID : statement ::=  foreach_stmt;
	'var' : statement ::=  foreach_stmt;
	'&' : statement ::=  foreach_stmt;
	'class' : statement ::=  foreach_stmt;
	'else' : statement ::=  foreach_stmt;
	'loop' : statement ::=  foreach_stmt;
	'constant' : statement ::=  foreach_stmt;
	'throw' : statement ::=  foreach_stmt;
	'if' : statement ::=  foreach_stmt;

State 15 : 
	'(' : statement ::=  for_stmt;
	CHAR : statement ::=  for_stmt;
	'gcnew' : statement ::=  for_stmt;
	'return' : statement ::=  for_stmt;
	'*' : statement ::=  for_stmt;
	'using' : statement ::=  for_stmt;
	NUM : statement ::=  for_stmt;
	'for' : statement ::=  for_stmt;
	'null' : statement ::=  for_stmt;
	'foreach' : statement ::=  for_stmt;
	'false' : statement ::=  for_stmt;
	%END% : statement ::=  for_stmt;
	'while' : statement ::=  for_stmt;
	'local' : statement ::=  for_stmt;
	ENDL : statement ::=  for_stmt;
	STR : statement ::=  for_stmt;
	'}' : statement ::=  for_stmt;
	'{' : statement ::=  for_stmt;
	'package' : statement ::=  for_stmt;
	'-' : statement ::=  for_stmt;
	'block' : statement ::=  for_stmt;
	'function' : statement ::=  for_stmt;
	'end' : statement ::=  for_stmt;
	'import' : statement ::=  for_stmt;
	PREP : statement ::=  for_stmt;
	'catch' : statement ::=  for_stmt;
	'--' : statement ::=  for_stmt;
	'[' : statement ::=  for_stmt;
	'switch' : statement ::=  for_stmt;
	'true' : statement ::=  for_stmt;
	'global' : statement ::=  for_stmt;
	'until' : statement ::=  for_stmt;
	'namespace' : statement ::=  for_stmt;
	'new' : statement ::=  for_stmt;
	'++' : statement ::=  for_stmt;
	'link' : statement ::=  for_stmt;
	'break' : statement ::=  for_stmt;
	'continue' : statement ::=  for_stmt;
	'typeid' : statement ::=  for_stmt;
	'struct' : statement ::=  for_stmt;
	'try' : statement ::=  for_stmt;
	'!' : statement ::=  for_stmt;
	ID : statement ::=  for_stmt;
	'var' : statement ::=  for_stmt;
	'&' : statement ::=  for_stmt;
	'class' : statement ::=  for_stmt;
	'else' : statement ::=  for_stmt;
	'loop' : statement ::=  for_stmt;
	'constant' : statement ::=  for_stmt;
	'throw' : statement ::=  for_stmt;
	'if' : statement ::=  for_stmt;

State 16 : 
	'(' : statement ::=  loop_stmt;
	CHAR : statement ::=  loop_stmt;
	'gcnew' : statement ::=  loop_stmt;
	'return' : statement ::=  loop_stmt;
	'*' : statement ::=  loop_stmt;
	'using' : statement ::=  loop_stmt;
	NUM : statement ::=  loop_stmt;
	'for' : statement ::=  loop_stmt;
	'null' : statement ::=  loop_stmt;
	'foreach' : statement ::=  loop_stmt;
	'false' : statement ::=  loop_stmt;
	%END% : statement ::=  loop_stmt;
	'while' : statement ::=  loop_stmt;
	'local' : statement ::=  loop_stmt;
	ENDL : statement ::=  loop_stmt;
	STR : statement ::=  loop_stmt;
	'}' : statement ::=  loop_stmt;
	'{' : statement ::=  loop_stmt;
	'package' : statement ::=  loop_stmt;
	'-' : statement ::=  loop_stmt;
	'block' : statement ::=  loop_stmt;
	'function' : statement ::=  loop_stmt;
	'end' : statement ::=  loop_stmt;
	'import' : statement ::=  loop_stmt;
	PREP : statement ::=  loop_stmt;
	'catch' : statement ::=  loop_stmt;
	'--' : statement ::=  loop_stmt;
	'[' : statement ::=  loop_stmt;
	'switch' : statement ::=  loop_stmt;
	'true' : statement ::=  loop_stmt;
	'global' : statement ::=  loop_stmt;
	'until' : statement ::=  loop_stmt;
	'namespace' : statement ::=  loop_stmt;
	'new' : statement ::=  loop_stmt;
	'++' : statement ::=  loop_stmt;
	'link' : statement ::=  loop_stmt;
	'break' : statement ::=  loop_stmt;
	'continue' : statement ::=  loop_stmt;
	'typeid' : statement ::=  loop_stmt;
	'struct' : statement ::=  loop_stmt;
	'try' : statement ::=  loop_stmt;
	'!' : statement ::=  loop_stmt;
	ID : statement ::=  loop_stmt;
	'var' : statement ::=  loop_stmt;
	'&' : statement ::=  loop_stmt;
	'class' : statement ::=  loop_stmt;
	'else' : statement ::=  loop_stmt;
	'loop' : statement ::=  loop_stmt;
	'constant' : statement ::=  loop_stmt;
	'throw' : statement ::=  loop_stmt;
	'if' : statement ::=  loop_stmt;

State 17 : 
	'(' : statement ::=  while_stmt;
	CHAR : statement ::=  while_stmt;
	'gcnew' : statement ::=  while_stmt;
	'return' : statement ::=  while_stmt;
	'*' : statement ::=  while_stmt;
	'using' : statement ::=  while_stmt;
	NUM : statement ::=  while_stmt;
	'for' : statement ::=  while_stmt;
	'null' : statement ::=  while_stmt;
	'foreach' : statement ::=  while_stmt;
	'false' : statement ::=  while_stmt;
	%END% : statement ::=  while_stmt;
	'while' : statement ::=  while_stmt;
	'local' : statement ::=  while_stmt;
	ENDL : statement ::=  while_stmt;
	STR : statement ::=  while_stmt;
	'}' : statement ::=  while_stmt;
	'{' : statement ::=  while_stmt;
	'package' : statement ::=  while_stmt;
	'-' : statement ::=  while_stmt;
	'block' : statement ::=  while_stmt;
	'function' : statement ::=  while_stmt;
	'end' : statement ::=  while_stmt;
	'import' : statement ::=  while_stmt;
	PREP : statement ::=  while_stmt;
	'catch' : statement ::=  while_stmt;
	'--' : statement ::=  while_stmt;
	'[' : statement ::=  while_stmt;
	'switch' : statement ::=  while_stmt;
	'true' : statement ::=  while_stmt;
	'global' : statement ::=  while_stmt;
	'until' : statement ::=  while_stmt;
	'namespace' : statement ::=  while_stmt;
	'new' : statement ::=  while_stmt;
	'++' : statement ::=  while_stmt;
	'link' : statement ::=  while_stmt;
	'break' : statement ::=  while_stmt;
	'continue' : statement ::=  while_stmt;
	'typeid' : statement ::=  while_stmt;
	'struct' : statement ::=  while_stmt;
	'try' : statement ::=  while_stmt;
	'!' : statement ::=  while_stmt;
	ID : statement ::=  while_stmt;
	'var' : statement ::=  while_stmt;
	'&' : statement ::=  while_stmt;
	'class' : statement ::=  while_stmt;
	'else' : statement ::=  while_stmt;
	'loop' : statement ::=  while_stmt;
	'constant' : statement ::=  while_stmt;
	'throw' : statement ::=  while_stmt;
	'if' : statement ::=  while_stmt;

State 18 : 
	'(' : statement ::=  switch_stmt;
	CHAR : statement ::=  switch_stmt;
	'gcnew' : statement ::=  switch_stmt;
	'return' : statement ::=  switch_stmt;
	'*' : statement ::=  switch_stmt;
	'using' : statement ::=  switch_stmt;
	NUM : statement ::=  switch_stmt;
	'for' : statement ::=  switch_stmt;
	'null' : statement ::=  switch_stmt;
	'foreach' : statement ::=  switch_stmt;
	'false' : statement ::=  switch_stmt;
	%END% : statement ::=  switch_stmt;
	'while' : statement ::=  switch_stmt;
	'local' : statement ::=  switch_stmt;
	ENDL : statement ::=  switch_stmt;
	STR : statement ::=  switch_stmt;
	'}' : statement ::=  switch_stmt;
	'{' : statement ::=  switch_stmt;
	'package' : statement ::=  switch_stmt;
	'-' : statement ::=  switch_stmt;
	'block' : statement ::=  switch_stmt;
	'function' : statement ::=  switch_stmt;
	'end' : statement ::=  switch_stmt;
	'import' : statement ::=  switch_stmt;
	PREP : statement ::=  switch_stmt;
	'catch' : statement ::=  switch_stmt;
	'--' : statement ::=  switch_stmt;
	'[' : statement ::=  switch_stmt;
	'switch' : statement ::=  switch_stmt;
	'true' : statement ::=  switch_stmt;
	'global' : statement ::=  switch_stmt;
	'until' : statement ::=  switch_stmt;
	'namespace' : statement ::=  switch_stmt;
	'new' : statement ::=  switch_stmt;
	'++' : statement ::=  switch_stmt;
	'link' : statement ::=  switch_stmt;
	'break' : statement ::=  switch_stmt;
	'continue' : statement ::=  switch_stmt;
	'typeid' : statement ::=  switch_stmt;
	'struct' : statement ::=  switch_stmt;
	'try' : statement ::=  switch_stmt;
	'!' : statement ::=  switch_stmt;
	ID : statement ::=  switch_stmt;
	'var' : statement ::=  switch_stmt;
	'&' : statement ::=  switch_stmt;
	'class' : statement ::=  switch_stmt;
	'else' : statement ::=  switch_stmt;
	'loop' : statement ::=  switch_stmt;
	'constant' : statement ::=  switch_stmt;
	'throw' : statement ::=  switch_stmt;
	'if' : statement ::=  switch_stmt;

State 19 : 
	'(' : statement ::=  if_stmt;
	CHAR : statement ::=  if_stmt;
	'gcnew' : statement ::=  if_stmt;
	'return' : statement ::=  if_stmt;
	'*' : statement ::=  if_stmt;
	'using' : statement ::=  if_stmt;
	NUM : statement ::=  if_stmt;
	'for' : statement ::=  if_stmt;
	'null' : statement ::=  if_stmt;
	'foreach' : statement ::=  if_stmt;
	'false' : statement ::=  if_stmt;
	%END% : statement ::=  if_stmt;
	'while' : statement ::=  if_stmt;
	'local' : statement ::=  if_stmt;
	ENDL : statement ::=  if_stmt;
	STR : statement ::=  if_stmt;
	'}' : statement ::=  if_stmt;
	'{' : statement ::=  if_stmt;
	'package' : statement ::=  if_stmt;
	'-' : statement ::=  if_stmt;
	'block' : statement ::=  if_stmt;
	'function' : statement ::=  if_stmt;
	'end' : statement ::=  if_stmt;
	'import' : statement ::=  if_stmt;
	PREP : statement ::=  if_stmt;
	'catch' : statement ::=  if_stmt;
	'--' : statement ::=  if_stmt;
	'[' : statement ::=  if_stmt;
	'switch' : statement ::=  if_stmt;
	'true' : statement ::=  if_stmt;
	'global' : statement ::=  if_stmt;
	'until' : statement ::=  if_stmt;
	'namespace' : statement ::=  if_stmt;
	'new' : statement ::=  if_stmt;
	'++' : statement ::=  if_stmt;
	'link' : statement ::=  if_stmt;
	'break' : statement ::=  if_stmt;
	'continue' : statement ::=  if_stmt;
	'typeid' : statement ::=  if_stmt;
	'struct' : statement ::=  if_stmt;
	'try' : statement ::=  if_stmt;
	'!' : statement ::=  if_stmt;
	ID : statement ::=  if_stmt;
	'var' : statement ::=  if_stmt;
	'&' : statement ::=  if_stmt;
	'class' : statement ::=  if_stmt;
	'else' : statement ::=  if_stmt;
	'loop' : statement ::=  if_stmt;
	'constant' : statement ::=  if_stmt;
	'throw' : statement ::=  if_stmt;
	'if' : statement ::=  if_stmt;

State 20 : 
	'(' : statement ::=  using_stmt;
	CHAR : statement ::=  using_stmt;
	'gcnew' : statement ::=  using_stmt;
	'return' : statement ::=  using_stmt;
	'*' : statement ::=  using_stmt;
	'using' : statement ::=  using_stmt;
	NUM : statement ::=  using_stmt;
	'for' : statement ::=  using_stmt;
	'null' : statement ::=  using_stmt;
	'foreach' : statement ::=  using_stmt;
	'false' : statement ::=  using_stmt;
	%END% : statement ::=  using_stmt;
	'while' : statement ::=  using_stmt;
	'local' : statement ::=  using_stmt;
	ENDL : statement ::=  using_stmt;
	STR : statement ::=  using_stmt;
	'}' : statement ::=  using_stmt;
	'{' : statement ::=  using_stmt;
	'package' : statement ::=  using_stmt;
	'-' : statement ::=  using_stmt;
	'block' : statement ::=  using_stmt;
	'function' : statement ::=  using_stmt;
	'end' : statement ::=  using_stmt;
	'import' : statement ::=  using_stmt;
	PREP : statement ::=  using_stmt;
	'catch' : statement ::=  using_stmt;
	'--' : statement ::=  using_stmt;
	'[' : statement ::=  using_stmt;
	'switch' : statement ::=  using_stmt;
	'true' : statement ::=  using_stmt;
	'global' : statement ::=  using_stmt;
	'until' : statement ::=  using_stmt;
	'namespace' : statement ::=  using_stmt;
	'new' : statement ::=  using_stmt;
	'++' : statement ::=  using_stmt;
	'link' : statement ::=  using_stmt;
	'break' : statement ::=  using_stmt;
	'continue' : statement ::=  using_stmt;
	'typeid' : statement ::=  using_stmt;
	'struct' : statement ::=  using_stmt;
	'try' : statement ::=  using_stmt;
	'!' : statement ::=  using_stmt;
	ID : statement ::=  using_stmt;
	'var' : statement ::=  using_stmt;
	'&' : statement ::=  using_stmt;
	'class' : statement ::=  using_stmt;
	'else' : statement ::=  using_stmt;
	'loop' : statement ::=  using_stmt;
	'constant' : statement ::=  using_stmt;
	'throw' : statement ::=  using_stmt;
	'if' : statement ::=  using_stmt;

State 21 : 
	'(' : statement ::=  namespace_stmt;
	CHAR : statement ::=  namespace_stmt;
	'gcnew' : statement ::=  namespace_stmt;
	'return' : statement ::=  namespace_stmt;
	'*' : statement ::=  namespace_stmt;
	'using' : statement ::=  namespace_stmt;
	NUM : statement ::=  namespace_stmt;
	'for' : statement ::=  namespace_stmt;
	'null' : statement ::=  namespace_stmt;
	'foreach' : statement ::=  namespace_stmt;
	'false' : statement ::=  namespace_stmt;
	%END% : statement ::=  namespace_stmt;
	'while' : statement ::=  namespace_stmt;
	'local' : statement ::=  namespace_stmt;
	ENDL : statement ::=  namespace_stmt;
	STR : statement ::=  namespace_stmt;
	'}' : statement ::=  namespace_stmt;
	'{' : statement ::=  namespace_stmt;
	'package' : statement ::=  namespace_stmt;
	'-' : statement ::=  namespace_stmt;
	'block' : statement ::=  namespace_stmt;
	'function' : statement ::=  namespace_stmt;
	'end' : statement ::=  namespace_stmt;
	'import' : statement ::=  namespace_stmt;
	PREP : statement ::=  namespace_stmt;
	'catch' : statement ::=  namespace_stmt;
	'--' : statement ::=  namespace_stmt;
	'[' : statement ::=  namespace_stmt;
	'switch' : statement ::=  namespace_stmt;
	'true' : statement ::=  namespace_stmt;
	'global' : statement ::=  namespace_stmt;
	'until' : statement ::=  namespace_stmt;
	'namespace' : statement ::=  namespace_stmt;
	'new' : statement ::=  namespace_stmt;
	'++' : statement ::=  namespace_stmt;
	'link' : statement ::=  namespace_stmt;
	'break' : statement ::=  namespace_stmt;
	'continue' : statement ::=  namespace_stmt;
	'typeid' : statement ::=  namespace_stmt;
	'struct' : statement ::=  namespace_stmt;
	'try' : statement ::=  namespace_stmt;
	'!' : statement ::=  namespace_stmt;
	ID : statement ::=  namespace_stmt;
	'var' : statement ::=  namespace_stmt;
	'&' : statement ::=  namespace_stmt;
	'class' : statement ::=  namespace_stmt;
	'else' : statement ::=  namespace_stmt;
	'loop' : statement ::=  namespace_stmt;
	'constant' : statement ::=  namespace_stmt;
	'throw' : statement ::=  namespace_stmt;
	'if' : statement ::=  namespace_stmt;

State 22 : 
	'(' : statement ::=  block_stmt;
	CHAR : statement ::=  block_stmt;
	'gcnew' : statement ::=  block_stmt;
	'return' : statement ::=  block_stmt;
	'*' : statement ::=  block_stmt;
	'using' : statement ::=  block_stmt;
	NUM : statement ::=  block_stmt;
	'for' : statement ::=  block_stmt;
	'null' : statement ::=  block_stmt;
	'foreach' : statement ::=  block_stmt;
	'false' : statement ::=  block_stmt;
	%END% : statement ::=  block_stmt;
	'while' : statement ::=  block_stmt;
	'local' : statement ::=  block_stmt;
	ENDL : statement ::=  block_stmt;
	STR : statement ::=  block_stmt;
	'}' : statement ::=  block_stmt;
	'{' : statement ::=  block_stmt;
	'package' : statement ::=  block_stmt;
	'-' : statement ::=  block_stmt;
	'block' : statement ::=  block_stmt;
	'function' : statement ::=  block_stmt;
	'end' : statement ::=  block_stmt;
	'import' : statement ::=  block_stmt;
	PREP : statement ::=  block_stmt;
	'catch' : statement ::=  block_stmt;
	'--' : statement ::=  block_stmt;
	'[' : statement ::=  block_stmt;
	'switch' : statement ::=  block_stmt;
	'true' : statement ::=  block_stmt;
	'global' : statement ::=  block_stmt;
	'until' : statement ::=  block_stmt;
	'namespace' : statement ::=  block_stmt;
	'new' : statement ::=  block_stmt;
	'++' : statement ::=  block_stmt;
	'link' : statement ::=  block_stmt;
	'break' : statement ::=  block_stmt;
	'continue' : statement ::=  block_stmt;
	'typeid' : statement ::=  block_stmt;
	'struct' : statement ::=  block_stmt;
	'try' : statement ::=  block_stmt;
	'!' : statement ::=  block_stmt;
	ID : statement ::=  block_stmt;
	'var' : statement ::=  block_stmt;
	'&' : statement ::=  block_stmt;
	'class' : statement ::=  block_stmt;
	'else' : statement ::=  block_stmt;
	'loop' : statement ::=  block_stmt;
	'constant' : statement ::=  block_stmt;
	'throw' : statement ::=  block_stmt;
	'if' : statement ::=  block_stmt;

State 23 : 
	'(' : statement ::=  var_stmt;
	CHAR : statement ::=  var_stmt;
	'gcnew' : statement ::=  var_stmt;
	'return' : statement ::=  var_stmt;
	'*' : statement ::=  var_stmt;
	'using' : statement ::=  var_stmt;
	NUM : statement ::=  var_stmt;
	'for' : statement ::=  var_stmt;
	'null' : statement ::=  var_stmt;
	'foreach' : statement ::=  var_stmt;
	'false' : statement ::=  var_stmt;
	%END% : statement ::=  var_stmt;
	'while' : statement ::=  var_stmt;
	'local' : statement ::=  var_stmt;
	ENDL : statement ::=  var_stmt;
	STR : statement ::=  var_stmt;
	'}' : statement ::=  var_stmt;
	'{' : statement ::=  var_stmt;
	'package' : statement ::=  var_stmt;
	'-' : statement ::=  var_stmt;
	'block' : statement ::=  var_stmt;
	'function' : statement ::=  var_stmt;
	'end' : statement ::=  var_stmt;
	'import' : statement ::=  var_stmt;
	PREP : statement ::=  var_stmt;
	'catch' : statement ::=  var_stmt;
	'--' : statement ::=  var_stmt;
	'[' : statement ::=  var_stmt;
	'switch' : statement ::=  var_stmt;
	'true' : statement ::=  var_stmt;
	'global' : statement ::=  var_stmt;
	'until' : statement ::=  var_stmt;
	'namespace' : statement ::=  var_stmt;
	'new' : statement ::=  var_stmt;
	'++' : statement ::=  var_stmt;
	'link' : statement ::=  var_stmt;
	'break' : statement ::=  var_stmt;
	'continue' : statement ::=  var_stmt;
	'typeid' : statement ::=  var_stmt;
	'struct' : statement ::=  var_stmt;
	'try' : statement ::=  var_stmt;
	'!' : statement ::=  var_stmt;
	ID : statement ::=  var_stmt;
	'var' : statement ::=  var_stmt;
	'&' : statement ::=  var_stmt;
	'class' : statement ::=  var_stmt;
	'else' : statement ::=  var_stmt;
	'loop' : statement ::=  var_stmt;
	'constant' : statement ::=  var_stmt;
	'throw' : statement ::=  var_stmt;
	'if' : statement ::=  var_stmt;

State 24 : 
	'(' : statement ::=  import_stmt;
	CHAR : statement ::=  import_stmt;
	'gcnew' : statement ::=  import_stmt;
	'return' : statement ::=  import_stmt;
	'*' : statement ::=  import_stmt;
	'using' : statement ::=  import_stmt;
	NUM : statement ::=  import_stmt;
	'for' : statement ::=  import_stmt;
	'null' : statement ::=  import_stmt;
	'foreach' : statement ::=  import_stmt;
	'false' : statement ::=  import_stmt;
	%END% : statement ::=  import_stmt;
	'while' : statement ::=  import_stmt;
	'local' : statement ::=  import_stmt;
	ENDL : statement ::=  import_stmt;
	STR : statement ::=  import_stmt;
	'}' : statement ::=  import_stmt;
	'{' : statement ::=  import_stmt;
	'package' : statement ::=  import_stmt;
	'-' : statement ::=  import_stmt;
	'block' : statement ::=  import_stmt;
	'function' : statement ::=  import_stmt;
	'end' : statement ::=  import_stmt;
	'import' : statement ::=  import_stmt;
	PREP : statement ::=  import_stmt;
	'catch' : statement ::=  import_stmt;
	'--' : statement ::=  import_stmt;
	'[' : statement ::=  import_stmt;
	'switch' : statement ::=  import_stmt;
	'true' : statement ::=  import_stmt;
	'global' : statement ::=  import_stmt;
	'until' : statement ::=  import_stmt;
	'namespace' : statement ::=  import_stmt;
	'new' : statement ::=  import_stmt;
	'++' : statement ::=  import_stmt;
	'link' : statement ::=  import_stmt;
	'break' : statement ::=  import_stmt;
	'continue' : statement ::=  import_stmt;
	'typeid' : statement ::=  import_stmt;
	'struct' : statement ::=  import_stmt;
	'try' : statement ::=  import_stmt;
	'!' : statement ::=  import_stmt;
	ID : statement ::=  import_stmt;
	'var' : statement ::=  import_stmt;
	'&' : statement ::=  import_stmt;
	'class' : statement ::=  import_stmt;
	'else' : statement ::=  import_stmt;
	'loop' : statement ::=  import_stmt;
	'constant' : statement ::=  import_stmt;
	'throw' : statement ::=  import_stmt;
	'if' : statement ::=  import_stmt;

State 25 : 
	'(' : statement ::=  package_stmt;
	CHAR : statement ::=  package_stmt;
	'gcnew' : statement ::=  package_stmt;
	'return' : statement ::=  package_stmt;
	'*' : statement ::=  package_stmt;
	'using' : statement ::=  package_stmt;
	NUM : statement ::=  package_stmt;
	'for' : statement ::=  package_stmt;
	'null' : statement ::=  package_stmt;
	'foreach' : statement ::=  package_stmt;
	'false' : statement ::=  package_stmt;
	%END% : statement ::=  package_stmt;
	'while' : statement ::=  package_stmt;
	'local' : statement ::=  package_stmt;
	ENDL : statement ::=  package_stmt;
	STR : statement ::=  package_stmt;
	'}' : statement ::=  package_stmt;
	'{' : statement ::=  package_stmt;
	'package' : statement ::=  package_stmt;
	'-' : statement ::=  package_stmt;
	'block' : statement ::=  package_stmt;
	'function' : statement ::=  package_stmt;
	'end' : statement ::=  package_stmt;
	'import' : statement ::=  package_stmt;
	PREP : statement ::=  package_stmt;
	'catch' : statement ::=  package_stmt;
	'--' : statement ::=  package_stmt;
	'[' : statement ::=  package_stmt;
	'switch' : statement ::=  package_stmt;
	'true' : statement ::=  package_stmt;
	'global' : statement ::=  package_stmt;
	'until' : statement ::=  package_stmt;
	'namespace' : statement ::=  package_stmt;
	'new' : statement ::=  package_stmt;
	'++' : statement ::=  package_stmt;
	'link' : statement ::=  package_stmt;
	'break' : statement ::=  package_stmt;
	'continue' : statement ::=  package_stmt;
	'typeid' : statement ::=  package_stmt;
	'struct' : statement ::=  package_stmt;
	'try' : statement ::=  package_stmt;
	'!' : statement ::=  package_stmt;
	ID : statement ::=  package_stmt;
	'var' : statement ::=  package_stmt;
	'&' : statement ::=  package_stmt;
	'class' : statement ::=  package_stmt;
	'else' : statement ::=  package_stmt;
	'loop' : statement ::=  package_stmt;
	'constant' : statement ::=  package_stmt;
	'throw' : statement ::=  package_stmt;
	'if' : statement ::=  package_stmt;

State 26 : 
	'(' : statement ::=  prep_stmt;
	CHAR : statement ::=  prep_stmt;
	'gcnew' : statement ::=  prep_stmt;
	'return' : statement ::=  prep_stmt;
	'*' : statement ::=  prep_stmt;
	'using' : statement ::=  prep_stmt;
	NUM : statement ::=  prep_stmt;
	'for' : statement ::=  prep_stmt;
	'null' : statement ::=  prep_stmt;
	'foreach' : statement ::=  prep_stmt;
	'false' : statement ::=  prep_stmt;
	%END% : statement ::=  prep_stmt;
	'while' : statement ::=  prep_stmt;
	'local' : statement ::=  prep_stmt;
	ENDL : statement ::=  prep_stmt;
	STR : statement ::=  prep_stmt;
	'}' : statement ::=  prep_stmt;
	'{' : statement ::=  prep_stmt;
	'package' : statement ::=  prep_stmt;
	'-' : statement ::=  prep_stmt;
	'block' : statement ::=  prep_stmt;
	'function' : statement ::=  prep_stmt;
	'end' : statement ::=  prep_stmt;
	'import' : statement ::=  prep_stmt;
	PREP : statement ::=  prep_stmt;
	'catch' : statement ::=  prep_stmt;
	'--' : statement ::=  prep_stmt;
	'[' : statement ::=  prep_stmt;
	'switch' : statement ::=  prep_stmt;
	'true' : statement ::=  prep_stmt;
	'global' : statement ::=  prep_stmt;
	'until' : statement ::=  prep_stmt;
	'namespace' : statement ::=  prep_stmt;
	'new' : statement ::=  prep_stmt;
	'++' : statement ::=  prep_stmt;
	'link' : statement ::=  prep_stmt;
	'break' : statement ::=  prep_stmt;
	'continue' : statement ::=  prep_stmt;
	'typeid' : statement ::=  prep_stmt;
	'struct' : statement ::=  prep_stmt;
	'try' : statement ::=  prep_stmt;
	'!' : statement ::=  prep_stmt;
	ID : statement ::=  prep_stmt;
	'var' : statement ::=  prep_stmt;
	'&' : statement ::=  prep_stmt;
	'class' : statement ::=  prep_stmt;
	'else' : statement ::=  prep_stmt;
	'loop' : statement ::=  prep_stmt;
	'constant' : statement ::=  prep_stmt;
	'throw' : statement ::=  prep_stmt;
	'if' : statement ::=  prep_stmt;

State 27 : 
	endline :  28;
	';' :  29;
	ENDL :  30;

State 28 : 
	CHAR : expr_stmt ::=  expr endline;
	'(' : expr_stmt ::=  expr endline;
	'gcnew' : expr_stmt ::=  expr endline;
	'return' : expr_stmt ::=  expr endline;
	'*' : expr_stmt ::=  expr endline;
	'using' : expr_stmt ::=  expr endline;
	'false' : expr_stmt ::=  expr endline;
	NUM : expr_stmt ::=  expr endline;
	'null' : expr_stmt ::=  expr endline;
	'foreach' : expr_stmt ::=  expr endline;
	'for' : expr_stmt ::=  expr endline;
	%END% : expr_stmt ::=  expr endline;
	'local' : expr_stmt ::=  expr endline;
	'while' : expr_stmt ::=  expr endline;
	ENDL : expr_stmt ::=  expr endline;
	STR : expr_stmt ::=  expr endline;
	'}' : expr_stmt ::=  expr endline;
	'{' : expr_stmt ::=  expr endline;
	'package' : expr_stmt ::=  expr endline;
	'-' : expr_stmt ::=  expr endline;
	'function' : expr_stmt ::=  expr endline;
	'block' : expr_stmt ::=  expr endline;
	'end' : expr_stmt ::=  expr endline;
	'import' : expr_stmt ::=  expr endline;
	PREP : expr_stmt ::=  expr endline;
	'until' : expr_stmt ::=  expr endline;
	'[' : expr_stmt ::=  expr endline;
	'--' : expr_stmt ::=  expr endline;
	'switch' : expr_stmt ::=  expr endline;
	'true' : expr_stmt ::=  expr endline;
	'global' : expr_stmt ::=  expr endline;
	'catch' : expr_stmt ::=  expr endline;
	'namespace' : expr_stmt ::=  expr endline;
	'new' : expr_stmt ::=  expr endline;
	'++' : expr_stmt ::=  expr endline;
	'break' : expr_stmt ::=  expr endline;
	'link' : expr_stmt ::=  expr endline;
	'continue' : expr_stmt ::=  expr endline;
	'typeid' : expr_stmt ::=  expr endline;
	'struct' : expr_stmt ::=  expr endline;
	'try' : expr_stmt ::=  expr endline;
	'else' : expr_stmt ::=  expr endline;
	'!' : expr_stmt ::=  expr endline;
	ID : expr_stmt ::=  expr endline;
	'&' : expr_stmt ::=  expr endline;
	'var' : expr_stmt ::=  expr endline;
	'class' : expr_stmt ::=  expr endline;
	'loop' : expr_stmt ::=  expr endline;
	'throw' : expr_stmt ::=  expr endline;
	'constant' : expr_stmt ::=  expr endline;
	'if' : expr_stmt ::=  expr endline;

State 29 : 
	'(' : endline ::=  ';';
	CHAR : endline ::=  ';';
	'gcnew' : endline ::=  ';';
	'return' : endline ::=  ';';
	'*' : endline ::=  ';';
	'using' : endline ::=  ';';
	NUM : endline ::=  ';';
	'for' : endline ::=  ';';
	%END% : endline ::=  ';';
	'null' : endline ::=  ';';
	'foreach' : endline ::=  ';';
	'false' : endline ::=  ';';
	'while' : endline ::=  ';';
	ENDL : endline ::=  ';';
	'local' : endline ::=  ';';
	STR : endline ::=  ';';
	'}' : endline ::=  ';';
	'{' : endline ::=  ';';
	'package' : endline ::=  ';';
	'-' : endline ::=  ';';
	'end' : endline ::=  ';';
	'block' : endline ::=  ';';
	'function' : endline ::=  ';';
	'import' : endline ::=  ';';
	PREP : endline ::=  ';';
	'catch' : endline ::=  ';';
	'until' : endline ::=  ';';
	'--' : endline ::=  ';';
	'[' : endline ::=  ';';
	'switch' : endline ::=  ';';
	'true' : endline ::=  ';';
	'global' : endline ::=  ';';
	'namespace' : endline ::=  ';';
	'new' : endline ::=  ';';
	'++' : endline ::=  ';';
	'link' : endline ::=  ';';
	'break' : endline ::=  ';';
	'continue' : endline ::=  ';';
	'typeid' : endline ::=  ';';
	'struct' : endline ::=  ';';
	'try' : endline ::=  ';';
	'!' : endline ::=  ';';
	ID : endline ::=  ';';
	'var' : endline ::=  ';';
	'&' : endline ::=  ';';
	'class' : endline ::=  ';';
	'else' : endline ::=  ';';
	'loop' : endline ::=  ';';
	'constant' : endline ::=  ';';
	'throw' : endline ::=  ';';
	'if' : endline ::=  ';';

State 30 : 
	'(' : endline ::=  ENDL;
	CHAR : endline ::=  ENDL;
	'gcnew' : endline ::=  ENDL;
	'return' : endline ::=  ENDL;
	'*' : endline ::=  ENDL;
	'using' : endline ::=  ENDL;
	NUM : endline ::=  ENDL;
	'for' : endline ::=  ENDL;
	%END% : endline ::=  ENDL;
	'null' : endline ::=  ENDL;
	'foreach' : endline ::=  ENDL;
	'false' : endline ::=  ENDL;
	'while' : endline ::=  ENDL;
	ENDL : endline ::=  ENDL;
	'local' : endline ::=  ENDL;
	STR : endline ::=  ENDL;
	'}' : endline ::=  ENDL;
	'{' : endline ::=  ENDL;
	'package' : endline ::=  ENDL;
	'-' : endline ::=  ENDL;
	'end' : endline ::=  ENDL;
	'block' : endline ::=  ENDL;
	'function' : endline ::=  ENDL;
	'import' : endline ::=  ENDL;
	PREP : endline ::=  ENDL;
	'catch' : endline ::=  ENDL;
	'until' : endline ::=  ENDL;
	'--' : endline ::=  ENDL;
	'[' : endline ::=  ENDL;
	'switch' : endline ::=  ENDL;
	'true' : endline ::=  ENDL;
	'global' : endline ::=  ENDL;
	'namespace' : endline ::=  ENDL;
	'new' : endline ::=  ENDL;
	'++' : endline ::=  ENDL;
	'link' : endline ::=  ENDL;
	'break' : endline ::=  ENDL;
	'continue' : endline ::=  ENDL;
	'typeid' : endline ::=  ENDL;
	'struct' : endline ::=  ENDL;
	'try' : endline ::=  ENDL;
	'!' : endline ::=  ENDL;
	ID : endline ::=  ENDL;
	'var' : endline ::=  ENDL;
	'&' : endline ::=  ENDL;
	'class' : endline ::=  ENDL;
	'else' : endline ::=  ENDL;
	'loop' : endline ::=  ENDL;
	'constant' : endline ::=  ENDL;
	'throw' : endline ::=  ENDL;
	'if' : endline ::=  ENDL;

State 31 : 
	ID :  32;

State 32 : 
	ENDL : class_stmt@0_opt_3 ::=  NULL;
	'extends' :  422;
	class_stmt@0_opt_3 :  33;

State 33 : 
	ENDL :  34;

State 34 : 
	decl_stmts@0_rep_1 :  38;
	declaration :  39;
	PREP :  331;
	var_stmt@0_decl_1 :  328;
	'using' :  309;
	var_stmt :  45;
	namespace_stmt :  46;
	prep_stmt :  47;
	'namespace' :  322;
	using_stmt :  44;
	'link' :  336;
	'struct' :  333;
	'var' :  337;
	decl_stmts :  35;
	'class' :  334;
	function_stmt :  43;
	class_stmt@0_decl_1 :  31;
	'function' :  48;
	'end' : decl_stmts@0_rep_1 ::=  NULL;
	'constant' :  335;
	class_stmt :  42;

State 35 : 
	'end' :  36;

State 36 : 
	ENDL :  37;

State 37 : 
	CHAR : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'(' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'gcnew' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'return' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'*' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'using' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'false' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	NUM : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'null' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'foreach' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'for' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	%END% : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'local' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	ENDL : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'while' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	STR : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'}' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'{' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'package' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'-' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'function' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'import' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'end' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'block' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	PREP : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'until' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'[' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'--' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'switch' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'true' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'global' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'catch' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'namespace' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'new' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'++' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'link' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'break' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'continue' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'typeid' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'struct' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'try' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'else' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'!' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'var' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	ID : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'class' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'&' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'loop' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'constant' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'throw' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;
	'if' : class_stmt ::=  class_stmt@0_decl_1 ID class_stmt@0_opt_3 ENDL decl_stmts 'end' ENDL;

State 38 : 
	'end' : decl_stmts ::=  decl_stmts@0_rep_1;

State 39 : 
	PREP : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'struct' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	ENDL :  420;
	decl_stmts@0_rep_1@0_rep_2 :  40;
	'var' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'using' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'class' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'namespace' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'function' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'constant' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'link' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'end' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;

State 40 : 
	decl_stmts@0_rep_1 :  41;
	declaration :  39;
	PREP :  331;
	var_stmt@0_decl_1 :  328;
	'using' :  309;
	var_stmt :  45;
	'namespace' :  322;
	namespace_stmt :  46;
	prep_stmt :  47;
	using_stmt :  44;
	'link' :  336;
	'struct' :  333;
	'var' :  337;
	'class' :  334;
	function_stmt :  43;
	class_stmt@0_decl_1 :  31;
	'end' : decl_stmts@0_rep_1 ::=  NULL;
	'function' :  48;
	'constant' :  335;
	class_stmt :  42;

State 41 : 
	'end' : decl_stmts@0_rep_1 ::=  declaration decl_stmts@0_rep_1@0_rep_2 decl_stmts@0_rep_1;

State 42 : 
	PREP : declaration ::=  class_stmt;
	'struct' : declaration ::=  class_stmt;
	ENDL : declaration ::=  class_stmt;
	'var' : declaration ::=  class_stmt;
	'using' : declaration ::=  class_stmt;
	'class' : declaration ::=  class_stmt;
	'namespace' : declaration ::=  class_stmt;
	'end' : declaration ::=  class_stmt;
	'constant' : declaration ::=  class_stmt;
	'function' : declaration ::=  class_stmt;
	'link' : declaration ::=  class_stmt;

State 43 : 
	PREP : declaration ::=  function_stmt;
	'struct' : declaration ::=  function_stmt;
	ENDL : declaration ::=  function_stmt;
	'var' : declaration ::=  function_stmt;
	'using' : declaration ::=  function_stmt;
	'class' : declaration ::=  function_stmt;
	'namespace' : declaration ::=  function_stmt;
	'end' : declaration ::=  function_stmt;
	'constant' : declaration ::=  function_stmt;
	'function' : declaration ::=  function_stmt;
	'link' : declaration ::=  function_stmt;

State 44 : 
	PREP : declaration ::=  using_stmt;
	'struct' : declaration ::=  using_stmt;
	ENDL : declaration ::=  using_stmt;
	'var' : declaration ::=  using_stmt;
	'using' : declaration ::=  using_stmt;
	'class' : declaration ::=  using_stmt;
	'namespace' : declaration ::=  using_stmt;
	'end' : declaration ::=  using_stmt;
	'constant' : declaration ::=  using_stmt;
	'function' : declaration ::=  using_stmt;
	'link' : declaration ::=  using_stmt;

State 45 : 
	PREP : declaration ::=  var_stmt;
	'struct' : declaration ::=  var_stmt;
	ENDL : declaration ::=  var_stmt;
	'var' : declaration ::=  var_stmt;
	'using' : declaration ::=  var_stmt;
	'class' : declaration ::=  var_stmt;
	'namespace' : declaration ::=  var_stmt;
	'end' : declaration ::=  var_stmt;
	'constant' : declaration ::=  var_stmt;
	'function' : declaration ::=  var_stmt;
	'link' : declaration ::=  var_stmt;

State 46 : 
	PREP : declaration ::=  namespace_stmt;
	'struct' : declaration ::=  namespace_stmt;
	ENDL : declaration ::=  namespace_stmt;
	'var' : declaration ::=  namespace_stmt;
	'using' : declaration ::=  namespace_stmt;
	'class' : declaration ::=  namespace_stmt;
	'namespace' : declaration ::=  namespace_stmt;
	'end' : declaration ::=  namespace_stmt;
	'constant' : declaration ::=  namespace_stmt;
	'function' : declaration ::=  namespace_stmt;
	'link' : declaration ::=  namespace_stmt;

State 47 : 
	PREP : declaration ::=  prep_stmt;
	'struct' : declaration ::=  prep_stmt;
	ENDL : declaration ::=  prep_stmt;
	'var' : declaration ::=  prep_stmt;
	'using' : declaration ::=  prep_stmt;
	'class' : declaration ::=  prep_stmt;
	'namespace' : declaration ::=  prep_stmt;
	'end' : declaration ::=  prep_stmt;
	'constant' : declaration ::=  prep_stmt;
	'function' : declaration ::=  prep_stmt;
	'link' : declaration ::=  prep_stmt;

State 48 : 
	ID :  49;

State 49 : 
	'(' :  50;

State 50 : 
	function_stmt@0_opt_4 :  51;
	')' : function_stmt@0_opt_4 ::=  NULL;
	argument_list :  419;
	argument_list@1_opt_1 :  367;
	'=' :  377;
	ID : argument_list@1_opt_1 ::=  NULL;
	'...' :  375;

State 51 : 
	')' :  52;

State 52 : 
	ENDL : function_stmt@0_opt_6 ::=  NULL;
	'{' : function_stmt@0_opt_6 ::=  NULL;
	function_stmt@0_opt_6 :  53;
	'override' :  418;

State 53 : 
	function_body@0_decl_1 :  55;
	ENDL :  56;
	'{' :  415;
	function_body :  54;

State 54 : 
	CHAR : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'(' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'gcnew' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'return' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'*' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'using' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'false' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	NUM : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'null' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'foreach' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'for' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	%END% : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'local' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	ENDL : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'while' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	STR : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'}' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'{' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'package' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'-' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'function' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'import' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'end' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'block' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	PREP : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'until' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'[' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'--' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'switch' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'true' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'global' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'catch' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'namespace' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'new' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'++' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'link' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'break' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'continue' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'typeid' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'struct' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'try' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'else' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'!' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'var' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	ID : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'class' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'&' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'loop' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'constant' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'throw' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;
	'if' : function_stmt ::=  'function' ID '(' function_stmt@0_opt_4 ')' function_stmt@0_opt_6 function_body;

State 55 : 
	'(' : function_body ::=  function_body@0_decl_1;
	CHAR : function_body ::=  function_body@0_decl_1;
	'gcnew' : function_body ::=  function_body@0_decl_1;
	'return' : function_body ::=  function_body@0_decl_1;
	'*' : function_body ::=  function_body@0_decl_1;
	'using' : function_body ::=  function_body@0_decl_1;
	NUM : function_body ::=  function_body@0_decl_1;
	'for' : function_body ::=  function_body@0_decl_1;
	%END% : function_body ::=  function_body@0_decl_1;
	'null' : function_body ::=  function_body@0_decl_1;
	'foreach' : function_body ::=  function_body@0_decl_1;
	'false' : function_body ::=  function_body@0_decl_1;
	'while' : function_body ::=  function_body@0_decl_1;
	'local' : function_body ::=  function_body@0_decl_1;
	ENDL : function_body ::=  function_body@0_decl_1;
	STR : function_body ::=  function_body@0_decl_1;
	'}' : function_body ::=  function_body@0_decl_1;
	'{' : function_body ::=  function_body@0_decl_1;
	'package' : function_body ::=  function_body@0_decl_1;
	'-' : function_body ::=  function_body@0_decl_1;
	'end' : function_body ::=  function_body@0_decl_1;
	'import' : function_body ::=  function_body@0_decl_1;
	'function' : function_body ::=  function_body@0_decl_1;
	'block' : function_body ::=  function_body@0_decl_1;
	PREP : function_body ::=  function_body@0_decl_1;
	'catch' : function_body ::=  function_body@0_decl_1;
	'until' : function_body ::=  function_body@0_decl_1;
	'--' : function_body ::=  function_body@0_decl_1;
	'[' : function_body ::=  function_body@0_decl_1;
	'switch' : function_body ::=  function_body@0_decl_1;
	'true' : function_body ::=  function_body@0_decl_1;
	'global' : function_body ::=  function_body@0_decl_1;
	'namespace' : function_body ::=  function_body@0_decl_1;
	'new' : function_body ::=  function_body@0_decl_1;
	'++' : function_body ::=  function_body@0_decl_1;
	'break' : function_body ::=  function_body@0_decl_1;
	'link' : function_body ::=  function_body@0_decl_1;
	'continue' : function_body ::=  function_body@0_decl_1;
	'typeid' : function_body ::=  function_body@0_decl_1;
	'struct' : function_body ::=  function_body@0_decl_1;
	'try' : function_body ::=  function_body@0_decl_1;
	'!' : function_body ::=  function_body@0_decl_1;
	ID : function_body ::=  function_body@0_decl_1;
	'&' : function_body ::=  function_body@0_decl_1;
	'else' : function_body ::=  function_body@0_decl_1;
	'var' : function_body ::=  function_body@0_decl_1;
	'class' : function_body ::=  function_body@0_decl_1;
	'loop' : function_body ::=  function_body@0_decl_1;
	'throw' : function_body ::=  function_body@0_decl_1;
	'constant' : function_body ::=  function_body@0_decl_1;
	'if' : function_body ::=  function_body@0_decl_1;

State 56 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  57;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 57 : 
	'end' :  58;

State 58 : 
	ENDL :  59;

State 59 : 
	CHAR : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'(' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'gcnew' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'return' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'*' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'using' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'false' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	NUM : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'null' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'foreach' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'for' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	%END% : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'local' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	ENDL : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'while' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	STR : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'}' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'{' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'package' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'-' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'function' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'import' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'end' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'block' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	PREP : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'until' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'[' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'--' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'switch' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'true' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'global' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'catch' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'namespace' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'new' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'++' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'link' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'break' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'continue' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'typeid' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'struct' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'try' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'else' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'!' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'var' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	ID : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'class' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'&' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'loop' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'constant' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'throw' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'if' : function_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;

State 60 : 
	basic_expr :  68;
	expr :  63;
	'(' :  163;
	unary_op :  132;
	'gcnew' :  136;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	';' : throw_stmt@0_opt_2 ::=  NULL;
	NUM :  148;
	object :  149;
	throw_stmt@0_opt_2 :  61;
	constant :  134;
	CHAR :  153;
	element :  154;
	ENDL : throw_stmt@0_opt_2 ::=  NULL;
	visit_expr :  135;
	'local' :  156;
	unary_expr :  102;
	STR :  157;
	array :  178;
	element@0_decl_1 :  181;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	lambda_expr :  69;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	single_expr :  64;
	'!' :  138;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	ID :  191;
	unary_expr@1_decl_1 :  115;

State 61 : 
	endline :  62;
	';' :  29;
	ENDL :  30;

State 62 : 
	CHAR : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'(' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'gcnew' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'return' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'*' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'using' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'false' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	NUM : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'null' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'foreach' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'for' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	%END% : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'local' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'while' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	ENDL : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	STR : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'}' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'{' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'package' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'-' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'function' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'block' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'end' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'import' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	PREP : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'until' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'[' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'--' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'switch' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'true' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'global' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'catch' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'namespace' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'new' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'++' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'break' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'link' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'continue' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'typeid' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'struct' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'try' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'else' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'!' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	ID : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'&' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'var' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'class' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'loop' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'throw' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'constant' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;
	'if' : throw_stmt ::=  'throw' throw_stmt@0_opt_2 endline;

State 63 : 
	ENDL : throw_stmt@0_opt_2 ::=  expr;
	';' : throw_stmt@0_opt_2 ::=  expr;

State 64 : 
	ENDL : expr@0_opt_2 ::=  NULL;
	')' : expr@0_opt_2 ::=  NULL;
	';' : expr@0_opt_2 ::=  NULL;
	'}' : expr@0_opt_2 ::=  NULL;
	expr@0_opt_2 :  65;
	',' :  66;

State 65 : 
	ENDL : expr ::=  single_expr expr@0_opt_2;
	')' : expr ::=  single_expr expr@0_opt_2;
	';' : expr ::=  single_expr expr@0_opt_2;
	'}' : expr ::=  single_expr expr@0_opt_2;

State 66 : 
	basic_expr :  68;
	expr :  67;
	'(' :  163;
	unary_op :  132;
	'gcnew' :  136;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	CHAR :  153;
	constant :  134;
	element@0_decl_1 :  181;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	lambda_expr :  69;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	single_expr :  64;
	'!' :  138;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	ID :  191;
	unary_expr@1_decl_1 :  115;

State 67 : 
	ENDL : expr@0_opt_2 ::=  ',' expr;
	')' : expr@0_opt_2 ::=  ',' expr;
	';' : expr@0_opt_2 ::=  ',' expr;
	'}' : expr@0_opt_2 ::=  ',' expr;

State 68 : 
	']' : single_expr ::=  basic_expr;
	')' : single_expr ::=  basic_expr;
	ENDL : single_expr ::=  basic_expr;
	';' : single_expr ::=  basic_expr;
	'do' : single_expr ::=  basic_expr;
	',' : single_expr ::=  basic_expr;
	'}' : single_expr ::=  basic_expr;

State 69 : 
	']' : single_expr ::=  lambda_expr;
	')' : single_expr ::=  lambda_expr;
	ENDL : single_expr ::=  lambda_expr;
	';' : single_expr ::=  lambda_expr;
	'do' : single_expr ::=  lambda_expr;
	',' : single_expr ::=  lambda_expr;
	'}' : single_expr ::=  lambda_expr;

State 70 : 
	'%=' :  408;
	'=' :  414;
	']' : basic_expr@1_opt_2 ::=  NULL;
	basic_expr@1_opt_2 :  71;
	')' : basic_expr@1_opt_2 ::=  NULL;
	';' : basic_expr@1_opt_2 ::=  NULL;
	'*=' :  410;
	'+=' :  412;
	'/=' :  409;
	':=' :  413;
	ENDL : basic_expr@1_opt_2 ::=  NULL;
	'}' : basic_expr@1_opt_2 ::=  NULL;
	'-=' :  411;
	asi_op :  72;
	'^=' :  407;
	'do' : basic_expr@1_opt_2 ::=  NULL;
	',' : basic_expr@1_opt_2 ::=  NULL;

State 71 : 
	']' : basic_expr ::=  cond_expr basic_expr@1_opt_2;
	ENDL : basic_expr ::=  cond_expr basic_expr@1_opt_2;
	';' : basic_expr ::=  cond_expr basic_expr@1_opt_2;
	'do' : basic_expr ::=  cond_expr basic_expr@1_opt_2;
	')' : basic_expr ::=  cond_expr basic_expr@1_opt_2;
	',' : basic_expr ::=  cond_expr basic_expr@1_opt_2;
	'}' : basic_expr ::=  cond_expr basic_expr@1_opt_2;

State 72 : 
	basic_expr :  68;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	lambda_expr :  69;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	single_expr :  73;
	'!' :  138;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	ID :  191;
	unary_expr@1_decl_1 :  115;

State 73 : 
	ENDL : basic_expr@1_opt_2 ::=  asi_op single_expr;
	')' : basic_expr@1_opt_2 ::=  asi_op single_expr;
	';' : basic_expr@1_opt_2 ::=  asi_op single_expr;
	'}' : basic_expr@1_opt_2 ::=  asi_op single_expr;
	']' : basic_expr@1_opt_2 ::=  asi_op single_expr;
	'do' : basic_expr@1_opt_2 ::=  asi_op single_expr;
	',' : basic_expr@1_opt_2 ::=  asi_op single_expr;

State 74 : 
	'=' :  75;

State 75 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	cond_expr :  76;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 76 : 
	']' : basic_expr ::=  var_bind '=' cond_expr;
	ENDL : basic_expr ::=  var_bind '=' cond_expr;
	';' : basic_expr ::=  var_bind '=' cond_expr;
	'do' : basic_expr ::=  var_bind '=' cond_expr;
	')' : basic_expr ::=  var_bind '=' cond_expr;
	',' : basic_expr ::=  var_bind '=' cond_expr;
	'}' : basic_expr ::=  var_bind '=' cond_expr;

State 77 : 
	'=' : cond_expr@0_opt_2 ::=  NULL;
	'%=' : cond_expr@0_opt_2 ::=  NULL;
	'+=' : cond_expr@0_opt_2 ::=  NULL;
	']' : cond_expr@0_opt_2 ::=  NULL;
	')' : cond_expr@0_opt_2 ::=  NULL;
	':=' : cond_expr@0_opt_2 ::=  NULL;
	'*=' : cond_expr@0_opt_2 ::=  NULL;
	';' : cond_expr@0_opt_2 ::=  NULL;
	'/=' : cond_expr@0_opt_2 ::=  NULL;
	ENDL : cond_expr@0_opt_2 ::=  NULL;
	cond_postfix :  79;
	'?' :  403;
	'}' : cond_expr@0_opt_2 ::=  NULL;
	'-=' : cond_expr@0_opt_2 ::=  NULL;
	cond_expr@0_opt_2 :  78;
	'^=' : cond_expr@0_opt_2 ::=  NULL;
	':' :  80;
	'do' : cond_expr@0_opt_2 ::=  NULL;
	',' : cond_expr@0_opt_2 ::=  NULL;

State 78 : 
	'=' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	'%=' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	'+=' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	']' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	')' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	':=' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	'*=' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	';' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	'/=' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	ENDL : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	'}' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	'-=' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	'^=' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	'do' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;
	',' : cond_expr ::=  logic_or_expr cond_expr@0_opt_2;

State 79 : 
	'=' : cond_expr@0_opt_2 ::=  cond_postfix;
	'%=' : cond_expr@0_opt_2 ::=  cond_postfix;
	'+=' : cond_expr@0_opt_2 ::=  cond_postfix;
	']' : cond_expr@0_opt_2 ::=  cond_postfix;
	')' : cond_expr@0_opt_2 ::=  cond_postfix;
	':=' : cond_expr@0_opt_2 ::=  cond_postfix;
	'*=' : cond_expr@0_opt_2 ::=  cond_postfix;
	';' : cond_expr@0_opt_2 ::=  cond_postfix;
	'/=' : cond_expr@0_opt_2 ::=  cond_postfix;
	ENDL : cond_expr@0_opt_2 ::=  cond_postfix;
	'}' : cond_expr@0_opt_2 ::=  cond_postfix;
	'-=' : cond_expr@0_opt_2 ::=  cond_postfix;
	'^=' : cond_expr@0_opt_2 ::=  cond_postfix;
	'do' : cond_expr@0_opt_2 ::=  cond_postfix;
	',' : cond_expr@0_opt_2 ::=  cond_postfix;

State 80 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  81;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 81 : 
	'%=' : cond_postfix ::=  ':' logic_or_expr;
	'=' : cond_postfix ::=  ':' logic_or_expr;
	']' : cond_postfix ::=  ':' logic_or_expr;
	'+=' : cond_postfix ::=  ':' logic_or_expr;
	';' : cond_postfix ::=  ':' logic_or_expr;
	')' : cond_postfix ::=  ':' logic_or_expr;
	':=' : cond_postfix ::=  ':' logic_or_expr;
	'*=' : cond_postfix ::=  ':' logic_or_expr;
	'/=' : cond_postfix ::=  ':' logic_or_expr;
	ENDL : cond_postfix ::=  ':' logic_or_expr;
	'}' : cond_postfix ::=  ':' logic_or_expr;
	'-=' : cond_postfix ::=  ':' logic_or_expr;
	'^=' : cond_postfix ::=  ':' logic_or_expr;
	'do' : cond_postfix ::=  ':' logic_or_expr;
	',' : cond_postfix ::=  ':' logic_or_expr;

State 82 : 
	'||' :  402;
	'%=' : logic_or_expr@0_opt_2 ::=  NULL;
	'=' : logic_or_expr@0_opt_2 ::=  NULL;
	']' : logic_or_expr@0_opt_2 ::=  NULL;
	'+=' : logic_or_expr@0_opt_2 ::=  NULL;
	';' : logic_or_expr@0_opt_2 ::=  NULL;
	')' : logic_or_expr@0_opt_2 ::=  NULL;
	':=' : logic_or_expr@0_opt_2 ::=  NULL;
	'*=' : logic_or_expr@0_opt_2 ::=  NULL;
	'/=' : logic_or_expr@0_opt_2 ::=  NULL;
	'or' :  401;
	'?' : logic_or_expr@0_opt_2 ::=  NULL;
	ENDL : logic_or_expr@0_opt_2 ::=  NULL;
	'}' : logic_or_expr@0_opt_2 ::=  NULL;
	'-=' : logic_or_expr@0_opt_2 ::=  NULL;
	logic_or_expr@0_opt_2 :  83;
	'^=' : logic_or_expr@0_opt_2 ::=  NULL;
	':' : logic_or_expr@0_opt_2 ::=  NULL;
	logic_or_expr@0_opt_2@0_decl_1 :  84;
	'do' : logic_or_expr@0_opt_2 ::=  NULL;
	',' : logic_or_expr@0_opt_2 ::=  NULL;

State 83 : 
	'=' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	'%=' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	'+=' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	']' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	')' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	':=' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	'*=' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	';' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	'/=' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	ENDL : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	'?' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	'}' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	'-=' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	'^=' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	':' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	'do' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;
	',' : logic_or_expr ::=  logic_and_expr logic_or_expr@0_opt_2;

State 84 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  85;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 85 : 
	'%=' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	'=' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	']' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	'+=' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	';' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	')' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	':=' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	'*=' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	'/=' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	'?' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	ENDL : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	'}' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	'-=' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	'^=' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	':' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	'do' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;
	',' : logic_or_expr@0_opt_2 ::=  logic_or_expr@0_opt_2@0_decl_1 logic_or_expr;

State 86 : 
	'||' : logic_and_expr@0_opt_2 ::=  NULL;
	logic_and_expr@0_opt_2 :  87;
	logic_and_expr@0_opt_2@0_decl_1 :  88;
	'=' : logic_and_expr@0_opt_2 ::=  NULL;
	'%=' : logic_and_expr@0_opt_2 ::=  NULL;
	'&&' :  400;
	'+=' : logic_and_expr@0_opt_2 ::=  NULL;
	']' : logic_and_expr@0_opt_2 ::=  NULL;
	')' : logic_and_expr@0_opt_2 ::=  NULL;
	':=' : logic_and_expr@0_opt_2 ::=  NULL;
	'*=' : logic_and_expr@0_opt_2 ::=  NULL;
	';' : logic_and_expr@0_opt_2 ::=  NULL;
	'or' : logic_and_expr@0_opt_2 ::=  NULL;
	'/=' : logic_and_expr@0_opt_2 ::=  NULL;
	ENDL : logic_and_expr@0_opt_2 ::=  NULL;
	'?' : logic_and_expr@0_opt_2 ::=  NULL;
	'and' :  399;
	'}' : logic_and_expr@0_opt_2 ::=  NULL;
	'-=' : logic_and_expr@0_opt_2 ::=  NULL;
	'^=' : logic_and_expr@0_opt_2 ::=  NULL;
	':' : logic_and_expr@0_opt_2 ::=  NULL;
	'do' : logic_and_expr@0_opt_2 ::=  NULL;
	',' : logic_and_expr@0_opt_2 ::=  NULL;

State 87 : 
	'||' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'%=' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'=' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	']' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'+=' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	';' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	')' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	':=' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'*=' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'/=' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'or' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'?' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	ENDL : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'}' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'-=' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'^=' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	':' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	'do' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;
	',' : logic_and_expr ::=  equal_expr logic_and_expr@0_opt_2;

State 88 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	logic_and_expr :  89;
	unary_expr@1_decl_1 :  115;

State 89 : 
	'||' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'=' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'%=' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'+=' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	']' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	')' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	':=' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'*=' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	';' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'or' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'/=' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	ENDL : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'?' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'}' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'-=' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'^=' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	':' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	'do' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;
	',' : logic_and_expr@0_opt_2 ::=  logic_and_expr@0_opt_2@0_decl_1 logic_and_expr;

State 90 : 
	'||' : equal_expr@0_opt_2 ::=  NULL;
	equal_expr@0_opt_2 :  91;
	equal_expr@0_opt_2@0_decl_1 :  92;
	'%=' : equal_expr@0_opt_2 ::=  NULL;
	'=' : equal_expr@0_opt_2 ::=  NULL;
	'&&' : equal_expr@0_opt_2 ::=  NULL;
	']' : equal_expr@0_opt_2 ::=  NULL;
	'+=' : equal_expr@0_opt_2 ::=  NULL;
	';' : equal_expr@0_opt_2 ::=  NULL;
	')' : equal_expr@0_opt_2 ::=  NULL;
	':=' : equal_expr@0_opt_2 ::=  NULL;
	'*=' : equal_expr@0_opt_2 ::=  NULL;
	'/=' : equal_expr@0_opt_2 ::=  NULL;
	'or' : equal_expr@0_opt_2 ::=  NULL;
	'!=' :  397;
	'?' : equal_expr@0_opt_2 ::=  NULL;
	ENDL : equal_expr@0_opt_2 ::=  NULL;
	'and' : equal_expr@0_opt_2 ::=  NULL;
	'}' : equal_expr@0_opt_2 ::=  NULL;
	'-=' : equal_expr@0_opt_2 ::=  NULL;
	'^=' : equal_expr@0_opt_2 ::=  NULL;
	':' : equal_expr@0_opt_2 ::=  NULL;
	'do' : equal_expr@0_opt_2 ::=  NULL;
	',' : equal_expr@0_opt_2 ::=  NULL;
	'==' :  398;

State 91 : 
	'||' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'=' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'%=' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'&&' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'+=' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	']' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	')' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	':=' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'*=' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	';' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'/=' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'or' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	ENDL : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'?' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'and' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'}' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'-=' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'^=' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	':' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	'do' : equal_expr ::=  relat_expr equal_expr@0_opt_2;
	',' : equal_expr ::=  relat_expr equal_expr@0_opt_2;

State 92 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	'typeid' :  144;
	equal_expr :  93;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	unary_expr@1_decl_1 :  115;

State 93 : 
	'||' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'%=' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'=' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'&&' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	']' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'+=' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	';' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	')' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	':=' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'*=' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'/=' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'or' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'?' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	ENDL : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'and' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'}' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'-=' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'^=' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	':' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	'do' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;
	',' : equal_expr@0_opt_2 ::=  equal_expr@0_opt_2@0_decl_1 equal_expr;

State 94 : 
	'<' :  395;
	'<=' :  393;
	'>=' :  394;
	relat_expr@0_opt_2@0_decl_1 :  96;
	'+=' : relat_expr@0_opt_2 ::=  NULL;
	']' : relat_expr@0_opt_2 ::=  NULL;
	';' : relat_expr@0_opt_2 ::=  NULL;
	ENDL : relat_expr@0_opt_2 ::=  NULL;
	'?' : relat_expr@0_opt_2 ::=  NULL;
	'}' : relat_expr@0_opt_2 ::=  NULL;
	'^=' : relat_expr@0_opt_2 ::=  NULL;
	'do' : relat_expr@0_opt_2 ::=  NULL;
	',' : relat_expr@0_opt_2 ::=  NULL;
	'==' : relat_expr@0_opt_2 ::=  NULL;
	'||' : relat_expr@0_opt_2 ::=  NULL;
	'=' : relat_expr@0_opt_2 ::=  NULL;
	'%=' : relat_expr@0_opt_2 ::=  NULL;
	'&&' : relat_expr@0_opt_2 ::=  NULL;
	')' : relat_expr@0_opt_2 ::=  NULL;
	'!=' : relat_expr@0_opt_2 ::=  NULL;
	':=' : relat_expr@0_opt_2 ::=  NULL;
	'*=' : relat_expr@0_opt_2 ::=  NULL;
	'/=' : relat_expr@0_opt_2 ::=  NULL;
	'or' : relat_expr@0_opt_2 ::=  NULL;
	'>' :  396;
	relat_expr@0_opt_2 :  95;
	'and' : relat_expr@0_opt_2 ::=  NULL;
	'-=' : relat_expr@0_opt_2 ::=  NULL;
	':' : relat_expr@0_opt_2 ::=  NULL;

State 95 : 
	'||' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'%=' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'=' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'&&' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	']' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'+=' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	')' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	':=' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'!=' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	';' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'or' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'/=' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'*=' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'?' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	ENDL : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'and' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'}' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'-=' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'^=' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	':' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'do' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	',' : relat_expr ::=  add_expr relat_expr@0_opt_2;
	'==' : relat_expr ::=  add_expr relat_expr@0_opt_2;

State 96 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  97;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	'typeid' :  144;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	unary_expr@1_decl_1 :  115;

State 97 : 
	'||' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'=' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'%=' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'&&' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'+=' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	']' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	')' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'!=' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	':=' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'*=' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'/=' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'or' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	';' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	ENDL : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'?' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'and' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'}' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'-=' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'^=' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	':' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'do' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	',' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;
	'==' : relat_expr@0_opt_2 ::=  relat_expr@0_opt_2@0_decl_1 relat_expr;

State 98 : 
	'<' : add_expr@0_opt_2 ::=  NULL;
	'<=' : add_expr@0_opt_2 ::=  NULL;
	'>=' : add_expr@0_opt_2 ::=  NULL;
	']' : add_expr@0_opt_2 ::=  NULL;
	'+=' : add_expr@0_opt_2 ::=  NULL;
	';' : add_expr@0_opt_2 ::=  NULL;
	'+' :  392;
	'?' : add_expr@0_opt_2 ::=  NULL;
	ENDL : add_expr@0_opt_2 ::=  NULL;
	add_expr@0_opt_2@0_decl_1 :  100;
	'}' : add_expr@0_opt_2 ::=  NULL;
	'^=' : add_expr@0_opt_2 ::=  NULL;
	'-' :  391;
	'do' : add_expr@0_opt_2 ::=  NULL;
	',' : add_expr@0_opt_2 ::=  NULL;
	'==' : add_expr@0_opt_2 ::=  NULL;
	'||' : add_expr@0_opt_2 ::=  NULL;
	'=' : add_expr@0_opt_2 ::=  NULL;
	'%=' : add_expr@0_opt_2 ::=  NULL;
	'&&' : add_expr@0_opt_2 ::=  NULL;
	')' : add_expr@0_opt_2 ::=  NULL;
	':=' : add_expr@0_opt_2 ::=  NULL;
	'!=' : add_expr@0_opt_2 ::=  NULL;
	'*=' : add_expr@0_opt_2 ::=  NULL;
	'or' : add_expr@0_opt_2 ::=  NULL;
	'>' : add_expr@0_opt_2 ::=  NULL;
	'/=' : add_expr@0_opt_2 ::=  NULL;
	add_expr@0_opt_2 :  99;
	'and' : add_expr@0_opt_2 ::=  NULL;
	'-=' : add_expr@0_opt_2 ::=  NULL;
	':' : add_expr@0_opt_2 ::=  NULL;

State 99 : 
	'||' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'<' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'>=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'%=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'<=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	']' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'&&' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'+=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'!=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	':=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'/=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'*=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	';' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'or' : add_expr ::=  mul_expr add_expr@0_opt_2;
	ENDL : add_expr ::=  mul_expr add_expr@0_opt_2;
	'?' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'and' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'}' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'-=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'>' : add_expr ::=  mul_expr add_expr@0_opt_2;
	')' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'^=' : add_expr ::=  mul_expr add_expr@0_opt_2;
	':' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'do' : add_expr ::=  mul_expr add_expr@0_opt_2;
	',' : add_expr ::=  mul_expr add_expr@0_opt_2;
	'==' : add_expr ::=  mul_expr add_expr@0_opt_2;

State 100 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	'typeid' :  144;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  101;
	unary_expr@1_decl_1 :  115;

State 101 : 
	'<' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'||' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'<=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'%=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	']' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'&&' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	')' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	';' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'>=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	':=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'!=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'>' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'+=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'or' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'/=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'?' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	ENDL : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'and' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'}' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'-=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'*=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'^=' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	':' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'do' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	',' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;
	'==' : add_expr@0_opt_2 ::=  add_expr@0_opt_2@0_decl_1 add_expr;

State 102 : 
	'<' : mul_expr@0_opt_2 ::=  NULL;
	'/' :  389;
	'>=' : mul_expr@0_opt_2 ::=  NULL;
	'<=' : mul_expr@0_opt_2 ::=  NULL;
	'*' :  390;
	']' : mul_expr@0_opt_2 ::=  NULL;
	'+=' : mul_expr@0_opt_2 ::=  NULL;
	';' : mul_expr@0_opt_2 ::=  NULL;
	'+' : mul_expr@0_opt_2 ::=  NULL;
	ENDL : mul_expr@0_opt_2 ::=  NULL;
	'?' : mul_expr@0_opt_2 ::=  NULL;
	'}' : mul_expr@0_opt_2 ::=  NULL;
	'^=' : mul_expr@0_opt_2 ::=  NULL;
	'-' : mul_expr@0_opt_2 ::=  NULL;
	'do' : mul_expr@0_opt_2 ::=  NULL;
	',' : mul_expr@0_opt_2 ::=  NULL;
	'==' : mul_expr@0_opt_2 ::=  NULL;
	'||' : mul_expr@0_opt_2 ::=  NULL;
	'=' : mul_expr@0_opt_2 ::=  NULL;
	'%=' : mul_expr@0_opt_2 ::=  NULL;
	'&&' : mul_expr@0_opt_2 ::=  NULL;
	')' : mul_expr@0_opt_2 ::=  NULL;
	'!=' : mul_expr@0_opt_2 ::=  NULL;
	'*=' : mul_expr@0_opt_2 ::=  NULL;
	':=' : mul_expr@0_opt_2 ::=  NULL;
	'or' : mul_expr@0_opt_2 ::=  NULL;
	'/=' : mul_expr@0_opt_2 ::=  NULL;
	'>' : mul_expr@0_opt_2 ::=  NULL;
	mul_expr@0_opt_2 :  103;
	mul_expr@0_opt_2@0_decl_1 :  104;
	'and' : mul_expr@0_opt_2 ::=  NULL;
	'^' :  387;
	'-=' : mul_expr@0_opt_2 ::=  NULL;
	'%' :  388;
	':' : mul_expr@0_opt_2 ::=  NULL;

State 103 : 
	'<' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'<=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'>=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'+=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	']' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	';' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'+' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'?' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	ENDL : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'}' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'^=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'-' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'do' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	',' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'==' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'||' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'%=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'&&' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	')' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	':=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'!=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'*=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'/=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'>' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'or' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'and' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	'-=' : mul_expr ::=  unary_expr mul_expr@0_opt_2;
	':' : mul_expr ::=  unary_expr mul_expr@0_opt_2;

State 104 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  105;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	'typeid' :  144;
	'!' :  138;
	ID :  191;
	'&' :  140;
	unary_expr@1_decl_1 :  115;

State 105 : 
	'<' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'>=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'<=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	']' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'+=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	';' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'+' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	ENDL : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'?' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'}' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'^=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'-' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'do' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	',' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'==' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'||' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'%=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'&&' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	')' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'!=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'*=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	':=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'or' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'/=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'>' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'and' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	'-=' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;
	':' : mul_expr@0_opt_2 ::=  mul_expr@0_opt_2@0_decl_1 mul_expr;

State 106 : 
	'/' : unary_expr@2_opt_2 ::=  NULL;
	'<' : unary_expr@2_opt_2 ::=  NULL;
	'>=' : unary_expr@2_opt_2 ::=  NULL;
	'*' : unary_expr@2_opt_2 ::=  NULL;
	'<=' : unary_expr@2_opt_2 ::=  NULL;
	'+=' : unary_expr@2_opt_2 ::=  NULL;
	']' : unary_expr@2_opt_2 ::=  NULL;
	';' : unary_expr@2_opt_2 ::=  NULL;
	unary_expr@2_opt_2 :  107;
	'+' : unary_expr@2_opt_2 ::=  NULL;
	postfix_expr@0_decl_1 :  109;
	'...' :  112;
	'?' : unary_expr@2_opt_2 ::=  NULL;
	ENDL : unary_expr@2_opt_2 ::=  NULL;
	'}' : unary_expr@2_opt_2 ::=  NULL;
	'{' : unary_expr@2_opt_2 ::=  NULL;
	'^=' : unary_expr@2_opt_2 ::=  NULL;
	'-' : unary_expr@2_opt_2 ::=  NULL;
	'do' : unary_expr@2_opt_2 ::=  NULL;
	',' : unary_expr@2_opt_2 ::=  NULL;
	'==' : unary_expr@2_opt_2 ::=  NULL;
	'||' : unary_expr@2_opt_2 ::=  NULL;
	'--' :  113;
	'%=' : unary_expr@2_opt_2 ::=  NULL;
	'=' : unary_expr@2_opt_2 ::=  NULL;
	'&&' : unary_expr@2_opt_2 ::=  NULL;
	')' : unary_expr@2_opt_2 ::=  NULL;
	':=' : unary_expr@2_opt_2 ::=  NULL;
	'!=' : unary_expr@2_opt_2 ::=  NULL;
	'*=' : unary_expr@2_opt_2 ::=  NULL;
	'/=' : unary_expr@2_opt_2 ::=  NULL;
	'>' : unary_expr@2_opt_2 ::=  NULL;
	'or' : unary_expr@2_opt_2 ::=  NULL;
	postfix_expr :  108;
	'++' :  114;
	'^' : unary_expr@2_opt_2 ::=  NULL;
	'and' : unary_expr@2_opt_2 ::=  NULL;
	'-=' : unary_expr@2_opt_2 ::=  NULL;
	'%' : unary_expr@2_opt_2 ::=  NULL;
	':' : unary_expr@2_opt_2 ::=  NULL;

State 107 : 
	'<' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'/' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'<=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'>=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'*' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	']' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'+=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	';' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'+' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	ENDL : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'?' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'}' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'{' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'^=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'-' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'do' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	',' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'==' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'||' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'%=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'&&' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	')' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'!=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'*=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	':=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'or' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'/=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'>' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'and' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'^' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'-=' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	'%' : unary_expr ::=  prim_expr unary_expr@2_opt_2;
	':' : unary_expr ::=  prim_expr unary_expr@2_opt_2;

State 108 : 
	'/' : unary_expr@2_opt_2 ::=  postfix_expr;
	'<' : unary_expr@2_opt_2 ::=  postfix_expr;
	'>=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'*' : unary_expr@2_opt_2 ::=  postfix_expr;
	'<=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'+=' : unary_expr@2_opt_2 ::=  postfix_expr;
	']' : unary_expr@2_opt_2 ::=  postfix_expr;
	';' : unary_expr@2_opt_2 ::=  postfix_expr;
	'+' : unary_expr@2_opt_2 ::=  postfix_expr;
	'?' : unary_expr@2_opt_2 ::=  postfix_expr;
	ENDL : unary_expr@2_opt_2 ::=  postfix_expr;
	'}' : unary_expr@2_opt_2 ::=  postfix_expr;
	'{' : unary_expr@2_opt_2 ::=  postfix_expr;
	'^=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'-' : unary_expr@2_opt_2 ::=  postfix_expr;
	'do' : unary_expr@2_opt_2 ::=  postfix_expr;
	',' : unary_expr@2_opt_2 ::=  postfix_expr;
	'==' : unary_expr@2_opt_2 ::=  postfix_expr;
	'||' : unary_expr@2_opt_2 ::=  postfix_expr;
	'%=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'&&' : unary_expr@2_opt_2 ::=  postfix_expr;
	')' : unary_expr@2_opt_2 ::=  postfix_expr;
	':=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'!=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'*=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'/=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'>' : unary_expr@2_opt_2 ::=  postfix_expr;
	'or' : unary_expr@2_opt_2 ::=  postfix_expr;
	'^' : unary_expr@2_opt_2 ::=  postfix_expr;
	'and' : unary_expr@2_opt_2 ::=  postfix_expr;
	'-=' : unary_expr@2_opt_2 ::=  postfix_expr;
	'%' : unary_expr@2_opt_2 ::=  postfix_expr;
	':' : unary_expr@2_opt_2 ::=  postfix_expr;

State 109 : 
	'/' : postfix_expr@0_opt_2 ::=  NULL;
	'<' : postfix_expr@0_opt_2 ::=  NULL;
	'>=' : postfix_expr@0_opt_2 ::=  NULL;
	'*' : postfix_expr@0_opt_2 ::=  NULL;
	'<=' : postfix_expr@0_opt_2 ::=  NULL;
	'+=' : postfix_expr@0_opt_2 ::=  NULL;
	']' : postfix_expr@0_opt_2 ::=  NULL;
	';' : postfix_expr@0_opt_2 ::=  NULL;
	postfix_expr@0_decl_1 :  109;
	'+' : postfix_expr@0_opt_2 ::=  NULL;
	'...' :  112;
	'?' : postfix_expr@0_opt_2 ::=  NULL;
	ENDL : postfix_expr@0_opt_2 ::=  NULL;
	'}' : postfix_expr@0_opt_2 ::=  NULL;
	'{' : postfix_expr@0_opt_2 ::=  NULL;
	'^=' : postfix_expr@0_opt_2 ::=  NULL;
	postfix_expr@0_opt_2 :  110;
	'-' : postfix_expr@0_opt_2 ::=  NULL;
	'do' : postfix_expr@0_opt_2 ::=  NULL;
	',' : postfix_expr@0_opt_2 ::=  NULL;
	'==' : postfix_expr@0_opt_2 ::=  NULL;
	'||' : postfix_expr@0_opt_2 ::=  NULL;
	'--' :  113;
	'%=' : postfix_expr@0_opt_2 ::=  NULL;
	'=' : postfix_expr@0_opt_2 ::=  NULL;
	'&&' : postfix_expr@0_opt_2 ::=  NULL;
	')' : postfix_expr@0_opt_2 ::=  NULL;
	':=' : postfix_expr@0_opt_2 ::=  NULL;
	'!=' : postfix_expr@0_opt_2 ::=  NULL;
	'*=' : postfix_expr@0_opt_2 ::=  NULL;
	'/=' : postfix_expr@0_opt_2 ::=  NULL;
	'>' : postfix_expr@0_opt_2 ::=  NULL;
	'or' : postfix_expr@0_opt_2 ::=  NULL;
	postfix_expr :  111;
	'++' :  114;
	'^' : postfix_expr@0_opt_2 ::=  NULL;
	'and' : postfix_expr@0_opt_2 ::=  NULL;
	'-=' : postfix_expr@0_opt_2 ::=  NULL;
	'%' : postfix_expr@0_opt_2 ::=  NULL;
	':' : postfix_expr@0_opt_2 ::=  NULL;

State 110 : 
	'<' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'/' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'>=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'*' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'<=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	']' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'+=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	';' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'+' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	ENDL : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'?' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'}' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'{' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'^=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'-' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'do' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	',' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'==' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'||' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'%=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'&&' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	')' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'!=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'*=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	':=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'or' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'/=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'>' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'and' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'^' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'-=' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	'%' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;
	':' : postfix_expr ::=  postfix_expr@0_decl_1 postfix_expr@0_opt_2;

State 111 : 
	'/' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'<' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'>=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'*' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'<=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'+=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	']' : postfix_expr@0_opt_2 ::=  postfix_expr;
	';' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'+' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'?' : postfix_expr@0_opt_2 ::=  postfix_expr;
	ENDL : postfix_expr@0_opt_2 ::=  postfix_expr;
	'}' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'{' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'^=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'-' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'do' : postfix_expr@0_opt_2 ::=  postfix_expr;
	',' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'==' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'||' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'%=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'&&' : postfix_expr@0_opt_2 ::=  postfix_expr;
	')' : postfix_expr@0_opt_2 ::=  postfix_expr;
	':=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'!=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'*=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'/=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'>' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'or' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'^' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'and' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'-=' : postfix_expr@0_opt_2 ::=  postfix_expr;
	'%' : postfix_expr@0_opt_2 ::=  postfix_expr;
	':' : postfix_expr@0_opt_2 ::=  postfix_expr;

State 112 : 
	'/' : postfix_expr@0_decl_1 ::=  '...';
	'<' : postfix_expr@0_decl_1 ::=  '...';
	'<=' : postfix_expr@0_decl_1 ::=  '...';
	'*' : postfix_expr@0_decl_1 ::=  '...';
	'...' : postfix_expr@0_decl_1 ::=  '...';
	'+=' : postfix_expr@0_decl_1 ::=  '...';
	']' : postfix_expr@0_decl_1 ::=  '...';
	';' : postfix_expr@0_decl_1 ::=  '...';
	'>=' : postfix_expr@0_decl_1 ::=  '...';
	'+' : postfix_expr@0_decl_1 ::=  '...';
	'?' : postfix_expr@0_decl_1 ::=  '...';
	ENDL : postfix_expr@0_decl_1 ::=  '...';
	'}' : postfix_expr@0_decl_1 ::=  '...';
	'{' : postfix_expr@0_decl_1 ::=  '...';
	'^=' : postfix_expr@0_decl_1 ::=  '...';
	'-' : postfix_expr@0_decl_1 ::=  '...';
	'do' : postfix_expr@0_decl_1 ::=  '...';
	',' : postfix_expr@0_decl_1 ::=  '...';
	'==' : postfix_expr@0_decl_1 ::=  '...';
	'||' : postfix_expr@0_decl_1 ::=  '...';
	'--' : postfix_expr@0_decl_1 ::=  '...';
	'%=' : postfix_expr@0_decl_1 ::=  '...';
	'=' : postfix_expr@0_decl_1 ::=  '...';
	'&&' : postfix_expr@0_decl_1 ::=  '...';
	')' : postfix_expr@0_decl_1 ::=  '...';
	':=' : postfix_expr@0_decl_1 ::=  '...';
	'!=' : postfix_expr@0_decl_1 ::=  '...';
	'*=' : postfix_expr@0_decl_1 ::=  '...';
	'/=' : postfix_expr@0_decl_1 ::=  '...';
	'>' : postfix_expr@0_decl_1 ::=  '...';
	'or' : postfix_expr@0_decl_1 ::=  '...';
	'++' : postfix_expr@0_decl_1 ::=  '...';
	'^' : postfix_expr@0_decl_1 ::=  '...';
	'and' : postfix_expr@0_decl_1 ::=  '...';
	'-=' : postfix_expr@0_decl_1 ::=  '...';
	'%' : postfix_expr@0_decl_1 ::=  '...';
	':' : postfix_expr@0_decl_1 ::=  '...';

State 113 : 
	'/' : postfix_expr@0_decl_1 ::=  '--';
	'<' : postfix_expr@0_decl_1 ::=  '--';
	'<=' : postfix_expr@0_decl_1 ::=  '--';
	'*' : postfix_expr@0_decl_1 ::=  '--';
	'...' : postfix_expr@0_decl_1 ::=  '--';
	'+=' : postfix_expr@0_decl_1 ::=  '--';
	']' : postfix_expr@0_decl_1 ::=  '--';
	';' : postfix_expr@0_decl_1 ::=  '--';
	'>=' : postfix_expr@0_decl_1 ::=  '--';
	'+' : postfix_expr@0_decl_1 ::=  '--';
	'?' : postfix_expr@0_decl_1 ::=  '--';
	ENDL : postfix_expr@0_decl_1 ::=  '--';
	'}' : postfix_expr@0_decl_1 ::=  '--';
	'{' : postfix_expr@0_decl_1 ::=  '--';
	'^=' : postfix_expr@0_decl_1 ::=  '--';
	'-' : postfix_expr@0_decl_1 ::=  '--';
	'do' : postfix_expr@0_decl_1 ::=  '--';
	',' : postfix_expr@0_decl_1 ::=  '--';
	'==' : postfix_expr@0_decl_1 ::=  '--';
	'||' : postfix_expr@0_decl_1 ::=  '--';
	'--' : postfix_expr@0_decl_1 ::=  '--';
	'%=' : postfix_expr@0_decl_1 ::=  '--';
	'=' : postfix_expr@0_decl_1 ::=  '--';
	'&&' : postfix_expr@0_decl_1 ::=  '--';
	')' : postfix_expr@0_decl_1 ::=  '--';
	':=' : postfix_expr@0_decl_1 ::=  '--';
	'!=' : postfix_expr@0_decl_1 ::=  '--';
	'*=' : postfix_expr@0_decl_1 ::=  '--';
	'/=' : postfix_expr@0_decl_1 ::=  '--';
	'>' : postfix_expr@0_decl_1 ::=  '--';
	'or' : postfix_expr@0_decl_1 ::=  '--';
	'++' : postfix_expr@0_decl_1 ::=  '--';
	'^' : postfix_expr@0_decl_1 ::=  '--';
	'and' : postfix_expr@0_decl_1 ::=  '--';
	'-=' : postfix_expr@0_decl_1 ::=  '--';
	'%' : postfix_expr@0_decl_1 ::=  '--';
	':' : postfix_expr@0_decl_1 ::=  '--';

State 114 : 
	'/' : postfix_expr@0_decl_1 ::=  '++';
	'<' : postfix_expr@0_decl_1 ::=  '++';
	'<=' : postfix_expr@0_decl_1 ::=  '++';
	'*' : postfix_expr@0_decl_1 ::=  '++';
	'...' : postfix_expr@0_decl_1 ::=  '++';
	'+=' : postfix_expr@0_decl_1 ::=  '++';
	']' : postfix_expr@0_decl_1 ::=  '++';
	';' : postfix_expr@0_decl_1 ::=  '++';
	'>=' : postfix_expr@0_decl_1 ::=  '++';
	'+' : postfix_expr@0_decl_1 ::=  '++';
	'?' : postfix_expr@0_decl_1 ::=  '++';
	ENDL : postfix_expr@0_decl_1 ::=  '++';
	'}' : postfix_expr@0_decl_1 ::=  '++';
	'{' : postfix_expr@0_decl_1 ::=  '++';
	'^=' : postfix_expr@0_decl_1 ::=  '++';
	'-' : postfix_expr@0_decl_1 ::=  '++';
	'do' : postfix_expr@0_decl_1 ::=  '++';
	',' : postfix_expr@0_decl_1 ::=  '++';
	'==' : postfix_expr@0_decl_1 ::=  '++';
	'||' : postfix_expr@0_decl_1 ::=  '++';
	'--' : postfix_expr@0_decl_1 ::=  '++';
	'%=' : postfix_expr@0_decl_1 ::=  '++';
	'=' : postfix_expr@0_decl_1 ::=  '++';
	'&&' : postfix_expr@0_decl_1 ::=  '++';
	')' : postfix_expr@0_decl_1 ::=  '++';
	':=' : postfix_expr@0_decl_1 ::=  '++';
	'!=' : postfix_expr@0_decl_1 ::=  '++';
	'*=' : postfix_expr@0_decl_1 ::=  '++';
	'/=' : postfix_expr@0_decl_1 ::=  '++';
	'>' : postfix_expr@0_decl_1 ::=  '++';
	'or' : postfix_expr@0_decl_1 ::=  '++';
	'++' : postfix_expr@0_decl_1 ::=  '++';
	'^' : postfix_expr@0_decl_1 ::=  '++';
	'and' : postfix_expr@0_decl_1 ::=  '++';
	'-=' : postfix_expr@0_decl_1 ::=  '++';
	'%' : postfix_expr@0_decl_1 ::=  '++';
	':' : postfix_expr@0_decl_1 ::=  '++';

State 115 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  116;
	array :  178;
	'{' :  119;
	'-' :  139;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	'typeid' :  144;
	'!' :  138;
	ID :  191;
	'&' :  140;
	unary_expr@1_decl_1 :  115;

State 116 : 
	'<' : unary_expr@1_opt_3 ::=  NULL;
	'/' : unary_expr@1_opt_3 ::=  NULL;
	'<=' : unary_expr@1_opt_3 ::=  NULL;
	'>=' : unary_expr@1_opt_3 ::=  NULL;
	'*' : unary_expr@1_opt_3 ::=  NULL;
	']' : unary_expr@1_opt_3 ::=  NULL;
	'+=' : unary_expr@1_opt_3 ::=  NULL;
	';' : unary_expr@1_opt_3 ::=  NULL;
	'+' : unary_expr@1_opt_3 ::=  NULL;
	ENDL : unary_expr@1_opt_3 ::=  NULL;
	'?' : unary_expr@1_opt_3 ::=  NULL;
	'}' : unary_expr@1_opt_3 ::=  NULL;
	'{' :  119;
	array :  118;
	'^=' : unary_expr@1_opt_3 ::=  NULL;
	unary_expr@1_opt_3 :  117;
	'-' : unary_expr@1_opt_3 ::=  NULL;
	'do' : unary_expr@1_opt_3 ::=  NULL;
	',' : unary_expr@1_opt_3 ::=  NULL;
	'==' : unary_expr@1_opt_3 ::=  NULL;
	'||' : unary_expr@1_opt_3 ::=  NULL;
	'=' : unary_expr@1_opt_3 ::=  NULL;
	'%=' : unary_expr@1_opt_3 ::=  NULL;
	'&&' : unary_expr@1_opt_3 ::=  NULL;
	')' : unary_expr@1_opt_3 ::=  NULL;
	'!=' : unary_expr@1_opt_3 ::=  NULL;
	'*=' : unary_expr@1_opt_3 ::=  NULL;
	':=' : unary_expr@1_opt_3 ::=  NULL;
	'or' : unary_expr@1_opt_3 ::=  NULL;
	'/=' : unary_expr@1_opt_3 ::=  NULL;
	'>' : unary_expr@1_opt_3 ::=  NULL;
	'and' : unary_expr@1_opt_3 ::=  NULL;
	'^' : unary_expr@1_opt_3 ::=  NULL;
	'-=' : unary_expr@1_opt_3 ::=  NULL;
	'%' : unary_expr@1_opt_3 ::=  NULL;
	':' : unary_expr@1_opt_3 ::=  NULL;

State 117 : 
	'<' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'/' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'<=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'>=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'*' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	']' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'+=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	';' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'+' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	ENDL : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'?' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'}' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'{' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'^=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'-' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'do' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	',' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'==' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'||' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'%=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'&&' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	')' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'!=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'*=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	':=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'or' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'/=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'>' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'and' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'^' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'-=' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	'%' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;
	':' : unary_expr ::=  unary_expr@1_decl_1 unary_expr unary_expr@1_opt_3;

State 118 : 
	'<' : unary_expr@1_opt_3 ::=  array;
	'/' : unary_expr@1_opt_3 ::=  array;
	'<=' : unary_expr@1_opt_3 ::=  array;
	'>=' : unary_expr@1_opt_3 ::=  array;
	'*' : unary_expr@1_opt_3 ::=  array;
	']' : unary_expr@1_opt_3 ::=  array;
	'+=' : unary_expr@1_opt_3 ::=  array;
	';' : unary_expr@1_opt_3 ::=  array;
	'+' : unary_expr@1_opt_3 ::=  array;
	ENDL : unary_expr@1_opt_3 ::=  array;
	'?' : unary_expr@1_opt_3 ::=  array;
	'}' : unary_expr@1_opt_3 ::=  array;
	'{' : unary_expr@1_opt_3 ::=  array;
	'^=' : unary_expr@1_opt_3 ::=  array;
	'-' : unary_expr@1_opt_3 ::=  array;
	'do' : unary_expr@1_opt_3 ::=  array;
	',' : unary_expr@1_opt_3 ::=  array;
	'==' : unary_expr@1_opt_3 ::=  array;
	'||' : unary_expr@1_opt_3 ::=  array;
	'=' : unary_expr@1_opt_3 ::=  array;
	'%=' : unary_expr@1_opt_3 ::=  array;
	'&&' : unary_expr@1_opt_3 ::=  array;
	')' : unary_expr@1_opt_3 ::=  array;
	'!=' : unary_expr@1_opt_3 ::=  array;
	'*=' : unary_expr@1_opt_3 ::=  array;
	':=' : unary_expr@1_opt_3 ::=  array;
	'or' : unary_expr@1_opt_3 ::=  array;
	'/=' : unary_expr@1_opt_3 ::=  array;
	'>' : unary_expr@1_opt_3 ::=  array;
	'and' : unary_expr@1_opt_3 ::=  array;
	'^' : unary_expr@1_opt_3 ::=  array;
	'-=' : unary_expr@1_opt_3 ::=  array;
	'%' : unary_expr@1_opt_3 ::=  array;
	':' : unary_expr@1_opt_3 ::=  array;

State 119 : 
	basic_expr :  68;
	expr :  122;
	'(' :  163;
	unary_op :  132;
	'gcnew' :  136;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	CHAR :  153;
	constant :  134;
	element@0_decl_1 :  181;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	'}' : array@0_opt_2 ::=  NULL;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	lambda_expr :  69;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	single_expr :  64;
	'!' :  138;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	array@0_opt_2 :  120;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;
	ID :  191;

State 120 : 
	'}' :  121;

State 121 : 
	'->' : array ::=  '{' array@0_opt_2 '}';
	'<' : array ::=  '{' array@0_opt_2 '}';
	'/' : array ::=  '{' array@0_opt_2 '}';
	'<=' : array ::=  '{' array@0_opt_2 '}';
	'...' : array ::=  '{' array@0_opt_2 '}';
	'>=' : array ::=  '{' array@0_opt_2 '}';
	'*' : array ::=  '{' array@0_opt_2 '}';
	']' : array ::=  '{' array@0_opt_2 '}';
	'+=' : array ::=  '{' array@0_opt_2 '}';
	';' : array ::=  '{' array@0_opt_2 '}';
	'+' : array ::=  '{' array@0_opt_2 '}';
	ENDL : array ::=  '{' array@0_opt_2 '}';
	'?' : array ::=  '{' array@0_opt_2 '}';
	'}' : array ::=  '{' array@0_opt_2 '}';
	'{' : array ::=  '{' array@0_opt_2 '}';
	'^=' : array ::=  '{' array@0_opt_2 '}';
	'-' : array ::=  '{' array@0_opt_2 '}';
	'do' : array ::=  '{' array@0_opt_2 '}';
	',' : array ::=  '{' array@0_opt_2 '}';
	'==' : array ::=  '{' array@0_opt_2 '}';
	'||' : array ::=  '{' array@0_opt_2 '}';
	'.' : array ::=  '{' array@0_opt_2 '}';
	'--' : array ::=  '{' array@0_opt_2 '}';
	'=' : array ::=  '{' array@0_opt_2 '}';
	'%=' : array ::=  '{' array@0_opt_2 '}';
	'&&' : array ::=  '{' array@0_opt_2 '}';
	'[' : array ::=  '{' array@0_opt_2 '}';
	')' : array ::=  '{' array@0_opt_2 '}';
	'!=' : array ::=  '{' array@0_opt_2 '}';
	'*=' : array ::=  '{' array@0_opt_2 '}';
	'++' : array ::=  '{' array@0_opt_2 '}';
	':=' : array ::=  '{' array@0_opt_2 '}';
	'or' : array ::=  '{' array@0_opt_2 '}';
	'/=' : array ::=  '{' array@0_opt_2 '}';
	'>' : array ::=  '{' array@0_opt_2 '}';
	'and' : array ::=  '{' array@0_opt_2 '}';
	'^' : array ::=  '{' array@0_opt_2 '}';
	'-=' : array ::=  '{' array@0_opt_2 '}';
	'%' : array ::=  '{' array@0_opt_2 '}';
	':' : array ::=  '{' array@0_opt_2 '}';

State 122 : 
	'}' : array@0_opt_2 ::=  expr;

State 123 : 
	']' : lambda_expr@0_opt_2 ::=  NULL;
	capture_list@0_opt_1 :  380;
	lambda_expr@0_opt_2 :  124;
	'=' :  386;
	ID : capture_list@0_opt_1 ::=  NULL;
	capture_list :  379;

State 124 : 
	']' :  125;

State 125 : 
	'(' :  126;

State 126 : 
	lambda_expr@0_opt_5 :  127;
	')' : lambda_expr@0_opt_5 ::=  NULL;
	argument_list :  366;
	argument_list@1_opt_1 :  367;
	'=' :  377;
	ID : argument_list@1_opt_1 ::=  NULL;
	'...' :  375;

State 127 : 
	')' :  128;

State 128 : 
	lambda_body :  129;
	'->' :  130;
	'{' :  195;

State 129 : 
	']' : lambda_expr ::=  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body;
	ENDL : lambda_expr ::=  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body;
	';' : lambda_expr ::=  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body;
	'do' : lambda_expr ::=  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body;
	')' : lambda_expr ::=  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body;
	',' : lambda_expr ::=  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body;
	'}' : lambda_expr ::=  '[' lambda_expr@0_opt_2 ']' '(' lambda_expr@0_opt_5 ')' lambda_body;

State 130 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	cond_expr :  131;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 131 : 
	ENDL : lambda_body ::=  '->' cond_expr;
	')' : lambda_body ::=  '->' cond_expr;
	';' : lambda_body ::=  '->' cond_expr;
	'}' : lambda_body ::=  '->' cond_expr;
	']' : lambda_body ::=  '->' cond_expr;
	'do' : lambda_body ::=  '->' cond_expr;
	',' : lambda_body ::=  '->' cond_expr;

State 132 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  133;
	array :  178;
	'{' :  119;
	'-' :  139;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	'typeid' :  144;
	'!' :  138;
	ID :  191;
	'&' :  140;
	unary_expr@1_decl_1 :  115;

State 133 : 
	'<' : unary_expr ::=  unary_op unary_expr;
	'/' : unary_expr ::=  unary_op unary_expr;
	'<=' : unary_expr ::=  unary_op unary_expr;
	'>=' : unary_expr ::=  unary_op unary_expr;
	'*' : unary_expr ::=  unary_op unary_expr;
	']' : unary_expr ::=  unary_op unary_expr;
	'+=' : unary_expr ::=  unary_op unary_expr;
	';' : unary_expr ::=  unary_op unary_expr;
	'+' : unary_expr ::=  unary_op unary_expr;
	ENDL : unary_expr ::=  unary_op unary_expr;
	'?' : unary_expr ::=  unary_op unary_expr;
	'}' : unary_expr ::=  unary_op unary_expr;
	'{' : unary_expr ::=  unary_op unary_expr;
	'^=' : unary_expr ::=  unary_op unary_expr;
	'-' : unary_expr ::=  unary_op unary_expr;
	'do' : unary_expr ::=  unary_op unary_expr;
	',' : unary_expr ::=  unary_op unary_expr;
	'==' : unary_expr ::=  unary_op unary_expr;
	'||' : unary_expr ::=  unary_op unary_expr;
	'=' : unary_expr ::=  unary_op unary_expr;
	'%=' : unary_expr ::=  unary_op unary_expr;
	'&&' : unary_expr ::=  unary_op unary_expr;
	')' : unary_expr ::=  unary_op unary_expr;
	'!=' : unary_expr ::=  unary_op unary_expr;
	'*=' : unary_expr ::=  unary_op unary_expr;
	':=' : unary_expr ::=  unary_op unary_expr;
	'or' : unary_expr ::=  unary_op unary_expr;
	'/=' : unary_expr ::=  unary_op unary_expr;
	'>' : unary_expr ::=  unary_op unary_expr;
	'and' : unary_expr ::=  unary_op unary_expr;
	'^' : unary_expr ::=  unary_op unary_expr;
	'-=' : unary_expr ::=  unary_op unary_expr;
	'%' : unary_expr ::=  unary_op unary_expr;
	':' : unary_expr ::=  unary_op unary_expr;

State 134 : 
	'/' : prim_expr ::=  constant;
	'<' : prim_expr ::=  constant;
	'<=' : prim_expr ::=  constant;
	'*' : prim_expr ::=  constant;
	'...' : prim_expr ::=  constant;
	'+=' : prim_expr ::=  constant;
	']' : prim_expr ::=  constant;
	';' : prim_expr ::=  constant;
	'>=' : prim_expr ::=  constant;
	'+' : prim_expr ::=  constant;
	'?' : prim_expr ::=  constant;
	ENDL : prim_expr ::=  constant;
	'}' : prim_expr ::=  constant;
	'{' : prim_expr ::=  constant;
	'^=' : prim_expr ::=  constant;
	'-' : prim_expr ::=  constant;
	'do' : prim_expr ::=  constant;
	',' : prim_expr ::=  constant;
	'==' : prim_expr ::=  constant;
	'||' : prim_expr ::=  constant;
	'--' : prim_expr ::=  constant;
	'%=' : prim_expr ::=  constant;
	'=' : prim_expr ::=  constant;
	'&&' : prim_expr ::=  constant;
	')' : prim_expr ::=  constant;
	':=' : prim_expr ::=  constant;
	'!=' : prim_expr ::=  constant;
	'*=' : prim_expr ::=  constant;
	'/=' : prim_expr ::=  constant;
	'>' : prim_expr ::=  constant;
	'or' : prim_expr ::=  constant;
	'++' : prim_expr ::=  constant;
	'^' : prim_expr ::=  constant;
	'and' : prim_expr ::=  constant;
	'-=' : prim_expr ::=  constant;
	'%' : prim_expr ::=  constant;
	':' : prim_expr ::=  constant;

State 135 : 
	'/' : prim_expr ::=  visit_expr;
	'<' : prim_expr ::=  visit_expr;
	'<=' : prim_expr ::=  visit_expr;
	'*' : prim_expr ::=  visit_expr;
	'...' : prim_expr ::=  visit_expr;
	'+=' : prim_expr ::=  visit_expr;
	']' : prim_expr ::=  visit_expr;
	';' : prim_expr ::=  visit_expr;
	'>=' : prim_expr ::=  visit_expr;
	'+' : prim_expr ::=  visit_expr;
	'?' : prim_expr ::=  visit_expr;
	ENDL : prim_expr ::=  visit_expr;
	'}' : prim_expr ::=  visit_expr;
	'{' : prim_expr ::=  visit_expr;
	'^=' : prim_expr ::=  visit_expr;
	'-' : prim_expr ::=  visit_expr;
	'do' : prim_expr ::=  visit_expr;
	',' : prim_expr ::=  visit_expr;
	'==' : prim_expr ::=  visit_expr;
	'||' : prim_expr ::=  visit_expr;
	'--' : prim_expr ::=  visit_expr;
	'%=' : prim_expr ::=  visit_expr;
	'=' : prim_expr ::=  visit_expr;
	'&&' : prim_expr ::=  visit_expr;
	')' : prim_expr ::=  visit_expr;
	':=' : prim_expr ::=  visit_expr;
	'!=' : prim_expr ::=  visit_expr;
	'*=' : prim_expr ::=  visit_expr;
	'/=' : prim_expr ::=  visit_expr;
	'>' : prim_expr ::=  visit_expr;
	'or' : prim_expr ::=  visit_expr;
	'++' : prim_expr ::=  visit_expr;
	'^' : prim_expr ::=  visit_expr;
	'and' : prim_expr ::=  visit_expr;
	'-=' : prim_expr ::=  visit_expr;
	'%' : prim_expr ::=  visit_expr;
	':' : prim_expr ::=  visit_expr;

State 136 : 
	'(' : unary_expr@1_decl_1 ::=  'gcnew';
	CHAR : unary_expr@1_decl_1 ::=  'gcnew';
	'gcnew' : unary_expr@1_decl_1 ::=  'gcnew';
	'--' : unary_expr@1_decl_1 ::=  'gcnew';
	'true' : unary_expr@1_decl_1 ::=  'gcnew';
	'*' : unary_expr@1_decl_1 ::=  'gcnew';
	'false' : unary_expr@1_decl_1 ::=  'gcnew';
	NUM : unary_expr@1_decl_1 ::=  'gcnew';
	'null' : unary_expr@1_decl_1 ::=  'gcnew';
	'new' : unary_expr@1_decl_1 ::=  'gcnew';
	'global' : unary_expr@1_decl_1 ::=  'gcnew';
	'++' : unary_expr@1_decl_1 ::=  'gcnew';
	'local' : unary_expr@1_decl_1 ::=  'gcnew';
	'typeid' : unary_expr@1_decl_1 ::=  'gcnew';
	STR : unary_expr@1_decl_1 ::=  'gcnew';
	'!' : unary_expr@1_decl_1 ::=  'gcnew';
	'{' : unary_expr@1_decl_1 ::=  'gcnew';
	ID : unary_expr@1_decl_1 ::=  'gcnew';
	'&' : unary_expr@1_decl_1 ::=  'gcnew';
	'-' : unary_expr@1_decl_1 ::=  'gcnew';

State 137 : 
	'(' : unary_expr@1_decl_1 ::=  'new';
	CHAR : unary_expr@1_decl_1 ::=  'new';
	'gcnew' : unary_expr@1_decl_1 ::=  'new';
	'--' : unary_expr@1_decl_1 ::=  'new';
	'true' : unary_expr@1_decl_1 ::=  'new';
	'*' : unary_expr@1_decl_1 ::=  'new';
	'false' : unary_expr@1_decl_1 ::=  'new';
	NUM : unary_expr@1_decl_1 ::=  'new';
	'null' : unary_expr@1_decl_1 ::=  'new';
	'new' : unary_expr@1_decl_1 ::=  'new';
	'global' : unary_expr@1_decl_1 ::=  'new';
	'++' : unary_expr@1_decl_1 ::=  'new';
	'local' : unary_expr@1_decl_1 ::=  'new';
	'typeid' : unary_expr@1_decl_1 ::=  'new';
	STR : unary_expr@1_decl_1 ::=  'new';
	'!' : unary_expr@1_decl_1 ::=  'new';
	'{' : unary_expr@1_decl_1 ::=  'new';
	ID : unary_expr@1_decl_1 ::=  'new';
	'&' : unary_expr@1_decl_1 ::=  'new';
	'-' : unary_expr@1_decl_1 ::=  'new';

State 138 : 
	'(' : unary_op ::=  '!';
	CHAR : unary_op ::=  '!';
	'gcnew' : unary_op ::=  '!';
	'--' : unary_op ::=  '!';
	'true' : unary_op ::=  '!';
	'*' : unary_op ::=  '!';
	'false' : unary_op ::=  '!';
	NUM : unary_op ::=  '!';
	'null' : unary_op ::=  '!';
	'new' : unary_op ::=  '!';
	'global' : unary_op ::=  '!';
	'++' : unary_op ::=  '!';
	'local' : unary_op ::=  '!';
	'typeid' : unary_op ::=  '!';
	STR : unary_op ::=  '!';
	'!' : unary_op ::=  '!';
	'{' : unary_op ::=  '!';
	ID : unary_op ::=  '!';
	'&' : unary_op ::=  '!';
	'-' : unary_op ::=  '!';

State 139 : 
	'(' : unary_op ::=  '-';
	CHAR : unary_op ::=  '-';
	'gcnew' : unary_op ::=  '-';
	'--' : unary_op ::=  '-';
	'true' : unary_op ::=  '-';
	'*' : unary_op ::=  '-';
	'false' : unary_op ::=  '-';
	NUM : unary_op ::=  '-';
	'null' : unary_op ::=  '-';
	'new' : unary_op ::=  '-';
	'global' : unary_op ::=  '-';
	'++' : unary_op ::=  '-';
	'local' : unary_op ::=  '-';
	'typeid' : unary_op ::=  '-';
	STR : unary_op ::=  '-';
	'!' : unary_op ::=  '-';
	'{' : unary_op ::=  '-';
	ID : unary_op ::=  '-';
	'&' : unary_op ::=  '-';
	'-' : unary_op ::=  '-';

State 140 : 
	'(' : unary_op ::=  '&';
	CHAR : unary_op ::=  '&';
	'gcnew' : unary_op ::=  '&';
	'--' : unary_op ::=  '&';
	'true' : unary_op ::=  '&';
	'*' : unary_op ::=  '&';
	'false' : unary_op ::=  '&';
	NUM : unary_op ::=  '&';
	'null' : unary_op ::=  '&';
	'new' : unary_op ::=  '&';
	'global' : unary_op ::=  '&';
	'++' : unary_op ::=  '&';
	'local' : unary_op ::=  '&';
	'typeid' : unary_op ::=  '&';
	STR : unary_op ::=  '&';
	'!' : unary_op ::=  '&';
	'{' : unary_op ::=  '&';
	ID : unary_op ::=  '&';
	'&' : unary_op ::=  '&';
	'-' : unary_op ::=  '&';

State 141 : 
	'(' : unary_op ::=  '*';
	CHAR : unary_op ::=  '*';
	'gcnew' : unary_op ::=  '*';
	'--' : unary_op ::=  '*';
	'true' : unary_op ::=  '*';
	'*' : unary_op ::=  '*';
	'false' : unary_op ::=  '*';
	NUM : unary_op ::=  '*';
	'null' : unary_op ::=  '*';
	'new' : unary_op ::=  '*';
	'global' : unary_op ::=  '*';
	'++' : unary_op ::=  '*';
	'local' : unary_op ::=  '*';
	'typeid' : unary_op ::=  '*';
	STR : unary_op ::=  '*';
	'!' : unary_op ::=  '*';
	'{' : unary_op ::=  '*';
	ID : unary_op ::=  '*';
	'&' : unary_op ::=  '*';
	'-' : unary_op ::=  '*';

State 142 : 
	'(' : unary_op ::=  '--';
	CHAR : unary_op ::=  '--';
	'gcnew' : unary_op ::=  '--';
	'--' : unary_op ::=  '--';
	'true' : unary_op ::=  '--';
	'*' : unary_op ::=  '--';
	'false' : unary_op ::=  '--';
	NUM : unary_op ::=  '--';
	'null' : unary_op ::=  '--';
	'new' : unary_op ::=  '--';
	'global' : unary_op ::=  '--';
	'++' : unary_op ::=  '--';
	'local' : unary_op ::=  '--';
	'typeid' : unary_op ::=  '--';
	STR : unary_op ::=  '--';
	'!' : unary_op ::=  '--';
	'{' : unary_op ::=  '--';
	ID : unary_op ::=  '--';
	'&' : unary_op ::=  '--';
	'-' : unary_op ::=  '--';

State 143 : 
	'(' : unary_op ::=  '++';
	CHAR : unary_op ::=  '++';
	'gcnew' : unary_op ::=  '++';
	'--' : unary_op ::=  '++';
	'true' : unary_op ::=  '++';
	'*' : unary_op ::=  '++';
	'false' : unary_op ::=  '++';
	NUM : unary_op ::=  '++';
	'null' : unary_op ::=  '++';
	'new' : unary_op ::=  '++';
	'global' : unary_op ::=  '++';
	'++' : unary_op ::=  '++';
	'local' : unary_op ::=  '++';
	'typeid' : unary_op ::=  '++';
	STR : unary_op ::=  '++';
	'!' : unary_op ::=  '++';
	'{' : unary_op ::=  '++';
	ID : unary_op ::=  '++';
	'&' : unary_op ::=  '++';
	'-' : unary_op ::=  '++';

State 144 : 
	'(' : unary_op ::=  'typeid';
	CHAR : unary_op ::=  'typeid';
	'gcnew' : unary_op ::=  'typeid';
	'--' : unary_op ::=  'typeid';
	'true' : unary_op ::=  'typeid';
	'*' : unary_op ::=  'typeid';
	'false' : unary_op ::=  'typeid';
	NUM : unary_op ::=  'typeid';
	'null' : unary_op ::=  'typeid';
	'new' : unary_op ::=  'typeid';
	'global' : unary_op ::=  'typeid';
	'++' : unary_op ::=  'typeid';
	'local' : unary_op ::=  'typeid';
	'typeid' : unary_op ::=  'typeid';
	STR : unary_op ::=  'typeid';
	'!' : unary_op ::=  'typeid';
	'{' : unary_op ::=  'typeid';
	ID : unary_op ::=  'typeid';
	'&' : unary_op ::=  'typeid';
	'-' : unary_op ::=  'typeid';

State 145 : 
	'<' : constant ::=  'false';
	'/' : constant ::=  'false';
	'>=' : constant ::=  'false';
	'*' : constant ::=  'false';
	'<=' : constant ::=  'false';
	']' : constant ::=  'false';
	'+=' : constant ::=  'false';
	';' : constant ::=  'false';
	'...' : constant ::=  'false';
	'+' : constant ::=  'false';
	ENDL : constant ::=  'false';
	'?' : constant ::=  'false';
	'}' : constant ::=  'false';
	'{' : constant ::=  'false';
	'^=' : constant ::=  'false';
	'-' : constant ::=  'false';
	'do' : constant ::=  'false';
	',' : constant ::=  'false';
	'==' : constant ::=  'false';
	'||' : constant ::=  'false';
	'--' : constant ::=  'false';
	'=' : constant ::=  'false';
	'%=' : constant ::=  'false';
	'&&' : constant ::=  'false';
	')' : constant ::=  'false';
	'!=' : constant ::=  'false';
	'*=' : constant ::=  'false';
	'++' : constant ::=  'false';
	':=' : constant ::=  'false';
	'or' : constant ::=  'false';
	'/=' : constant ::=  'false';
	'>' : constant ::=  'false';
	'and' : constant ::=  'false';
	'^' : constant ::=  'false';
	'-=' : constant ::=  'false';
	'%' : constant ::=  'false';
	':' : constant ::=  'false';

State 146 : 
	'<' : constant ::=  'true';
	'/' : constant ::=  'true';
	'>=' : constant ::=  'true';
	'*' : constant ::=  'true';
	'<=' : constant ::=  'true';
	']' : constant ::=  'true';
	'+=' : constant ::=  'true';
	';' : constant ::=  'true';
	'...' : constant ::=  'true';
	'+' : constant ::=  'true';
	ENDL : constant ::=  'true';
	'?' : constant ::=  'true';
	'}' : constant ::=  'true';
	'{' : constant ::=  'true';
	'^=' : constant ::=  'true';
	'-' : constant ::=  'true';
	'do' : constant ::=  'true';
	',' : constant ::=  'true';
	'==' : constant ::=  'true';
	'||' : constant ::=  'true';
	'--' : constant ::=  'true';
	'=' : constant ::=  'true';
	'%=' : constant ::=  'true';
	'&&' : constant ::=  'true';
	')' : constant ::=  'true';
	'!=' : constant ::=  'true';
	'*=' : constant ::=  'true';
	'++' : constant ::=  'true';
	':=' : constant ::=  'true';
	'or' : constant ::=  'true';
	'/=' : constant ::=  'true';
	'>' : constant ::=  'true';
	'and' : constant ::=  'true';
	'^' : constant ::=  'true';
	'-=' : constant ::=  'true';
	'%' : constant ::=  'true';
	':' : constant ::=  'true';

State 147 : 
	'<' : constant ::=  'null';
	'/' : constant ::=  'null';
	'>=' : constant ::=  'null';
	'*' : constant ::=  'null';
	'<=' : constant ::=  'null';
	']' : constant ::=  'null';
	'+=' : constant ::=  'null';
	';' : constant ::=  'null';
	'...' : constant ::=  'null';
	'+' : constant ::=  'null';
	ENDL : constant ::=  'null';
	'?' : constant ::=  'null';
	'}' : constant ::=  'null';
	'{' : constant ::=  'null';
	'^=' : constant ::=  'null';
	'-' : constant ::=  'null';
	'do' : constant ::=  'null';
	',' : constant ::=  'null';
	'==' : constant ::=  'null';
	'||' : constant ::=  'null';
	'--' : constant ::=  'null';
	'=' : constant ::=  'null';
	'%=' : constant ::=  'null';
	'&&' : constant ::=  'null';
	')' : constant ::=  'null';
	'!=' : constant ::=  'null';
	'*=' : constant ::=  'null';
	'++' : constant ::=  'null';
	':=' : constant ::=  'null';
	'or' : constant ::=  'null';
	'/=' : constant ::=  'null';
	'>' : constant ::=  'null';
	'and' : constant ::=  'null';
	'^' : constant ::=  'null';
	'-=' : constant ::=  'null';
	'%' : constant ::=  'null';
	':' : constant ::=  'null';

State 148 : 
	'<' : constant ::=  NUM;
	'/' : constant ::=  NUM;
	'>=' : constant ::=  NUM;
	'*' : constant ::=  NUM;
	'<=' : constant ::=  NUM;
	']' : constant ::=  NUM;
	'+=' : constant ::=  NUM;
	';' : constant ::=  NUM;
	'...' : constant ::=  NUM;
	'+' : constant ::=  NUM;
	ENDL : constant ::=  NUM;
	'?' : constant ::=  NUM;
	'}' : constant ::=  NUM;
	'{' : constant ::=  NUM;
	'^=' : constant ::=  NUM;
	'-' : constant ::=  NUM;
	'do' : constant ::=  NUM;
	',' : constant ::=  NUM;
	'==' : constant ::=  NUM;
	'||' : constant ::=  NUM;
	'--' : constant ::=  NUM;
	'=' : constant ::=  NUM;
	'%=' : constant ::=  NUM;
	'&&' : constant ::=  NUM;
	')' : constant ::=  NUM;
	'!=' : constant ::=  NUM;
	'*=' : constant ::=  NUM;
	'++' : constant ::=  NUM;
	':=' : constant ::=  NUM;
	'or' : constant ::=  NUM;
	'/=' : constant ::=  NUM;
	'>' : constant ::=  NUM;
	'and' : constant ::=  NUM;
	'^' : constant ::=  NUM;
	'-=' : constant ::=  NUM;
	'%' : constant ::=  NUM;
	':' : constant ::=  NUM;

State 149 : 
	'/' : visit_expr@0_opt_2 ::=  NULL;
	'<' : visit_expr@0_opt_2 ::=  NULL;
	'->' :  194;
	'<=' : visit_expr@0_opt_2 ::=  NULL;
	'...' : visit_expr@0_opt_2 ::=  NULL;
	'*' : visit_expr@0_opt_2 ::=  NULL;
	'+=' : visit_expr@0_opt_2 ::=  NULL;
	']' : visit_expr@0_opt_2 ::=  NULL;
	';' : visit_expr@0_opt_2 ::=  NULL;
	'>=' : visit_expr@0_opt_2 ::=  NULL;
	'+' : visit_expr@0_opt_2 ::=  NULL;
	visit_expr@0_opt_2 :  150;
	'?' : visit_expr@0_opt_2 ::=  NULL;
	ENDL : visit_expr@0_opt_2 ::=  NULL;
	'}' : visit_expr@0_opt_2 ::=  NULL;
	'{' : visit_expr@0_opt_2 ::=  NULL;
	'^=' : visit_expr@0_opt_2 ::=  NULL;
	'-' : visit_expr@0_opt_2 ::=  NULL;
	'do' : visit_expr@0_opt_2 ::=  NULL;
	',' : visit_expr@0_opt_2 ::=  NULL;
	'==' : visit_expr@0_opt_2 ::=  NULL;
	'||' : visit_expr@0_opt_2 ::=  NULL;
	'--' : visit_expr@0_opt_2 ::=  NULL;
	'.' :  193;
	'%=' : visit_expr@0_opt_2 ::=  NULL;
	'=' : visit_expr@0_opt_2 ::=  NULL;
	'&&' : visit_expr@0_opt_2 ::=  NULL;
	')' : visit_expr@0_opt_2 ::=  NULL;
	':=' : visit_expr@0_opt_2 ::=  NULL;
	'!=' : visit_expr@0_opt_2 ::=  NULL;
	'*=' : visit_expr@0_opt_2 ::=  NULL;
	'/=' : visit_expr@0_opt_2 ::=  NULL;
	'>' : visit_expr@0_opt_2 ::=  NULL;
	'or' : visit_expr@0_opt_2 ::=  NULL;
	'++' : visit_expr@0_opt_2 ::=  NULL;
	'^' : visit_expr@0_opt_2 ::=  NULL;
	'and' : visit_expr@0_opt_2 ::=  NULL;
	'-=' : visit_expr@0_opt_2 ::=  NULL;
	'%' : visit_expr@0_opt_2 ::=  NULL;
	':' : visit_expr@0_opt_2 ::=  NULL;
	visit_expr@0_opt_2@0_decl_1 :  151;

State 150 : 
	'<' : visit_expr ::=  object visit_expr@0_opt_2;
	'/' : visit_expr ::=  object visit_expr@0_opt_2;
	'>=' : visit_expr ::=  object visit_expr@0_opt_2;
	'<=' : visit_expr ::=  object visit_expr@0_opt_2;
	'*' : visit_expr ::=  object visit_expr@0_opt_2;
	']' : visit_expr ::=  object visit_expr@0_opt_2;
	'+=' : visit_expr ::=  object visit_expr@0_opt_2;
	';' : visit_expr ::=  object visit_expr@0_opt_2;
	'...' : visit_expr ::=  object visit_expr@0_opt_2;
	'+' : visit_expr ::=  object visit_expr@0_opt_2;
	ENDL : visit_expr ::=  object visit_expr@0_opt_2;
	'?' : visit_expr ::=  object visit_expr@0_opt_2;
	'}' : visit_expr ::=  object visit_expr@0_opt_2;
	'{' : visit_expr ::=  object visit_expr@0_opt_2;
	'^=' : visit_expr ::=  object visit_expr@0_opt_2;
	'-' : visit_expr ::=  object visit_expr@0_opt_2;
	'do' : visit_expr ::=  object visit_expr@0_opt_2;
	',' : visit_expr ::=  object visit_expr@0_opt_2;
	'==' : visit_expr ::=  object visit_expr@0_opt_2;
	'||' : visit_expr ::=  object visit_expr@0_opt_2;
	'--' : visit_expr ::=  object visit_expr@0_opt_2;
	'=' : visit_expr ::=  object visit_expr@0_opt_2;
	'%=' : visit_expr ::=  object visit_expr@0_opt_2;
	'&&' : visit_expr ::=  object visit_expr@0_opt_2;
	')' : visit_expr ::=  object visit_expr@0_opt_2;
	'!=' : visit_expr ::=  object visit_expr@0_opt_2;
	'*=' : visit_expr ::=  object visit_expr@0_opt_2;
	'++' : visit_expr ::=  object visit_expr@0_opt_2;
	':=' : visit_expr ::=  object visit_expr@0_opt_2;
	'or' : visit_expr ::=  object visit_expr@0_opt_2;
	'/=' : visit_expr ::=  object visit_expr@0_opt_2;
	'>' : visit_expr ::=  object visit_expr@0_opt_2;
	'and' : visit_expr ::=  object visit_expr@0_opt_2;
	'^' : visit_expr ::=  object visit_expr@0_opt_2;
	'-=' : visit_expr ::=  object visit_expr@0_opt_2;
	'%' : visit_expr ::=  object visit_expr@0_opt_2;
	':' : visit_expr ::=  object visit_expr@0_opt_2;

State 151 : 
	visit_expr :  152;
	CHAR :  153;
	'local' :  156;
	STR :  157;
	array :  178;
	'{' :  119;
	'global' :  155;
	'(' :  192;
	ID :  191;
	object :  149;
	element@0_decl_1 :  181;
	element :  154;

State 152 : 
	'/' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'<' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'<=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'...' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'*' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'+=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	']' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	';' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'>=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'+' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'?' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	ENDL : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'}' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'{' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'^=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'-' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'do' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	',' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'==' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'||' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'--' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'%=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'&&' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	')' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	':=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'!=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'*=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'/=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'>' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'or' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'++' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'^' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'and' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'-=' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	'%' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;
	':' : visit_expr@0_opt_2 ::=  visit_expr@0_opt_2@0_decl_1 visit_expr;

State 153 : 
	'/' : object ::=  CHAR;
	'<' : object ::=  CHAR;
	'->' : object ::=  CHAR;
	'<=' : object ::=  CHAR;
	'...' : object ::=  CHAR;
	'>=' : object ::=  CHAR;
	'+=' : object ::=  CHAR;
	']' : object ::=  CHAR;
	';' : object ::=  CHAR;
	'*' : object ::=  CHAR;
	'+' : object ::=  CHAR;
	'?' : object ::=  CHAR;
	ENDL : object ::=  CHAR;
	'}' : object ::=  CHAR;
	'{' : object ::=  CHAR;
	'^=' : object ::=  CHAR;
	'-' : object ::=  CHAR;
	'do' : object ::=  CHAR;
	',' : object ::=  CHAR;
	'==' : object ::=  CHAR;
	'||' : object ::=  CHAR;
	'--' : object ::=  CHAR;
	'.' : object ::=  CHAR;
	'%=' : object ::=  CHAR;
	'=' : object ::=  CHAR;
	'&&' : object ::=  CHAR;
	')' : object ::=  CHAR;
	':=' : object ::=  CHAR;
	'!=' : object ::=  CHAR;
	'*=' : object ::=  CHAR;
	'/=' : object ::=  CHAR;
	'>' : object ::=  CHAR;
	'or' : object ::=  CHAR;
	'++' : object ::=  CHAR;
	'^' : object ::=  CHAR;
	'and' : object ::=  CHAR;
	'-=' : object ::=  CHAR;
	'%' : object ::=  CHAR;
	':' : object ::=  CHAR;

State 154 : 
	'/' : object ::=  element;
	'<' : object ::=  element;
	'->' : object ::=  element;
	'<=' : object ::=  element;
	'...' : object ::=  element;
	'>=' : object ::=  element;
	'+=' : object ::=  element;
	']' : object ::=  element;
	';' : object ::=  element;
	'*' : object ::=  element;
	'+' : object ::=  element;
	'?' : object ::=  element;
	ENDL : object ::=  element;
	'}' : object ::=  element;
	'{' : object ::=  element;
	'^=' : object ::=  element;
	'-' : object ::=  element;
	'do' : object ::=  element;
	',' : object ::=  element;
	'==' : object ::=  element;
	'||' : object ::=  element;
	'--' : object ::=  element;
	'.' : object ::=  element;
	'%=' : object ::=  element;
	'=' : object ::=  element;
	'&&' : object ::=  element;
	')' : object ::=  element;
	':=' : object ::=  element;
	'!=' : object ::=  element;
	'*=' : object ::=  element;
	'/=' : object ::=  element;
	'>' : object ::=  element;
	'or' : object ::=  element;
	'++' : object ::=  element;
	'^' : object ::=  element;
	'and' : object ::=  element;
	'-=' : object ::=  element;
	'%' : object ::=  element;
	':' : object ::=  element;

State 155 : 
	'/' : object ::=  'global';
	'<' : object ::=  'global';
	'->' : object ::=  'global';
	'<=' : object ::=  'global';
	'...' : object ::=  'global';
	'>=' : object ::=  'global';
	'+=' : object ::=  'global';
	']' : object ::=  'global';
	';' : object ::=  'global';
	'*' : object ::=  'global';
	'+' : object ::=  'global';
	'?' : object ::=  'global';
	ENDL : object ::=  'global';
	'}' : object ::=  'global';
	'{' : object ::=  'global';
	'^=' : object ::=  'global';
	'-' : object ::=  'global';
	'do' : object ::=  'global';
	',' : object ::=  'global';
	'==' : object ::=  'global';
	'||' : object ::=  'global';
	'--' : object ::=  'global';
	'.' : object ::=  'global';
	'%=' : object ::=  'global';
	'=' : object ::=  'global';
	'&&' : object ::=  'global';
	')' : object ::=  'global';
	':=' : object ::=  'global';
	'!=' : object ::=  'global';
	'*=' : object ::=  'global';
	'/=' : object ::=  'global';
	'>' : object ::=  'global';
	'or' : object ::=  'global';
	'++' : object ::=  'global';
	'^' : object ::=  'global';
	'and' : object ::=  'global';
	'-=' : object ::=  'global';
	'%' : object ::=  'global';
	':' : object ::=  'global';

State 156 : 
	'/' : object ::=  'local';
	'<' : object ::=  'local';
	'->' : object ::=  'local';
	'<=' : object ::=  'local';
	'...' : object ::=  'local';
	'>=' : object ::=  'local';
	'+=' : object ::=  'local';
	']' : object ::=  'local';
	';' : object ::=  'local';
	'*' : object ::=  'local';
	'+' : object ::=  'local';
	'?' : object ::=  'local';
	ENDL : object ::=  'local';
	'}' : object ::=  'local';
	'{' : object ::=  'local';
	'^=' : object ::=  'local';
	'-' : object ::=  'local';
	'do' : object ::=  'local';
	',' : object ::=  'local';
	'==' : object ::=  'local';
	'||' : object ::=  'local';
	'--' : object ::=  'local';
	'.' : object ::=  'local';
	'%=' : object ::=  'local';
	'=' : object ::=  'local';
	'&&' : object ::=  'local';
	')' : object ::=  'local';
	':=' : object ::=  'local';
	'!=' : object ::=  'local';
	'*=' : object ::=  'local';
	'/=' : object ::=  'local';
	'>' : object ::=  'local';
	'or' : object ::=  'local';
	'++' : object ::=  'local';
	'^' : object ::=  'local';
	'and' : object ::=  'local';
	'-=' : object ::=  'local';
	'%' : object ::=  'local';
	':' : object ::=  'local';

State 157 : 
	'->' : object@1_opt_2 ::=  NULL;
	'<' : object@1_opt_2 ::=  NULL;
	'/' : object@1_opt_2 ::=  NULL;
	'<=' : object@1_opt_2 ::=  NULL;
	'>=' : object@1_opt_2 ::=  NULL;
	'...' : object@1_opt_2 ::=  NULL;
	'*' : object@1_opt_2 ::=  NULL;
	']' : object@1_opt_2 ::=  NULL;
	'+=' : object@1_opt_2 ::=  NULL;
	';' : object@1_opt_2 ::=  NULL;
	'+' : object@1_opt_2 ::=  NULL;
	ENDL : object@1_opt_2 ::=  NULL;
	'?' : object@1_opt_2 ::=  NULL;
	'}' : object@1_opt_2 ::=  NULL;
	'{' : object@1_opt_2 ::=  NULL;
	'^=' : object@1_opt_2 ::=  NULL;
	'-' : object@1_opt_2 ::=  NULL;
	'do' : object@1_opt_2 ::=  NULL;
	',' : object@1_opt_2 ::=  NULL;
	'==' : object@1_opt_2 ::=  NULL;
	'||' : object@1_opt_2 ::=  NULL;
	'.' : object@1_opt_2 ::=  NULL;
	'--' : object@1_opt_2 ::=  NULL;
	'=' : object@1_opt_2 ::=  NULL;
	'%=' : object@1_opt_2 ::=  NULL;
	'&&' : object@1_opt_2 ::=  NULL;
	'[' :  160;
	')' : object@1_opt_2 ::=  NULL;
	'!=' : object@1_opt_2 ::=  NULL;
	'*=' : object@1_opt_2 ::=  NULL;
	'++' : object@1_opt_2 ::=  NULL;
	':=' : object@1_opt_2 ::=  NULL;
	'or' : object@1_opt_2 ::=  NULL;
	'/=' : object@1_opt_2 ::=  NULL;
	'>' : object@1_opt_2 ::=  NULL;
	'and' : object@1_opt_2 ::=  NULL;
	'^' : object@1_opt_2 ::=  NULL;
	'-=' : object@1_opt_2 ::=  NULL;
	'%' : object@1_opt_2 ::=  NULL;
	index :  159;
	':' : object@1_opt_2 ::=  NULL;
	object@1_opt_2 :  158;

State 158 : 
	'/' : object ::=  STR object@1_opt_2;
	'<' : object ::=  STR object@1_opt_2;
	'->' : object ::=  STR object@1_opt_2;
	'<=' : object ::=  STR object@1_opt_2;
	'...' : object ::=  STR object@1_opt_2;
	'>=' : object ::=  STR object@1_opt_2;
	'+=' : object ::=  STR object@1_opt_2;
	']' : object ::=  STR object@1_opt_2;
	';' : object ::=  STR object@1_opt_2;
	'*' : object ::=  STR object@1_opt_2;
	'+' : object ::=  STR object@1_opt_2;
	'?' : object ::=  STR object@1_opt_2;
	ENDL : object ::=  STR object@1_opt_2;
	'}' : object ::=  STR object@1_opt_2;
	'{' : object ::=  STR object@1_opt_2;
	'^=' : object ::=  STR object@1_opt_2;
	'-' : object ::=  STR object@1_opt_2;
	'do' : object ::=  STR object@1_opt_2;
	',' : object ::=  STR object@1_opt_2;
	'==' : object ::=  STR object@1_opt_2;
	'||' : object ::=  STR object@1_opt_2;
	'--' : object ::=  STR object@1_opt_2;
	'.' : object ::=  STR object@1_opt_2;
	'%=' : object ::=  STR object@1_opt_2;
	'=' : object ::=  STR object@1_opt_2;
	'&&' : object ::=  STR object@1_opt_2;
	')' : object ::=  STR object@1_opt_2;
	':=' : object ::=  STR object@1_opt_2;
	'!=' : object ::=  STR object@1_opt_2;
	'*=' : object ::=  STR object@1_opt_2;
	'/=' : object ::=  STR object@1_opt_2;
	'>' : object ::=  STR object@1_opt_2;
	'or' : object ::=  STR object@1_opt_2;
	'++' : object ::=  STR object@1_opt_2;
	'^' : object ::=  STR object@1_opt_2;
	'and' : object ::=  STR object@1_opt_2;
	'-=' : object ::=  STR object@1_opt_2;
	'%' : object ::=  STR object@1_opt_2;
	':' : object ::=  STR object@1_opt_2;

State 159 : 
	'->' : object@1_opt_2 ::=  index;
	'<' : object@1_opt_2 ::=  index;
	'/' : object@1_opt_2 ::=  index;
	'<=' : object@1_opt_2 ::=  index;
	'>=' : object@1_opt_2 ::=  index;
	'...' : object@1_opt_2 ::=  index;
	'*' : object@1_opt_2 ::=  index;
	']' : object@1_opt_2 ::=  index;
	'+=' : object@1_opt_2 ::=  index;
	';' : object@1_opt_2 ::=  index;
	'+' : object@1_opt_2 ::=  index;
	ENDL : object@1_opt_2 ::=  index;
	'?' : object@1_opt_2 ::=  index;
	'}' : object@1_opt_2 ::=  index;
	'{' : object@1_opt_2 ::=  index;
	'^=' : object@1_opt_2 ::=  index;
	'-' : object@1_opt_2 ::=  index;
	'do' : object@1_opt_2 ::=  index;
	',' : object@1_opt_2 ::=  index;
	'==' : object@1_opt_2 ::=  index;
	'||' : object@1_opt_2 ::=  index;
	'.' : object@1_opt_2 ::=  index;
	'--' : object@1_opt_2 ::=  index;
	'=' : object@1_opt_2 ::=  index;
	'%=' : object@1_opt_2 ::=  index;
	'&&' : object@1_opt_2 ::=  index;
	')' : object@1_opt_2 ::=  index;
	'!=' : object@1_opt_2 ::=  index;
	'*=' : object@1_opt_2 ::=  index;
	'++' : object@1_opt_2 ::=  index;
	':=' : object@1_opt_2 ::=  index;
	'or' : object@1_opt_2 ::=  index;
	'/=' : object@1_opt_2 ::=  index;
	'>' : object@1_opt_2 ::=  index;
	'and' : object@1_opt_2 ::=  index;
	'^' : object@1_opt_2 ::=  index;
	'-=' : object@1_opt_2 ::=  index;
	'%' : object@1_opt_2 ::=  index;
	':' : object@1_opt_2 ::=  index;

State 160 : 
	basic_expr :  161;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 161 : 
	']' :  162;

State 162 : 
	'->' : index ::=  '[' basic_expr ']';
	'<' : index ::=  '[' basic_expr ']';
	'/' : index ::=  '[' basic_expr ']';
	'(' : index ::=  '[' basic_expr ']';
	'>=' : index ::=  '[' basic_expr ']';
	'*' : index ::=  '[' basic_expr ']';
	'<=' : index ::=  '[' basic_expr ']';
	'...' : index ::=  '[' basic_expr ']';
	']' : index ::=  '[' basic_expr ']';
	'+=' : index ::=  '[' basic_expr ']';
	';' : index ::=  '[' basic_expr ']';
	'+' : index ::=  '[' basic_expr ']';
	ENDL : index ::=  '[' basic_expr ']';
	'?' : index ::=  '[' basic_expr ']';
	'}' : index ::=  '[' basic_expr ']';
	'{' : index ::=  '[' basic_expr ']';
	'^=' : index ::=  '[' basic_expr ']';
	'-' : index ::=  '[' basic_expr ']';
	'do' : index ::=  '[' basic_expr ']';
	',' : index ::=  '[' basic_expr ']';
	'==' : index ::=  '[' basic_expr ']';
	'||' : index ::=  '[' basic_expr ']';
	'.' : index ::=  '[' basic_expr ']';
	'--' : index ::=  '[' basic_expr ']';
	'=' : index ::=  '[' basic_expr ']';
	'%=' : index ::=  '[' basic_expr ']';
	'&&' : index ::=  '[' basic_expr ']';
	'[' : index ::=  '[' basic_expr ']';
	')' : index ::=  '[' basic_expr ']';
	'!=' : index ::=  '[' basic_expr ']';
	'*=' : index ::=  '[' basic_expr ']';
	'++' : index ::=  '[' basic_expr ']';
	':=' : index ::=  '[' basic_expr ']';
	'or' : index ::=  '[' basic_expr ']';
	'/=' : index ::=  '[' basic_expr ']';
	'>' : index ::=  '[' basic_expr ']';
	'and' : index ::=  '[' basic_expr ']';
	'^' : index ::=  '[' basic_expr ']';
	'-=' : index ::=  '[' basic_expr ']';
	'%' : index ::=  '[' basic_expr ']';
	':' : index ::=  '[' basic_expr ']';

State 163 : 
	basic_expr :  68;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	'...' :  171;
	relat_expr :  90;
	'*' :  141;
	var_bind_list :  164;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	constant :  134;
	object :  149;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	element@0_decl_1 :  181;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	lambda_expr :  69;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	single_expr :  174;
	ID :  177;
	var_bind :  176;
	'!' :  138;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	'&' :  140;
	unary_expr@1_decl_1 :  115;

State 164 : 
	var_bind@0_rep_3 :  165;
	')' : var_bind@0_rep_3 ::=  NULL;
	',' :  167;

State 165 : 
	')' :  166;

State 166 : 
	'=' : var_bind ::=  '(' var_bind_list var_bind@0_rep_3 ')';
	',' : var_bind ::=  '(' var_bind_list var_bind@0_rep_3 ')';
	')' : var_bind ::=  '(' var_bind_list var_bind@0_rep_3 ')';

State 167 : 
	var_bind_list :  168;
	'(' :  173;
	ID :  172;
	var_bind :  170;
	'...' :  171;

State 168 : 
	var_bind@0_rep_3 :  169;
	')' : var_bind@0_rep_3 ::=  NULL;
	',' :  167;

State 169 : 
	')' : var_bind@0_rep_3 ::=  ',' var_bind_list var_bind@0_rep_3;

State 170 : 
	')' : var_bind_list ::=  var_bind;
	',' : var_bind_list ::=  var_bind;

State 171 : 
	')' : var_bind_list ::=  '...';
	',' : var_bind_list ::=  '...';

State 172 : 
	')' : var_bind_list ::=  ID;
	',' : var_bind_list ::=  ID;

State 173 : 
	var_bind_list :  164;
	'(' :  173;
	ID :  172;
	var_bind :  170;
	'...' :  171;

State 174 : 
	')' :  175;

State 175 : 
	'/' : element@0_decl_1 ::=  '(' single_expr ')';
	'<' : element@0_decl_1 ::=  '(' single_expr ')';
	'->' : element@0_decl_1 ::=  '(' single_expr ')';
	'(' : element@0_decl_1 ::=  '(' single_expr ')';
	'<=' : element@0_decl_1 ::=  '(' single_expr ')';
	'>=' : element@0_decl_1 ::=  '(' single_expr ')';
	'*' : element@0_decl_1 ::=  '(' single_expr ')';
	'+=' : element@0_decl_1 ::=  '(' single_expr ')';
	']' : element@0_decl_1 ::=  '(' single_expr ')';
	';' : element@0_decl_1 ::=  '(' single_expr ')';
	'...' : element@0_decl_1 ::=  '(' single_expr ')';
	'+' : element@0_decl_1 ::=  '(' single_expr ')';
	'?' : element@0_decl_1 ::=  '(' single_expr ')';
	ENDL : element@0_decl_1 ::=  '(' single_expr ')';
	'}' : element@0_decl_1 ::=  '(' single_expr ')';
	'{' : element@0_decl_1 ::=  '(' single_expr ')';
	'^=' : element@0_decl_1 ::=  '(' single_expr ')';
	'-' : element@0_decl_1 ::=  '(' single_expr ')';
	'do' : element@0_decl_1 ::=  '(' single_expr ')';
	',' : element@0_decl_1 ::=  '(' single_expr ')';
	'==' : element@0_decl_1 ::=  '(' single_expr ')';
	'||' : element@0_decl_1 ::=  '(' single_expr ')';
	'--' : element@0_decl_1 ::=  '(' single_expr ')';
	'.' : element@0_decl_1 ::=  '(' single_expr ')';
	'%=' : element@0_decl_1 ::=  '(' single_expr ')';
	'=' : element@0_decl_1 ::=  '(' single_expr ')';
	'&&' : element@0_decl_1 ::=  '(' single_expr ')';
	'[' : element@0_decl_1 ::=  '(' single_expr ')';
	')' : element@0_decl_1 ::=  '(' single_expr ')';
	':=' : element@0_decl_1 ::=  '(' single_expr ')';
	'!=' : element@0_decl_1 ::=  '(' single_expr ')';
	'*=' : element@0_decl_1 ::=  '(' single_expr ')';
	'/=' : element@0_decl_1 ::=  '(' single_expr ')';
	'>' : element@0_decl_1 ::=  '(' single_expr ')';
	'or' : element@0_decl_1 ::=  '(' single_expr ')';
	'++' : element@0_decl_1 ::=  '(' single_expr ')';
	'^' : element@0_decl_1 ::=  '(' single_expr ')';
	'and' : element@0_decl_1 ::=  '(' single_expr ')';
	'-=' : element@0_decl_1 ::=  '(' single_expr ')';
	'%' : element@0_decl_1 ::=  '(' single_expr ')';
	':' : element@0_decl_1 ::=  '(' single_expr ')';

State 176 : 
	'=' :  75;
	')' : var_bind_list ::=  var_bind;
	',' : var_bind_list ::=  var_bind;

State 177 : 
	'/' : element@0_decl_1 ::=  ID;
	'<' : element@0_decl_1 ::=  ID;
	'->' : element@0_decl_1 ::=  ID;
	'(' : element@0_decl_1 ::=  ID;
	'<=' : element@0_decl_1 ::=  ID;
	'>=' : element@0_decl_1 ::=  ID;
	'*' : element@0_decl_1 ::=  ID;
	'+=' : element@0_decl_1 ::=  ID;
	']' : element@0_decl_1 ::=  ID;
	';' : element@0_decl_1 ::=  ID;
	'...' : element@0_decl_1 ::=  ID;
	'+' : element@0_decl_1 ::=  ID;
	'?' : element@0_decl_1 ::=  ID;
	ENDL : element@0_decl_1 ::=  ID;
	'}' : element@0_decl_1 ::=  ID;
	'{' : element@0_decl_1 ::=  ID;
	'^=' : element@0_decl_1 ::=  ID;
	'-' : element@0_decl_1 ::=  ID;
	'do' : element@0_decl_1 ::=  ID;
	',' : element@0_decl_1 ::=  ID;
	'==' : element@0_decl_1 ::=  ID;
	'||' : element@0_decl_1 ::=  ID;
	'--' : element@0_decl_1 ::=  ID;
	'.' : element@0_decl_1 ::=  ID;
	'%=' : element@0_decl_1 ::=  ID;
	'=' : element@0_decl_1 ::=  ID;
	'&&' : element@0_decl_1 ::=  ID;
	'[' : element@0_decl_1 ::=  ID;
	')' : element@0_decl_1 ::=  ID;
	':=' : element@0_decl_1 ::=  ID;
	'!=' : element@0_decl_1 ::=  ID;
	'*=' : element@0_decl_1 ::=  ID;
	'/=' : element@0_decl_1 ::=  ID;
	'>' : element@0_decl_1 ::=  ID;
	'or' : element@0_decl_1 ::=  ID;
	'++' : element@0_decl_1 ::=  ID;
	'^' : element@0_decl_1 ::=  ID;
	'and' : element@0_decl_1 ::=  ID;
	'-=' : element@0_decl_1 ::=  ID;
	'%' : element@0_decl_1 ::=  ID;
	':' : element@0_decl_1 ::=  ID;

State 178 : 
	'->' : object@0_opt_2 ::=  NULL;
	'<' : object@0_opt_2 ::=  NULL;
	'/' : object@0_opt_2 ::=  NULL;
	'<=' : object@0_opt_2 ::=  NULL;
	'>=' : object@0_opt_2 ::=  NULL;
	'...' : object@0_opt_2 ::=  NULL;
	'*' : object@0_opt_2 ::=  NULL;
	']' : object@0_opt_2 ::=  NULL;
	'+=' : object@0_opt_2 ::=  NULL;
	';' : object@0_opt_2 ::=  NULL;
	'+' : object@0_opt_2 ::=  NULL;
	ENDL : object@0_opt_2 ::=  NULL;
	'?' : object@0_opt_2 ::=  NULL;
	'}' : object@0_opt_2 ::=  NULL;
	'{' : object@0_opt_2 ::=  NULL;
	'^=' : object@0_opt_2 ::=  NULL;
	'-' : object@0_opt_2 ::=  NULL;
	'do' : object@0_opt_2 ::=  NULL;
	',' : object@0_opt_2 ::=  NULL;
	'==' : object@0_opt_2 ::=  NULL;
	'||' : object@0_opt_2 ::=  NULL;
	'.' : object@0_opt_2 ::=  NULL;
	'--' : object@0_opt_2 ::=  NULL;
	'=' : object@0_opt_2 ::=  NULL;
	'%=' : object@0_opt_2 ::=  NULL;
	'&&' : object@0_opt_2 ::=  NULL;
	'[' :  160;
	')' : object@0_opt_2 ::=  NULL;
	'!=' : object@0_opt_2 ::=  NULL;
	'*=' : object@0_opt_2 ::=  NULL;
	'++' : object@0_opt_2 ::=  NULL;
	':=' : object@0_opt_2 ::=  NULL;
	'or' : object@0_opt_2 ::=  NULL;
	'/=' : object@0_opt_2 ::=  NULL;
	'>' : object@0_opt_2 ::=  NULL;
	object@0_opt_2 :  179;
	'and' : object@0_opt_2 ::=  NULL;
	'^' : object@0_opt_2 ::=  NULL;
	'-=' : object@0_opt_2 ::=  NULL;
	'%' : object@0_opt_2 ::=  NULL;
	index :  180;
	':' : object@0_opt_2 ::=  NULL;

State 179 : 
	'/' : object ::=  array object@0_opt_2;
	'<' : object ::=  array object@0_opt_2;
	'->' : object ::=  array object@0_opt_2;
	'<=' : object ::=  array object@0_opt_2;
	'...' : object ::=  array object@0_opt_2;
	'>=' : object ::=  array object@0_opt_2;
	'+=' : object ::=  array object@0_opt_2;
	']' : object ::=  array object@0_opt_2;
	';' : object ::=  array object@0_opt_2;
	'*' : object ::=  array object@0_opt_2;
	'+' : object ::=  array object@0_opt_2;
	'?' : object ::=  array object@0_opt_2;
	ENDL : object ::=  array object@0_opt_2;
	'}' : object ::=  array object@0_opt_2;
	'{' : object ::=  array object@0_opt_2;
	'^=' : object ::=  array object@0_opt_2;
	'-' : object ::=  array object@0_opt_2;
	'do' : object ::=  array object@0_opt_2;
	',' : object ::=  array object@0_opt_2;
	'==' : object ::=  array object@0_opt_2;
	'||' : object ::=  array object@0_opt_2;
	'--' : object ::=  array object@0_opt_2;
	'.' : object ::=  array object@0_opt_2;
	'%=' : object ::=  array object@0_opt_2;
	'=' : object ::=  array object@0_opt_2;
	'&&' : object ::=  array object@0_opt_2;
	')' : object ::=  array object@0_opt_2;
	':=' : object ::=  array object@0_opt_2;
	'!=' : object ::=  array object@0_opt_2;
	'*=' : object ::=  array object@0_opt_2;
	'/=' : object ::=  array object@0_opt_2;
	'>' : object ::=  array object@0_opt_2;
	'or' : object ::=  array object@0_opt_2;
	'++' : object ::=  array object@0_opt_2;
	'^' : object ::=  array object@0_opt_2;
	'and' : object ::=  array object@0_opt_2;
	'-=' : object ::=  array object@0_opt_2;
	'%' : object ::=  array object@0_opt_2;
	':' : object ::=  array object@0_opt_2;

State 180 : 
	'->' : object@0_opt_2 ::=  index;
	'<' : object@0_opt_2 ::=  index;
	'/' : object@0_opt_2 ::=  index;
	'<=' : object@0_opt_2 ::=  index;
	'>=' : object@0_opt_2 ::=  index;
	'...' : object@0_opt_2 ::=  index;
	'*' : object@0_opt_2 ::=  index;
	']' : object@0_opt_2 ::=  index;
	'+=' : object@0_opt_2 ::=  index;
	';' : object@0_opt_2 ::=  index;
	'+' : object@0_opt_2 ::=  index;
	ENDL : object@0_opt_2 ::=  index;
	'?' : object@0_opt_2 ::=  index;
	'}' : object@0_opt_2 ::=  index;
	'{' : object@0_opt_2 ::=  index;
	'^=' : object@0_opt_2 ::=  index;
	'-' : object@0_opt_2 ::=  index;
	'do' : object@0_opt_2 ::=  index;
	',' : object@0_opt_2 ::=  index;
	'==' : object@0_opt_2 ::=  index;
	'||' : object@0_opt_2 ::=  index;
	'.' : object@0_opt_2 ::=  index;
	'--' : object@0_opt_2 ::=  index;
	'=' : object@0_opt_2 ::=  index;
	'%=' : object@0_opt_2 ::=  index;
	'&&' : object@0_opt_2 ::=  index;
	')' : object@0_opt_2 ::=  index;
	'!=' : object@0_opt_2 ::=  index;
	'*=' : object@0_opt_2 ::=  index;
	'++' : object@0_opt_2 ::=  index;
	':=' : object@0_opt_2 ::=  index;
	'or' : object@0_opt_2 ::=  index;
	'/=' : object@0_opt_2 ::=  index;
	'>' : object@0_opt_2 ::=  index;
	'and' : object@0_opt_2 ::=  index;
	'^' : object@0_opt_2 ::=  index;
	'-=' : object@0_opt_2 ::=  index;
	'%' : object@0_opt_2 ::=  index;
	':' : object@0_opt_2 ::=  index;

State 181 : 
	'/' : element@0_rep_2 ::=  NULL;
	'<' : element@0_rep_2 ::=  NULL;
	'->' : element@0_rep_2 ::=  NULL;
	'(' :  187;
	'>=' : element@0_rep_2 ::=  NULL;
	'<=' : element@0_rep_2 ::=  NULL;
	'...' : element@0_rep_2 ::=  NULL;
	'+=' : element@0_rep_2 ::=  NULL;
	']' : element@0_rep_2 ::=  NULL;
	';' : element@0_rep_2 ::=  NULL;
	'*' : element@0_rep_2 ::=  NULL;
	'+' : element@0_rep_2 ::=  NULL;
	'?' : element@0_rep_2 ::=  NULL;
	ENDL : element@0_rep_2 ::=  NULL;
	'}' : element@0_rep_2 ::=  NULL;
	'{' : element@0_rep_2 ::=  NULL;
	'^=' : element@0_rep_2 ::=  NULL;
	'-' : element@0_rep_2 ::=  NULL;
	'do' : element@0_rep_2 ::=  NULL;
	',' : element@0_rep_2 ::=  NULL;
	'==' : element@0_rep_2 ::=  NULL;
	'||' : element@0_rep_2 ::=  NULL;
	'--' : element@0_rep_2 ::=  NULL;
	'.' : element@0_rep_2 ::=  NULL;
	'%=' : element@0_rep_2 ::=  NULL;
	'=' : element@0_rep_2 ::=  NULL;
	'&&' : element@0_rep_2 ::=  NULL;
	'[' :  160;
	')' : element@0_rep_2 ::=  NULL;
	':=' : element@0_rep_2 ::=  NULL;
	'!=' : element@0_rep_2 ::=  NULL;
	'*=' : element@0_rep_2 ::=  NULL;
	'/=' : element@0_rep_2 ::=  NULL;
	'>' : element@0_rep_2 ::=  NULL;
	'or' : element@0_rep_2 ::=  NULL;
	'++' : element@0_rep_2 ::=  NULL;
	element@0_rep_2 :  182;
	'^' : element@0_rep_2 ::=  NULL;
	'and' : element@0_rep_2 ::=  NULL;
	'-=' : element@0_rep_2 ::=  NULL;
	'%' : element@0_rep_2 ::=  NULL;
	index :  183;
	':' : element@0_rep_2 ::=  NULL;
	fcall :  185;

State 182 : 
	'->' : element ::=  element@0_decl_1 element@0_rep_2;
	'<' : element ::=  element@0_decl_1 element@0_rep_2;
	'/' : element ::=  element@0_decl_1 element@0_rep_2;
	'<=' : element ::=  element@0_decl_1 element@0_rep_2;
	'>=' : element ::=  element@0_decl_1 element@0_rep_2;
	'...' : element ::=  element@0_decl_1 element@0_rep_2;
	'*' : element ::=  element@0_decl_1 element@0_rep_2;
	']' : element ::=  element@0_decl_1 element@0_rep_2;
	'+=' : element ::=  element@0_decl_1 element@0_rep_2;
	';' : element ::=  element@0_decl_1 element@0_rep_2;
	'+' : element ::=  element@0_decl_1 element@0_rep_2;
	ENDL : element ::=  element@0_decl_1 element@0_rep_2;
	'?' : element ::=  element@0_decl_1 element@0_rep_2;
	'}' : element ::=  element@0_decl_1 element@0_rep_2;
	'{' : element ::=  element@0_decl_1 element@0_rep_2;
	'^=' : element ::=  element@0_decl_1 element@0_rep_2;
	'-' : element ::=  element@0_decl_1 element@0_rep_2;
	'do' : element ::=  element@0_decl_1 element@0_rep_2;
	',' : element ::=  element@0_decl_1 element@0_rep_2;
	'==' : element ::=  element@0_decl_1 element@0_rep_2;
	'||' : element ::=  element@0_decl_1 element@0_rep_2;
	'.' : element ::=  element@0_decl_1 element@0_rep_2;
	'--' : element ::=  element@0_decl_1 element@0_rep_2;
	'=' : element ::=  element@0_decl_1 element@0_rep_2;
	'%=' : element ::=  element@0_decl_1 element@0_rep_2;
	'&&' : element ::=  element@0_decl_1 element@0_rep_2;
	')' : element ::=  element@0_decl_1 element@0_rep_2;
	'!=' : element ::=  element@0_decl_1 element@0_rep_2;
	'*=' : element ::=  element@0_decl_1 element@0_rep_2;
	'++' : element ::=  element@0_decl_1 element@0_rep_2;
	':=' : element ::=  element@0_decl_1 element@0_rep_2;
	'or' : element ::=  element@0_decl_1 element@0_rep_2;
	'/=' : element ::=  element@0_decl_1 element@0_rep_2;
	'>' : element ::=  element@0_decl_1 element@0_rep_2;
	'and' : element ::=  element@0_decl_1 element@0_rep_2;
	'^' : element ::=  element@0_decl_1 element@0_rep_2;
	'-=' : element ::=  element@0_decl_1 element@0_rep_2;
	'%' : element ::=  element@0_decl_1 element@0_rep_2;
	':' : element ::=  element@0_decl_1 element@0_rep_2;

State 183 : 
	'/' : element@0_rep_2 ::=  NULL;
	'<' : element@0_rep_2 ::=  NULL;
	'->' : element@0_rep_2 ::=  NULL;
	'(' :  187;
	'>=' : element@0_rep_2 ::=  NULL;
	'<=' : element@0_rep_2 ::=  NULL;
	'...' : element@0_rep_2 ::=  NULL;
	'+=' : element@0_rep_2 ::=  NULL;
	']' : element@0_rep_2 ::=  NULL;
	';' : element@0_rep_2 ::=  NULL;
	'*' : element@0_rep_2 ::=  NULL;
	'+' : element@0_rep_2 ::=  NULL;
	'?' : element@0_rep_2 ::=  NULL;
	ENDL : element@0_rep_2 ::=  NULL;
	'}' : element@0_rep_2 ::=  NULL;
	'{' : element@0_rep_2 ::=  NULL;
	'^=' : element@0_rep_2 ::=  NULL;
	'-' : element@0_rep_2 ::=  NULL;
	'do' : element@0_rep_2 ::=  NULL;
	',' : element@0_rep_2 ::=  NULL;
	'==' : element@0_rep_2 ::=  NULL;
	'||' : element@0_rep_2 ::=  NULL;
	'--' : element@0_rep_2 ::=  NULL;
	'.' : element@0_rep_2 ::=  NULL;
	'%=' : element@0_rep_2 ::=  NULL;
	'=' : element@0_rep_2 ::=  NULL;
	'&&' : element@0_rep_2 ::=  NULL;
	'[' :  160;
	')' : element@0_rep_2 ::=  NULL;
	':=' : element@0_rep_2 ::=  NULL;
	'!=' : element@0_rep_2 ::=  NULL;
	'*=' : element@0_rep_2 ::=  NULL;
	'/=' : element@0_rep_2 ::=  NULL;
	'>' : element@0_rep_2 ::=  NULL;
	'or' : element@0_rep_2 ::=  NULL;
	'++' : element@0_rep_2 ::=  NULL;
	element@0_rep_2 :  184;
	'^' : element@0_rep_2 ::=  NULL;
	'and' : element@0_rep_2 ::=  NULL;
	'-=' : element@0_rep_2 ::=  NULL;
	'%' : element@0_rep_2 ::=  NULL;
	index :  183;
	':' : element@0_rep_2 ::=  NULL;
	fcall :  185;

State 184 : 
	'/' : element@0_rep_2 ::=  index element@0_rep_2;
	'<' : element@0_rep_2 ::=  index element@0_rep_2;
	'->' : element@0_rep_2 ::=  index element@0_rep_2;
	'>=' : element@0_rep_2 ::=  index element@0_rep_2;
	'<=' : element@0_rep_2 ::=  index element@0_rep_2;
	'...' : element@0_rep_2 ::=  index element@0_rep_2;
	'+=' : element@0_rep_2 ::=  index element@0_rep_2;
	']' : element@0_rep_2 ::=  index element@0_rep_2;
	';' : element@0_rep_2 ::=  index element@0_rep_2;
	'*' : element@0_rep_2 ::=  index element@0_rep_2;
	'+' : element@0_rep_2 ::=  index element@0_rep_2;
	'?' : element@0_rep_2 ::=  index element@0_rep_2;
	ENDL : element@0_rep_2 ::=  index element@0_rep_2;
	'}' : element@0_rep_2 ::=  index element@0_rep_2;
	'{' : element@0_rep_2 ::=  index element@0_rep_2;
	'^=' : element@0_rep_2 ::=  index element@0_rep_2;
	'-' : element@0_rep_2 ::=  index element@0_rep_2;
	'do' : element@0_rep_2 ::=  index element@0_rep_2;
	',' : element@0_rep_2 ::=  index element@0_rep_2;
	'==' : element@0_rep_2 ::=  index element@0_rep_2;
	'||' : element@0_rep_2 ::=  index element@0_rep_2;
	'--' : element@0_rep_2 ::=  index element@0_rep_2;
	'.' : element@0_rep_2 ::=  index element@0_rep_2;
	'%=' : element@0_rep_2 ::=  index element@0_rep_2;
	'=' : element@0_rep_2 ::=  index element@0_rep_2;
	'&&' : element@0_rep_2 ::=  index element@0_rep_2;
	')' : element@0_rep_2 ::=  index element@0_rep_2;
	':=' : element@0_rep_2 ::=  index element@0_rep_2;
	'!=' : element@0_rep_2 ::=  index element@0_rep_2;
	'*=' : element@0_rep_2 ::=  index element@0_rep_2;
	'/=' : element@0_rep_2 ::=  index element@0_rep_2;
	'>' : element@0_rep_2 ::=  index element@0_rep_2;
	'or' : element@0_rep_2 ::=  index element@0_rep_2;
	'++' : element@0_rep_2 ::=  index element@0_rep_2;
	'^' : element@0_rep_2 ::=  index element@0_rep_2;
	'and' : element@0_rep_2 ::=  index element@0_rep_2;
	'-=' : element@0_rep_2 ::=  index element@0_rep_2;
	'%' : element@0_rep_2 ::=  index element@0_rep_2;
	':' : element@0_rep_2 ::=  index element@0_rep_2;

State 185 : 
	'/' : element@0_rep_2 ::=  NULL;
	'<' : element@0_rep_2 ::=  NULL;
	'->' : element@0_rep_2 ::=  NULL;
	'(' :  187;
	'>=' : element@0_rep_2 ::=  NULL;
	'<=' : element@0_rep_2 ::=  NULL;
	'...' : element@0_rep_2 ::=  NULL;
	'+=' : element@0_rep_2 ::=  NULL;
	']' : element@0_rep_2 ::=  NULL;
	';' : element@0_rep_2 ::=  NULL;
	'*' : element@0_rep_2 ::=  NULL;
	'+' : element@0_rep_2 ::=  NULL;
	'?' : element@0_rep_2 ::=  NULL;
	ENDL : element@0_rep_2 ::=  NULL;
	'}' : element@0_rep_2 ::=  NULL;
	'{' : element@0_rep_2 ::=  NULL;
	'^=' : element@0_rep_2 ::=  NULL;
	'-' : element@0_rep_2 ::=  NULL;
	'do' : element@0_rep_2 ::=  NULL;
	',' : element@0_rep_2 ::=  NULL;
	'==' : element@0_rep_2 ::=  NULL;
	'||' : element@0_rep_2 ::=  NULL;
	'--' : element@0_rep_2 ::=  NULL;
	'.' : element@0_rep_2 ::=  NULL;
	'%=' : element@0_rep_2 ::=  NULL;
	'=' : element@0_rep_2 ::=  NULL;
	'&&' : element@0_rep_2 ::=  NULL;
	'[' :  160;
	')' : element@0_rep_2 ::=  NULL;
	':=' : element@0_rep_2 ::=  NULL;
	'!=' : element@0_rep_2 ::=  NULL;
	'*=' : element@0_rep_2 ::=  NULL;
	'/=' : element@0_rep_2 ::=  NULL;
	'>' : element@0_rep_2 ::=  NULL;
	'or' : element@0_rep_2 ::=  NULL;
	'++' : element@0_rep_2 ::=  NULL;
	element@0_rep_2 :  186;
	'^' : element@0_rep_2 ::=  NULL;
	'and' : element@0_rep_2 ::=  NULL;
	'-=' : element@0_rep_2 ::=  NULL;
	'%' : element@0_rep_2 ::=  NULL;
	index :  183;
	':' : element@0_rep_2 ::=  NULL;
	fcall :  185;

State 186 : 
	'/' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'<' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'->' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'>=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'<=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'...' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'+=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	']' : element@0_rep_2 ::=  fcall element@0_rep_2;
	';' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'*' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'+' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'?' : element@0_rep_2 ::=  fcall element@0_rep_2;
	ENDL : element@0_rep_2 ::=  fcall element@0_rep_2;
	'}' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'{' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'^=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'-' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'do' : element@0_rep_2 ::=  fcall element@0_rep_2;
	',' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'==' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'||' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'--' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'.' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'%=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'&&' : element@0_rep_2 ::=  fcall element@0_rep_2;
	')' : element@0_rep_2 ::=  fcall element@0_rep_2;
	':=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'!=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'*=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'/=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'>' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'or' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'++' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'^' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'and' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'-=' : element@0_rep_2 ::=  fcall element@0_rep_2;
	'%' : element@0_rep_2 ::=  fcall element@0_rep_2;
	':' : element@0_rep_2 ::=  fcall element@0_rep_2;

State 187 : 
	basic_expr :  68;
	expr :  190;
	'(' :  163;
	unary_op :  132;
	'gcnew' :  136;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	CHAR :  153;
	constant :  134;
	element@0_decl_1 :  181;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	lambda_expr :  69;
	'true' :  146;
	'global' :  155;
	fcall@0_opt_2 :  188;
	')' : fcall@0_opt_2 ::=  NULL;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	single_expr :  64;
	'!' :  138;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	ID :  191;
	unary_expr@1_decl_1 :  115;

State 188 : 
	')' :  189;

State 189 : 
	'/' : fcall ::=  '(' fcall@0_opt_2 ')';
	'<' : fcall ::=  '(' fcall@0_opt_2 ')';
	'->' : fcall ::=  '(' fcall@0_opt_2 ')';
	'(' : fcall ::=  '(' fcall@0_opt_2 ')';
	'<=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'>=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'*' : fcall ::=  '(' fcall@0_opt_2 ')';
	'+=' : fcall ::=  '(' fcall@0_opt_2 ')';
	']' : fcall ::=  '(' fcall@0_opt_2 ')';
	';' : fcall ::=  '(' fcall@0_opt_2 ')';
	'...' : fcall ::=  '(' fcall@0_opt_2 ')';
	'+' : fcall ::=  '(' fcall@0_opt_2 ')';
	'?' : fcall ::=  '(' fcall@0_opt_2 ')';
	ENDL : fcall ::=  '(' fcall@0_opt_2 ')';
	'}' : fcall ::=  '(' fcall@0_opt_2 ')';
	'{' : fcall ::=  '(' fcall@0_opt_2 ')';
	'^=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'-' : fcall ::=  '(' fcall@0_opt_2 ')';
	'do' : fcall ::=  '(' fcall@0_opt_2 ')';
	',' : fcall ::=  '(' fcall@0_opt_2 ')';
	'==' : fcall ::=  '(' fcall@0_opt_2 ')';
	'||' : fcall ::=  '(' fcall@0_opt_2 ')';
	'--' : fcall ::=  '(' fcall@0_opt_2 ')';
	'.' : fcall ::=  '(' fcall@0_opt_2 ')';
	'%=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'&&' : fcall ::=  '(' fcall@0_opt_2 ')';
	'[' : fcall ::=  '(' fcall@0_opt_2 ')';
	')' : fcall ::=  '(' fcall@0_opt_2 ')';
	':=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'!=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'*=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'/=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'>' : fcall ::=  '(' fcall@0_opt_2 ')';
	'or' : fcall ::=  '(' fcall@0_opt_2 ')';
	'++' : fcall ::=  '(' fcall@0_opt_2 ')';
	'^' : fcall ::=  '(' fcall@0_opt_2 ')';
	'and' : fcall ::=  '(' fcall@0_opt_2 ')';
	'-=' : fcall ::=  '(' fcall@0_opt_2 ')';
	'%' : fcall ::=  '(' fcall@0_opt_2 ')';
	':' : fcall ::=  '(' fcall@0_opt_2 ')';

State 190 : 
	')' : fcall@0_opt_2 ::=  expr;

State 191 : 
	'/' : element@0_decl_1 ::=  ID;
	'<' : element@0_decl_1 ::=  ID;
	'->' : element@0_decl_1 ::=  ID;
	'(' : element@0_decl_1 ::=  ID;
	'<=' : element@0_decl_1 ::=  ID;
	'>=' : element@0_decl_1 ::=  ID;
	'*' : element@0_decl_1 ::=  ID;
	'+=' : element@0_decl_1 ::=  ID;
	']' : element@0_decl_1 ::=  ID;
	';' : element@0_decl_1 ::=  ID;
	'...' : element@0_decl_1 ::=  ID;
	'+' : element@0_decl_1 ::=  ID;
	'?' : element@0_decl_1 ::=  ID;
	ENDL : element@0_decl_1 ::=  ID;
	'}' : element@0_decl_1 ::=  ID;
	'{' : element@0_decl_1 ::=  ID;
	'^=' : element@0_decl_1 ::=  ID;
	'-' : element@0_decl_1 ::=  ID;
	'do' : element@0_decl_1 ::=  ID;
	',' : element@0_decl_1 ::=  ID;
	'==' : element@0_decl_1 ::=  ID;
	'||' : element@0_decl_1 ::=  ID;
	'--' : element@0_decl_1 ::=  ID;
	'.' : element@0_decl_1 ::=  ID;
	'%=' : element@0_decl_1 ::=  ID;
	'=' : element@0_decl_1 ::=  ID;
	'&&' : element@0_decl_1 ::=  ID;
	'[' : element@0_decl_1 ::=  ID;
	')' : element@0_decl_1 ::=  ID;
	':=' : element@0_decl_1 ::=  ID;
	'!=' : element@0_decl_1 ::=  ID;
	'*=' : element@0_decl_1 ::=  ID;
	'/=' : element@0_decl_1 ::=  ID;
	'>' : element@0_decl_1 ::=  ID;
	'or' : element@0_decl_1 ::=  ID;
	'++' : element@0_decl_1 ::=  ID;
	'^' : element@0_decl_1 ::=  ID;
	'and' : element@0_decl_1 ::=  ID;
	'-=' : element@0_decl_1 ::=  ID;
	'%' : element@0_decl_1 ::=  ID;
	':' : element@0_decl_1 ::=  ID;

State 192 : 
	basic_expr :  68;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	lambda_expr :  69;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	single_expr :  174;
	'!' :  138;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	ID :  191;
	unary_expr@1_decl_1 :  115;

State 193 : 
	'local' : visit_expr@0_opt_2@0_decl_1 ::=  '.';
	'(' : visit_expr@0_opt_2@0_decl_1 ::=  '.';
	STR : visit_expr@0_opt_2@0_decl_1 ::=  '.';
	CHAR : visit_expr@0_opt_2@0_decl_1 ::=  '.';
	'{' : visit_expr@0_opt_2@0_decl_1 ::=  '.';
	ID : visit_expr@0_opt_2@0_decl_1 ::=  '.';
	'global' : visit_expr@0_opt_2@0_decl_1 ::=  '.';

State 194 : 
	'local' : visit_expr@0_opt_2@0_decl_1 ::=  '->';
	'(' : visit_expr@0_opt_2@0_decl_1 ::=  '->';
	STR : visit_expr@0_opt_2@0_decl_1 ::=  '->';
	CHAR : visit_expr@0_opt_2@0_decl_1 ::=  '->';
	'{' : visit_expr@0_opt_2@0_decl_1 ::=  '->';
	ID : visit_expr@0_opt_2@0_decl_1 ::=  '->';
	'global' : visit_expr@0_opt_2@0_decl_1 ::=  '->';

State 195 : 
	throw_stmt :  9;
	lambda_body@0_rep_2 :  196;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	block_stmt :  22;
	'for' :  232;
	'foreach' :  222;
	statement :  198;
	'false' :  145;
	constant :  134;
	CHAR :  153;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	using_stmt :  20;
	package_stmt :  25;
	'link' :  336;
	'continue' :  356;
	logic_or_expr :  77;
	'++' :  143;
	equal_expr :  86;
	'!' :  138;
	'typeid' :  144;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	'if' :  294;
	class_stmt :  8;
	'(' :  163;
	'gcnew' :  136;
	while_stmt :  17;
	'return' :  216;
	'*' :  141;
	namespace_stmt :  21;
	if_stmt :  19;
	control_stmt :  13;
	'using' :  309;
	'null' :  147;
	for_stmt :  15;
	NUM :  148;
	object :  149;
	element :  154;
	'while' :  269;
	loop_stmt :  16;
	'local' :  156;
	STR :  157;
	'}' : lambda_body@0_rep_2 ::=  NULL;
	unary_expr :  102;
	switch_stmt :  18;
	import_stmt :  24;
	array :  178;
	element@0_decl_1 :  181;
	'{' :  119;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	var_stmt@0_decl_1 :  328;
	'true' :  146;
	'global' :  155;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	foreach_stmt :  14;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	'&' :  140;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 196 : 
	'}' :  197;

State 197 : 
	ENDL : lambda_body ::=  '{' lambda_body@0_rep_2 '}';
	')' : lambda_body ::=  '{' lambda_body@0_rep_2 '}';
	';' : lambda_body ::=  '{' lambda_body@0_rep_2 '}';
	'}' : lambda_body ::=  '{' lambda_body@0_rep_2 '}';
	']' : lambda_body ::=  '{' lambda_body@0_rep_2 '}';
	'do' : lambda_body ::=  '{' lambda_body@0_rep_2 '}';
	',' : lambda_body ::=  '{' lambda_body@0_rep_2 '}';

State 198 : 
	CHAR : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'(' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'gcnew' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'return' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'*' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'using' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'false' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	NUM : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'null' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'foreach' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'for' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'local' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'while' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	ENDL :  364;
	STR : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'}' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'{' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'package' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'-' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'function' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'block' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'import' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	lambda_body@0_rep_2@0_rep_2 :  199;
	PREP : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'[' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'--' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'switch' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'true' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'global' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'namespace' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'new' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'++' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'break' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'link' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'continue' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'typeid' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'struct' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'try' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'!' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	ID : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'&' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'var' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'class' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'loop' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'throw' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'constant' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'if' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;

State 199 : 
	throw_stmt :  9;
	lambda_body@0_rep_2 :  200;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	block_stmt :  22;
	'for' :  232;
	'foreach' :  222;
	statement :  198;
	'false' :  145;
	constant :  134;
	CHAR :  153;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	using_stmt :  20;
	package_stmt :  25;
	'link' :  336;
	'continue' :  356;
	logic_or_expr :  77;
	'++' :  143;
	equal_expr :  86;
	'!' :  138;
	'typeid' :  144;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	'if' :  294;
	class_stmt :  8;
	'(' :  163;
	'gcnew' :  136;
	while_stmt :  17;
	'return' :  216;
	'*' :  141;
	namespace_stmt :  21;
	if_stmt :  19;
	control_stmt :  13;
	'using' :  309;
	'null' :  147;
	for_stmt :  15;
	NUM :  148;
	object :  149;
	element :  154;
	'while' :  269;
	loop_stmt :  16;
	'local' :  156;
	STR :  157;
	'}' : lambda_body@0_rep_2 ::=  NULL;
	unary_expr :  102;
	switch_stmt :  18;
	import_stmt :  24;
	array :  178;
	element@0_decl_1 :  181;
	'{' :  119;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	var_stmt@0_decl_1 :  328;
	'true' :  146;
	'global' :  155;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	foreach_stmt :  14;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	'&' :  140;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 200 : 
	'}' : lambda_body@0_rep_2 ::=  statement lambda_body@0_rep_2@0_rep_2 lambda_body@0_rep_2;

State 201 : 
	ENDL :  202;

State 202 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  203;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 203 : 
	try_stmt@0_rep_4 :  204;
	'catch' :  210;
	'end' : try_stmt@0_rep_4 ::=  NULL;
	catch_stmt :  207;

State 204 : 
	'end' :  205;

State 205 : 
	ENDL :  206;

State 206 : 
	CHAR : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'(' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'gcnew' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'return' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'*' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'using' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'false' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	NUM : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'null' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'foreach' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'for' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	%END% : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'local' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'while' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	ENDL : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	STR : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'}' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'{' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'package' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'-' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'function' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'block' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'end' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'import' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	PREP : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'until' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'[' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'--' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'switch' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'true' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'global' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'catch' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'namespace' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'new' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'++' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'break' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'link' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'continue' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'typeid' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'struct' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'try' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'else' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'!' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	ID : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'&' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'var' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'class' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'loop' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'throw' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'constant' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;
	'if' : try_stmt ::=  'try' ENDL stmts try_stmt@0_rep_4 'end' ENDL;

State 207 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  208;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 208 : 
	try_stmt@0_rep_4 :  209;
	'catch' :  210;
	'end' : try_stmt@0_rep_4 ::=  NULL;
	catch_stmt :  207;

State 209 : 
	'end' : try_stmt@0_rep_4 ::=  catch_stmt stmts try_stmt@0_rep_4;

State 210 : 
	ID :  211;

State 211 : 
	ENDL : catch_stmt@0_opt_3 ::=  NULL;
	catch_stmt@0_opt_3 :  212;
	':' :  214;

State 212 : 
	ENDL :  213;

State 213 : 
	CHAR : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'(' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'gcnew' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'return' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'*' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'using' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'false' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	NUM : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'null' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'foreach' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'for' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'local' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'while' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	STR : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'{' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'package' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'-' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'end' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'block' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'import' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'function' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	PREP : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'catch' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'[' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'--' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'switch' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'true' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'global' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'namespace' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'new' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'++' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'break' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'link' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'continue' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'typeid' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'struct' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'try' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'!' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	ID : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'&' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'var' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'class' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'loop' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'throw' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'constant' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;
	'if' : catch_stmt ::=  'catch' ID catch_stmt@0_opt_3 ENDL;

State 214 : 
	visit_expr :  215;
	CHAR :  153;
	'local' :  156;
	STR :  157;
	array :  178;
	'{' :  119;
	'global' :  155;
	'(' :  192;
	ID :  191;
	object :  149;
	element@0_decl_1 :  181;
	element :  154;

State 215 : 
	ENDL : catch_stmt@0_opt_3 ::=  ':' visit_expr;

State 216 : 
	basic_expr :  68;
	expr :  219;
	'(' :  163;
	unary_op :  132;
	'gcnew' :  136;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	';' : return_stmt@0_opt_2 ::=  NULL;
	NUM :  148;
	object :  149;
	constant :  134;
	CHAR :  153;
	element :  154;
	'local' :  156;
	ENDL : return_stmt@0_opt_2 ::=  NULL;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'{' :  119;
	return_stmt@0_opt_2 :  217;
	'-' :  139;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	lambda_expr :  69;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	single_expr :  64;
	'!' :  138;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	ID :  191;
	unary_expr@1_decl_1 :  115;

State 217 : 
	endline :  218;
	';' :  29;
	ENDL :  30;

State 218 : 
	CHAR : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'(' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'gcnew' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'return' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'*' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'using' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'false' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	NUM : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'null' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'foreach' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'for' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	%END% : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'local' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'while' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	ENDL : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	STR : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'}' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'{' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'package' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'-' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'function' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'block' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'end' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'import' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	PREP : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'until' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'[' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'--' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'switch' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'true' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'global' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'catch' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'namespace' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'new' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'++' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'break' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'link' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'continue' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'typeid' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'struct' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'try' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'else' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'!' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	ID : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'&' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'var' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'class' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'loop' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'throw' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'constant' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;
	'if' : return_stmt ::=  'return' return_stmt@0_opt_2 endline;

State 219 : 
	ENDL : return_stmt@0_opt_2 ::=  expr;
	';' : return_stmt@0_opt_2 ::=  expr;

State 220 : 
	endline :  221;
	';' :  29;
	ENDL :  30;

State 221 : 
	CHAR : control_stmt ::=  control_stmt@0_decl_1 endline;
	'(' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'gcnew' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'return' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'*' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'using' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'false' : control_stmt ::=  control_stmt@0_decl_1 endline;
	NUM : control_stmt ::=  control_stmt@0_decl_1 endline;
	'null' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'foreach' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'for' : control_stmt ::=  control_stmt@0_decl_1 endline;
	%END% : control_stmt ::=  control_stmt@0_decl_1 endline;
	'local' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'while' : control_stmt ::=  control_stmt@0_decl_1 endline;
	ENDL : control_stmt ::=  control_stmt@0_decl_1 endline;
	STR : control_stmt ::=  control_stmt@0_decl_1 endline;
	'}' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'{' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'package' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'-' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'function' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'block' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'end' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'import' : control_stmt ::=  control_stmt@0_decl_1 endline;
	PREP : control_stmt ::=  control_stmt@0_decl_1 endline;
	'until' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'[' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'--' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'switch' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'true' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'global' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'catch' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'namespace' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'new' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'++' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'break' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'link' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'continue' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'typeid' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'struct' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'try' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'else' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'!' : control_stmt ::=  control_stmt@0_decl_1 endline;
	ID : control_stmt ::=  control_stmt@0_decl_1 endline;
	'&' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'var' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'class' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'loop' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'throw' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'constant' : control_stmt ::=  control_stmt@0_decl_1 endline;
	'if' : control_stmt ::=  control_stmt@0_decl_1 endline;

State 222 : 
	ID :  223;

State 223 : 
	'in' :  224;

State 224 : 
	basic_expr :  225;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 225 : 
	for_body@0_decl_1 :  227;
	ENDL :  228;
	for_body :  226;
	'do' :  239;

State 226 : 
	CHAR : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'(' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'gcnew' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'return' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'*' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'using' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'false' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	NUM : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'null' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'foreach' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'for' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	%END% : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'local' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'while' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	ENDL : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	STR : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'}' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'{' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'package' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'-' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'function' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'block' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'end' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'import' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	PREP : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'until' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'[' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'--' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'switch' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'true' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'global' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'catch' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'namespace' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'new' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'++' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'break' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'link' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'continue' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'typeid' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'struct' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'try' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'else' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'!' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	ID : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'&' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'var' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'class' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'loop' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'throw' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'constant' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;
	'if' : foreach_stmt ::=  'foreach' ID 'in' basic_expr for_body;

State 227 : 
	'(' : for_body ::=  for_body@0_decl_1;
	CHAR : for_body ::=  for_body@0_decl_1;
	'gcnew' : for_body ::=  for_body@0_decl_1;
	'return' : for_body ::=  for_body@0_decl_1;
	'*' : for_body ::=  for_body@0_decl_1;
	'using' : for_body ::=  for_body@0_decl_1;
	NUM : for_body ::=  for_body@0_decl_1;
	'for' : for_body ::=  for_body@0_decl_1;
	%END% : for_body ::=  for_body@0_decl_1;
	'null' : for_body ::=  for_body@0_decl_1;
	'foreach' : for_body ::=  for_body@0_decl_1;
	'false' : for_body ::=  for_body@0_decl_1;
	'while' : for_body ::=  for_body@0_decl_1;
	ENDL : for_body ::=  for_body@0_decl_1;
	'local' : for_body ::=  for_body@0_decl_1;
	STR : for_body ::=  for_body@0_decl_1;
	'}' : for_body ::=  for_body@0_decl_1;
	'{' : for_body ::=  for_body@0_decl_1;
	'package' : for_body ::=  for_body@0_decl_1;
	'-' : for_body ::=  for_body@0_decl_1;
	'end' : for_body ::=  for_body@0_decl_1;
	'block' : for_body ::=  for_body@0_decl_1;
	'function' : for_body ::=  for_body@0_decl_1;
	'import' : for_body ::=  for_body@0_decl_1;
	PREP : for_body ::=  for_body@0_decl_1;
	'catch' : for_body ::=  for_body@0_decl_1;
	'until' : for_body ::=  for_body@0_decl_1;
	'--' : for_body ::=  for_body@0_decl_1;
	'[' : for_body ::=  for_body@0_decl_1;
	'switch' : for_body ::=  for_body@0_decl_1;
	'true' : for_body ::=  for_body@0_decl_1;
	'global' : for_body ::=  for_body@0_decl_1;
	'namespace' : for_body ::=  for_body@0_decl_1;
	'new' : for_body ::=  for_body@0_decl_1;
	'++' : for_body ::=  for_body@0_decl_1;
	'link' : for_body ::=  for_body@0_decl_1;
	'break' : for_body ::=  for_body@0_decl_1;
	'continue' : for_body ::=  for_body@0_decl_1;
	'typeid' : for_body ::=  for_body@0_decl_1;
	'struct' : for_body ::=  for_body@0_decl_1;
	'try' : for_body ::=  for_body@0_decl_1;
	'!' : for_body ::=  for_body@0_decl_1;
	ID : for_body ::=  for_body@0_decl_1;
	'var' : for_body ::=  for_body@0_decl_1;
	'&' : for_body ::=  for_body@0_decl_1;
	'class' : for_body ::=  for_body@0_decl_1;
	'else' : for_body ::=  for_body@0_decl_1;
	'loop' : for_body ::=  for_body@0_decl_1;
	'constant' : for_body ::=  for_body@0_decl_1;
	'throw' : for_body ::=  for_body@0_decl_1;
	'if' : for_body ::=  for_body@0_decl_1;

State 228 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  229;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 229 : 
	'end' :  230;

State 230 : 
	ENDL :  231;

State 231 : 
	CHAR : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'(' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'gcnew' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'return' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'*' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'using' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'false' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	NUM : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'null' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'foreach' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'for' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	%END% : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'local' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'while' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	ENDL : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	STR : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'}' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'{' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'package' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'-' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'function' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'block' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'end' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'import' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	PREP : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'until' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'[' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'--' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'switch' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'true' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'global' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'catch' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'namespace' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'new' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'++' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'break' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'link' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'continue' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'typeid' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'struct' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'try' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'else' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'!' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	ID : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'&' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'var' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'class' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'loop' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'throw' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'constant' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;
	'if' : for_body@0_decl_1 ::=  ENDL stmts 'end' ENDL;

State 232 : 
	'(' :  173;
	ID :  253;
	var_bind :  250;
	';' : for_stmt@0_opt_2 ::=  NULL;
	var_def :  248;
	for_stmt@0_opt_2 :  233;
	var_list :  249;
	',' : for_stmt@0_opt_2 ::=  NULL;

State 233 : 
	for_stmt@0_decl_3 :  234;
	';' :  247;
	',' :  246;

State 234 : 
	basic_expr :  245;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	for_stmt@0_opt_4 :  235;
	'false' :  145;
	';' : for_stmt@0_opt_4 ::=  NULL;
	'null' :  147;
	NUM :  148;
	constant :  134;
	object :  149;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	element@0_decl_1 :  181;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	',' : for_stmt@0_opt_4 ::=  NULL;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 235 : 
	for_stmt@0_decl_5 :  236;
	';' :  244;
	',' :  243;

State 236 : 
	basic_expr :  242;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	ENDL : for_stmt@0_opt_6 ::=  NULL;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	'do' : for_stmt@0_opt_6 ::=  NULL;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	for_stmt@0_opt_6 :  237;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 237 : 
	for_body@0_decl_1 :  227;
	ENDL :  228;
	for_body :  238;
	'do' :  239;

State 238 : 
	CHAR : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'(' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'gcnew' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'return' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'*' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'using' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'false' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	NUM : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'null' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'foreach' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'for' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	%END% : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'local' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'while' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	ENDL : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	STR : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'}' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'{' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'package' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'-' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'function' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'block' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'end' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'import' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	PREP : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'until' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'[' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'--' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'switch' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'true' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'global' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'catch' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'namespace' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'new' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'++' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'break' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'link' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'continue' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'typeid' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'struct' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'try' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'else' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'!' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	ID : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'&' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'var' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'class' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'loop' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'throw' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'constant' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;
	'if' : for_stmt ::=  'for' for_stmt@0_opt_2 for_stmt@0_decl_3 for_stmt@0_opt_4 for_stmt@0_decl_5 for_stmt@0_opt_6 for_body;

State 239 : 
	basic_expr :  240;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 240 : 
	endline :  241;
	';' :  29;
	ENDL :  30;

State 241 : 
	CHAR : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'(' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'gcnew' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'return' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'*' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'using' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'false' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	NUM : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'null' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'foreach' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'for' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	%END% : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'local' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'while' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	ENDL : for_body@0_decl_1 ::=  'do' basic_expr endline;
	STR : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'}' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'{' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'package' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'-' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'function' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'block' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'end' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'import' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	PREP : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'until' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'[' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'--' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'switch' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'true' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'global' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'catch' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'namespace' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'new' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'++' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'break' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'link' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'continue' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'typeid' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'struct' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'try' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'else' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'!' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	ID : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'&' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'var' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'class' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'loop' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'throw' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'constant' : for_body@0_decl_1 ::=  'do' basic_expr endline;
	'if' : for_body@0_decl_1 ::=  'do' basic_expr endline;

State 242 : 
	'do' : for_stmt@0_opt_6 ::=  basic_expr;
	ENDL : for_stmt@0_opt_6 ::=  basic_expr;

State 243 : 
	'(' : for_stmt@0_decl_5 ::=  ',';
	CHAR : for_stmt@0_decl_5 ::=  ',';
	'--' : for_stmt@0_decl_5 ::=  ',';
	'gcnew' : for_stmt@0_decl_5 ::=  ',';
	'*' : for_stmt@0_decl_5 ::=  ',';
	'global' : for_stmt@0_decl_5 ::=  ',';
	NUM : for_stmt@0_decl_5 ::=  ',';
	'null' : for_stmt@0_decl_5 ::=  ',';
	'new' : for_stmt@0_decl_5 ::=  ',';
	'false' : for_stmt@0_decl_5 ::=  ',';
	'true' : for_stmt@0_decl_5 ::=  ',';
	'++' : for_stmt@0_decl_5 ::=  ',';
	'local' : for_stmt@0_decl_5 ::=  ',';
	ENDL : for_stmt@0_decl_5 ::=  ',';
	'typeid' : for_stmt@0_decl_5 ::=  ',';
	STR : for_stmt@0_decl_5 ::=  ',';
	'!' : for_stmt@0_decl_5 ::=  ',';
	ID : for_stmt@0_decl_5 ::=  ',';
	'&' : for_stmt@0_decl_5 ::=  ',';
	'{' : for_stmt@0_decl_5 ::=  ',';
	'-' : for_stmt@0_decl_5 ::=  ',';
	'do' : for_stmt@0_decl_5 ::=  ',';

State 244 : 
	'(' : for_stmt@0_decl_5 ::=  ';';
	CHAR : for_stmt@0_decl_5 ::=  ';';
	'--' : for_stmt@0_decl_5 ::=  ';';
	'gcnew' : for_stmt@0_decl_5 ::=  ';';
	'*' : for_stmt@0_decl_5 ::=  ';';
	'global' : for_stmt@0_decl_5 ::=  ';';
	NUM : for_stmt@0_decl_5 ::=  ';';
	'null' : for_stmt@0_decl_5 ::=  ';';
	'new' : for_stmt@0_decl_5 ::=  ';';
	'false' : for_stmt@0_decl_5 ::=  ';';
	'true' : for_stmt@0_decl_5 ::=  ';';
	'++' : for_stmt@0_decl_5 ::=  ';';
	'local' : for_stmt@0_decl_5 ::=  ';';
	ENDL : for_stmt@0_decl_5 ::=  ';';
	'typeid' : for_stmt@0_decl_5 ::=  ';';
	STR : for_stmt@0_decl_5 ::=  ';';
	'!' : for_stmt@0_decl_5 ::=  ';';
	ID : for_stmt@0_decl_5 ::=  ';';
	'&' : for_stmt@0_decl_5 ::=  ';';
	'{' : for_stmt@0_decl_5 ::=  ';';
	'-' : for_stmt@0_decl_5 ::=  ';';
	'do' : for_stmt@0_decl_5 ::=  ';';

State 245 : 
	',' : for_stmt@0_opt_4 ::=  basic_expr;
	';' : for_stmt@0_opt_4 ::=  basic_expr;

State 246 : 
	'(' : for_stmt@0_decl_3 ::=  ',';
	CHAR : for_stmt@0_decl_3 ::=  ',';
	'--' : for_stmt@0_decl_3 ::=  ',';
	'gcnew' : for_stmt@0_decl_3 ::=  ',';
	'*' : for_stmt@0_decl_3 ::=  ',';
	'global' : for_stmt@0_decl_3 ::=  ',';
	NUM : for_stmt@0_decl_3 ::=  ',';
	'null' : for_stmt@0_decl_3 ::=  ',';
	';' : for_stmt@0_decl_3 ::=  ',';
	'new' : for_stmt@0_decl_3 ::=  ',';
	'false' : for_stmt@0_decl_3 ::=  ',';
	'true' : for_stmt@0_decl_3 ::=  ',';
	'++' : for_stmt@0_decl_3 ::=  ',';
	'local' : for_stmt@0_decl_3 ::=  ',';
	'typeid' : for_stmt@0_decl_3 ::=  ',';
	STR : for_stmt@0_decl_3 ::=  ',';
	'!' : for_stmt@0_decl_3 ::=  ',';
	ID : for_stmt@0_decl_3 ::=  ',';
	'&' : for_stmt@0_decl_3 ::=  ',';
	'{' : for_stmt@0_decl_3 ::=  ',';
	'-' : for_stmt@0_decl_3 ::=  ',';
	',' : for_stmt@0_decl_3 ::=  ',';

State 247 : 
	'(' : for_stmt@0_decl_3 ::=  ';';
	CHAR : for_stmt@0_decl_3 ::=  ';';
	'--' : for_stmt@0_decl_3 ::=  ';';
	'gcnew' : for_stmt@0_decl_3 ::=  ';';
	'*' : for_stmt@0_decl_3 ::=  ';';
	'global' : for_stmt@0_decl_3 ::=  ';';
	NUM : for_stmt@0_decl_3 ::=  ';';
	'null' : for_stmt@0_decl_3 ::=  ';';
	';' : for_stmt@0_decl_3 ::=  ';';
	'new' : for_stmt@0_decl_3 ::=  ';';
	'false' : for_stmt@0_decl_3 ::=  ';';
	'true' : for_stmt@0_decl_3 ::=  ';';
	'++' : for_stmt@0_decl_3 ::=  ';';
	'local' : for_stmt@0_decl_3 ::=  ';';
	'typeid' : for_stmt@0_decl_3 ::=  ';';
	STR : for_stmt@0_decl_3 ::=  ';';
	'!' : for_stmt@0_decl_3 ::=  ';';
	ID : for_stmt@0_decl_3 ::=  ';';
	'&' : for_stmt@0_decl_3 ::=  ';';
	'{' : for_stmt@0_decl_3 ::=  ';';
	'-' : for_stmt@0_decl_3 ::=  ';';
	',' : for_stmt@0_decl_3 ::=  ';';

State 248 : 
	',' : for_stmt@0_opt_2 ::=  var_def;
	';' : for_stmt@0_opt_2 ::=  var_def;

State 249 : 
	ENDL : var_def ::=  var_list;
	';' : var_def ::=  var_list;
	',' : var_def ::=  var_list;

State 250 : 
	'=' :  251;

State 251 : 
	basic_expr :  252;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 252 : 
	ENDL : var_def ::=  var_bind '=' basic_expr;
	';' : var_def ::=  var_bind '=' basic_expr;
	',' : var_def ::=  var_bind '=' basic_expr;

State 253 : 
	'=' :  254;

State 254 : 
	basic_expr :  68;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'[' :  123;
	'--' :  142;
	lambda_expr :  69;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	single_expr :  255;
	'!' :  138;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	ID :  191;
	unary_expr@1_decl_1 :  115;

State 255 : 
	ENDL : var_list@0_opt_4 ::=  NULL;
	';' : var_list@0_opt_4 ::=  NULL;
	var_list@0_opt_4 :  256;
	',' :  257;

State 256 : 
	ENDL : var_list ::=  ID '=' single_expr var_list@0_opt_4;
	',' : var_list ::=  ID '=' single_expr var_list@0_opt_4;
	';' : var_list ::=  ID '=' single_expr var_list@0_opt_4;

State 257 : 
	ID :  253;
	var_list :  258;

State 258 : 
	ENDL : var_list@0_opt_4 ::=  ',' var_list;
	';' : var_list@0_opt_4 ::=  ',' var_list;
	',' : var_list@0_opt_4 ::=  ',' var_list;

State 259 : 
	ENDL :  260;

State 260 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  261;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 261 : 
	loop_stmt@0_decl_4 :  262;
	ENDL :  263;
	until_stmt :  265;
	'end' :  264;
	'until' :  266;

State 262 : 
	CHAR : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'(' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'gcnew' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'return' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'*' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'using' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'false' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	NUM : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'null' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'foreach' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'for' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	%END% : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'local' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'while' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	ENDL : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	STR : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'}' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'{' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'package' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'-' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'function' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'block' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'end' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'import' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	PREP : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'until' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'[' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'--' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'switch' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'true' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'global' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'catch' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'namespace' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'new' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'++' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'break' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'link' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'continue' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'typeid' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'struct' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'try' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'else' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'!' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	ID : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'&' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'var' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'class' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'loop' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'throw' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'constant' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;
	'if' : loop_stmt ::=  'loop' ENDL stmts loop_stmt@0_decl_4;

State 263 : 
	'(' : loop_stmt@0_decl_4 ::=  ENDL;
	CHAR : loop_stmt@0_decl_4 ::=  ENDL;
	'gcnew' : loop_stmt@0_decl_4 ::=  ENDL;
	'return' : loop_stmt@0_decl_4 ::=  ENDL;
	'*' : loop_stmt@0_decl_4 ::=  ENDL;
	'using' : loop_stmt@0_decl_4 ::=  ENDL;
	NUM : loop_stmt@0_decl_4 ::=  ENDL;
	'for' : loop_stmt@0_decl_4 ::=  ENDL;
	%END% : loop_stmt@0_decl_4 ::=  ENDL;
	'null' : loop_stmt@0_decl_4 ::=  ENDL;
	'foreach' : loop_stmt@0_decl_4 ::=  ENDL;
	'false' : loop_stmt@0_decl_4 ::=  ENDL;
	'while' : loop_stmt@0_decl_4 ::=  ENDL;
	ENDL : loop_stmt@0_decl_4 ::=  ENDL;
	'local' : loop_stmt@0_decl_4 ::=  ENDL;
	STR : loop_stmt@0_decl_4 ::=  ENDL;
	'}' : loop_stmt@0_decl_4 ::=  ENDL;
	'{' : loop_stmt@0_decl_4 ::=  ENDL;
	'package' : loop_stmt@0_decl_4 ::=  ENDL;
	'-' : loop_stmt@0_decl_4 ::=  ENDL;
	'end' : loop_stmt@0_decl_4 ::=  ENDL;
	'block' : loop_stmt@0_decl_4 ::=  ENDL;
	'function' : loop_stmt@0_decl_4 ::=  ENDL;
	'import' : loop_stmt@0_decl_4 ::=  ENDL;
	PREP : loop_stmt@0_decl_4 ::=  ENDL;
	'catch' : loop_stmt@0_decl_4 ::=  ENDL;
	'until' : loop_stmt@0_decl_4 ::=  ENDL;
	'--' : loop_stmt@0_decl_4 ::=  ENDL;
	'[' : loop_stmt@0_decl_4 ::=  ENDL;
	'switch' : loop_stmt@0_decl_4 ::=  ENDL;
	'true' : loop_stmt@0_decl_4 ::=  ENDL;
	'global' : loop_stmt@0_decl_4 ::=  ENDL;
	'namespace' : loop_stmt@0_decl_4 ::=  ENDL;
	'new' : loop_stmt@0_decl_4 ::=  ENDL;
	'++' : loop_stmt@0_decl_4 ::=  ENDL;
	'link' : loop_stmt@0_decl_4 ::=  ENDL;
	'break' : loop_stmt@0_decl_4 ::=  ENDL;
	'continue' : loop_stmt@0_decl_4 ::=  ENDL;
	'typeid' : loop_stmt@0_decl_4 ::=  ENDL;
	'struct' : loop_stmt@0_decl_4 ::=  ENDL;
	'try' : loop_stmt@0_decl_4 ::=  ENDL;
	'!' : loop_stmt@0_decl_4 ::=  ENDL;
	ID : loop_stmt@0_decl_4 ::=  ENDL;
	'var' : loop_stmt@0_decl_4 ::=  ENDL;
	'&' : loop_stmt@0_decl_4 ::=  ENDL;
	'class' : loop_stmt@0_decl_4 ::=  ENDL;
	'else' : loop_stmt@0_decl_4 ::=  ENDL;
	'loop' : loop_stmt@0_decl_4 ::=  ENDL;
	'constant' : loop_stmt@0_decl_4 ::=  ENDL;
	'throw' : loop_stmt@0_decl_4 ::=  ENDL;
	'if' : loop_stmt@0_decl_4 ::=  ENDL;

State 264 : 
	'(' : loop_stmt@0_decl_4 ::=  'end';
	CHAR : loop_stmt@0_decl_4 ::=  'end';
	'gcnew' : loop_stmt@0_decl_4 ::=  'end';
	'return' : loop_stmt@0_decl_4 ::=  'end';
	'*' : loop_stmt@0_decl_4 ::=  'end';
	'using' : loop_stmt@0_decl_4 ::=  'end';
	NUM : loop_stmt@0_decl_4 ::=  'end';
	'for' : loop_stmt@0_decl_4 ::=  'end';
	%END% : loop_stmt@0_decl_4 ::=  'end';
	'null' : loop_stmt@0_decl_4 ::=  'end';
	'foreach' : loop_stmt@0_decl_4 ::=  'end';
	'false' : loop_stmt@0_decl_4 ::=  'end';
	'while' : loop_stmt@0_decl_4 ::=  'end';
	ENDL : loop_stmt@0_decl_4 ::=  'end';
	'local' : loop_stmt@0_decl_4 ::=  'end';
	STR : loop_stmt@0_decl_4 ::=  'end';
	'}' : loop_stmt@0_decl_4 ::=  'end';
	'{' : loop_stmt@0_decl_4 ::=  'end';
	'package' : loop_stmt@0_decl_4 ::=  'end';
	'-' : loop_stmt@0_decl_4 ::=  'end';
	'end' : loop_stmt@0_decl_4 ::=  'end';
	'block' : loop_stmt@0_decl_4 ::=  'end';
	'function' : loop_stmt@0_decl_4 ::=  'end';
	'import' : loop_stmt@0_decl_4 ::=  'end';
	PREP : loop_stmt@0_decl_4 ::=  'end';
	'catch' : loop_stmt@0_decl_4 ::=  'end';
	'until' : loop_stmt@0_decl_4 ::=  'end';
	'--' : loop_stmt@0_decl_4 ::=  'end';
	'[' : loop_stmt@0_decl_4 ::=  'end';
	'switch' : loop_stmt@0_decl_4 ::=  'end';
	'true' : loop_stmt@0_decl_4 ::=  'end';
	'global' : loop_stmt@0_decl_4 ::=  'end';
	'namespace' : loop_stmt@0_decl_4 ::=  'end';
	'new' : loop_stmt@0_decl_4 ::=  'end';
	'++' : loop_stmt@0_decl_4 ::=  'end';
	'link' : loop_stmt@0_decl_4 ::=  'end';
	'break' : loop_stmt@0_decl_4 ::=  'end';
	'continue' : loop_stmt@0_decl_4 ::=  'end';
	'typeid' : loop_stmt@0_decl_4 ::=  'end';
	'struct' : loop_stmt@0_decl_4 ::=  'end';
	'try' : loop_stmt@0_decl_4 ::=  'end';
	'!' : loop_stmt@0_decl_4 ::=  'end';
	ID : loop_stmt@0_decl_4 ::=  'end';
	'var' : loop_stmt@0_decl_4 ::=  'end';
	'&' : loop_stmt@0_decl_4 ::=  'end';
	'class' : loop_stmt@0_decl_4 ::=  'end';
	'else' : loop_stmt@0_decl_4 ::=  'end';
	'loop' : loop_stmt@0_decl_4 ::=  'end';
	'constant' : loop_stmt@0_decl_4 ::=  'end';
	'throw' : loop_stmt@0_decl_4 ::=  'end';
	'if' : loop_stmt@0_decl_4 ::=  'end';

State 265 : 
	'(' : loop_stmt@0_decl_4 ::=  until_stmt;
	CHAR : loop_stmt@0_decl_4 ::=  until_stmt;
	'gcnew' : loop_stmt@0_decl_4 ::=  until_stmt;
	'return' : loop_stmt@0_decl_4 ::=  until_stmt;
	'*' : loop_stmt@0_decl_4 ::=  until_stmt;
	'using' : loop_stmt@0_decl_4 ::=  until_stmt;
	NUM : loop_stmt@0_decl_4 ::=  until_stmt;
	'for' : loop_stmt@0_decl_4 ::=  until_stmt;
	%END% : loop_stmt@0_decl_4 ::=  until_stmt;
	'null' : loop_stmt@0_decl_4 ::=  until_stmt;
	'foreach' : loop_stmt@0_decl_4 ::=  until_stmt;
	'false' : loop_stmt@0_decl_4 ::=  until_stmt;
	'while' : loop_stmt@0_decl_4 ::=  until_stmt;
	ENDL : loop_stmt@0_decl_4 ::=  until_stmt;
	'local' : loop_stmt@0_decl_4 ::=  until_stmt;
	STR : loop_stmt@0_decl_4 ::=  until_stmt;
	'}' : loop_stmt@0_decl_4 ::=  until_stmt;
	'{' : loop_stmt@0_decl_4 ::=  until_stmt;
	'package' : loop_stmt@0_decl_4 ::=  until_stmt;
	'-' : loop_stmt@0_decl_4 ::=  until_stmt;
	'end' : loop_stmt@0_decl_4 ::=  until_stmt;
	'block' : loop_stmt@0_decl_4 ::=  until_stmt;
	'function' : loop_stmt@0_decl_4 ::=  until_stmt;
	'import' : loop_stmt@0_decl_4 ::=  until_stmt;
	PREP : loop_stmt@0_decl_4 ::=  until_stmt;
	'catch' : loop_stmt@0_decl_4 ::=  until_stmt;
	'until' : loop_stmt@0_decl_4 ::=  until_stmt;
	'--' : loop_stmt@0_decl_4 ::=  until_stmt;
	'[' : loop_stmt@0_decl_4 ::=  until_stmt;
	'switch' : loop_stmt@0_decl_4 ::=  until_stmt;
	'true' : loop_stmt@0_decl_4 ::=  until_stmt;
	'global' : loop_stmt@0_decl_4 ::=  until_stmt;
	'namespace' : loop_stmt@0_decl_4 ::=  until_stmt;
	'new' : loop_stmt@0_decl_4 ::=  until_stmt;
	'++' : loop_stmt@0_decl_4 ::=  until_stmt;
	'link' : loop_stmt@0_decl_4 ::=  until_stmt;
	'break' : loop_stmt@0_decl_4 ::=  until_stmt;
	'continue' : loop_stmt@0_decl_4 ::=  until_stmt;
	'typeid' : loop_stmt@0_decl_4 ::=  until_stmt;
	'struct' : loop_stmt@0_decl_4 ::=  until_stmt;
	'try' : loop_stmt@0_decl_4 ::=  until_stmt;
	'!' : loop_stmt@0_decl_4 ::=  until_stmt;
	ID : loop_stmt@0_decl_4 ::=  until_stmt;
	'var' : loop_stmt@0_decl_4 ::=  until_stmt;
	'&' : loop_stmt@0_decl_4 ::=  until_stmt;
	'class' : loop_stmt@0_decl_4 ::=  until_stmt;
	'else' : loop_stmt@0_decl_4 ::=  until_stmt;
	'loop' : loop_stmt@0_decl_4 ::=  until_stmt;
	'constant' : loop_stmt@0_decl_4 ::=  until_stmt;
	'throw' : loop_stmt@0_decl_4 ::=  until_stmt;
	'if' : loop_stmt@0_decl_4 ::=  until_stmt;

State 266 : 
	basic_expr :  267;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 267 : 
	ENDL :  268;

State 268 : 
	CHAR : until_stmt ::=  'until' basic_expr ENDL;
	'(' : until_stmt ::=  'until' basic_expr ENDL;
	'gcnew' : until_stmt ::=  'until' basic_expr ENDL;
	'return' : until_stmt ::=  'until' basic_expr ENDL;
	'*' : until_stmt ::=  'until' basic_expr ENDL;
	'using' : until_stmt ::=  'until' basic_expr ENDL;
	'false' : until_stmt ::=  'until' basic_expr ENDL;
	NUM : until_stmt ::=  'until' basic_expr ENDL;
	'null' : until_stmt ::=  'until' basic_expr ENDL;
	'foreach' : until_stmt ::=  'until' basic_expr ENDL;
	'for' : until_stmt ::=  'until' basic_expr ENDL;
	%END% : until_stmt ::=  'until' basic_expr ENDL;
	'local' : until_stmt ::=  'until' basic_expr ENDL;
	'while' : until_stmt ::=  'until' basic_expr ENDL;
	ENDL : until_stmt ::=  'until' basic_expr ENDL;
	STR : until_stmt ::=  'until' basic_expr ENDL;
	'}' : until_stmt ::=  'until' basic_expr ENDL;
	'{' : until_stmt ::=  'until' basic_expr ENDL;
	'package' : until_stmt ::=  'until' basic_expr ENDL;
	'-' : until_stmt ::=  'until' basic_expr ENDL;
	'function' : until_stmt ::=  'until' basic_expr ENDL;
	'block' : until_stmt ::=  'until' basic_expr ENDL;
	'end' : until_stmt ::=  'until' basic_expr ENDL;
	'import' : until_stmt ::=  'until' basic_expr ENDL;
	PREP : until_stmt ::=  'until' basic_expr ENDL;
	'until' : until_stmt ::=  'until' basic_expr ENDL;
	'[' : until_stmt ::=  'until' basic_expr ENDL;
	'--' : until_stmt ::=  'until' basic_expr ENDL;
	'switch' : until_stmt ::=  'until' basic_expr ENDL;
	'true' : until_stmt ::=  'until' basic_expr ENDL;
	'global' : until_stmt ::=  'until' basic_expr ENDL;
	'catch' : until_stmt ::=  'until' basic_expr ENDL;
	'namespace' : until_stmt ::=  'until' basic_expr ENDL;
	'new' : until_stmt ::=  'until' basic_expr ENDL;
	'++' : until_stmt ::=  'until' basic_expr ENDL;
	'break' : until_stmt ::=  'until' basic_expr ENDL;
	'link' : until_stmt ::=  'until' basic_expr ENDL;
	'continue' : until_stmt ::=  'until' basic_expr ENDL;
	'typeid' : until_stmt ::=  'until' basic_expr ENDL;
	'struct' : until_stmt ::=  'until' basic_expr ENDL;
	'try' : until_stmt ::=  'until' basic_expr ENDL;
	'else' : until_stmt ::=  'until' basic_expr ENDL;
	'!' : until_stmt ::=  'until' basic_expr ENDL;
	ID : until_stmt ::=  'until' basic_expr ENDL;
	'&' : until_stmt ::=  'until' basic_expr ENDL;
	'var' : until_stmt ::=  'until' basic_expr ENDL;
	'class' : until_stmt ::=  'until' basic_expr ENDL;
	'loop' : until_stmt ::=  'until' basic_expr ENDL;
	'throw' : until_stmt ::=  'until' basic_expr ENDL;
	'constant' : until_stmt ::=  'until' basic_expr ENDL;
	'if' : until_stmt ::=  'until' basic_expr ENDL;

State 269 : 
	basic_expr :  270;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 270 : 
	ENDL :  271;

State 271 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  272;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 272 : 
	'end' :  273;

State 273 : 
	ENDL :  274;

State 274 : 
	CHAR : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'(' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'gcnew' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'return' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'*' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'using' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'false' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	NUM : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'null' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'foreach' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'for' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	%END% : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'local' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'while' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	ENDL : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	STR : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'}' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'{' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'package' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'-' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'function' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'block' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'end' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'import' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	PREP : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'until' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'[' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'--' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'switch' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'true' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'global' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'catch' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'namespace' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'new' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'++' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'break' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'link' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'continue' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'typeid' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'struct' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'try' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'else' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'!' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	ID : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'&' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'var' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'class' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'loop' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'throw' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'constant' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;
	'if' : while_stmt ::=  'while' basic_expr ENDL stmts 'end' ENDL;

State 275 : 
	basic_expr :  276;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 276 : 
	ENDL :  277;

State 277 : 
	ENDL : switch_stmts@0_rep_1 ::=  NULL;
	switch_case :  287;
	switch_default :  285;
	'case' :  358;
	'end' : switch_stmts@0_rep_1 ::=  NULL;
	switch_stmts@0_rep_1 :  281;
	switch_stmts :  278;
	'default' :  289;

State 278 : 
	'end' :  279;

State 279 : 
	ENDL :  280;

State 280 : 
	CHAR : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'(' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'gcnew' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'return' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'*' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'using' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'false' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	NUM : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'null' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'foreach' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'for' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	%END% : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'local' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'while' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	ENDL : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	STR : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'}' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'{' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'package' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'-' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'function' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'block' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'end' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'import' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	PREP : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'until' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'[' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'--' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'switch' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'true' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'global' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'catch' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'namespace' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'new' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'++' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'break' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'link' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'continue' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'typeid' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'struct' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'try' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'else' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'!' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	ID : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'&' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'var' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'class' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'loop' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'throw' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'constant' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;
	'if' : switch_stmt ::=  'switch' basic_expr ENDL switch_stmts 'end' ENDL;

State 281 : 
	'end' : switch_stmts@0_rep_2 ::=  NULL;
	switch_stmts@0_rep_2 :  282;
	ENDL :  283;

State 282 : 
	'end' : switch_stmts ::=  switch_stmts@0_rep_1 switch_stmts@0_rep_2;

State 283 : 
	'end' : switch_stmts@0_rep_2 ::=  NULL;
	switch_stmts@0_rep_2 :  284;
	ENDL :  283;

State 284 : 
	'end' : switch_stmts@0_rep_2 ::=  ENDL switch_stmts@0_rep_2;

State 285 : 
	ENDL : switch_stmts@0_rep_1 ::=  NULL;
	'default' :  289;
	switch_case :  287;
	'end' : switch_stmts@0_rep_1 ::=  NULL;
	'case' :  358;
	switch_stmts@0_rep_1 :  286;
	switch_default :  285;

State 286 : 
	'end' : switch_stmts@0_rep_1 ::=  switch_default switch_stmts@0_rep_1;
	ENDL : switch_stmts@0_rep_1 ::=  switch_default switch_stmts@0_rep_1;

State 287 : 
	ENDL : switch_stmts@0_rep_1 ::=  NULL;
	'default' :  289;
	switch_case :  287;
	'end' : switch_stmts@0_rep_1 ::=  NULL;
	'case' :  358;
	switch_stmts@0_rep_1 :  288;
	switch_default :  285;

State 288 : 
	'end' : switch_stmts@0_rep_1 ::=  switch_case switch_stmts@0_rep_1;
	ENDL : switch_stmts@0_rep_1 ::=  switch_case switch_stmts@0_rep_1;

State 289 : 
	ENDL :  290;

State 290 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  291;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 291 : 
	'end' :  292;

State 292 : 
	ENDL :  293;

State 293 : 
	ENDL : switch_default ::=  'default' ENDL stmts 'end' ENDL;
	'end' : switch_default ::=  'default' ENDL stmts 'end' ENDL;
	'case' : switch_default ::=  'default' ENDL stmts 'end' ENDL;
	'default' : switch_default ::=  'default' ENDL stmts 'end' ENDL;

State 294 : 
	basic_expr :  295;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 295 : 
	ENDL :  296;

State 296 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  297;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 297 : 
	CHAR : if_stmt@0_rep_5 ::=  NULL;
	'(' : if_stmt@0_rep_5 ::=  NULL;
	'gcnew' : if_stmt@0_rep_5 ::=  NULL;
	'return' : if_stmt@0_rep_5 ::=  NULL;
	'*' : if_stmt@0_rep_5 ::=  NULL;
	'using' : if_stmt@0_rep_5 ::=  NULL;
	'false' : if_stmt@0_rep_5 ::=  NULL;
	NUM : if_stmt@0_rep_5 ::=  NULL;
	'null' : if_stmt@0_rep_5 ::=  NULL;
	'foreach' : if_stmt@0_rep_5 ::=  NULL;
	'for' : if_stmt@0_rep_5 ::=  NULL;
	%END% : if_stmt@0_rep_5 ::=  NULL;
	else_stmt :  299;
	'local' : if_stmt@0_rep_5 ::=  NULL;
	'while' : if_stmt@0_rep_5 ::=  NULL;
	ENDL : if_stmt@0_rep_5 ::=  NULL;
	STR : if_stmt@0_rep_5 ::=  NULL;
	'}' : if_stmt@0_rep_5 ::=  NULL;
	'{' : if_stmt@0_rep_5 ::=  NULL;
	'package' : if_stmt@0_rep_5 ::=  NULL;
	if_stmt@0_rep_5 :  298;
	'-' : if_stmt@0_rep_5 ::=  NULL;
	'function' : if_stmt@0_rep_5 ::=  NULL;
	'block' : if_stmt@0_rep_5 ::=  NULL;
	'end' : if_stmt@0_rep_5 ::=  NULL;
	'import' : if_stmt@0_rep_5 ::=  NULL;
	PREP : if_stmt@0_rep_5 ::=  NULL;
	'until' : if_stmt@0_rep_5 ::=  NULL;
	'[' : if_stmt@0_rep_5 ::=  NULL;
	'--' : if_stmt@0_rep_5 ::=  NULL;
	'switch' : if_stmt@0_rep_5 ::=  NULL;
	'true' : if_stmt@0_rep_5 ::=  NULL;
	'global' : if_stmt@0_rep_5 ::=  NULL;
	'catch' : if_stmt@0_rep_5 ::=  NULL;
	'namespace' : if_stmt@0_rep_5 ::=  NULL;
	'new' : if_stmt@0_rep_5 ::=  NULL;
	'++' : if_stmt@0_rep_5 ::=  NULL;
	'break' : if_stmt@0_rep_5 ::=  NULL;
	'link' : if_stmt@0_rep_5 ::=  NULL;
	'continue' : if_stmt@0_rep_5 ::=  NULL;
	'typeid' : if_stmt@0_rep_5 ::=  NULL;
	'struct' : if_stmt@0_rep_5 ::=  NULL;
	'try' : if_stmt@0_rep_5 ::=  NULL;
	'else' :  304;
	'!' : if_stmt@0_rep_5 ::=  NULL;
	ID : if_stmt@0_rep_5 ::=  NULL;
	'&' : if_stmt@0_rep_5 ::=  NULL;
	'var' : if_stmt@0_rep_5 ::=  NULL;
	'class' : if_stmt@0_rep_5 ::=  NULL;
	'loop' : if_stmt@0_rep_5 ::=  NULL;
	'throw' : if_stmt@0_rep_5 ::=  NULL;
	'constant' : if_stmt@0_rep_5 ::=  NULL;
	'if' : if_stmt@0_rep_5 ::=  NULL;

State 298 : 
	CHAR : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'(' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'gcnew' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'return' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'*' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'using' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'false' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	NUM : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'null' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'foreach' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'for' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	%END% : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'local' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'while' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	ENDL : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	STR : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'}' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'{' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'package' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'-' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'function' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'block' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'end' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'import' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	PREP : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'until' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'[' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'--' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'switch' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'true' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'global' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'catch' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'namespace' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'new' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'++' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'break' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'link' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'continue' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'typeid' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'struct' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'try' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'else' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'!' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	ID : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'&' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'var' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'class' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'loop' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'throw' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'constant' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;
	'if' : if_stmt ::=  'if' basic_expr ENDL stmts if_stmt@0_rep_5;

State 299 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  300;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 300 : 
	'end' :  301;

State 301 : 
	ENDL :  302;

State 302 : 
	CHAR : if_stmt@0_rep_5 ::=  NULL;
	'(' : if_stmt@0_rep_5 ::=  NULL;
	'gcnew' : if_stmt@0_rep_5 ::=  NULL;
	'return' : if_stmt@0_rep_5 ::=  NULL;
	'*' : if_stmt@0_rep_5 ::=  NULL;
	'using' : if_stmt@0_rep_5 ::=  NULL;
	'false' : if_stmt@0_rep_5 ::=  NULL;
	NUM : if_stmt@0_rep_5 ::=  NULL;
	'null' : if_stmt@0_rep_5 ::=  NULL;
	'foreach' : if_stmt@0_rep_5 ::=  NULL;
	'for' : if_stmt@0_rep_5 ::=  NULL;
	%END% : if_stmt@0_rep_5 ::=  NULL;
	else_stmt :  299;
	'local' : if_stmt@0_rep_5 ::=  NULL;
	'while' : if_stmt@0_rep_5 ::=  NULL;
	ENDL : if_stmt@0_rep_5 ::=  NULL;
	STR : if_stmt@0_rep_5 ::=  NULL;
	'}' : if_stmt@0_rep_5 ::=  NULL;
	'{' : if_stmt@0_rep_5 ::=  NULL;
	'package' : if_stmt@0_rep_5 ::=  NULL;
	if_stmt@0_rep_5 :  303;
	'-' : if_stmt@0_rep_5 ::=  NULL;
	'function' : if_stmt@0_rep_5 ::=  NULL;
	'block' : if_stmt@0_rep_5 ::=  NULL;
	'end' : if_stmt@0_rep_5 ::=  NULL;
	'import' : if_stmt@0_rep_5 ::=  NULL;
	PREP : if_stmt@0_rep_5 ::=  NULL;
	'until' : if_stmt@0_rep_5 ::=  NULL;
	'[' : if_stmt@0_rep_5 ::=  NULL;
	'--' : if_stmt@0_rep_5 ::=  NULL;
	'switch' : if_stmt@0_rep_5 ::=  NULL;
	'true' : if_stmt@0_rep_5 ::=  NULL;
	'global' : if_stmt@0_rep_5 ::=  NULL;
	'catch' : if_stmt@0_rep_5 ::=  NULL;
	'namespace' : if_stmt@0_rep_5 ::=  NULL;
	'new' : if_stmt@0_rep_5 ::=  NULL;
	'++' : if_stmt@0_rep_5 ::=  NULL;
	'break' : if_stmt@0_rep_5 ::=  NULL;
	'link' : if_stmt@0_rep_5 ::=  NULL;
	'continue' : if_stmt@0_rep_5 ::=  NULL;
	'typeid' : if_stmt@0_rep_5 ::=  NULL;
	'struct' : if_stmt@0_rep_5 ::=  NULL;
	'try' : if_stmt@0_rep_5 ::=  NULL;
	'else' :  304;
	'!' : if_stmt@0_rep_5 ::=  NULL;
	ID : if_stmt@0_rep_5 ::=  NULL;
	'&' : if_stmt@0_rep_5 ::=  NULL;
	'var' : if_stmt@0_rep_5 ::=  NULL;
	'class' : if_stmt@0_rep_5 ::=  NULL;
	'loop' : if_stmt@0_rep_5 ::=  NULL;
	'throw' : if_stmt@0_rep_5 ::=  NULL;
	'constant' : if_stmt@0_rep_5 ::=  NULL;
	'if' : if_stmt@0_rep_5 ::=  NULL;

State 303 : 
	CHAR : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'(' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'gcnew' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'return' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'*' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'using' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'false' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	NUM : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'null' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'foreach' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'for' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	%END% : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'local' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'while' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	ENDL : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	STR : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'}' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'{' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'package' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'-' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'function' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'block' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'end' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'import' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	PREP : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'until' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'[' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'--' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'switch' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'true' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'global' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'catch' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'namespace' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'new' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'++' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'break' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'link' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'continue' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'typeid' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'struct' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'try' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'else' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'!' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	ID : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'&' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'var' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'class' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'loop' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'throw' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'constant' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;
	'if' : if_stmt@0_rep_5 ::=  else_stmt stmts 'end' ENDL if_stmt@0_rep_5;

State 304 : 
	ENDL : else_stmt@0_opt_2 ::=  NULL;
	else_stmt@0_opt_2 :  305;
	'if' :  307;

State 305 : 
	ENDL :  306;

State 306 : 
	CHAR : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'(' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'gcnew' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'return' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'*' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'using' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'false' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	NUM : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'null' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'foreach' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'for' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'local' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'while' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	STR : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'{' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'package' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'-' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'end' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'block' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'import' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'function' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	PREP : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'[' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'--' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'switch' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'true' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'global' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'namespace' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'new' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'++' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'break' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'link' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'continue' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'typeid' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'struct' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'try' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'!' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	ID : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'&' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'var' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'class' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'loop' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'throw' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'constant' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;
	'if' : else_stmt ::=  'else' else_stmt@0_opt_2 ENDL;

State 307 : 
	basic_expr :  308;
	'(' :  163;
	'gcnew' :  136;
	unary_op :  132;
	CHAR :  153;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	var_bind :  74;
	'&' :  140;
	add_expr :  94;
	cond_expr :  70;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 308 : 
	ENDL : else_stmt@0_opt_2 ::=  'if' basic_expr;

State 309 : 
	using_list :  310;
	module_list :  312;
	ID :  316;

State 310 : 
	endline :  311;
	';' :  29;
	ENDL :  30;

State 311 : 
	CHAR : using_stmt ::=  'using' using_list endline;
	'(' : using_stmt ::=  'using' using_list endline;
	'gcnew' : using_stmt ::=  'using' using_list endline;
	'return' : using_stmt ::=  'using' using_list endline;
	'*' : using_stmt ::=  'using' using_list endline;
	'using' : using_stmt ::=  'using' using_list endline;
	'false' : using_stmt ::=  'using' using_list endline;
	NUM : using_stmt ::=  'using' using_list endline;
	'null' : using_stmt ::=  'using' using_list endline;
	'foreach' : using_stmt ::=  'using' using_list endline;
	'for' : using_stmt ::=  'using' using_list endline;
	%END% : using_stmt ::=  'using' using_list endline;
	'local' : using_stmt ::=  'using' using_list endline;
	ENDL : using_stmt ::=  'using' using_list endline;
	'while' : using_stmt ::=  'using' using_list endline;
	STR : using_stmt ::=  'using' using_list endline;
	'}' : using_stmt ::=  'using' using_list endline;
	'{' : using_stmt ::=  'using' using_list endline;
	'package' : using_stmt ::=  'using' using_list endline;
	'-' : using_stmt ::=  'using' using_list endline;
	'function' : using_stmt ::=  'using' using_list endline;
	'import' : using_stmt ::=  'using' using_list endline;
	'end' : using_stmt ::=  'using' using_list endline;
	'block' : using_stmt ::=  'using' using_list endline;
	PREP : using_stmt ::=  'using' using_list endline;
	'until' : using_stmt ::=  'using' using_list endline;
	'[' : using_stmt ::=  'using' using_list endline;
	'--' : using_stmt ::=  'using' using_list endline;
	'switch' : using_stmt ::=  'using' using_list endline;
	'true' : using_stmt ::=  'using' using_list endline;
	'global' : using_stmt ::=  'using' using_list endline;
	'catch' : using_stmt ::=  'using' using_list endline;
	'namespace' : using_stmt ::=  'using' using_list endline;
	'new' : using_stmt ::=  'using' using_list endline;
	'++' : using_stmt ::=  'using' using_list endline;
	'link' : using_stmt ::=  'using' using_list endline;
	'break' : using_stmt ::=  'using' using_list endline;
	'continue' : using_stmt ::=  'using' using_list endline;
	'typeid' : using_stmt ::=  'using' using_list endline;
	'struct' : using_stmt ::=  'using' using_list endline;
	'try' : using_stmt ::=  'using' using_list endline;
	'else' : using_stmt ::=  'using' using_list endline;
	'!' : using_stmt ::=  'using' using_list endline;
	'var' : using_stmt ::=  'using' using_list endline;
	ID : using_stmt ::=  'using' using_list endline;
	'class' : using_stmt ::=  'using' using_list endline;
	'&' : using_stmt ::=  'using' using_list endline;
	'loop' : using_stmt ::=  'using' using_list endline;
	'constant' : using_stmt ::=  'using' using_list endline;
	'throw' : using_stmt ::=  'using' using_list endline;
	'if' : using_stmt ::=  'using' using_list endline;

State 312 : 
	ENDL : using_list@0_opt_2 ::=  NULL;
	';' : using_list@0_opt_2 ::=  NULL;
	using_list@0_opt_2 :  313;
	',' :  314;

State 313 : 
	ENDL : using_list ::=  module_list using_list@0_opt_2;
	';' : using_list ::=  module_list using_list@0_opt_2;

State 314 : 
	using_list :  315;
	module_list :  312;
	ID :  316;

State 315 : 
	ENDL : using_list@0_opt_2 ::=  ',' using_list;
	';' : using_list@0_opt_2 ::=  ',' using_list;

State 316 : 
	'as' : module_list@0_opt_2 ::=  NULL;
	ENDL : module_list@0_opt_2 ::=  NULL;
	';' : module_list@0_opt_2 ::=  NULL;
	module_list@0_opt_2 :  317;
	'.' :  318;
	',' : module_list@0_opt_2 ::=  NULL;

State 317 : 
	ENDL : module_list ::=  ID module_list@0_opt_2;
	';' : module_list ::=  ID module_list@0_opt_2;
	'as' : module_list ::=  ID module_list@0_opt_2;
	',' : module_list ::=  ID module_list@0_opt_2;

State 318 : 
	module_list@0_opt_2@0_decl_2 :  319;
	module_list :  320;
	ID :  316;
	'*' :  321;

State 319 : 
	'as' : module_list@0_opt_2 ::=  '.' module_list@0_opt_2@0_decl_2;
	ENDL : module_list@0_opt_2 ::=  '.' module_list@0_opt_2@0_decl_2;
	';' : module_list@0_opt_2 ::=  '.' module_list@0_opt_2@0_decl_2;
	',' : module_list@0_opt_2 ::=  '.' module_list@0_opt_2@0_decl_2;

State 320 : 
	ENDL : module_list@0_opt_2@0_decl_2 ::=  module_list;
	';' : module_list@0_opt_2@0_decl_2 ::=  module_list;
	'as' : module_list@0_opt_2@0_decl_2 ::=  module_list;
	',' : module_list@0_opt_2@0_decl_2 ::=  module_list;

State 321 : 
	ENDL : module_list@0_opt_2@0_decl_2 ::=  '*';
	';' : module_list@0_opt_2@0_decl_2 ::=  '*';
	'as' : module_list@0_opt_2@0_decl_2 ::=  '*';
	',' : module_list@0_opt_2@0_decl_2 ::=  '*';

State 322 : 
	ID :  323;

State 323 : 
	ENDL :  324;

State 324 : 
	decl_stmts@0_rep_1 :  38;
	declaration :  39;
	PREP :  331;
	var_stmt@0_decl_1 :  328;
	'using' :  309;
	var_stmt :  45;
	namespace_stmt :  46;
	prep_stmt :  47;
	'namespace' :  322;
	using_stmt :  44;
	'link' :  336;
	'struct' :  333;
	'var' :  337;
	decl_stmts :  325;
	'class' :  334;
	function_stmt :  43;
	class_stmt@0_decl_1 :  31;
	'function' :  48;
	'end' : decl_stmts@0_rep_1 ::=  NULL;
	'constant' :  335;
	class_stmt :  42;

State 325 : 
	'end' :  326;

State 326 : 
	ENDL :  327;

State 327 : 
	CHAR : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'(' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'gcnew' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'return' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'*' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'using' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'false' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	NUM : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'null' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'foreach' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'for' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	%END% : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'local' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	ENDL : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'while' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	STR : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'}' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'{' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'package' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'-' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'function' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'import' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'end' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'block' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	PREP : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'until' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'[' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'--' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'switch' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'true' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'global' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'catch' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'namespace' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'new' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'++' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'link' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'break' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'continue' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'typeid' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'struct' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'try' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'else' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'!' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'var' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	ID : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'class' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'&' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'loop' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'constant' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'throw' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;
	'if' : namespace_stmt ::=  'namespace' ID ENDL decl_stmts 'end' ENDL;

State 328 : 
	'(' :  173;
	var_list :  249;
	var_def :  329;
	ID :  253;
	var_bind :  250;

State 329 : 
	endline :  330;
	';' :  29;
	ENDL :  30;

State 330 : 
	CHAR : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'(' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'gcnew' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'return' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'*' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'using' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'false' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	NUM : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'null' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'foreach' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'for' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	%END% : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'local' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	ENDL : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'while' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	STR : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'}' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'{' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'package' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'-' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'function' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'import' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'end' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'block' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	PREP : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'until' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'[' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'--' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'switch' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'true' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'global' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'catch' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'namespace' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'new' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'++' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'link' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'break' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'continue' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'typeid' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'struct' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'try' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'else' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'!' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'var' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	ID : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'class' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'&' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'loop' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'constant' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'throw' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;
	'if' : var_stmt ::=  var_stmt@0_decl_1 var_def endline;

State 331 : 
	ENDL :  332;

State 332 : 
	CHAR : prep_stmt ::=  PREP ENDL;
	'(' : prep_stmt ::=  PREP ENDL;
	'gcnew' : prep_stmt ::=  PREP ENDL;
	'return' : prep_stmt ::=  PREP ENDL;
	'*' : prep_stmt ::=  PREP ENDL;
	'using' : prep_stmt ::=  PREP ENDL;
	'false' : prep_stmt ::=  PREP ENDL;
	NUM : prep_stmt ::=  PREP ENDL;
	'null' : prep_stmt ::=  PREP ENDL;
	'foreach' : prep_stmt ::=  PREP ENDL;
	'for' : prep_stmt ::=  PREP ENDL;
	%END% : prep_stmt ::=  PREP ENDL;
	'local' : prep_stmt ::=  PREP ENDL;
	ENDL : prep_stmt ::=  PREP ENDL;
	'while' : prep_stmt ::=  PREP ENDL;
	STR : prep_stmt ::=  PREP ENDL;
	'}' : prep_stmt ::=  PREP ENDL;
	'{' : prep_stmt ::=  PREP ENDL;
	'package' : prep_stmt ::=  PREP ENDL;
	'-' : prep_stmt ::=  PREP ENDL;
	'function' : prep_stmt ::=  PREP ENDL;
	'import' : prep_stmt ::=  PREP ENDL;
	'end' : prep_stmt ::=  PREP ENDL;
	'block' : prep_stmt ::=  PREP ENDL;
	PREP : prep_stmt ::=  PREP ENDL;
	'until' : prep_stmt ::=  PREP ENDL;
	'[' : prep_stmt ::=  PREP ENDL;
	'--' : prep_stmt ::=  PREP ENDL;
	'switch' : prep_stmt ::=  PREP ENDL;
	'true' : prep_stmt ::=  PREP ENDL;
	'global' : prep_stmt ::=  PREP ENDL;
	'catch' : prep_stmt ::=  PREP ENDL;
	'namespace' : prep_stmt ::=  PREP ENDL;
	'new' : prep_stmt ::=  PREP ENDL;
	'++' : prep_stmt ::=  PREP ENDL;
	'link' : prep_stmt ::=  PREP ENDL;
	'break' : prep_stmt ::=  PREP ENDL;
	'continue' : prep_stmt ::=  PREP ENDL;
	'typeid' : prep_stmt ::=  PREP ENDL;
	'struct' : prep_stmt ::=  PREP ENDL;
	'try' : prep_stmt ::=  PREP ENDL;
	'else' : prep_stmt ::=  PREP ENDL;
	'!' : prep_stmt ::=  PREP ENDL;
	'var' : prep_stmt ::=  PREP ENDL;
	ID : prep_stmt ::=  PREP ENDL;
	'class' : prep_stmt ::=  PREP ENDL;
	'&' : prep_stmt ::=  PREP ENDL;
	'loop' : prep_stmt ::=  PREP ENDL;
	'constant' : prep_stmt ::=  PREP ENDL;
	'throw' : prep_stmt ::=  PREP ENDL;
	'if' : prep_stmt ::=  PREP ENDL;

State 333 : 
	ID : class_stmt@0_decl_1 ::=  'struct';

State 334 : 
	ID : class_stmt@0_decl_1 ::=  'class';

State 335 : 
	ID : var_stmt@0_decl_1 ::=  'constant';
	'(' : var_stmt@0_decl_1 ::=  'constant';

State 336 : 
	ID : var_stmt@0_decl_1 ::=  'link';
	'(' : var_stmt@0_decl_1 ::=  'link';

State 337 : 
	ID : var_stmt@0_decl_1 ::=  'var';
	'(' : var_stmt@0_decl_1 ::=  'var';

State 338 : 
	ENDL :  339;

State 339 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  340;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 340 : 
	'end' :  341;

State 341 : 
	ENDL :  342;

State 342 : 
	CHAR : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'(' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'gcnew' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'return' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'*' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'using' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'false' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	NUM : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'null' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'foreach' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'for' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	%END% : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'local' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'while' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	ENDL : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	STR : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'}' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'{' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'package' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'-' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'function' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'block' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'end' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'import' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	PREP : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'until' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'[' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'--' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'switch' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'true' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'global' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'catch' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'namespace' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'new' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'++' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'break' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'link' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'continue' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'typeid' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'struct' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'try' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'else' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'!' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	ID : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'&' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'var' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'class' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'loop' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'throw' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'constant' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;
	'if' : block_stmt ::=  'block' ENDL stmts 'end' ENDL;

State 343 : 
	ID :  316;
	module_list :  346;
	import_list :  344;

State 344 : 
	endline :  345;
	';' :  29;
	ENDL :  30;

State 345 : 
	CHAR : import_stmt ::=  'import' import_list endline;
	'(' : import_stmt ::=  'import' import_list endline;
	'gcnew' : import_stmt ::=  'import' import_list endline;
	'return' : import_stmt ::=  'import' import_list endline;
	'*' : import_stmt ::=  'import' import_list endline;
	'using' : import_stmt ::=  'import' import_list endline;
	'false' : import_stmt ::=  'import' import_list endline;
	NUM : import_stmt ::=  'import' import_list endline;
	'null' : import_stmt ::=  'import' import_list endline;
	'foreach' : import_stmt ::=  'import' import_list endline;
	'for' : import_stmt ::=  'import' import_list endline;
	%END% : import_stmt ::=  'import' import_list endline;
	'local' : import_stmt ::=  'import' import_list endline;
	'while' : import_stmt ::=  'import' import_list endline;
	ENDL : import_stmt ::=  'import' import_list endline;
	STR : import_stmt ::=  'import' import_list endline;
	'}' : import_stmt ::=  'import' import_list endline;
	'{' : import_stmt ::=  'import' import_list endline;
	'package' : import_stmt ::=  'import' import_list endline;
	'-' : import_stmt ::=  'import' import_list endline;
	'function' : import_stmt ::=  'import' import_list endline;
	'block' : import_stmt ::=  'import' import_list endline;
	'end' : import_stmt ::=  'import' import_list endline;
	'import' : import_stmt ::=  'import' import_list endline;
	PREP : import_stmt ::=  'import' import_list endline;
	'until' : import_stmt ::=  'import' import_list endline;
	'[' : import_stmt ::=  'import' import_list endline;
	'--' : import_stmt ::=  'import' import_list endline;
	'switch' : import_stmt ::=  'import' import_list endline;
	'true' : import_stmt ::=  'import' import_list endline;
	'global' : import_stmt ::=  'import' import_list endline;
	'catch' : import_stmt ::=  'import' import_list endline;
	'namespace' : import_stmt ::=  'import' import_list endline;
	'new' : import_stmt ::=  'import' import_list endline;
	'++' : import_stmt ::=  'import' import_list endline;
	'break' : import_stmt ::=  'import' import_list endline;
	'link' : import_stmt ::=  'import' import_list endline;
	'continue' : import_stmt ::=  'import' import_list endline;
	'typeid' : import_stmt ::=  'import' import_list endline;
	'struct' : import_stmt ::=  'import' import_list endline;
	'try' : import_stmt ::=  'import' import_list endline;
	'else' : import_stmt ::=  'import' import_list endline;
	'!' : import_stmt ::=  'import' import_list endline;
	ID : import_stmt ::=  'import' import_list endline;
	'&' : import_stmt ::=  'import' import_list endline;
	'var' : import_stmt ::=  'import' import_list endline;
	'class' : import_stmt ::=  'import' import_list endline;
	'loop' : import_stmt ::=  'import' import_list endline;
	'throw' : import_stmt ::=  'import' import_list endline;
	'constant' : import_stmt ::=  'import' import_list endline;
	'if' : import_stmt ::=  'import' import_list endline;

State 346 : 
	ENDL : import_list@0_opt_2 ::=  NULL;
	';' : import_list@0_opt_2 ::=  NULL;
	'as' :  351;
	',' : import_list@0_opt_2 ::=  NULL;
	import_list@0_opt_2 :  347;

State 347 : 
	ENDL : import_list@0_opt_3 ::=  NULL;
	';' : import_list@0_opt_3 ::=  NULL;
	import_list@0_opt_3 :  348;
	',' :  349;

State 348 : 
	ENDL : import_list ::=  module_list import_list@0_opt_2 import_list@0_opt_3;
	';' : import_list ::=  module_list import_list@0_opt_2 import_list@0_opt_3;

State 349 : 
	ID :  316;
	module_list :  346;
	import_list :  350;

State 350 : 
	ENDL : import_list@0_opt_3 ::=  ',' import_list;
	';' : import_list@0_opt_3 ::=  ',' import_list;

State 351 : 
	ID :  352;

State 352 : 
	ENDL : import_list@0_opt_2 ::=  'as' ID;
	';' : import_list@0_opt_2 ::=  'as' ID;
	',' : import_list@0_opt_2 ::=  'as' ID;

State 353 : 
	ID :  354;

State 354 : 
	endline :  355;
	';' :  29;
	ENDL :  30;

State 355 : 
	CHAR : package_stmt ::=  'package' ID endline;
	'(' : package_stmt ::=  'package' ID endline;
	'gcnew' : package_stmt ::=  'package' ID endline;
	'return' : package_stmt ::=  'package' ID endline;
	'*' : package_stmt ::=  'package' ID endline;
	'using' : package_stmt ::=  'package' ID endline;
	'false' : package_stmt ::=  'package' ID endline;
	NUM : package_stmt ::=  'package' ID endline;
	'null' : package_stmt ::=  'package' ID endline;
	'foreach' : package_stmt ::=  'package' ID endline;
	'for' : package_stmt ::=  'package' ID endline;
	%END% : package_stmt ::=  'package' ID endline;
	'local' : package_stmt ::=  'package' ID endline;
	'while' : package_stmt ::=  'package' ID endline;
	ENDL : package_stmt ::=  'package' ID endline;
	STR : package_stmt ::=  'package' ID endline;
	'}' : package_stmt ::=  'package' ID endline;
	'{' : package_stmt ::=  'package' ID endline;
	'package' : package_stmt ::=  'package' ID endline;
	'-' : package_stmt ::=  'package' ID endline;
	'function' : package_stmt ::=  'package' ID endline;
	'block' : package_stmt ::=  'package' ID endline;
	'end' : package_stmt ::=  'package' ID endline;
	'import' : package_stmt ::=  'package' ID endline;
	PREP : package_stmt ::=  'package' ID endline;
	'until' : package_stmt ::=  'package' ID endline;
	'[' : package_stmt ::=  'package' ID endline;
	'--' : package_stmt ::=  'package' ID endline;
	'switch' : package_stmt ::=  'package' ID endline;
	'true' : package_stmt ::=  'package' ID endline;
	'global' : package_stmt ::=  'package' ID endline;
	'catch' : package_stmt ::=  'package' ID endline;
	'namespace' : package_stmt ::=  'package' ID endline;
	'new' : package_stmt ::=  'package' ID endline;
	'++' : package_stmt ::=  'package' ID endline;
	'break' : package_stmt ::=  'package' ID endline;
	'link' : package_stmt ::=  'package' ID endline;
	'continue' : package_stmt ::=  'package' ID endline;
	'typeid' : package_stmt ::=  'package' ID endline;
	'struct' : package_stmt ::=  'package' ID endline;
	'try' : package_stmt ::=  'package' ID endline;
	'else' : package_stmt ::=  'package' ID endline;
	'!' : package_stmt ::=  'package' ID endline;
	ID : package_stmt ::=  'package' ID endline;
	'&' : package_stmt ::=  'package' ID endline;
	'var' : package_stmt ::=  'package' ID endline;
	'class' : package_stmt ::=  'package' ID endline;
	'loop' : package_stmt ::=  'package' ID endline;
	'throw' : package_stmt ::=  'package' ID endline;
	'constant' : package_stmt ::=  'package' ID endline;
	'if' : package_stmt ::=  'package' ID endline;

State 356 : 
	ENDL : control_stmt@0_decl_1 ::=  'continue';
	';' : control_stmt@0_decl_1 ::=  'continue';

State 357 : 
	ENDL : control_stmt@0_decl_1 ::=  'break';
	';' : control_stmt@0_decl_1 ::=  'break';

State 358 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  359;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 359 : 
	ENDL :  360;

State 360 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  361;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 361 : 
	'end' :  362;

State 362 : 
	ENDL :  363;

State 363 : 
	ENDL : switch_case ::=  'case' logic_or_expr ENDL stmts 'end' ENDL;
	'end' : switch_case ::=  'case' logic_or_expr ENDL stmts 'end' ENDL;
	'case' : switch_case ::=  'case' logic_or_expr ENDL stmts 'end' ENDL;
	'default' : switch_case ::=  'case' logic_or_expr ENDL stmts 'end' ENDL;

State 364 : 
	CHAR : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'(' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'gcnew' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'return' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'*' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'using' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'false' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	NUM : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'null' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'foreach' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'for' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'local' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'while' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	ENDL :  364;
	STR : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'}' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'{' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'package' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'-' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'function' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'block' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'import' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	lambda_body@0_rep_2@0_rep_2 :  365;
	PREP : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'[' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'--' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'switch' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'true' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'global' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'namespace' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'new' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'++' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'break' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'link' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'continue' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'typeid' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'struct' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'try' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'!' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	ID : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'&' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'var' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'class' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'loop' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'throw' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'constant' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;
	'if' : lambda_body@0_rep_2@0_rep_2 ::=  NULL;

State 365 : 
	CHAR : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'(' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'gcnew' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'return' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'*' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'using' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'false' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	NUM : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'null' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'foreach' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'for' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'local' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'while' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	STR : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'}' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'{' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'package' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'-' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'function' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'block' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'import' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	PREP : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'[' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'--' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'switch' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'true' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'global' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'namespace' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'new' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'++' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'break' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'link' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'continue' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'typeid' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'struct' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'try' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'!' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	ID : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'&' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'var' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'class' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'loop' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'throw' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'constant' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;
	'if' : lambda_body@0_rep_2@0_rep_2 ::=  ENDL lambda_body@0_rep_2@0_rep_2;

State 366 : 
	')' : lambda_expr@0_opt_5 ::=  argument_list;

State 367 : 
	ID :  368;

State 368 : 
	'local' : argument_list@1_opt_3 ::=  NULL;
	'(' : argument_list@1_opt_3 ::=  NULL;
	STR : argument_list@1_opt_3 ::=  NULL;
	CHAR : argument_list@1_opt_3 ::=  NULL;
	'{' : argument_list@1_opt_3 ::=  NULL;
	ID : argument_list@1_opt_3 ::=  NULL;
	'global' : argument_list@1_opt_3 ::=  NULL;
	':' :  378;
	argument_list@1_opt_3 :  369;

State 369 : 
	visit_expr :  370;
	CHAR :  153;
	'local' :  156;
	STR :  157;
	array :  178;
	'{' :  119;
	'global' :  155;
	'(' :  192;
	ID :  191;
	object :  149;
	element@0_decl_1 :  181;
	element :  154;

State 370 : 
	argument_list@1_rep_5 :  371;
	')' : argument_list@1_rep_5 ::=  NULL;
	',' :  372;

State 371 : 
	')' : argument_list ::=  argument_list@1_opt_1 ID argument_list@1_opt_3 visit_expr argument_list@1_rep_5;
	',' : argument_list ::=  argument_list@1_opt_1 ID argument_list@1_opt_3 visit_expr argument_list@1_rep_5;

State 372 : 
	argument_list :  373;
	argument_list@1_opt_1 :  367;
	'=' :  377;
	ID : argument_list@1_opt_1 ::=  NULL;
	'...' :  375;

State 373 : 
	argument_list@1_rep_5 :  374;
	')' : argument_list@1_rep_5 ::=  NULL;
	',' :  372;

State 374 : 
	')' : argument_list@1_rep_5 ::=  ',' argument_list argument_list@1_rep_5;
	',' : argument_list@1_rep_5 ::=  ',' argument_list argument_list@1_rep_5;

State 375 : 
	ID :  376;

State 376 : 
	')' : argument_list ::=  '...' ID;
	',' : argument_list ::=  '...' ID;

State 377 : 
	ID : argument_list@1_opt_1 ::=  '=';

State 378 : 
	'local' : argument_list@1_opt_3 ::=  ':';
	'(' : argument_list@1_opt_3 ::=  ':';
	STR : argument_list@1_opt_3 ::=  ':';
	CHAR : argument_list@1_opt_3 ::=  ':';
	'{' : argument_list@1_opt_3 ::=  ':';
	ID : argument_list@1_opt_3 ::=  ':';
	'global' : argument_list@1_opt_3 ::=  ':';

State 379 : 
	']' : lambda_expr@0_opt_2 ::=  capture_list;

State 380 : 
	ID :  381;

State 381 : 
	']' : capture_list@0_rep_3 ::=  NULL;
	',' :  383;
	capture_list@0_rep_3 :  382;

State 382 : 
	']' : capture_list ::=  capture_list@0_opt_1 ID capture_list@0_rep_3;
	',' : capture_list ::=  capture_list@0_opt_1 ID capture_list@0_rep_3;

State 383 : 
	capture_list@0_opt_1 :  380;
	'=' :  386;
	ID : capture_list@0_opt_1 ::=  NULL;
	capture_list :  384;

State 384 : 
	']' : capture_list@0_rep_3 ::=  NULL;
	',' :  383;
	capture_list@0_rep_3 :  385;

State 385 : 
	']' : capture_list@0_rep_3 ::=  ',' capture_list capture_list@0_rep_3;
	',' : capture_list@0_rep_3 ::=  ',' capture_list capture_list@0_rep_3;

State 386 : 
	ID : capture_list@0_opt_1 ::=  '=';

State 387 : 
	CHAR : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'(' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'--' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'gcnew' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'*' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'global' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	NUM : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'null' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'new' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'false' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'true' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'++' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'local' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'typeid' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	STR : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'!' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	ID : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'&' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'{' : mul_expr@0_opt_2@0_decl_1 ::=  '^';
	'-' : mul_expr@0_opt_2@0_decl_1 ::=  '^';

State 388 : 
	CHAR : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'(' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'--' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'gcnew' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'*' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'global' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	NUM : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'null' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'new' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'false' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'true' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'++' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'local' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'typeid' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	STR : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'!' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	ID : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'&' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'{' : mul_expr@0_opt_2@0_decl_1 ::=  '%';
	'-' : mul_expr@0_opt_2@0_decl_1 ::=  '%';

State 389 : 
	CHAR : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'(' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'--' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'gcnew' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'*' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'global' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	NUM : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'null' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'new' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'false' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'true' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'++' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'local' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'typeid' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	STR : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'!' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	ID : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'&' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'{' : mul_expr@0_opt_2@0_decl_1 ::=  '/';
	'-' : mul_expr@0_opt_2@0_decl_1 ::=  '/';

State 390 : 
	CHAR : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'(' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'--' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'gcnew' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'*' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'global' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	NUM : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'null' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'new' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'false' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'true' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'++' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'local' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'typeid' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	STR : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'!' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	ID : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'&' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'{' : mul_expr@0_opt_2@0_decl_1 ::=  '*';
	'-' : mul_expr@0_opt_2@0_decl_1 ::=  '*';

State 391 : 
	'(' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	CHAR : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'gcnew' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'--' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'*' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'true' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'false' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	NUM : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'null' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'new' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'global' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'++' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'local' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'typeid' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	STR : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'!' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'{' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	ID : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'&' : add_expr@0_opt_2@0_decl_1 ::=  '-';
	'-' : add_expr@0_opt_2@0_decl_1 ::=  '-';

State 392 : 
	'(' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	CHAR : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'gcnew' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'--' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'*' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'true' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'false' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	NUM : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'null' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'new' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'global' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'++' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'local' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'typeid' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	STR : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'!' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'{' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	ID : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'&' : add_expr@0_opt_2@0_decl_1 ::=  '+';
	'-' : add_expr@0_opt_2@0_decl_1 ::=  '+';

State 393 : 
	CHAR : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'(' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'--' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'gcnew' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'true' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'global' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	NUM : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'null' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'new' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'false' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'*' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'++' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'local' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'typeid' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	STR : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'!' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	ID : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'&' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'{' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';
	'-' : relat_expr@0_opt_2@0_decl_1 ::=  '<=';

State 394 : 
	CHAR : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'(' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'--' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'gcnew' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'true' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'global' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	NUM : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'null' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'new' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'false' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'*' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'++' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'local' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'typeid' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	STR : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'!' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	ID : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'&' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'{' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';
	'-' : relat_expr@0_opt_2@0_decl_1 ::=  '>=';

State 395 : 
	CHAR : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'(' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'--' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'gcnew' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'true' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'global' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	NUM : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'null' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'new' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'false' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'*' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'++' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'local' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'typeid' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	STR : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'!' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	ID : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'&' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'{' : relat_expr@0_opt_2@0_decl_1 ::=  '<';
	'-' : relat_expr@0_opt_2@0_decl_1 ::=  '<';

State 396 : 
	CHAR : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'(' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'--' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'gcnew' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'true' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'global' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	NUM : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'null' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'new' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'false' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'*' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'++' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'local' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'typeid' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	STR : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'!' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	ID : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'&' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'{' : relat_expr@0_opt_2@0_decl_1 ::=  '>';
	'-' : relat_expr@0_opt_2@0_decl_1 ::=  '>';

State 397 : 
	'(' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	CHAR : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'gcnew' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'--' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'true' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'*' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'false' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	NUM : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'null' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'new' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'global' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'++' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'local' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'typeid' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	STR : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'!' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'{' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	ID : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'&' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';
	'-' : equal_expr@0_opt_2@0_decl_1 ::=  '!=';

State 398 : 
	'(' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	CHAR : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'gcnew' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'--' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'true' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'*' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'false' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	NUM : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'null' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'new' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'global' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'++' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'local' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'typeid' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	STR : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'!' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'{' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	ID : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'&' : equal_expr@0_opt_2@0_decl_1 ::=  '==';
	'-' : equal_expr@0_opt_2@0_decl_1 ::=  '==';

State 399 : 
	CHAR : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'(' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'--' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'gcnew' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'*' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'global' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	NUM : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'null' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'new' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'false' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'true' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'++' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'local' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'typeid' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	STR : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'!' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	ID : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'&' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'{' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';
	'-' : logic_and_expr@0_opt_2@0_decl_1 ::=  'and';

State 400 : 
	CHAR : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'(' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'--' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'gcnew' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'*' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'global' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	NUM : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'null' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'new' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'false' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'true' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'++' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'local' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'typeid' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	STR : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'!' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	ID : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'&' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'{' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';
	'-' : logic_and_expr@0_opt_2@0_decl_1 ::=  '&&';

State 401 : 
	'(' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	CHAR : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'gcnew' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'--' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'*' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'true' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'false' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	NUM : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'null' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'new' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'global' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'++' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'local' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'typeid' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	STR : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'!' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'{' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	ID : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'&' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';
	'-' : logic_or_expr@0_opt_2@0_decl_1 ::=  'or';

State 402 : 
	'(' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	CHAR : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'gcnew' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'--' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'*' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'true' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'false' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	NUM : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'null' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'new' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'global' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'++' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'local' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'typeid' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	STR : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'!' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'{' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	ID : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'&' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';
	'-' : logic_or_expr@0_opt_2@0_decl_1 ::=  '||';

State 403 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  404;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 404 : 
	':' :  405;

State 405 : 
	CHAR :  153;
	'(' :  192;
	'gcnew' :  136;
	unary_op :  132;
	relat_expr :  90;
	'*' :  141;
	'false' :  145;
	'null' :  147;
	NUM :  148;
	object :  149;
	element@0_decl_1 :  181;
	constant :  134;
	element :  154;
	'local' :  156;
	visit_expr :  135;
	STR :  157;
	unary_expr :  102;
	array :  178;
	'{' :  119;
	'-' :  139;
	mul_expr :  98;
	'--' :  142;
	'true' :  146;
	'global' :  155;
	'new' :  137;
	'++' :  143;
	prim_expr :  106;
	logic_or_expr :  77;
	'typeid' :  144;
	equal_expr :  86;
	'!' :  138;
	ID :  191;
	'&' :  140;
	add_expr :  94;
	cond_expr :  406;
	logic_and_expr :  82;
	unary_expr@1_decl_1 :  115;

State 406 : 
	'%=' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	'=' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	']' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	'+=' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	';' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	')' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	':=' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	'*=' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	'/=' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	ENDL : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	'}' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	'-=' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	'^=' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	'do' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;
	',' : cond_postfix ::=  '?' logic_or_expr ':' cond_expr;

State 407 : 
	'(' : asi_op ::=  '^=';
	CHAR : asi_op ::=  '^=';
	'--' : asi_op ::=  '^=';
	'gcnew' : asi_op ::=  '^=';
	'[' : asi_op ::=  '^=';
	'true' : asi_op ::=  '^=';
	'global' : asi_op ::=  '^=';
	NUM : asi_op ::=  '^=';
	'null' : asi_op ::=  '^=';
	'new' : asi_op ::=  '^=';
	'false' : asi_op ::=  '^=';
	'*' : asi_op ::=  '^=';
	'++' : asi_op ::=  '^=';
	'local' : asi_op ::=  '^=';
	'typeid' : asi_op ::=  '^=';
	STR : asi_op ::=  '^=';
	'!' : asi_op ::=  '^=';
	ID : asi_op ::=  '^=';
	'&' : asi_op ::=  '^=';
	'{' : asi_op ::=  '^=';
	'-' : asi_op ::=  '^=';

State 408 : 
	'(' : asi_op ::=  '%=';
	CHAR : asi_op ::=  '%=';
	'--' : asi_op ::=  '%=';
	'gcnew' : asi_op ::=  '%=';
	'[' : asi_op ::=  '%=';
	'true' : asi_op ::=  '%=';
	'global' : asi_op ::=  '%=';
	NUM : asi_op ::=  '%=';
	'null' : asi_op ::=  '%=';
	'new' : asi_op ::=  '%=';
	'false' : asi_op ::=  '%=';
	'*' : asi_op ::=  '%=';
	'++' : asi_op ::=  '%=';
	'local' : asi_op ::=  '%=';
	'typeid' : asi_op ::=  '%=';
	STR : asi_op ::=  '%=';
	'!' : asi_op ::=  '%=';
	ID : asi_op ::=  '%=';
	'&' : asi_op ::=  '%=';
	'{' : asi_op ::=  '%=';
	'-' : asi_op ::=  '%=';

State 409 : 
	'(' : asi_op ::=  '/=';
	CHAR : asi_op ::=  '/=';
	'--' : asi_op ::=  '/=';
	'gcnew' : asi_op ::=  '/=';
	'[' : asi_op ::=  '/=';
	'true' : asi_op ::=  '/=';
	'global' : asi_op ::=  '/=';
	NUM : asi_op ::=  '/=';
	'null' : asi_op ::=  '/=';
	'new' : asi_op ::=  '/=';
	'false' : asi_op ::=  '/=';
	'*' : asi_op ::=  '/=';
	'++' : asi_op ::=  '/=';
	'local' : asi_op ::=  '/=';
	'typeid' : asi_op ::=  '/=';
	STR : asi_op ::=  '/=';
	'!' : asi_op ::=  '/=';
	ID : asi_op ::=  '/=';
	'&' : asi_op ::=  '/=';
	'{' : asi_op ::=  '/=';
	'-' : asi_op ::=  '/=';

State 410 : 
	'(' : asi_op ::=  '*=';
	CHAR : asi_op ::=  '*=';
	'--' : asi_op ::=  '*=';
	'gcnew' : asi_op ::=  '*=';
	'[' : asi_op ::=  '*=';
	'true' : asi_op ::=  '*=';
	'global' : asi_op ::=  '*=';
	NUM : asi_op ::=  '*=';
	'null' : asi_op ::=  '*=';
	'new' : asi_op ::=  '*=';
	'false' : asi_op ::=  '*=';
	'*' : asi_op ::=  '*=';
	'++' : asi_op ::=  '*=';
	'local' : asi_op ::=  '*=';
	'typeid' : asi_op ::=  '*=';
	STR : asi_op ::=  '*=';
	'!' : asi_op ::=  '*=';
	ID : asi_op ::=  '*=';
	'&' : asi_op ::=  '*=';
	'{' : asi_op ::=  '*=';
	'-' : asi_op ::=  '*=';

State 411 : 
	'(' : asi_op ::=  '-=';
	CHAR : asi_op ::=  '-=';
	'--' : asi_op ::=  '-=';
	'gcnew' : asi_op ::=  '-=';
	'[' : asi_op ::=  '-=';
	'true' : asi_op ::=  '-=';
	'global' : asi_op ::=  '-=';
	NUM : asi_op ::=  '-=';
	'null' : asi_op ::=  '-=';
	'new' : asi_op ::=  '-=';
	'false' : asi_op ::=  '-=';
	'*' : asi_op ::=  '-=';
	'++' : asi_op ::=  '-=';
	'local' : asi_op ::=  '-=';
	'typeid' : asi_op ::=  '-=';
	STR : asi_op ::=  '-=';
	'!' : asi_op ::=  '-=';
	ID : asi_op ::=  '-=';
	'&' : asi_op ::=  '-=';
	'{' : asi_op ::=  '-=';
	'-' : asi_op ::=  '-=';

State 412 : 
	'(' : asi_op ::=  '+=';
	CHAR : asi_op ::=  '+=';
	'--' : asi_op ::=  '+=';
	'gcnew' : asi_op ::=  '+=';
	'[' : asi_op ::=  '+=';
	'true' : asi_op ::=  '+=';
	'global' : asi_op ::=  '+=';
	NUM : asi_op ::=  '+=';
	'null' : asi_op ::=  '+=';
	'new' : asi_op ::=  '+=';
	'false' : asi_op ::=  '+=';
	'*' : asi_op ::=  '+=';
	'++' : asi_op ::=  '+=';
	'local' : asi_op ::=  '+=';
	'typeid' : asi_op ::=  '+=';
	STR : asi_op ::=  '+=';
	'!' : asi_op ::=  '+=';
	ID : asi_op ::=  '+=';
	'&' : asi_op ::=  '+=';
	'{' : asi_op ::=  '+=';
	'-' : asi_op ::=  '+=';

State 413 : 
	'(' : asi_op ::=  ':=';
	CHAR : asi_op ::=  ':=';
	'--' : asi_op ::=  ':=';
	'gcnew' : asi_op ::=  ':=';
	'[' : asi_op ::=  ':=';
	'true' : asi_op ::=  ':=';
	'global' : asi_op ::=  ':=';
	NUM : asi_op ::=  ':=';
	'null' : asi_op ::=  ':=';
	'new' : asi_op ::=  ':=';
	'false' : asi_op ::=  ':=';
	'*' : asi_op ::=  ':=';
	'++' : asi_op ::=  ':=';
	'local' : asi_op ::=  ':=';
	'typeid' : asi_op ::=  ':=';
	STR : asi_op ::=  ':=';
	'!' : asi_op ::=  ':=';
	ID : asi_op ::=  ':=';
	'&' : asi_op ::=  ':=';
	'{' : asi_op ::=  ':=';
	'-' : asi_op ::=  ':=';

State 414 : 
	'(' : asi_op ::=  '=';
	CHAR : asi_op ::=  '=';
	'--' : asi_op ::=  '=';
	'gcnew' : asi_op ::=  '=';
	'[' : asi_op ::=  '=';
	'true' : asi_op ::=  '=';
	'global' : asi_op ::=  '=';
	NUM : asi_op ::=  '=';
	'null' : asi_op ::=  '=';
	'new' : asi_op ::=  '=';
	'false' : asi_op ::=  '=';
	'*' : asi_op ::=  '=';
	'++' : asi_op ::=  '=';
	'local' : asi_op ::=  '=';
	'typeid' : asi_op ::=  '=';
	STR : asi_op ::=  '=';
	'!' : asi_op ::=  '=';
	ID : asi_op ::=  '=';
	'&' : asi_op ::=  '=';
	'{' : asi_op ::=  '=';
	'-' : asi_op ::=  '=';

State 415 : 
	CHAR :  153;
	throw_stmt :  9;
	expr :  27;
	basic_expr :  68;
	unary_op :  132;
	relat_expr :  90;
	var_stmt :  23;
	'false' :  145;
	'for' :  232;
	%END% : stmts@0_rep_1 ::=  NULL;
	'foreach' :  222;
	stmts :  416;
	statement :  4;
	block_stmt :  22;
	constant :  134;
	ENDL : stmts@0_rep_1 ::=  NULL;
	visit_expr :  135;
	try_stmt :  10;
	'package' :  353;
	control_stmt@0_decl_1 :  220;
	'end' : stmts@0_rep_1 ::=  NULL;
	'block' :  338;
	PREP :  331;
	mul_expr :  98;
	'--' :  142;
	'[' :  123;
	'switch' :  275;
	lambda_expr :  69;
	prep_stmt :  26;
	'new' :  137;
	'++' :  143;
	'link' :  336;
	using_stmt :  20;
	'continue' :  356;
	'typeid' :  144;
	package_stmt :  25;
	logic_or_expr :  77;
	'!' :  138;
	'else' : stmts@0_rep_1 ::=  NULL;
	var_bind :  74;
	return_stmt :  11;
	'class' :  334;
	function_stmt :  12;
	'loop' :  259;
	class_stmt@0_decl_1 :  31;
	'throw' :  60;
	equal_expr :  86;
	stmts@0_rep_1 :  3;
	class_stmt :  8;
	'(' :  163;
	'if' :  294;
	'gcnew' :  136;
	'return' :  216;
	while_stmt :  17;
	'*' :  141;
	'using' :  309;
	NUM :  148;
	'null' :  147;
	control_stmt :  13;
	if_stmt :  19;
	for_stmt :  15;
	namespace_stmt :  21;
	object :  149;
	element :  154;
	'while' :  269;
	'local' :  156;
	loop_stmt :  16;
	STR :  157;
	'}' : stmts@0_rep_1 ::=  NULL;
	'{' :  119;
	switch_stmt :  18;
	import_stmt :  24;
	unary_expr :  102;
	array :  178;
	element@0_decl_1 :  181;
	'-' :  139;
	'function' :  48;
	'import' :  343;
	'catch' : stmts@0_rep_1 ::=  NULL;
	'until' : stmts@0_rep_1 ::=  NULL;
	'true' :  146;
	'global' :  155;
	var_stmt@0_decl_1 :  328;
	'namespace' :  322;
	'break' :  357;
	prim_expr :  106;
	'struct' :  333;
	'try' :  201;
	single_expr :  64;
	ID :  191;
	'var' :  337;
	'&' :  140;
	foreach_stmt :  14;
	cond_expr :  70;
	logic_and_expr :  82;
	add_expr :  94;
	'constant' :  335;
	expr_stmt :  7;
	unary_expr@1_decl_1 :  115;

State 416 : 
	'}' :  417;

State 417 : 
	CHAR : function_body@0_decl_1 ::=  '{' stmts '}';
	'(' : function_body@0_decl_1 ::=  '{' stmts '}';
	'gcnew' : function_body@0_decl_1 ::=  '{' stmts '}';
	'return' : function_body@0_decl_1 ::=  '{' stmts '}';
	'*' : function_body@0_decl_1 ::=  '{' stmts '}';
	'using' : function_body@0_decl_1 ::=  '{' stmts '}';
	'false' : function_body@0_decl_1 ::=  '{' stmts '}';
	NUM : function_body@0_decl_1 ::=  '{' stmts '}';
	'null' : function_body@0_decl_1 ::=  '{' stmts '}';
	'foreach' : function_body@0_decl_1 ::=  '{' stmts '}';
	'for' : function_body@0_decl_1 ::=  '{' stmts '}';
	%END% : function_body@0_decl_1 ::=  '{' stmts '}';
	'local' : function_body@0_decl_1 ::=  '{' stmts '}';
	ENDL : function_body@0_decl_1 ::=  '{' stmts '}';
	'while' : function_body@0_decl_1 ::=  '{' stmts '}';
	STR : function_body@0_decl_1 ::=  '{' stmts '}';
	'}' : function_body@0_decl_1 ::=  '{' stmts '}';
	'{' : function_body@0_decl_1 ::=  '{' stmts '}';
	'package' : function_body@0_decl_1 ::=  '{' stmts '}';
	'-' : function_body@0_decl_1 ::=  '{' stmts '}';
	'function' : function_body@0_decl_1 ::=  '{' stmts '}';
	'import' : function_body@0_decl_1 ::=  '{' stmts '}';
	'end' : function_body@0_decl_1 ::=  '{' stmts '}';
	'block' : function_body@0_decl_1 ::=  '{' stmts '}';
	PREP : function_body@0_decl_1 ::=  '{' stmts '}';
	'until' : function_body@0_decl_1 ::=  '{' stmts '}';
	'[' : function_body@0_decl_1 ::=  '{' stmts '}';
	'--' : function_body@0_decl_1 ::=  '{' stmts '}';
	'switch' : function_body@0_decl_1 ::=  '{' stmts '}';
	'true' : function_body@0_decl_1 ::=  '{' stmts '}';
	'global' : function_body@0_decl_1 ::=  '{' stmts '}';
	'catch' : function_body@0_decl_1 ::=  '{' stmts '}';
	'namespace' : function_body@0_decl_1 ::=  '{' stmts '}';
	'new' : function_body@0_decl_1 ::=  '{' stmts '}';
	'++' : function_body@0_decl_1 ::=  '{' stmts '}';
	'link' : function_body@0_decl_1 ::=  '{' stmts '}';
	'break' : function_body@0_decl_1 ::=  '{' stmts '}';
	'continue' : function_body@0_decl_1 ::=  '{' stmts '}';
	'typeid' : function_body@0_decl_1 ::=  '{' stmts '}';
	'struct' : function_body@0_decl_1 ::=  '{' stmts '}';
	'try' : function_body@0_decl_1 ::=  '{' stmts '}';
	'else' : function_body@0_decl_1 ::=  '{' stmts '}';
	'!' : function_body@0_decl_1 ::=  '{' stmts '}';
	'var' : function_body@0_decl_1 ::=  '{' stmts '}';
	ID : function_body@0_decl_1 ::=  '{' stmts '}';
	'class' : function_body@0_decl_1 ::=  '{' stmts '}';
	'&' : function_body@0_decl_1 ::=  '{' stmts '}';
	'loop' : function_body@0_decl_1 ::=  '{' stmts '}';
	'constant' : function_body@0_decl_1 ::=  '{' stmts '}';
	'throw' : function_body@0_decl_1 ::=  '{' stmts '}';
	'if' : function_body@0_decl_1 ::=  '{' stmts '}';

State 418 : 
	'{' : function_stmt@0_opt_6 ::=  'override';
	ENDL : function_stmt@0_opt_6 ::=  'override';

State 419 : 
	')' : function_stmt@0_opt_4 ::=  argument_list;

State 420 : 
	PREP : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'struct' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	ENDL :  420;
	decl_stmts@0_rep_1@0_rep_2 :  421;
	'var' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'using' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'class' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'namespace' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'function' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'constant' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'link' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;
	'end' : decl_stmts@0_rep_1@0_rep_2 ::=  NULL;

State 421 : 
	PREP : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;
	'struct' : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;
	'var' : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;
	'using' : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;
	'class' : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;
	'namespace' : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;
	'function' : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;
	'constant' : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;
	'link' : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;
	'end' : decl_stmts@0_rep_1@0_rep_2 ::=  ENDL decl_stmts@0_rep_1@0_rep_2;

State 422 : 
	visit_expr :  423;
	CHAR :  153;
	'local' :  156;
	STR :  157;
	array :  178;
	'{' :  119;
	'global' :  155;
	'(' :  192;
	ID :  191;
	object :  149;
	element@0_decl_1 :  181;
	element :  154;

State 423 : 
	ENDL : class_stmt@0_opt_3 ::=  'extends' visit_expr;

State 424 : 
	CHAR : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'(' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'gcnew' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'return' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'*' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'using' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'false' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	NUM : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'null' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'foreach' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'for' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	%END% : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'local' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'while' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	ENDL :  424;
	STR : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'}' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'{' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'package' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'-' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'function' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'block' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'end' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'import' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	PREP : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'until' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'[' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'--' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'switch' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'true' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'global' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'catch' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'namespace' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'new' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'++' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'break' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'link' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'continue' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'typeid' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'struct' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'try' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'else' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'!' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	ID : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'&' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'var' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'class' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'loop' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	stmts@0_rep_1@0_rep_2 :  425;
	'throw' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'constant' : stmts@0_rep_1@0_rep_2 ::=  NULL;
	'if' : stmts@0_rep_1@0_rep_2 ::=  NULL;

State 425 : 
	CHAR : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'(' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'gcnew' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'return' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'*' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'using' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'false' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	NUM : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'null' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'foreach' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'for' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	%END% : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'local' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'while' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	ENDL : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	STR : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'}' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'{' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'package' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'-' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'function' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'block' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'end' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'import' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	PREP : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'until' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'[' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'--' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'switch' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'true' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'global' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'catch' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'namespace' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'new' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'++' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'break' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'link' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'continue' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'typeid' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'struct' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'try' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'else' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'!' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	ID : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'&' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'var' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'class' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'loop' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'throw' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'constant' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;
	'if' : stmts@0_rep_1@0_rep_2 ::=  ENDL stmts@0_rep_1@0_rep_2;




############
PARSING CODE
############
#########################
Begin Lexical Analysis...
#########################
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 
Input: 
	EOF %END%,ENDL \n,ID ebnf_parser,ID package,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 package 353 
Input: 
	EOF %END%,ENDL \n,ID ebnf_parser,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 package 353 ID 354 
Input: 
	EOF %END%,ENDL \n,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 package 353 ID 354 ENDL 30 
Input: 
	EOF %END%,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 package 353 ID 354 endline 355 
Input: 
	EOF %END%,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 package_stmt 25 
Input: 
	EOF %END%,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 statement 4 
Input: 
	EOF %END%,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 statement 4 stmts@0_rep_1@0_rep_2 5 
Input: 
	EOF %END%,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 statement 4 stmts@0_rep_1@0_rep_2 5 stmts@0_rep_1 6 
Input: 
	EOF %END%,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 stmts@0_rep_1 3 
Input: 
	EOF %END%,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 stmts 2 
Input: 
	EOF %END%,
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 begin 1 
Input: 
	EOF %END%,
END OF PARSING


#########
SHOW TREE
#########
begin
	stmts
		stmts@0_rep_1
			statement
				package_stmt
					package
					ID
						ebnf_parser
					endline
						ENDL
							


			stmts@0_rep_1@0_rep_2
				NULL
			stmts@0_rep_1
				NULL



##########
SHOW ERROR
##########



#############
COMPRESS TREE
#############
begin
	stmts
		stmts@0_rep_1
			statement
				package_stmt
					package
					ID
						ebnf_parser
					endline
						ENDL
							


			stmts@0_rep_1@0_rep_2
				NULL
			stmts@0_rep_1
				NULL
begin
	stmts
		stmts@0_rep_1
			statement
				package_stmt
					package
					ID
						ebnf_parser
					endline
						ENDL
							


